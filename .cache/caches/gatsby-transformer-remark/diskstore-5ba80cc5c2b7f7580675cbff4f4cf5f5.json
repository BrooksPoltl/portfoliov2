{"expireTime":9007200842248279000,"key":"transformer-remark-markdown-html-ast-83dcd9ff5f473be0f95b47297b4ebbbc-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas: ","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":10,"column":109,"offset":558}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":10,"column":109,"offset":558}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"primitive expressions","position":{"start":{"line":11,"column":3,"offset":561},"end":{"line":11,"column":24,"offset":582}}}],"position":{"start":{"line":11,"column":1,"offset":559},"end":{"line":11,"column":24,"offset":582}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"means of combination","position":{"start":{"line":12,"column":3,"offset":585},"end":{"line":12,"column":23,"offset":605}}}],"position":{"start":{"line":12,"column":1,"offset":583},"end":{"line":12,"column":23,"offset":605}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"means of abstraction","position":{"start":{"line":13,"column":3,"offset":608},"end":{"line":13,"column":23,"offset":628}}}],"position":{"start":{"line":13,"column":3,"offset":608},"end":{"line":13,"column":23,"offset":628}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":14,"column":7,"offset":635},"end":{"line":14,"column":10,"offset":638}}}],"position":{"start":{"line":14,"column":1,"offset":629},"end":{"line":14,"column":10,"offset":638}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":15,"column":7,"offset":645},"end":{"line":15,"column":10,"offset":648}}}],"position":{"start":{"line":15,"column":1,"offset":639},"end":{"line":15,"column":10,"offset":648}}},{"type":"text","value":"\n"}],"position":{"start":{"line":13,"column":1,"offset":606},"end":{"line":15,"column":10,"offset":648}}},{"type":"text","value":"\n"}],"position":{"start":{"line":11,"column":1,"offset":559},"end":{"line":15,"column":10,"offset":648}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":17,"column":6,"offset":655},"end":{"line":17,"column":14,"offset":663}}}],"position":{"start":{"line":17,"column":1,"offset":650},"end":{"line":17,"column":14,"offset":663}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":18,"column":7,"offset":670},"end":{"line":18,"column":10,"offset":673}}}],"position":{"start":{"line":18,"column":1,"offset":664},"end":{"line":18,"column":10,"offset":673}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":20,"column":8,"offset":682},"end":{"line":20,"column":30,"offset":704}}}],"position":{"start":{"line":20,"column":1,"offset":675},"end":{"line":20,"column":30,"offset":704}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":22,"column":1,"offset":706},"end":{"line":23,"column":1,"offset":850}}},{"type":"raw","value":"<br>","position":{"start":{"line":23,"column":1,"offset":850},"end":{"line":23,"column":5,"offset":854}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":23,"column":5,"offset":854},"end":{"line":23,"column":16,"offset":865}}},{"type":"raw","value":"<br>","position":{"start":{"line":23,"column":16,"offset":865},"end":{"line":23,"column":20,"offset":869}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":23,"column":20,"offset":869},"end":{"line":25,"column":1,"offset":1013}}},{"type":"raw","value":"<br>","position":{"start":{"line":25,"column":1,"offset":1013},"end":{"line":25,"column":5,"offset":1017}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":25,"column":5,"offset":1017},"end":{"line":25,"column":16,"offset":1028}}},{"type":"raw","value":"<br>","position":{"start":{"line":25,"column":16,"offset":1028},"end":{"line":25,"column":20,"offset":1032}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":25,"column":20,"offset":1032},"end":{"line":26,"column":45,"offset":1077}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":45,"offset":1077},"end":{"line":26,"column":49,"offset":1081}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":26,"column":49,"offset":1081},"end":{"line":26,"column":65,"offset":1097}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":65,"offset":1097},"end":{"line":26,"column":69,"offset":1101}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":26,"column":69,"offset":1101},"end":{"line":28,"column":1,"offset":1144}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":1,"offset":1144},"end":{"line":28,"column":5,"offset":1148}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":28,"column":5,"offset":1148},"end":{"line":28,"column":22,"offset":1165}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":22,"offset":1165},"end":{"line":28,"column":26,"offset":1169}}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":26,"offset":1169},"end":{"line":29,"column":1,"offset":1170}}},{"type":"raw","value":"<br>","position":{"start":{"line":29,"column":1,"offset":1170},"end":{"line":29,"column":5,"offset":1174}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":29,"column":5,"offset":1174},"end":{"line":31,"column":1,"offset":1292}}},{"type":"raw","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1292},"end":{"line":31,"column":5,"offset":1296}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":31,"column":5,"offset":1296},"end":{"line":33,"column":1,"offset":1417}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":33,"column":1,"offset":1417},"end":{"line":33,"column":12,"offset":1428}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":33,"column":12,"offset":1428},"end":{"line":33,"column":68,"offset":1484}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":33,"column":68,"offset":1484},"end":{"line":33,"column":79,"offset":1495}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":33,"column":79,"offset":1495},"end":{"line":33,"column":106,"offset":1522}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":33,"column":106,"offset":1522},"end":{"line":33,"column":109,"offset":1525}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":33,"column":109,"offset":1525},"end":{"line":33,"column":189,"offset":1605}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":33,"column":189,"offset":1605},"end":{"line":33,"column":192,"offset":1608}}},{"type":"text","value":" to get 3.","position":{"start":{"line":33,"column":192,"offset":1608},"end":{"line":33,"column":202,"offset":1618}}}],"position":{"start":{"line":22,"column":1,"offset":706},"end":{"line":33,"column":202,"offset":1618}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":35,"column":8,"offset":1627},"end":{"line":35,"column":14,"offset":1633}}}],"position":{"start":{"line":35,"column":1,"offset":1620},"end":{"line":35,"column":14,"offset":1633}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":36,"column":1,"offset":1634},"end":{"line":36,"column":9,"offset":1642}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":36,"column":9,"offset":1642},"end":{"line":36,"column":73,"offset":1706}}}],"position":{"start":{"line":36,"column":1,"offset":1634},"end":{"line":36,"column":73,"offset":1706}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":37,"column":1,"offset":1707},"end":{"line":40,"column":4,"offset":1746}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":1,"offset":1747},"end":{"line":41,"column":5,"offset":1751}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":43,"column":1,"offset":1753},"end":{"line":43,"column":72,"offset":1824}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":43,"column":72,"offset":1824},"end":{"line":43,"column":80,"offset":1832}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":43,"column":80,"offset":1832},"end":{"line":44,"column":1,"offset":1856}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1856},"end":{"line":44,"column":5,"offset":1860}}},{"type":"text","value":"\n","position":{"start":{"line":44,"column":5,"offset":1860},"end":{"line":45,"column":1,"offset":1861}}},{"type":"raw","value":"<br>","position":{"start":{"line":45,"column":1,"offset":1861},"end":{"line":45,"column":5,"offset":1865}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":45,"column":5,"offset":1865},"end":{"line":46,"column":184,"offset":2049}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":46,"column":184,"offset":2049},"end":{"line":46,"column":187,"offset":2052}}},{"type":"text","value":".\n","position":{"start":{"line":46,"column":187,"offset":2052},"end":{"line":47,"column":1,"offset":2055}}},{"type":"raw","value":"<br>","position":{"start":{"line":47,"column":1,"offset":2055},"end":{"line":47,"column":5,"offset":2059}}},{"type":"text","value":"\n","position":{"start":{"line":47,"column":5,"offset":2059},"end":{"line":48,"column":1,"offset":2060}}},{"type":"raw","value":"<br>","position":{"start":{"line":48,"column":1,"offset":2060},"end":{"line":48,"column":5,"offset":2064}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":48,"column":5,"offset":2064},"end":{"line":49,"column":27,"offset":2091}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":49,"column":27,"offset":2091},"end":{"line":49,"column":35,"offset":2099}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":49,"column":35,"offset":2099},"end":{"line":49,"column":86,"offset":2150}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":49,"column":86,"offset":2150},"end":{"line":49,"column":95,"offset":2159}}},{"type":"text","value":". ","position":{"start":{"line":49,"column":95,"offset":2159},"end":{"line":49,"column":97,"offset":2161}}}],"position":{"start":{"line":43,"column":1,"offset":1753},"end":{"line":49,"column":97,"offset":2161}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":51,"column":1,"offset":2163},"end":{"line":51,"column":6,"offset":2168}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":53,"column":1,"offset":2170},"end":{"line":54,"column":1,"offset":2214}}},{"type":"raw","value":"<br>","position":{"start":{"line":54,"column":1,"offset":2214},"end":{"line":54,"column":5,"offset":2218}}},{"type":"text","value":"\n","position":{"start":{"line":54,"column":5,"offset":2218},"end":{"line":55,"column":1,"offset":2219}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":55,"column":1,"offset":2219},"end":{"line":55,"column":22,"offset":2240}}},{"type":"text","value":"\n","position":{"start":{"line":55,"column":22,"offset":2240},"end":{"line":56,"column":1,"offset":2241}}},{"type":"raw","value":"<br>","position":{"start":{"line":56,"column":1,"offset":2241},"end":{"line":56,"column":5,"offset":2245}}}],"position":{"start":{"line":53,"column":1,"offset":2170},"end":{"line":56,"column":5,"offset":2245}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":58,"column":1,"offset":2247},"end":{"line":58,"column":152,"offset":2398}}}],"position":{"start":{"line":58,"column":1,"offset":2247},"end":{"line":58,"column":152,"offset":2398}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":60,"column":8,"offset":2407},"end":{"line":60,"column":20,"offset":2419}}}],"position":{"start":{"line":60,"column":1,"offset":2400},"end":{"line":60,"column":20,"offset":2419}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":62,"column":1,"offset":2421},"end":{"line":62,"column":56,"offset":2476}}}],"position":{"start":{"line":62,"column":1,"offset":2421},"end":{"line":62,"column":56,"offset":2476}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":63,"column":1,"offset":2477},"end":{"line":68,"column":4,"offset":2568}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":69,"column":1,"offset":2569},"end":{"line":69,"column":5,"offset":2573}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":71,"column":1,"offset":2575},"end":{"line":71,"column":37,"offset":2611}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":71,"column":37,"offset":2611},"end":{"line":71,"column":41,"offset":2615}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":71,"column":41,"offset":2615},"end":{"line":72,"column":1,"offset":2632}}},{"type":"raw","value":"<br>","position":{"start":{"line":72,"column":1,"offset":2632},"end":{"line":72,"column":5,"offset":2636}}},{"type":"text","value":"\n","position":{"start":{"line":72,"column":5,"offset":2636},"end":{"line":73,"column":1,"offset":2637}}},{"type":"raw","value":"<br>","position":{"start":{"line":73,"column":1,"offset":2637},"end":{"line":73,"column":5,"offset":2641}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":73,"column":5,"offset":2641},"end":{"line":74,"column":66,"offset":2707}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":74,"column":66,"offset":2707},"end":{"line":74,"column":89,"offset":2730}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":74,"column":89,"offset":2730},"end":{"line":75,"column":1,"offset":2770}}},{"type":"raw","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2770},"end":{"line":75,"column":5,"offset":2774}}},{"type":"text","value":"\n","position":{"start":{"line":75,"column":5,"offset":2774},"end":{"line":76,"column":1,"offset":2775}}},{"type":"raw","value":"<br>","position":{"start":{"line":76,"column":1,"offset":2775},"end":{"line":76,"column":5,"offset":2779}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":76,"column":5,"offset":2779},"end":{"line":77,"column":21,"offset":2800}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":77,"column":21,"offset":2800},"end":{"line":77,"column":25,"offset":2804}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":77,"column":25,"offset":2804},"end":{"line":78,"column":1,"offset":2858}}},{"type":"raw","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2858},"end":{"line":78,"column":5,"offset":2862}}},{"type":"text","value":"\n","position":{"start":{"line":78,"column":5,"offset":2862},"end":{"line":79,"column":1,"offset":2863}}},{"type":"raw","value":"<br>","position":{"start":{"line":79,"column":1,"offset":2863},"end":{"line":79,"column":5,"offset":2867}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":79,"column":5,"offset":2867},"end":{"line":80,"column":21,"offset":2888}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":80,"column":21,"offset":2888},"end":{"line":80,"column":25,"offset":2892}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":80,"column":25,"offset":2892},"end":{"line":81,"column":1,"offset":2947}}},{"type":"raw","value":"<br>","position":{"start":{"line":81,"column":1,"offset":2947},"end":{"line":81,"column":5,"offset":2951}}},{"type":"text","value":"\n","position":{"start":{"line":81,"column":5,"offset":2951},"end":{"line":82,"column":1,"offset":2952}}},{"type":"raw","value":"<br>","position":{"start":{"line":82,"column":1,"offset":2952},"end":{"line":82,"column":5,"offset":2956}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":82,"column":5,"offset":2956},"end":{"line":83,"column":58,"offset":3014}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":83,"column":58,"offset":3014},"end":{"line":83,"column":61,"offset":3017}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":83,"column":61,"offset":3017},"end":{"line":83,"column":145,"offset":3101}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":83,"column":145,"offset":3101},"end":{"line":83,"column":153,"offset":3109}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":83,"column":153,"offset":3109},"end":{"line":83,"column":178,"offset":3134}}}],"position":{"start":{"line":71,"column":1,"offset":2575},"end":{"line":83,"column":178,"offset":3134}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":85,"column":7,"offset":3142},"end":{"line":85,"column":10,"offset":3145}}}],"position":{"start":{"line":85,"column":1,"offset":3136},"end":{"line":85,"column":10,"offset":3145}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":87,"column":8,"offset":3154},"end":{"line":87,"column":17,"offset":3163}}}],"position":{"start":{"line":87,"column":1,"offset":3147},"end":{"line":87,"column":17,"offset":3163}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":88,"column":1,"offset":3164},"end":{"line":99,"column":4,"offset":3363}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":100,"column":1,"offset":3364},"end":{"line":100,"column":5,"offset":3368}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":102,"column":1,"offset":3370},"end":{"line":103,"column":1,"offset":3586}}},{"type":"raw","value":"<br>","position":{"start":{"line":103,"column":1,"offset":3586},"end":{"line":103,"column":5,"offset":3590}}},{"type":"text","value":"\n","position":{"start":{"line":103,"column":5,"offset":3590},"end":{"line":104,"column":1,"offset":3591}}},{"type":"raw","value":"<br>","position":{"start":{"line":104,"column":1,"offset":3591},"end":{"line":104,"column":5,"offset":3595}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":104,"column":5,"offset":3595},"end":{"line":105,"column":72,"offset":3667}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":105,"column":72,"offset":3667},"end":{"line":105,"column":81,"offset":3676}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":105,"column":81,"offset":3676},"end":{"line":106,"column":1,"offset":3695}}},{"type":"raw","value":"<br>","position":{"start":{"line":106,"column":1,"offset":3695},"end":{"line":106,"column":5,"offset":3699}}},{"type":"text","value":"\n","position":{"start":{"line":106,"column":5,"offset":3699},"end":{"line":107,"column":1,"offset":3700}}},{"type":"raw","value":"<br>","position":{"start":{"line":107,"column":1,"offset":3700},"end":{"line":107,"column":5,"offset":3704}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":107,"column":5,"offset":3704},"end":{"line":108,"column":10,"offset":3714}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":108,"column":10,"offset":3714},"end":{"line":108,"column":16,"offset":3720}}},{"type":"text","value":" gets called with ","position":{"start":{"line":108,"column":16,"offset":3720},"end":{"line":108,"column":34,"offset":3738}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":108,"column":34,"offset":3738},"end":{"line":108,"column":42,"offset":3746}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":108,"column":42,"offset":3746},"end":{"line":109,"column":24,"offset":3771}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":109,"column":24,"offset":3771},"end":{"line":109,"column":33,"offset":3780}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":109,"column":33,"offset":3780},"end":{"line":109,"column":107,"offset":3854}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":109,"column":107,"offset":3854},"end":{"line":109,"column":116,"offset":3863}}},{"type":"text","value":" is false because ","position":{"start":{"line":109,"column":116,"offset":3863},"end":{"line":109,"column":134,"offset":3881}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":109,"column":134,"offset":3881},"end":{"line":109,"column":137,"offset":3884}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":109,"column":137,"offset":3884},"end":{"line":109,"column":161,"offset":3908}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":109,"column":161,"offset":3908},"end":{"line":109,"column":167,"offset":3914}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":109,"column":167,"offset":3914},"end":{"line":109,"column":192,"offset":3939}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":109,"column":192,"offset":3939},"end":{"line":109,"column":200,"offset":3947}}},{"type":"text","value":". This is because ","position":{"start":{"line":109,"column":200,"offset":3947},"end":{"line":109,"column":218,"offset":3965}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":109,"column":218,"offset":3965},"end":{"line":109,"column":224,"offset":3971}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":109,"column":224,"offset":3971},"end":{"line":109,"column":245,"offset":3992}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":109,"column":245,"offset":3992},"end":{"line":109,"column":252,"offset":3999}}},{"type":"text","value":" and ","position":{"start":{"line":109,"column":252,"offset":3999},"end":{"line":109,"column":257,"offset":4004}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":109,"column":257,"offset":4004},"end":{"line":109,"column":260,"offset":4007}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":109,"column":260,"offset":4007},"end":{"line":109,"column":285,"offset":4032}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":109,"column":285,"offset":4032},"end":{"line":109,"column":291,"offset":4038}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":109,"column":291,"offset":4038},"end":{"line":110,"column":96,"offset":4164}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":110,"column":96,"offset":4164},"end":{"line":110,"column":111,"offset":4179}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":110,"column":111,"offset":4179},"end":{"line":110,"column":182,"offset":4250}}}],"position":{"start":{"line":102,"column":1,"offset":3370},"end":{"line":110,"column":182,"offset":4250}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":112,"column":8,"offset":4259},"end":{"line":112,"column":19,"offset":4270}}}],"position":{"start":{"line":112,"column":1,"offset":4252},"end":{"line":112,"column":19,"offset":4270}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":113,"column":1,"offset":4271},"end":{"line":113,"column":14,"offset":4284}}}],"position":{"start":{"line":113,"column":1,"offset":4271},"end":{"line":113,"column":14,"offset":4284}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":114,"column":1,"offset":4285},"end":{"line":129,"column":4,"offset":4700}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":130,"column":1,"offset":4701},"end":{"line":130,"column":5,"offset":4705}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":132,"column":1,"offset":4707},"end":{"line":132,"column":141,"offset":4847}}}],"position":{"start":{"line":132,"column":1,"offset":4707},"end":{"line":132,"column":141,"offset":4847}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":134,"column":8,"offset":4856},"end":{"line":134,"column":30,"offset":4878}}}],"position":{"start":{"line":134,"column":1,"offset":4849},"end":{"line":134,"column":30,"offset":4878}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":135,"column":1,"offset":4879},"end":{"line":135,"column":199,"offset":5077}}}],"position":{"start":{"line":135,"column":1,"offset":4879},"end":{"line":135,"column":199,"offset":5077}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":137,"column":8,"offset":5086},"end":{"line":137,"column":30,"offset":5108}}}],"position":{"start":{"line":137,"column":1,"offset":5079},"end":{"line":137,"column":30,"offset":5108}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":139,"column":1,"offset":5110},"end":{"line":140,"column":1,"offset":5185}}},{"type":"raw","value":"<br>","position":{"start":{"line":140,"column":1,"offset":5185},"end":{"line":140,"column":5,"offset":5189}}},{"type":"text","value":"\n","position":{"start":{"line":140,"column":5,"offset":5189},"end":{"line":141,"column":1,"offset":5190}}},{"type":"raw","value":"<br>","position":{"start":{"line":141,"column":1,"offset":5190},"end":{"line":141,"column":5,"offset":5194}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":141,"column":5,"offset":5194},"end":{"line":143,"column":1,"offset":5256}}},{"type":"raw","value":"<br>","position":{"start":{"line":143,"column":1,"offset":5256},"end":{"line":143,"column":5,"offset":5260}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":143,"column":5,"offset":5260},"end":{"line":144,"column":1,"offset":5263}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":144,"column":1,"offset":5263},"end":{"line":144,"column":11,"offset":5273}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":144,"column":11,"offset":5273},"end":{"line":144,"column":19,"offset":5281}}},{"type":"text","value":" and ","position":{"start":{"line":144,"column":19,"offset":5281},"end":{"line":144,"column":24,"offset":5286}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":144,"column":24,"offset":5286},"end":{"line":144,"column":34,"offset":5296}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":144,"column":34,"offset":5296},"end":{"line":145,"column":1,"offset":5345}}},{"type":"raw","value":"<br>","position":{"start":{"line":145,"column":1,"offset":5345},"end":{"line":145,"column":5,"offset":5349}}}],"position":{"start":{"line":139,"column":1,"offset":5110},"end":{"line":145,"column":5,"offset":5349}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":147,"column":8,"offset":5358},"end":{"line":147,"column":12,"offset":5362}}}],"position":{"start":{"line":147,"column":1,"offset":5351},"end":{"line":147,"column":12,"offset":5362}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":148,"column":1,"offset":5363},"end":{"line":153,"column":4,"offset":5474}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":154,"column":1,"offset":5475},"end":{"line":155,"column":5,"offset":5484}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":157,"column":1,"offset":5486},"end":{"line":157,"column":7,"offset":5492}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":157,"column":7,"offset":5492},"end":{"line":159,"column":1,"offset":5574}}},{"type":"raw","value":"<br>","position":{"start":{"line":159,"column":1,"offset":5574},"end":{"line":159,"column":5,"offset":5578}}},{"type":"text","value":"\n","position":{"start":{"line":159,"column":5,"offset":5578},"end":{"line":160,"column":1,"offset":5579}}},{"type":"raw","value":"<br>","position":{"start":{"line":160,"column":1,"offset":5579},"end":{"line":160,"column":5,"offset":5583}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":160,"column":5,"offset":5583},"end":{"line":161,"column":10,"offset":5593}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":161,"column":10,"offset":5593},"end":{"line":161,"column":14,"offset":5597}}},{"type":"text","value":". Since ","position":{"start":{"line":161,"column":14,"offset":5597},"end":{"line":161,"column":22,"offset":5605}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":161,"column":22,"offset":5605},"end":{"line":161,"column":30,"offset":5613}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":161,"column":30,"offset":5613},"end":{"line":161,"column":50,"offset":5633}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":161,"column":50,"offset":5633},"end":{"line":161,"column":53,"offset":5636}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":161,"column":53,"offset":5636},"end":{"line":161,"column":90,"offset":5673}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":161,"column":90,"offset":5673},"end":{"line":161,"column":96,"offset":5679}}},{"type":"text","value":".\n","position":{"start":{"line":161,"column":96,"offset":5679},"end":{"line":162,"column":1,"offset":5682}}},{"type":"raw","value":"<br>","position":{"start":{"line":162,"column":1,"offset":5682},"end":{"line":162,"column":5,"offset":5686}}},{"type":"text","value":"\n","position":{"start":{"line":162,"column":5,"offset":5686},"end":{"line":163,"column":1,"offset":5687}}},{"type":"raw","value":"<br>","position":{"start":{"line":163,"column":1,"offset":5687},"end":{"line":163,"column":5,"offset":5691}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":163,"column":5,"offset":5691},"end":{"line":164,"column":14,"offset":5705}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":164,"column":14,"offset":5705},"end":{"line":164,"column":18,"offset":5709}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":164,"column":18,"offset":5709},"end":{"line":164,"column":90,"offset":5781}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":164,"column":90,"offset":5781},"end":{"line":164,"column":94,"offset":5785}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":164,"column":94,"offset":5785},"end":{"line":164,"column":125,"offset":5816}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":164,"column":125,"offset":5816},"end":{"line":164,"column":131,"offset":5822}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":164,"column":131,"offset":5822},"end":{"line":165,"column":1,"offset":5837}}},{"type":"raw","value":"<br>","position":{"start":{"line":165,"column":1,"offset":5837},"end":{"line":165,"column":5,"offset":5841}}},{"type":"text","value":"\n","position":{"start":{"line":165,"column":5,"offset":5841},"end":{"line":166,"column":1,"offset":5842}}},{"type":"raw","value":"<br>","position":{"start":{"line":166,"column":1,"offset":5842},"end":{"line":166,"column":5,"offset":5846}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":166,"column":5,"offset":5846},"end":{"line":167,"column":14,"offset":5860}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":167,"column":14,"offset":5860},"end":{"line":167,"column":18,"offset":5864}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":167,"column":18,"offset":5864},"end":{"line":167,"column":37,"offset":5883}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":167,"column":37,"offset":5883},"end":{"line":167,"column":40,"offset":5886}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":167,"column":40,"offset":5886},"end":{"line":167,"column":77,"offset":5923}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":167,"column":77,"offset":5923},"end":{"line":167,"column":81,"offset":5927}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":167,"column":81,"offset":5927},"end":{"line":167,"column":99,"offset":5945}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":167,"column":99,"offset":5945},"end":{"line":167,"column":102,"offset":5948}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":167,"column":102,"offset":5948},"end":{"line":167,"column":133,"offset":5979}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":167,"column":133,"offset":5979},"end":{"line":167,"column":139,"offset":5985}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":167,"column":139,"offset":5985},"end":{"line":167,"column":167,"offset":6013}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":167,"column":167,"offset":6013},"end":{"line":167,"column":171,"offset":6017}}},{"type":"text","value":".\n","position":{"start":{"line":167,"column":171,"offset":6017},"end":{"line":168,"column":1,"offset":6019}}},{"type":"raw","value":"<br>","position":{"start":{"line":168,"column":1,"offset":6019},"end":{"line":168,"column":5,"offset":6023}}},{"type":"text","value":"\n","position":{"start":{"line":168,"column":5,"offset":6023},"end":{"line":169,"column":1,"offset":6024}}},{"type":"raw","value":"<br>","position":{"start":{"line":169,"column":1,"offset":6024},"end":{"line":169,"column":5,"offset":6028}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":169,"column":5,"offset":6028},"end":{"line":171,"column":1,"offset":6048}}},{"type":"raw","value":"<br>","position":{"start":{"line":171,"column":1,"offset":6048},"end":{"line":171,"column":5,"offset":6052}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":171,"column":5,"offset":6052},"end":{"line":172,"column":6,"offset":6058}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":172,"column":6,"offset":6058},"end":{"line":172,"column":12,"offset":6064}}},{"type":"text","value":" does not have an ","position":{"start":{"line":172,"column":12,"offset":6064},"end":{"line":172,"column":30,"offset":6082}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":172,"column":30,"offset":6082},"end":{"line":172,"column":36,"offset":6088}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":172,"column":36,"offset":6088},"end":{"line":172,"column":62,"offset":6114}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":172,"column":62,"offset":6114},"end":{"line":172,"column":75,"offset":6127}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":172,"column":75,"offset":6127},"end":{"line":172,"column":159,"offset":6211}}}],"position":{"start":{"line":157,"column":1,"offset":5486},"end":{"line":172,"column":159,"offset":6211}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":174,"column":8,"offset":6220},"end":{"line":174,"column":41,"offset":6253}}}],"position":{"start":{"line":174,"column":1,"offset":6213},"end":{"line":174,"column":41,"offset":6253}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":175,"column":1,"offset":6254},"end":{"line":180,"column":4,"offset":6329}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":181,"column":1,"offset":6330},"end":{"line":182,"column":1,"offset":6349}}},{"type":"raw","value":"<br>","position":{"start":{"line":182,"column":1,"offset":6349},"end":{"line":182,"column":5,"offset":6353}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":182,"column":5,"offset":6353},"end":{"line":184,"column":5,"offset":6491}}},{"type":"raw","value":"<br>","position":{"start":{"line":184,"column":5,"offset":6491},"end":{"line":184,"column":9,"offset":6495}}},{"type":"text","value":"\n","position":{"start":{"line":184,"column":9,"offset":6495},"end":{"line":185,"column":5,"offset":6500}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":185,"column":5,"offset":6500},"end":{"line":185,"column":27,"offset":6522}}},{"type":"text","value":"\n","position":{"start":{"line":185,"column":27,"offset":6522},"end":{"line":186,"column":5,"offset":6527}}},{"type":"raw","value":"<br>","position":{"start":{"line":186,"column":5,"offset":6527},"end":{"line":186,"column":9,"offset":6531}}},{"type":"text","value":"\n","position":{"start":{"line":186,"column":9,"offset":6531},"end":{"line":187,"column":5,"offset":6536}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":187,"column":5,"offset":6536},"end":{"line":187,"column":12,"offset":6543}}},{"type":"text","value":" and ","position":{"start":{"line":187,"column":12,"offset":6543},"end":{"line":187,"column":17,"offset":6548}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":187,"column":17,"offset":6548},"end":{"line":187,"column":25,"offset":6556}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":187,"column":25,"offset":6556},"end":{"line":187,"column":63,"offset":6594}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":187,"column":63,"offset":6594},"end":{"line":187,"column":66,"offset":6597}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":187,"column":66,"offset":6597},"end":{"line":187,"column":86,"offset":6617}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":187,"column":86,"offset":6617},"end":{"line":187,"column":89,"offset":6620}}},{"type":"text","value":" will be called with ","position":{"start":{"line":187,"column":89,"offset":6620},"end":{"line":187,"column":110,"offset":6641}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":187,"column":110,"offset":6641},"end":{"line":187,"column":119,"offset":6650}}},{"type":"text","value":".\n","position":{"start":{"line":187,"column":119,"offset":6650},"end":{"line":188,"column":1,"offset":6652}}},{"type":"raw","value":"<br>","position":{"start":{"line":188,"column":1,"offset":6652},"end":{"line":188,"column":5,"offset":6656}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":188,"column":5,"offset":6656},"end":{"line":190,"column":1,"offset":6672}}},{"type":"raw","value":"<br>","position":{"start":{"line":190,"column":1,"offset":6672},"end":{"line":190,"column":5,"offset":6676}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":190,"column":5,"offset":6676},"end":{"line":192,"column":5,"offset":6783}}},{"type":"raw","value":"<br>","position":{"start":{"line":192,"column":5,"offset":6783},"end":{"line":192,"column":9,"offset":6787}}},{"type":"text","value":"\n","position":{"start":{"line":192,"column":9,"offset":6787},"end":{"line":193,"column":1,"offset":6788}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":193,"column":1,"offset":6788},"end":{"line":193,"column":23,"offset":6810}}},{"type":"text","value":" turns into ","position":{"start":{"line":193,"column":23,"offset":6810},"end":{"line":193,"column":35,"offset":6822}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":193,"column":35,"offset":6822},"end":{"line":193,"column":61,"offset":6848}}},{"type":"text","value":"\n","position":{"start":{"line":193,"column":61,"offset":6848},"end":{"line":194,"column":1,"offset":6849}}},{"type":"raw","value":"<br>","position":{"start":{"line":194,"column":1,"offset":6849},"end":{"line":194,"column":5,"offset":6853}}},{"type":"text","value":"\nNow ","position":{"start":{"line":194,"column":5,"offset":6853},"end":{"line":195,"column":5,"offset":6858}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":195,"column":5,"offset":6858},"end":{"line":195,"column":8,"offset":6861}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":195,"column":8,"offset":6861},"end":{"line":195,"column":58,"offset":6911}}}],"position":{"start":{"line":181,"column":1,"offset":6330},"end":{"line":195,"column":58,"offset":6911}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":197,"column":1,"offset":6913},"end":{"line":198,"column":1,"offset":6931}}},{"type":"raw","value":"<br>","position":{"start":{"line":198,"column":1,"offset":6931},"end":{"line":198,"column":5,"offset":6935}}}],"position":{"start":{"line":197,"column":1,"offset":6913},"end":{"line":198,"column":5,"offset":6935}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":199,"column":1,"offset":6936},"end":{"line":201,"column":4,"offset":6966}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":202,"column":1,"offset":6967},"end":{"line":202,"column":13,"offset":6979}}}],"position":{"start":{"line":202,"column":1,"offset":6967},"end":{"line":202,"column":13,"offset":6979}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":203,"column":1,"offset":6980},"end":{"line":209,"column":4,"offset":7059}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":210,"column":1,"offset":7060},"end":{"line":210,"column":8,"offset":7067}}}],"position":{"start":{"line":210,"column":1,"offset":7060},"end":{"line":210,"column":8,"offset":7067}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":211,"column":1,"offset":7068},"end":{"line":218,"column":4,"offset":7192}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":219,"column":1,"offset":7193},"end":{"line":220,"column":5,"offset":7202}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":222,"column":1,"offset":7204},"end":{"line":222,"column":11,"offset":7214}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":222,"column":11,"offset":7214},"end":{"line":222,"column":24,"offset":7227}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":222,"column":24,"offset":7227},"end":{"line":222,"column":107,"offset":7310}}}],"position":{"start":{"line":222,"column":1,"offset":7204},"end":{"line":222,"column":107,"offset":7310}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":224,"column":7,"offset":7318},"end":{"line":224,"column":10,"offset":7321}}}],"position":{"start":{"line":224,"column":1,"offset":7312},"end":{"line":224,"column":10,"offset":7321}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":225,"column":7,"offset":7328},"end":{"line":225,"column":10,"offset":7331}}}],"position":{"start":{"line":225,"column":1,"offset":7322},"end":{"line":225,"column":10,"offset":7331}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":227,"column":6,"offset":7338},"end":{"line":227,"column":10,"offset":7342}}}],"position":{"start":{"line":227,"column":1,"offset":7333},"end":{"line":227,"column":10,"offset":7342}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":228,"column":7,"offset":7349},"end":{"line":228,"column":13,"offset":7355}}}],"position":{"start":{"line":228,"column":1,"offset":7343},"end":{"line":228,"column":13,"offset":7355}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":229,"column":1,"offset":7356},"end":{"line":229,"column":49,"offset":7404}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":229,"column":49,"offset":7404},"end":{"line":229,"column":57,"offset":7412}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":229,"column":57,"offset":7412},"end":{"line":229,"column":133,"offset":7488}}}],"position":{"start":{"line":229,"column":1,"offset":7356},"end":{"line":229,"column":133,"offset":7488}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":230,"column":1,"offset":7489},"end":{"line":240,"column":4,"offset":7684}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":241,"column":1,"offset":7685},"end":{"line":241,"column":5,"offset":7689}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":244,"column":1,"offset":7692},"end":{"line":245,"column":1,"offset":7774}}},{"type":"raw","value":"<br>","position":{"start":{"line":245,"column":1,"offset":7774},"end":{"line":245,"column":5,"offset":7778}}},{"type":"text","value":"\n","position":{"start":{"line":245,"column":5,"offset":7778},"end":{"line":246,"column":1,"offset":7779}}},{"type":"raw","value":"<br>","position":{"start":{"line":246,"column":1,"offset":7779},"end":{"line":246,"column":5,"offset":7783}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":246,"column":5,"offset":7783},"end":{"line":247,"column":26,"offset":7809}}}],"position":{"start":{"line":244,"column":1,"offset":7692},"end":{"line":247,"column":26,"offset":7809}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":248,"column":1,"offset":7810},"end":{"line":253,"column":4,"offset":7938}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":254,"column":1,"offset":7939},"end":{"line":254,"column":14,"offset":7952}}}],"position":{"start":{"line":254,"column":1,"offset":7939},"end":{"line":254,"column":14,"offset":7952}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":256,"column":1,"offset":7954},"end":{"line":269,"column":4,"offset":8236}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":271,"column":1,"offset":8238},"end":{"line":272,"column":5,"offset":8247}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":275,"column":7,"offset":8256},"end":{"line":275,"column":13,"offset":8262}}}],"position":{"start":{"line":275,"column":1,"offset":8250},"end":{"line":275,"column":13,"offset":8262}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":275,"column":13,"offset":8262}}}}