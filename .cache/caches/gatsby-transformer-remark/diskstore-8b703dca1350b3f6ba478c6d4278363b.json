{"expireTime":9007200842251286000,"key":"transformer-remark-markdown-html-ast-224a84689f117988ff8c94f4a42e598e-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833}}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847}}},{"type":"raw","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860}}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865}}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879}}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884}}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895}}},{"type":"raw","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900}}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901}}},{"type":"raw","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906}}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911}}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912}}},{"type":"raw","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916}}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043}}},{"type":"raw","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047}}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048}}},{"type":"raw","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052}}},{"type":"text","value":"\nEnvironment: The name-object pairs the interpreter keeps in memory.\n","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":34,"column":1,"offset":1121}}},{"type":"raw","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1121},"end":{"line":34,"column":5,"offset":1125}}},{"type":"text","value":"\n","position":{"start":{"line":34,"column":5,"offset":1125},"end":{"line":35,"column":1,"offset":1126}}},{"type":"raw","value":"<br>","position":{"start":{"line":35,"column":1,"offset":1126},"end":{"line":35,"column":5,"offset":1130}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":35,"column":5,"offset":1130}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Procedures can be used to build on top of other procedures:\n","position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":1,"offset":1192}}},{"type":"raw","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1192},"end":{"line":38,"column":5,"offset":1196}}}],"position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":5,"offset":1196}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (sum-of-squares x y)\n(+ (square x) (square y))</code></pre></div>","position":{"start":{"line":39,"column":1,"offset":1197},"end":{"line":42,"column":4,"offset":1259}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\nCompound Procedure: \n<br>","position":{"start":{"line":43,"column":1,"offset":1260},"end":{"line":45,"column":5,"offset":1290}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":47,"column":7,"offset":1298},"end":{"line":47,"column":10,"offset":1301}}}],"position":{"start":{"line":47,"column":1,"offset":1292},"end":{"line":47,"column":10,"offset":1301}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":48,"column":7,"offset":1308},"end":{"line":48,"column":10,"offset":1311}}}],"position":{"start":{"line":48,"column":1,"offset":1302},"end":{"line":48,"column":10,"offset":1311}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":50,"column":6,"offset":1318},"end":{"line":50,"column":14,"offset":1326}}}],"position":{"start":{"line":50,"column":1,"offset":1313},"end":{"line":50,"column":14,"offset":1326}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":51,"column":7,"offset":1333},"end":{"line":51,"column":10,"offset":1336}}}],"position":{"start":{"line":51,"column":1,"offset":1327},"end":{"line":51,"column":10,"offset":1336}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":53,"column":8,"offset":1345},"end":{"line":53,"column":30,"offset":1367}}}],"position":{"start":{"line":53,"column":1,"offset":1338},"end":{"line":53,"column":30,"offset":1367}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":55,"column":1,"offset":1369},"end":{"line":56,"column":1,"offset":1513}}},{"type":"raw","value":"<br>","position":{"start":{"line":56,"column":1,"offset":1513},"end":{"line":56,"column":5,"offset":1517}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":56,"column":5,"offset":1517},"end":{"line":56,"column":16,"offset":1528}}},{"type":"raw","value":"<br>","position":{"start":{"line":56,"column":16,"offset":1528},"end":{"line":56,"column":20,"offset":1532}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":56,"column":20,"offset":1532},"end":{"line":58,"column":1,"offset":1676}}},{"type":"raw","value":"<br>","position":{"start":{"line":58,"column":1,"offset":1676},"end":{"line":58,"column":5,"offset":1680}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":58,"column":5,"offset":1680},"end":{"line":58,"column":16,"offset":1691}}},{"type":"raw","value":"<br>","position":{"start":{"line":58,"column":16,"offset":1691},"end":{"line":58,"column":20,"offset":1695}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":58,"column":20,"offset":1695},"end":{"line":59,"column":45,"offset":1740}}},{"type":"raw","value":"<br>","position":{"start":{"line":59,"column":45,"offset":1740},"end":{"line":59,"column":49,"offset":1744}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":59,"column":49,"offset":1744},"end":{"line":59,"column":65,"offset":1760}}},{"type":"raw","value":"<br>","position":{"start":{"line":59,"column":65,"offset":1760},"end":{"line":59,"column":69,"offset":1764}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":59,"column":69,"offset":1764},"end":{"line":61,"column":1,"offset":1807}}},{"type":"raw","value":"<br>","position":{"start":{"line":61,"column":1,"offset":1807},"end":{"line":61,"column":5,"offset":1811}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":61,"column":5,"offset":1811},"end":{"line":61,"column":22,"offset":1828}}},{"type":"raw","value":"<br>","position":{"start":{"line":61,"column":22,"offset":1828},"end":{"line":61,"column":26,"offset":1832}}},{"type":"text","value":"\n","position":{"start":{"line":61,"column":26,"offset":1832},"end":{"line":62,"column":1,"offset":1833}}},{"type":"raw","value":"<br>","position":{"start":{"line":62,"column":1,"offset":1833},"end":{"line":62,"column":5,"offset":1837}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":62,"column":5,"offset":1837},"end":{"line":64,"column":1,"offset":1955}}},{"type":"raw","value":"<br>","position":{"start":{"line":64,"column":1,"offset":1955},"end":{"line":64,"column":5,"offset":1959}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":64,"column":5,"offset":1959},"end":{"line":66,"column":1,"offset":2080}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":66,"column":1,"offset":2080},"end":{"line":66,"column":12,"offset":2091}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":66,"column":12,"offset":2091},"end":{"line":66,"column":68,"offset":2147}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":66,"column":68,"offset":2147},"end":{"line":66,"column":79,"offset":2158}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":66,"column":79,"offset":2158},"end":{"line":66,"column":106,"offset":2185}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":66,"column":106,"offset":2185},"end":{"line":66,"column":109,"offset":2188}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":66,"column":109,"offset":2188},"end":{"line":66,"column":189,"offset":2268}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":66,"column":189,"offset":2268},"end":{"line":66,"column":192,"offset":2271}}},{"type":"text","value":" to get 3.","position":{"start":{"line":66,"column":192,"offset":2271},"end":{"line":66,"column":202,"offset":2281}}}],"position":{"start":{"line":55,"column":1,"offset":1369},"end":{"line":66,"column":202,"offset":2281}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":68,"column":8,"offset":2290},"end":{"line":68,"column":14,"offset":2296}}}],"position":{"start":{"line":68,"column":1,"offset":2283},"end":{"line":68,"column":14,"offset":2296}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":69,"column":1,"offset":2297},"end":{"line":69,"column":9,"offset":2305}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":69,"column":9,"offset":2305},"end":{"line":69,"column":73,"offset":2369}}}],"position":{"start":{"line":69,"column":1,"offset":2297},"end":{"line":69,"column":73,"offset":2369}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":70,"column":1,"offset":2370},"end":{"line":73,"column":4,"offset":2409}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":74,"column":1,"offset":2410},"end":{"line":74,"column":5,"offset":2414}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":76,"column":1,"offset":2416},"end":{"line":76,"column":72,"offset":2487}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":76,"column":72,"offset":2487},"end":{"line":76,"column":80,"offset":2495}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":76,"column":80,"offset":2495},"end":{"line":77,"column":1,"offset":2519}}},{"type":"raw","value":"<br>","position":{"start":{"line":77,"column":1,"offset":2519},"end":{"line":77,"column":5,"offset":2523}}},{"type":"text","value":"\n","position":{"start":{"line":77,"column":5,"offset":2523},"end":{"line":78,"column":1,"offset":2524}}},{"type":"raw","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2524},"end":{"line":78,"column":5,"offset":2528}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":78,"column":5,"offset":2528},"end":{"line":79,"column":184,"offset":2712}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":79,"column":184,"offset":2712},"end":{"line":79,"column":187,"offset":2715}}},{"type":"text","value":".\n","position":{"start":{"line":79,"column":187,"offset":2715},"end":{"line":80,"column":1,"offset":2718}}},{"type":"raw","value":"<br>","position":{"start":{"line":80,"column":1,"offset":2718},"end":{"line":80,"column":5,"offset":2722}}},{"type":"text","value":"\n","position":{"start":{"line":80,"column":5,"offset":2722},"end":{"line":81,"column":1,"offset":2723}}},{"type":"raw","value":"<br>","position":{"start":{"line":81,"column":1,"offset":2723},"end":{"line":81,"column":5,"offset":2727}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":81,"column":5,"offset":2727},"end":{"line":82,"column":27,"offset":2754}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":82,"column":27,"offset":2754},"end":{"line":82,"column":35,"offset":2762}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":82,"column":35,"offset":2762},"end":{"line":82,"column":86,"offset":2813}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":82,"column":86,"offset":2813},"end":{"line":82,"column":95,"offset":2822}}},{"type":"text","value":". ","position":{"start":{"line":82,"column":95,"offset":2822},"end":{"line":82,"column":97,"offset":2824}}}],"position":{"start":{"line":76,"column":1,"offset":2416},"end":{"line":82,"column":97,"offset":2824}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":84,"column":1,"offset":2826},"end":{"line":84,"column":6,"offset":2831}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":86,"column":1,"offset":2833},"end":{"line":87,"column":1,"offset":2877}}},{"type":"raw","value":"<br>","position":{"start":{"line":87,"column":1,"offset":2877},"end":{"line":87,"column":5,"offset":2881}}},{"type":"text","value":"\n","position":{"start":{"line":87,"column":5,"offset":2881},"end":{"line":88,"column":1,"offset":2882}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":88,"column":1,"offset":2882},"end":{"line":88,"column":22,"offset":2903}}},{"type":"text","value":"\n","position":{"start":{"line":88,"column":22,"offset":2903},"end":{"line":89,"column":1,"offset":2904}}},{"type":"raw","value":"<br>","position":{"start":{"line":89,"column":1,"offset":2904},"end":{"line":89,"column":5,"offset":2908}}}],"position":{"start":{"line":86,"column":1,"offset":2833},"end":{"line":89,"column":5,"offset":2908}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":91,"column":1,"offset":2910},"end":{"line":91,"column":152,"offset":3061}}}],"position":{"start":{"line":91,"column":1,"offset":2910},"end":{"line":91,"column":152,"offset":3061}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":93,"column":8,"offset":3070},"end":{"line":93,"column":20,"offset":3082}}}],"position":{"start":{"line":93,"column":1,"offset":3063},"end":{"line":93,"column":20,"offset":3082}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":95,"column":1,"offset":3084},"end":{"line":95,"column":56,"offset":3139}}}],"position":{"start":{"line":95,"column":1,"offset":3084},"end":{"line":95,"column":56,"offset":3139}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":96,"column":1,"offset":3140},"end":{"line":101,"column":4,"offset":3231}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":102,"column":1,"offset":3232},"end":{"line":102,"column":5,"offset":3236}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":104,"column":1,"offset":3238},"end":{"line":104,"column":37,"offset":3274}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":104,"column":37,"offset":3274},"end":{"line":104,"column":41,"offset":3278}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":104,"column":41,"offset":3278},"end":{"line":105,"column":1,"offset":3295}}},{"type":"raw","value":"<br>","position":{"start":{"line":105,"column":1,"offset":3295},"end":{"line":105,"column":5,"offset":3299}}},{"type":"text","value":"\n","position":{"start":{"line":105,"column":5,"offset":3299},"end":{"line":106,"column":1,"offset":3300}}},{"type":"raw","value":"<br>","position":{"start":{"line":106,"column":1,"offset":3300},"end":{"line":106,"column":5,"offset":3304}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":106,"column":5,"offset":3304},"end":{"line":107,"column":66,"offset":3370}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":107,"column":66,"offset":3370},"end":{"line":107,"column":89,"offset":3393}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":107,"column":89,"offset":3393},"end":{"line":108,"column":1,"offset":3433}}},{"type":"raw","value":"<br>","position":{"start":{"line":108,"column":1,"offset":3433},"end":{"line":108,"column":5,"offset":3437}}},{"type":"text","value":"\n","position":{"start":{"line":108,"column":5,"offset":3437},"end":{"line":109,"column":1,"offset":3438}}},{"type":"raw","value":"<br>","position":{"start":{"line":109,"column":1,"offset":3438},"end":{"line":109,"column":5,"offset":3442}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":109,"column":5,"offset":3442},"end":{"line":110,"column":21,"offset":3463}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":110,"column":21,"offset":3463},"end":{"line":110,"column":25,"offset":3467}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":110,"column":25,"offset":3467},"end":{"line":111,"column":1,"offset":3521}}},{"type":"raw","value":"<br>","position":{"start":{"line":111,"column":1,"offset":3521},"end":{"line":111,"column":5,"offset":3525}}},{"type":"text","value":"\n","position":{"start":{"line":111,"column":5,"offset":3525},"end":{"line":112,"column":1,"offset":3526}}},{"type":"raw","value":"<br>","position":{"start":{"line":112,"column":1,"offset":3526},"end":{"line":112,"column":5,"offset":3530}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":112,"column":5,"offset":3530},"end":{"line":113,"column":21,"offset":3551}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":113,"column":21,"offset":3551},"end":{"line":113,"column":25,"offset":3555}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":113,"column":25,"offset":3555},"end":{"line":114,"column":1,"offset":3610}}},{"type":"raw","value":"<br>","position":{"start":{"line":114,"column":1,"offset":3610},"end":{"line":114,"column":5,"offset":3614}}},{"type":"text","value":"\n","position":{"start":{"line":114,"column":5,"offset":3614},"end":{"line":115,"column":1,"offset":3615}}},{"type":"raw","value":"<br>","position":{"start":{"line":115,"column":1,"offset":3615},"end":{"line":115,"column":5,"offset":3619}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":115,"column":5,"offset":3619},"end":{"line":116,"column":58,"offset":3677}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":116,"column":58,"offset":3677},"end":{"line":116,"column":61,"offset":3680}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":116,"column":61,"offset":3680},"end":{"line":116,"column":145,"offset":3764}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":116,"column":145,"offset":3764},"end":{"line":116,"column":153,"offset":3772}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":116,"column":153,"offset":3772},"end":{"line":116,"column":178,"offset":3797}}}],"position":{"start":{"line":104,"column":1,"offset":3238},"end":{"line":116,"column":178,"offset":3797}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":118,"column":7,"offset":3805},"end":{"line":118,"column":10,"offset":3808}}}],"position":{"start":{"line":118,"column":1,"offset":3799},"end":{"line":118,"column":10,"offset":3808}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":120,"column":8,"offset":3817},"end":{"line":120,"column":17,"offset":3826}}}],"position":{"start":{"line":120,"column":1,"offset":3810},"end":{"line":120,"column":17,"offset":3826}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":121,"column":1,"offset":3827},"end":{"line":132,"column":4,"offset":4026}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":133,"column":1,"offset":4027},"end":{"line":133,"column":5,"offset":4031}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":135,"column":1,"offset":4033},"end":{"line":136,"column":1,"offset":4249}}},{"type":"raw","value":"<br>","position":{"start":{"line":136,"column":1,"offset":4249},"end":{"line":136,"column":5,"offset":4253}}},{"type":"text","value":"\n","position":{"start":{"line":136,"column":5,"offset":4253},"end":{"line":137,"column":1,"offset":4254}}},{"type":"raw","value":"<br>","position":{"start":{"line":137,"column":1,"offset":4254},"end":{"line":137,"column":5,"offset":4258}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":137,"column":5,"offset":4258},"end":{"line":138,"column":72,"offset":4330}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":138,"column":72,"offset":4330},"end":{"line":138,"column":81,"offset":4339}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":138,"column":81,"offset":4339},"end":{"line":139,"column":1,"offset":4358}}},{"type":"raw","value":"<br>","position":{"start":{"line":139,"column":1,"offset":4358},"end":{"line":139,"column":5,"offset":4362}}},{"type":"text","value":"\n","position":{"start":{"line":139,"column":5,"offset":4362},"end":{"line":140,"column":1,"offset":4363}}},{"type":"raw","value":"<br>","position":{"start":{"line":140,"column":1,"offset":4363},"end":{"line":140,"column":5,"offset":4367}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":140,"column":5,"offset":4367},"end":{"line":141,"column":10,"offset":4377}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":141,"column":10,"offset":4377},"end":{"line":141,"column":16,"offset":4383}}},{"type":"text","value":" gets called with ","position":{"start":{"line":141,"column":16,"offset":4383},"end":{"line":141,"column":34,"offset":4401}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":141,"column":34,"offset":4401},"end":{"line":141,"column":42,"offset":4409}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":141,"column":42,"offset":4409},"end":{"line":142,"column":24,"offset":4434}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":142,"column":24,"offset":4434},"end":{"line":142,"column":33,"offset":4443}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":142,"column":33,"offset":4443},"end":{"line":142,"column":107,"offset":4517}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":142,"column":107,"offset":4517},"end":{"line":142,"column":116,"offset":4526}}},{"type":"text","value":" is false because ","position":{"start":{"line":142,"column":116,"offset":4526},"end":{"line":142,"column":134,"offset":4544}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":142,"column":134,"offset":4544},"end":{"line":142,"column":137,"offset":4547}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":142,"column":137,"offset":4547},"end":{"line":142,"column":161,"offset":4571}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":142,"column":161,"offset":4571},"end":{"line":142,"column":167,"offset":4577}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":142,"column":167,"offset":4577},"end":{"line":142,"column":192,"offset":4602}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":142,"column":192,"offset":4602},"end":{"line":142,"column":200,"offset":4610}}},{"type":"text","value":". This is because ","position":{"start":{"line":142,"column":200,"offset":4610},"end":{"line":142,"column":218,"offset":4628}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":142,"column":218,"offset":4628},"end":{"line":142,"column":224,"offset":4634}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":142,"column":224,"offset":4634},"end":{"line":142,"column":245,"offset":4655}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":142,"column":245,"offset":4655},"end":{"line":142,"column":252,"offset":4662}}},{"type":"text","value":" and ","position":{"start":{"line":142,"column":252,"offset":4662},"end":{"line":142,"column":257,"offset":4667}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":142,"column":257,"offset":4667},"end":{"line":142,"column":260,"offset":4670}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":142,"column":260,"offset":4670},"end":{"line":142,"column":285,"offset":4695}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":142,"column":285,"offset":4695},"end":{"line":142,"column":291,"offset":4701}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":142,"column":291,"offset":4701},"end":{"line":143,"column":96,"offset":4827}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":143,"column":96,"offset":4827},"end":{"line":143,"column":111,"offset":4842}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":143,"column":111,"offset":4842},"end":{"line":143,"column":182,"offset":4913}}}],"position":{"start":{"line":135,"column":1,"offset":4033},"end":{"line":143,"column":182,"offset":4913}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":145,"column":8,"offset":4922},"end":{"line":145,"column":19,"offset":4933}}}],"position":{"start":{"line":145,"column":1,"offset":4915},"end":{"line":145,"column":19,"offset":4933}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":146,"column":1,"offset":4934},"end":{"line":146,"column":14,"offset":4947}}}],"position":{"start":{"line":146,"column":1,"offset":4934},"end":{"line":146,"column":14,"offset":4947}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":147,"column":1,"offset":4948},"end":{"line":162,"column":4,"offset":5363}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":163,"column":1,"offset":5364},"end":{"line":163,"column":5,"offset":5368}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":165,"column":1,"offset":5370},"end":{"line":165,"column":141,"offset":5510}}}],"position":{"start":{"line":165,"column":1,"offset":5370},"end":{"line":165,"column":141,"offset":5510}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":167,"column":8,"offset":5519},"end":{"line":167,"column":30,"offset":5541}}}],"position":{"start":{"line":167,"column":1,"offset":5512},"end":{"line":167,"column":30,"offset":5541}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":168,"column":1,"offset":5542},"end":{"line":168,"column":199,"offset":5740}}}],"position":{"start":{"line":168,"column":1,"offset":5542},"end":{"line":168,"column":199,"offset":5740}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":170,"column":8,"offset":5749},"end":{"line":170,"column":30,"offset":5771}}}],"position":{"start":{"line":170,"column":1,"offset":5742},"end":{"line":170,"column":30,"offset":5771}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":172,"column":1,"offset":5773},"end":{"line":173,"column":1,"offset":5848}}},{"type":"raw","value":"<br>","position":{"start":{"line":173,"column":1,"offset":5848},"end":{"line":173,"column":5,"offset":5852}}},{"type":"text","value":"\n","position":{"start":{"line":173,"column":5,"offset":5852},"end":{"line":174,"column":1,"offset":5853}}},{"type":"raw","value":"<br>","position":{"start":{"line":174,"column":1,"offset":5853},"end":{"line":174,"column":5,"offset":5857}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":174,"column":5,"offset":5857},"end":{"line":176,"column":1,"offset":5919}}},{"type":"raw","value":"<br>","position":{"start":{"line":176,"column":1,"offset":5919},"end":{"line":176,"column":5,"offset":5923}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":176,"column":5,"offset":5923},"end":{"line":177,"column":1,"offset":5926}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":177,"column":1,"offset":5926},"end":{"line":177,"column":11,"offset":5936}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":177,"column":11,"offset":5936},"end":{"line":177,"column":19,"offset":5944}}},{"type":"text","value":" and ","position":{"start":{"line":177,"column":19,"offset":5944},"end":{"line":177,"column":24,"offset":5949}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":177,"column":24,"offset":5949},"end":{"line":177,"column":34,"offset":5959}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":177,"column":34,"offset":5959},"end":{"line":178,"column":1,"offset":6008}}},{"type":"raw","value":"<br>","position":{"start":{"line":178,"column":1,"offset":6008},"end":{"line":178,"column":5,"offset":6012}}}],"position":{"start":{"line":172,"column":1,"offset":5773},"end":{"line":178,"column":5,"offset":6012}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":180,"column":8,"offset":6021},"end":{"line":180,"column":12,"offset":6025}}}],"position":{"start":{"line":180,"column":1,"offset":6014},"end":{"line":180,"column":12,"offset":6025}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":181,"column":1,"offset":6026},"end":{"line":186,"column":4,"offset":6137}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":187,"column":1,"offset":6138},"end":{"line":188,"column":5,"offset":6147}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":190,"column":1,"offset":6149},"end":{"line":190,"column":7,"offset":6155}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":190,"column":7,"offset":6155},"end":{"line":192,"column":1,"offset":6237}}},{"type":"raw","value":"<br>","position":{"start":{"line":192,"column":1,"offset":6237},"end":{"line":192,"column":5,"offset":6241}}},{"type":"text","value":"\n","position":{"start":{"line":192,"column":5,"offset":6241},"end":{"line":193,"column":1,"offset":6242}}},{"type":"raw","value":"<br>","position":{"start":{"line":193,"column":1,"offset":6242},"end":{"line":193,"column":5,"offset":6246}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":193,"column":5,"offset":6246},"end":{"line":194,"column":10,"offset":6256}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":194,"column":10,"offset":6256},"end":{"line":194,"column":14,"offset":6260}}},{"type":"text","value":". Since ","position":{"start":{"line":194,"column":14,"offset":6260},"end":{"line":194,"column":22,"offset":6268}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":194,"column":22,"offset":6268},"end":{"line":194,"column":30,"offset":6276}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":194,"column":30,"offset":6276},"end":{"line":194,"column":50,"offset":6296}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":194,"column":50,"offset":6296},"end":{"line":194,"column":53,"offset":6299}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":194,"column":53,"offset":6299},"end":{"line":194,"column":90,"offset":6336}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":194,"column":90,"offset":6336},"end":{"line":194,"column":96,"offset":6342}}},{"type":"text","value":".\n","position":{"start":{"line":194,"column":96,"offset":6342},"end":{"line":195,"column":1,"offset":6345}}},{"type":"raw","value":"<br>","position":{"start":{"line":195,"column":1,"offset":6345},"end":{"line":195,"column":5,"offset":6349}}},{"type":"text","value":"\n","position":{"start":{"line":195,"column":5,"offset":6349},"end":{"line":196,"column":1,"offset":6350}}},{"type":"raw","value":"<br>","position":{"start":{"line":196,"column":1,"offset":6350},"end":{"line":196,"column":5,"offset":6354}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":196,"column":5,"offset":6354},"end":{"line":197,"column":14,"offset":6368}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":197,"column":14,"offset":6368},"end":{"line":197,"column":18,"offset":6372}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":197,"column":18,"offset":6372},"end":{"line":197,"column":90,"offset":6444}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":197,"column":90,"offset":6444},"end":{"line":197,"column":94,"offset":6448}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":197,"column":94,"offset":6448},"end":{"line":197,"column":125,"offset":6479}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":197,"column":125,"offset":6479},"end":{"line":197,"column":131,"offset":6485}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":197,"column":131,"offset":6485},"end":{"line":198,"column":1,"offset":6500}}},{"type":"raw","value":"<br>","position":{"start":{"line":198,"column":1,"offset":6500},"end":{"line":198,"column":5,"offset":6504}}},{"type":"text","value":"\n","position":{"start":{"line":198,"column":5,"offset":6504},"end":{"line":199,"column":1,"offset":6505}}},{"type":"raw","value":"<br>","position":{"start":{"line":199,"column":1,"offset":6505},"end":{"line":199,"column":5,"offset":6509}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":199,"column":5,"offset":6509},"end":{"line":200,"column":14,"offset":6523}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":200,"column":14,"offset":6523},"end":{"line":200,"column":18,"offset":6527}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":200,"column":18,"offset":6527},"end":{"line":200,"column":37,"offset":6546}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":200,"column":37,"offset":6546},"end":{"line":200,"column":40,"offset":6549}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":200,"column":40,"offset":6549},"end":{"line":200,"column":77,"offset":6586}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":200,"column":77,"offset":6586},"end":{"line":200,"column":81,"offset":6590}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":200,"column":81,"offset":6590},"end":{"line":200,"column":99,"offset":6608}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":200,"column":99,"offset":6608},"end":{"line":200,"column":102,"offset":6611}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":200,"column":102,"offset":6611},"end":{"line":200,"column":133,"offset":6642}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":200,"column":133,"offset":6642},"end":{"line":200,"column":139,"offset":6648}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":200,"column":139,"offset":6648},"end":{"line":200,"column":167,"offset":6676}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":200,"column":167,"offset":6676},"end":{"line":200,"column":171,"offset":6680}}},{"type":"text","value":".\n","position":{"start":{"line":200,"column":171,"offset":6680},"end":{"line":201,"column":1,"offset":6682}}},{"type":"raw","value":"<br>","position":{"start":{"line":201,"column":1,"offset":6682},"end":{"line":201,"column":5,"offset":6686}}},{"type":"text","value":"\n","position":{"start":{"line":201,"column":5,"offset":6686},"end":{"line":202,"column":1,"offset":6687}}},{"type":"raw","value":"<br>","position":{"start":{"line":202,"column":1,"offset":6687},"end":{"line":202,"column":5,"offset":6691}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":202,"column":5,"offset":6691},"end":{"line":204,"column":1,"offset":6711}}},{"type":"raw","value":"<br>","position":{"start":{"line":204,"column":1,"offset":6711},"end":{"line":204,"column":5,"offset":6715}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":204,"column":5,"offset":6715},"end":{"line":205,"column":6,"offset":6721}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":205,"column":6,"offset":6721},"end":{"line":205,"column":12,"offset":6727}}},{"type":"text","value":" does not have an ","position":{"start":{"line":205,"column":12,"offset":6727},"end":{"line":205,"column":30,"offset":6745}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":205,"column":30,"offset":6745},"end":{"line":205,"column":36,"offset":6751}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":205,"column":36,"offset":6751},"end":{"line":205,"column":62,"offset":6777}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":205,"column":62,"offset":6777},"end":{"line":205,"column":75,"offset":6790}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":205,"column":75,"offset":6790},"end":{"line":205,"column":159,"offset":6874}}}],"position":{"start":{"line":190,"column":1,"offset":6149},"end":{"line":205,"column":159,"offset":6874}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":207,"column":8,"offset":6883},"end":{"line":207,"column":41,"offset":6916}}}],"position":{"start":{"line":207,"column":1,"offset":6876},"end":{"line":207,"column":41,"offset":6916}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":208,"column":1,"offset":6917},"end":{"line":213,"column":4,"offset":6992}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":214,"column":1,"offset":6993},"end":{"line":215,"column":1,"offset":7012}}},{"type":"raw","value":"<br>","position":{"start":{"line":215,"column":1,"offset":7012},"end":{"line":215,"column":5,"offset":7016}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":215,"column":5,"offset":7016},"end":{"line":217,"column":5,"offset":7154}}},{"type":"raw","value":"<br>","position":{"start":{"line":217,"column":5,"offset":7154},"end":{"line":217,"column":9,"offset":7158}}},{"type":"text","value":"\n","position":{"start":{"line":217,"column":9,"offset":7158},"end":{"line":218,"column":5,"offset":7163}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":218,"column":5,"offset":7163},"end":{"line":218,"column":27,"offset":7185}}},{"type":"text","value":"\n","position":{"start":{"line":218,"column":27,"offset":7185},"end":{"line":219,"column":5,"offset":7190}}},{"type":"raw","value":"<br>","position":{"start":{"line":219,"column":5,"offset":7190},"end":{"line":219,"column":9,"offset":7194}}},{"type":"text","value":"\n","position":{"start":{"line":219,"column":9,"offset":7194},"end":{"line":220,"column":5,"offset":7199}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":220,"column":5,"offset":7199},"end":{"line":220,"column":12,"offset":7206}}},{"type":"text","value":" and ","position":{"start":{"line":220,"column":12,"offset":7206},"end":{"line":220,"column":17,"offset":7211}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":220,"column":17,"offset":7211},"end":{"line":220,"column":25,"offset":7219}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":220,"column":25,"offset":7219},"end":{"line":220,"column":63,"offset":7257}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":220,"column":63,"offset":7257},"end":{"line":220,"column":66,"offset":7260}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":220,"column":66,"offset":7260},"end":{"line":220,"column":86,"offset":7280}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":220,"column":86,"offset":7280},"end":{"line":220,"column":89,"offset":7283}}},{"type":"text","value":" will be called with ","position":{"start":{"line":220,"column":89,"offset":7283},"end":{"line":220,"column":110,"offset":7304}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":220,"column":110,"offset":7304},"end":{"line":220,"column":119,"offset":7313}}},{"type":"text","value":".\n","position":{"start":{"line":220,"column":119,"offset":7313},"end":{"line":221,"column":1,"offset":7315}}},{"type":"raw","value":"<br>","position":{"start":{"line":221,"column":1,"offset":7315},"end":{"line":221,"column":5,"offset":7319}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":221,"column":5,"offset":7319},"end":{"line":223,"column":1,"offset":7335}}},{"type":"raw","value":"<br>","position":{"start":{"line":223,"column":1,"offset":7335},"end":{"line":223,"column":5,"offset":7339}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":223,"column":5,"offset":7339},"end":{"line":225,"column":5,"offset":7446}}},{"type":"raw","value":"<br>","position":{"start":{"line":225,"column":5,"offset":7446},"end":{"line":225,"column":9,"offset":7450}}},{"type":"text","value":"\n","position":{"start":{"line":225,"column":9,"offset":7450},"end":{"line":226,"column":1,"offset":7451}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":226,"column":1,"offset":7451},"end":{"line":226,"column":23,"offset":7473}}},{"type":"text","value":" turns into ","position":{"start":{"line":226,"column":23,"offset":7473},"end":{"line":226,"column":35,"offset":7485}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":226,"column":35,"offset":7485},"end":{"line":226,"column":61,"offset":7511}}},{"type":"text","value":"\n","position":{"start":{"line":226,"column":61,"offset":7511},"end":{"line":227,"column":1,"offset":7512}}},{"type":"raw","value":"<br>","position":{"start":{"line":227,"column":1,"offset":7512},"end":{"line":227,"column":5,"offset":7516}}},{"type":"text","value":"\nNow ","position":{"start":{"line":227,"column":5,"offset":7516},"end":{"line":228,"column":5,"offset":7521}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":228,"column":5,"offset":7521},"end":{"line":228,"column":8,"offset":7524}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":228,"column":8,"offset":7524},"end":{"line":228,"column":58,"offset":7574}}}],"position":{"start":{"line":214,"column":1,"offset":6993},"end":{"line":228,"column":58,"offset":7574}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":230,"column":1,"offset":7576},"end":{"line":231,"column":1,"offset":7594}}},{"type":"raw","value":"<br>","position":{"start":{"line":231,"column":1,"offset":7594},"end":{"line":231,"column":5,"offset":7598}}}],"position":{"start":{"line":230,"column":1,"offset":7576},"end":{"line":231,"column":5,"offset":7598}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":232,"column":1,"offset":7599},"end":{"line":234,"column":4,"offset":7629}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":235,"column":1,"offset":7630},"end":{"line":235,"column":13,"offset":7642}}}],"position":{"start":{"line":235,"column":1,"offset":7630},"end":{"line":235,"column":13,"offset":7642}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":236,"column":1,"offset":7643},"end":{"line":242,"column":4,"offset":7722}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":243,"column":1,"offset":7723},"end":{"line":243,"column":8,"offset":7730}}}],"position":{"start":{"line":243,"column":1,"offset":7723},"end":{"line":243,"column":8,"offset":7730}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":244,"column":1,"offset":7731},"end":{"line":251,"column":4,"offset":7855}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":252,"column":1,"offset":7856},"end":{"line":253,"column":5,"offset":7865}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":255,"column":1,"offset":7867},"end":{"line":255,"column":11,"offset":7877}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":255,"column":11,"offset":7877},"end":{"line":255,"column":24,"offset":7890}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":255,"column":24,"offset":7890},"end":{"line":255,"column":107,"offset":7973}}}],"position":{"start":{"line":255,"column":1,"offset":7867},"end":{"line":255,"column":107,"offset":7973}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":257,"column":7,"offset":7981},"end":{"line":257,"column":10,"offset":7984}}}],"position":{"start":{"line":257,"column":1,"offset":7975},"end":{"line":257,"column":10,"offset":7984}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":258,"column":7,"offset":7991},"end":{"line":258,"column":10,"offset":7994}}}],"position":{"start":{"line":258,"column":1,"offset":7985},"end":{"line":258,"column":10,"offset":7994}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":260,"column":6,"offset":8001},"end":{"line":260,"column":10,"offset":8005}}}],"position":{"start":{"line":260,"column":1,"offset":7996},"end":{"line":260,"column":10,"offset":8005}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":261,"column":7,"offset":8012},"end":{"line":261,"column":13,"offset":8018}}}],"position":{"start":{"line":261,"column":1,"offset":8006},"end":{"line":261,"column":13,"offset":8018}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":262,"column":1,"offset":8019},"end":{"line":262,"column":49,"offset":8067}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":262,"column":49,"offset":8067},"end":{"line":262,"column":57,"offset":8075}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":262,"column":57,"offset":8075},"end":{"line":262,"column":133,"offset":8151}}}],"position":{"start":{"line":262,"column":1,"offset":8019},"end":{"line":262,"column":133,"offset":8151}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":263,"column":1,"offset":8152},"end":{"line":273,"column":4,"offset":8347}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":274,"column":1,"offset":8348},"end":{"line":274,"column":5,"offset":8352}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":277,"column":1,"offset":8355},"end":{"line":278,"column":1,"offset":8437}}},{"type":"raw","value":"<br>","position":{"start":{"line":278,"column":1,"offset":8437},"end":{"line":278,"column":5,"offset":8441}}},{"type":"text","value":"\n","position":{"start":{"line":278,"column":5,"offset":8441},"end":{"line":279,"column":1,"offset":8442}}},{"type":"raw","value":"<br>","position":{"start":{"line":279,"column":1,"offset":8442},"end":{"line":279,"column":5,"offset":8446}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":279,"column":5,"offset":8446},"end":{"line":280,"column":26,"offset":8472}}}],"position":{"start":{"line":277,"column":1,"offset":8355},"end":{"line":280,"column":26,"offset":8472}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":281,"column":1,"offset":8473},"end":{"line":286,"column":4,"offset":8601}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":287,"column":1,"offset":8602},"end":{"line":287,"column":14,"offset":8615}}}],"position":{"start":{"line":287,"column":1,"offset":8602},"end":{"line":287,"column":14,"offset":8615}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":289,"column":1,"offset":8617},"end":{"line":302,"column":4,"offset":8899}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":304,"column":1,"offset":8901},"end":{"line":305,"column":5,"offset":8910}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":308,"column":7,"offset":8919},"end":{"line":308,"column":13,"offset":8925}}}],"position":{"start":{"line":308,"column":1,"offset":8913},"end":{"line":308,"column":13,"offset":8925}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":308,"column":13,"offset":8925}}}}