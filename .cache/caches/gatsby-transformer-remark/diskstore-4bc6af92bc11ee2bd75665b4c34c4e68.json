{"expireTime":9007200842248820000,"key":"transformer-remark-markdown-ast-1400a9a862268e9cbe3e2ac3c7b31123-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632},"indent":[]}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities. \n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705},"indent":[]}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":19,"column":5,"offset":786},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Breaking down a expression:\n","position":{"start":{"line":21,"column":1,"offset":788},"end":{"line":22,"column":1,"offset":816},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":1,"offset":816},"end":{"line":22,"column":5,"offset":820},"indent":[]}},{"type":"text","value":"\n`","position":{"start":{"line":22,"column":5,"offset":820},"end":{"line":23,"column":2,"offset":822},"indent":[1]}}],"position":{"start":{"line":21,"column":1,"offset":788},"end":{"line":23,"column":2,"offset":822},"indent":[1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":24,"column":7,"offset":829},"end":{"line":24,"column":10,"offset":832},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":823},"end":{"line":24,"column":10,"offset":832},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":25,"column":7,"offset":839},"end":{"line":25,"column":10,"offset":842},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":833},"end":{"line":25,"column":10,"offset":842},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":27,"column":6,"offset":849},"end":{"line":27,"column":14,"offset":857},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":844},"end":{"line":27,"column":14,"offset":857},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":28,"column":7,"offset":864},"end":{"line":28,"column":10,"offset":867},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":858},"end":{"line":28,"column":10,"offset":867},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":30,"column":8,"offset":876},"end":{"line":30,"column":30,"offset":898},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":869},"end":{"line":30,"column":30,"offset":898},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":32,"column":1,"offset":900},"end":{"line":33,"column":1,"offset":1044},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":33,"column":1,"offset":1044},"end":{"line":33,"column":5,"offset":1048},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":33,"column":5,"offset":1048},"end":{"line":33,"column":16,"offset":1059},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":33,"column":16,"offset":1059},"end":{"line":33,"column":20,"offset":1063},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":33,"column":20,"offset":1063},"end":{"line":35,"column":1,"offset":1207},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":35,"column":1,"offset":1207},"end":{"line":35,"column":5,"offset":1211},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":35,"column":5,"offset":1211},"end":{"line":35,"column":16,"offset":1222},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":35,"column":16,"offset":1222},"end":{"line":35,"column":20,"offset":1226},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":35,"column":20,"offset":1226},"end":{"line":36,"column":45,"offset":1271},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":36,"column":45,"offset":1271},"end":{"line":36,"column":49,"offset":1275},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":36,"column":49,"offset":1275},"end":{"line":36,"column":65,"offset":1291},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":36,"column":65,"offset":1291},"end":{"line":36,"column":69,"offset":1295},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":36,"column":69,"offset":1295},"end":{"line":38,"column":1,"offset":1338},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1338},"end":{"line":38,"column":5,"offset":1342},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":38,"column":5,"offset":1342},"end":{"line":38,"column":22,"offset":1359},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":38,"column":22,"offset":1359},"end":{"line":38,"column":26,"offset":1363},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":38,"column":26,"offset":1363},"end":{"line":39,"column":1,"offset":1364},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":39,"column":1,"offset":1364},"end":{"line":39,"column":5,"offset":1368},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":39,"column":5,"offset":1368},"end":{"line":41,"column":1,"offset":1486},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":41,"column":1,"offset":1486},"end":{"line":41,"column":5,"offset":1490},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":41,"column":5,"offset":1490},"end":{"line":43,"column":1,"offset":1611},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":43,"column":1,"offset":1611},"end":{"line":43,"column":12,"offset":1622},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":43,"column":12,"offset":1622},"end":{"line":43,"column":68,"offset":1678},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":43,"column":68,"offset":1678},"end":{"line":43,"column":79,"offset":1689},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":43,"column":79,"offset":1689},"end":{"line":43,"column":106,"offset":1716},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":43,"column":106,"offset":1716},"end":{"line":43,"column":109,"offset":1719},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":43,"column":109,"offset":1719},"end":{"line":43,"column":189,"offset":1799},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":43,"column":189,"offset":1799},"end":{"line":43,"column":192,"offset":1802},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":43,"column":192,"offset":1802},"end":{"line":43,"column":202,"offset":1812},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":900},"end":{"line":43,"column":202,"offset":1812},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":45,"column":8,"offset":1821},"end":{"line":45,"column":14,"offset":1827},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1814},"end":{"line":45,"column":14,"offset":1827},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":46,"column":1,"offset":1828},"end":{"line":46,"column":9,"offset":1836},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":46,"column":9,"offset":1836},"end":{"line":46,"column":73,"offset":1900},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":1828},"end":{"line":46,"column":73,"offset":1900},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":47,"column":1,"offset":1901},"end":{"line":50,"column":4,"offset":1940},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":51,"column":1,"offset":1941},"end":{"line":51,"column":5,"offset":1945},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":53,"column":1,"offset":1947},"end":{"line":53,"column":72,"offset":2018},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":53,"column":72,"offset":2018},"end":{"line":53,"column":80,"offset":2026},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":53,"column":80,"offset":2026},"end":{"line":54,"column":1,"offset":2050},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":54,"column":1,"offset":2050},"end":{"line":54,"column":5,"offset":2054},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":54,"column":5,"offset":2054},"end":{"line":55,"column":1,"offset":2055},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":55,"column":1,"offset":2055},"end":{"line":55,"column":5,"offset":2059},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":55,"column":5,"offset":2059},"end":{"line":56,"column":184,"offset":2243},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":56,"column":184,"offset":2243},"end":{"line":56,"column":187,"offset":2246},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":56,"column":187,"offset":2246},"end":{"line":57,"column":1,"offset":2249},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":57,"column":1,"offset":2249},"end":{"line":57,"column":5,"offset":2253},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":57,"column":5,"offset":2253},"end":{"line":58,"column":1,"offset":2254},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":58,"column":1,"offset":2254},"end":{"line":58,"column":5,"offset":2258},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":58,"column":5,"offset":2258},"end":{"line":59,"column":27,"offset":2285},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":59,"column":27,"offset":2285},"end":{"line":59,"column":35,"offset":2293},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":59,"column":35,"offset":2293},"end":{"line":59,"column":86,"offset":2344},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":59,"column":86,"offset":2344},"end":{"line":59,"column":95,"offset":2353},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":59,"column":95,"offset":2353},"end":{"line":59,"column":97,"offset":2355},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1947},"end":{"line":59,"column":97,"offset":2355},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":61,"column":1,"offset":2357},"end":{"line":61,"column":6,"offset":2362},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":63,"column":1,"offset":2364},"end":{"line":64,"column":1,"offset":2408},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":64,"column":1,"offset":2408},"end":{"line":64,"column":5,"offset":2412},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":64,"column":5,"offset":2412},"end":{"line":65,"column":1,"offset":2413},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":65,"column":1,"offset":2413},"end":{"line":65,"column":22,"offset":2434},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":65,"column":22,"offset":2434},"end":{"line":66,"column":1,"offset":2435},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":66,"column":1,"offset":2435},"end":{"line":66,"column":5,"offset":2439},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":2364},"end":{"line":66,"column":5,"offset":2439},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":68,"column":1,"offset":2441},"end":{"line":68,"column":152,"offset":2592},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":2441},"end":{"line":68,"column":152,"offset":2592},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":70,"column":8,"offset":2601},"end":{"line":70,"column":20,"offset":2613},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":2594},"end":{"line":70,"column":20,"offset":2613},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":72,"column":1,"offset":2615},"end":{"line":72,"column":56,"offset":2670},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":2615},"end":{"line":72,"column":56,"offset":2670},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":73,"column":1,"offset":2671},"end":{"line":78,"column":4,"offset":2762},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":79,"column":1,"offset":2763},"end":{"line":79,"column":5,"offset":2767},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":81,"column":1,"offset":2769},"end":{"line":81,"column":37,"offset":2805},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":81,"column":37,"offset":2805},"end":{"line":81,"column":41,"offset":2809},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":81,"column":41,"offset":2809},"end":{"line":82,"column":1,"offset":2826},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":82,"column":1,"offset":2826},"end":{"line":82,"column":5,"offset":2830},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":82,"column":5,"offset":2830},"end":{"line":83,"column":1,"offset":2831},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":83,"column":1,"offset":2831},"end":{"line":83,"column":5,"offset":2835},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":83,"column":5,"offset":2835},"end":{"line":84,"column":66,"offset":2901},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":84,"column":66,"offset":2901},"end":{"line":84,"column":89,"offset":2924},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":84,"column":89,"offset":2924},"end":{"line":85,"column":1,"offset":2964},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":85,"column":1,"offset":2964},"end":{"line":85,"column":5,"offset":2968},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":85,"column":5,"offset":2968},"end":{"line":86,"column":1,"offset":2969},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":86,"column":1,"offset":2969},"end":{"line":86,"column":5,"offset":2973},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":86,"column":5,"offset":2973},"end":{"line":87,"column":21,"offset":2994},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":87,"column":21,"offset":2994},"end":{"line":87,"column":25,"offset":2998},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":87,"column":25,"offset":2998},"end":{"line":88,"column":1,"offset":3052},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":88,"column":1,"offset":3052},"end":{"line":88,"column":5,"offset":3056},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":88,"column":5,"offset":3056},"end":{"line":89,"column":1,"offset":3057},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":89,"column":1,"offset":3057},"end":{"line":89,"column":5,"offset":3061},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":89,"column":5,"offset":3061},"end":{"line":90,"column":21,"offset":3082},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":90,"column":21,"offset":3082},"end":{"line":90,"column":25,"offset":3086},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":90,"column":25,"offset":3086},"end":{"line":91,"column":1,"offset":3141},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":91,"column":1,"offset":3141},"end":{"line":91,"column":5,"offset":3145},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":91,"column":5,"offset":3145},"end":{"line":92,"column":1,"offset":3146},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":92,"column":1,"offset":3146},"end":{"line":92,"column":5,"offset":3150},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":92,"column":5,"offset":3150},"end":{"line":93,"column":58,"offset":3208},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":93,"column":58,"offset":3208},"end":{"line":93,"column":61,"offset":3211},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":93,"column":61,"offset":3211},"end":{"line":93,"column":145,"offset":3295},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":93,"column":145,"offset":3295},"end":{"line":93,"column":153,"offset":3303},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":93,"column":153,"offset":3303},"end":{"line":93,"column":178,"offset":3328},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":2769},"end":{"line":93,"column":178,"offset":3328},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":95,"column":7,"offset":3336},"end":{"line":95,"column":10,"offset":3339},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":3330},"end":{"line":95,"column":10,"offset":3339},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":97,"column":8,"offset":3348},"end":{"line":97,"column":17,"offset":3357},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":3341},"end":{"line":97,"column":17,"offset":3357},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":98,"column":1,"offset":3358},"end":{"line":109,"column":4,"offset":3557},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":110,"column":1,"offset":3558},"end":{"line":110,"column":5,"offset":3562},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":112,"column":1,"offset":3564},"end":{"line":113,"column":1,"offset":3780},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":113,"column":1,"offset":3780},"end":{"line":113,"column":5,"offset":3784},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":113,"column":5,"offset":3784},"end":{"line":114,"column":1,"offset":3785},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":114,"column":1,"offset":3785},"end":{"line":114,"column":5,"offset":3789},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":114,"column":5,"offset":3789},"end":{"line":115,"column":72,"offset":3861},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":115,"column":72,"offset":3861},"end":{"line":115,"column":81,"offset":3870},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":115,"column":81,"offset":3870},"end":{"line":116,"column":1,"offset":3889},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":116,"column":1,"offset":3889},"end":{"line":116,"column":5,"offset":3893},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":116,"column":5,"offset":3893},"end":{"line":117,"column":1,"offset":3894},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":117,"column":1,"offset":3894},"end":{"line":117,"column":5,"offset":3898},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":117,"column":5,"offset":3898},"end":{"line":118,"column":10,"offset":3908},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":118,"column":10,"offset":3908},"end":{"line":118,"column":16,"offset":3914},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":118,"column":16,"offset":3914},"end":{"line":118,"column":34,"offset":3932},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":118,"column":34,"offset":3932},"end":{"line":118,"column":42,"offset":3940},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":118,"column":42,"offset":3940},"end":{"line":119,"column":24,"offset":3965},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":119,"column":24,"offset":3965},"end":{"line":119,"column":33,"offset":3974},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":119,"column":33,"offset":3974},"end":{"line":119,"column":107,"offset":4048},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":119,"column":107,"offset":4048},"end":{"line":119,"column":116,"offset":4057},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":119,"column":116,"offset":4057},"end":{"line":119,"column":134,"offset":4075},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":119,"column":134,"offset":4075},"end":{"line":119,"column":137,"offset":4078},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":119,"column":137,"offset":4078},"end":{"line":119,"column":161,"offset":4102},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":119,"column":161,"offset":4102},"end":{"line":119,"column":167,"offset":4108},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":119,"column":167,"offset":4108},"end":{"line":119,"column":192,"offset":4133},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":119,"column":192,"offset":4133},"end":{"line":119,"column":200,"offset":4141},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":119,"column":200,"offset":4141},"end":{"line":119,"column":218,"offset":4159},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":119,"column":218,"offset":4159},"end":{"line":119,"column":224,"offset":4165},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":119,"column":224,"offset":4165},"end":{"line":119,"column":245,"offset":4186},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":119,"column":245,"offset":4186},"end":{"line":119,"column":252,"offset":4193},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":119,"column":252,"offset":4193},"end":{"line":119,"column":257,"offset":4198},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":119,"column":257,"offset":4198},"end":{"line":119,"column":260,"offset":4201},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":119,"column":260,"offset":4201},"end":{"line":119,"column":285,"offset":4226},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":119,"column":285,"offset":4226},"end":{"line":119,"column":291,"offset":4232},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":119,"column":291,"offset":4232},"end":{"line":120,"column":96,"offset":4358},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":120,"column":96,"offset":4358},"end":{"line":120,"column":111,"offset":4373},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":120,"column":111,"offset":4373},"end":{"line":120,"column":182,"offset":4444},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":3564},"end":{"line":120,"column":182,"offset":4444},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":122,"column":8,"offset":4453},"end":{"line":122,"column":19,"offset":4464},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":4446},"end":{"line":122,"column":19,"offset":4464},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":123,"column":1,"offset":4465},"end":{"line":123,"column":14,"offset":4478},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":4465},"end":{"line":123,"column":14,"offset":4478},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":124,"column":1,"offset":4479},"end":{"line":139,"column":4,"offset":4894},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":140,"column":1,"offset":4895},"end":{"line":140,"column":5,"offset":4899},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":142,"column":1,"offset":4901},"end":{"line":142,"column":141,"offset":5041},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":4901},"end":{"line":142,"column":141,"offset":5041},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":144,"column":8,"offset":5050},"end":{"line":144,"column":30,"offset":5072},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":5043},"end":{"line":144,"column":30,"offset":5072},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":145,"column":1,"offset":5073},"end":{"line":145,"column":199,"offset":5271},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":5073},"end":{"line":145,"column":199,"offset":5271},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":147,"column":8,"offset":5280},"end":{"line":147,"column":30,"offset":5302},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":5273},"end":{"line":147,"column":30,"offset":5302},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":149,"column":1,"offset":5304},"end":{"line":150,"column":1,"offset":5379},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":150,"column":1,"offset":5379},"end":{"line":150,"column":5,"offset":5383},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":150,"column":5,"offset":5383},"end":{"line":151,"column":1,"offset":5384},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":151,"column":1,"offset":5384},"end":{"line":151,"column":5,"offset":5388},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":151,"column":5,"offset":5388},"end":{"line":153,"column":1,"offset":5450},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":153,"column":1,"offset":5450},"end":{"line":153,"column":5,"offset":5454},"indent":[]}},{"type":"break","position":{"start":{"line":153,"column":5,"offset":5454},"end":{"line":154,"column":1,"offset":5457},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":154,"column":1,"offset":5457},"end":{"line":154,"column":11,"offset":5467},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":154,"column":11,"offset":5467},"end":{"line":154,"column":19,"offset":5475},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":154,"column":19,"offset":5475},"end":{"line":154,"column":24,"offset":5480},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":154,"column":24,"offset":5480},"end":{"line":154,"column":34,"offset":5490},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":154,"column":34,"offset":5490},"end":{"line":155,"column":1,"offset":5539},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":155,"column":1,"offset":5539},"end":{"line":155,"column":5,"offset":5543},"indent":[]}}],"position":{"start":{"line":149,"column":1,"offset":5304},"end":{"line":155,"column":5,"offset":5543},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":157,"column":8,"offset":5552},"end":{"line":157,"column":12,"offset":5556},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":5545},"end":{"line":157,"column":12,"offset":5556},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":158,"column":1,"offset":5557},"end":{"line":163,"column":4,"offset":5668},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":164,"column":1,"offset":5669},"end":{"line":165,"column":5,"offset":5678},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":167,"column":1,"offset":5680},"end":{"line":167,"column":7,"offset":5686},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":167,"column":7,"offset":5686},"end":{"line":169,"column":1,"offset":5768},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":169,"column":1,"offset":5768},"end":{"line":169,"column":5,"offset":5772},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":169,"column":5,"offset":5772},"end":{"line":170,"column":1,"offset":5773},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":170,"column":1,"offset":5773},"end":{"line":170,"column":5,"offset":5777},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":170,"column":5,"offset":5777},"end":{"line":171,"column":10,"offset":5787},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":171,"column":10,"offset":5787},"end":{"line":171,"column":14,"offset":5791},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":171,"column":14,"offset":5791},"end":{"line":171,"column":22,"offset":5799},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":171,"column":22,"offset":5799},"end":{"line":171,"column":30,"offset":5807},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":171,"column":30,"offset":5807},"end":{"line":171,"column":50,"offset":5827},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":171,"column":50,"offset":5827},"end":{"line":171,"column":53,"offset":5830},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":171,"column":53,"offset":5830},"end":{"line":171,"column":90,"offset":5867},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":171,"column":90,"offset":5867},"end":{"line":171,"column":96,"offset":5873},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":171,"column":96,"offset":5873},"end":{"line":172,"column":1,"offset":5876},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":172,"column":1,"offset":5876},"end":{"line":172,"column":5,"offset":5880},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":172,"column":5,"offset":5880},"end":{"line":173,"column":1,"offset":5881},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":173,"column":1,"offset":5881},"end":{"line":173,"column":5,"offset":5885},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":173,"column":5,"offset":5885},"end":{"line":174,"column":14,"offset":5899},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":174,"column":14,"offset":5899},"end":{"line":174,"column":18,"offset":5903},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":174,"column":18,"offset":5903},"end":{"line":174,"column":90,"offset":5975},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":174,"column":90,"offset":5975},"end":{"line":174,"column":94,"offset":5979},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":174,"column":94,"offset":5979},"end":{"line":174,"column":125,"offset":6010},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":174,"column":125,"offset":6010},"end":{"line":174,"column":131,"offset":6016},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":174,"column":131,"offset":6016},"end":{"line":175,"column":1,"offset":6031},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":175,"column":1,"offset":6031},"end":{"line":175,"column":5,"offset":6035},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":175,"column":5,"offset":6035},"end":{"line":176,"column":1,"offset":6036},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":176,"column":1,"offset":6036},"end":{"line":176,"column":5,"offset":6040},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":176,"column":5,"offset":6040},"end":{"line":177,"column":14,"offset":6054},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":177,"column":14,"offset":6054},"end":{"line":177,"column":18,"offset":6058},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":177,"column":18,"offset":6058},"end":{"line":177,"column":37,"offset":6077},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":177,"column":37,"offset":6077},"end":{"line":177,"column":40,"offset":6080},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":177,"column":40,"offset":6080},"end":{"line":177,"column":77,"offset":6117},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":177,"column":77,"offset":6117},"end":{"line":177,"column":81,"offset":6121},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":177,"column":81,"offset":6121},"end":{"line":177,"column":99,"offset":6139},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":177,"column":99,"offset":6139},"end":{"line":177,"column":102,"offset":6142},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":177,"column":102,"offset":6142},"end":{"line":177,"column":133,"offset":6173},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":177,"column":133,"offset":6173},"end":{"line":177,"column":139,"offset":6179},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":177,"column":139,"offset":6179},"end":{"line":177,"column":167,"offset":6207},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":177,"column":167,"offset":6207},"end":{"line":177,"column":171,"offset":6211},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":177,"column":171,"offset":6211},"end":{"line":178,"column":1,"offset":6213},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":178,"column":1,"offset":6213},"end":{"line":178,"column":5,"offset":6217},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":178,"column":5,"offset":6217},"end":{"line":179,"column":1,"offset":6218},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":179,"column":1,"offset":6218},"end":{"line":179,"column":5,"offset":6222},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":179,"column":5,"offset":6222},"end":{"line":181,"column":1,"offset":6242},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":181,"column":1,"offset":6242},"end":{"line":181,"column":5,"offset":6246},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":181,"column":5,"offset":6246},"end":{"line":182,"column":6,"offset":6252},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":182,"column":6,"offset":6252},"end":{"line":182,"column":12,"offset":6258},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":182,"column":12,"offset":6258},"end":{"line":182,"column":30,"offset":6276},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":182,"column":30,"offset":6276},"end":{"line":182,"column":36,"offset":6282},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":182,"column":36,"offset":6282},"end":{"line":182,"column":62,"offset":6308},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":182,"column":62,"offset":6308},"end":{"line":182,"column":75,"offset":6321},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":182,"column":75,"offset":6321},"end":{"line":182,"column":159,"offset":6405},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":5680},"end":{"line":182,"column":159,"offset":6405},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":184,"column":8,"offset":6414},"end":{"line":184,"column":41,"offset":6447},"indent":[]}}],"position":{"start":{"line":184,"column":1,"offset":6407},"end":{"line":184,"column":41,"offset":6447},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":185,"column":1,"offset":6448},"end":{"line":190,"column":4,"offset":6523},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":191,"column":1,"offset":6524},"end":{"line":192,"column":1,"offset":6543},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":192,"column":1,"offset":6543},"end":{"line":192,"column":5,"offset":6547},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":192,"column":5,"offset":6547},"end":{"line":194,"column":5,"offset":6685},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":194,"column":5,"offset":6685},"end":{"line":194,"column":9,"offset":6689},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":194,"column":9,"offset":6689},"end":{"line":195,"column":5,"offset":6694},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":195,"column":5,"offset":6694},"end":{"line":195,"column":27,"offset":6716},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":195,"column":27,"offset":6716},"end":{"line":196,"column":5,"offset":6721},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":196,"column":5,"offset":6721},"end":{"line":196,"column":9,"offset":6725},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":196,"column":9,"offset":6725},"end":{"line":197,"column":5,"offset":6730},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":197,"column":5,"offset":6730},"end":{"line":197,"column":12,"offset":6737},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":197,"column":12,"offset":6737},"end":{"line":197,"column":17,"offset":6742},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":197,"column":17,"offset":6742},"end":{"line":197,"column":25,"offset":6750},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":197,"column":25,"offset":6750},"end":{"line":197,"column":63,"offset":6788},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":197,"column":63,"offset":6788},"end":{"line":197,"column":66,"offset":6791},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":197,"column":66,"offset":6791},"end":{"line":197,"column":86,"offset":6811},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":197,"column":86,"offset":6811},"end":{"line":197,"column":89,"offset":6814},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":197,"column":89,"offset":6814},"end":{"line":197,"column":110,"offset":6835},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":197,"column":110,"offset":6835},"end":{"line":197,"column":119,"offset":6844},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":197,"column":119,"offset":6844},"end":{"line":198,"column":1,"offset":6846},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":198,"column":1,"offset":6846},"end":{"line":198,"column":5,"offset":6850},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":198,"column":5,"offset":6850},"end":{"line":200,"column":1,"offset":6866},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":200,"column":1,"offset":6866},"end":{"line":200,"column":5,"offset":6870},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":200,"column":5,"offset":6870},"end":{"line":202,"column":5,"offset":6977},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":202,"column":5,"offset":6977},"end":{"line":202,"column":9,"offset":6981},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":202,"column":9,"offset":6981},"end":{"line":203,"column":1,"offset":6982},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":203,"column":1,"offset":6982},"end":{"line":203,"column":23,"offset":7004},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":203,"column":23,"offset":7004},"end":{"line":203,"column":35,"offset":7016},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":203,"column":35,"offset":7016},"end":{"line":203,"column":61,"offset":7042},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":203,"column":61,"offset":7042},"end":{"line":204,"column":1,"offset":7043},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":204,"column":1,"offset":7043},"end":{"line":204,"column":5,"offset":7047},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":204,"column":5,"offset":7047},"end":{"line":205,"column":5,"offset":7052},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":205,"column":5,"offset":7052},"end":{"line":205,"column":8,"offset":7055},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":205,"column":8,"offset":7055},"end":{"line":205,"column":58,"offset":7105},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":6524},"end":{"line":205,"column":58,"offset":7105},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":207,"column":1,"offset":7107},"end":{"line":208,"column":1,"offset":7125},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":208,"column":1,"offset":7125},"end":{"line":208,"column":5,"offset":7129},"indent":[]}}],"position":{"start":{"line":207,"column":1,"offset":7107},"end":{"line":208,"column":5,"offset":7129},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":209,"column":1,"offset":7130},"end":{"line":211,"column":4,"offset":7160},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":212,"column":1,"offset":7161},"end":{"line":212,"column":13,"offset":7173},"indent":[]}}],"position":{"start":{"line":212,"column":1,"offset":7161},"end":{"line":212,"column":13,"offset":7173},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":213,"column":1,"offset":7174},"end":{"line":219,"column":4,"offset":7253},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":220,"column":1,"offset":7254},"end":{"line":220,"column":8,"offset":7261},"indent":[]}}],"position":{"start":{"line":220,"column":1,"offset":7254},"end":{"line":220,"column":8,"offset":7261},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":221,"column":1,"offset":7262},"end":{"line":228,"column":4,"offset":7386},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":229,"column":1,"offset":7387},"end":{"line":230,"column":5,"offset":7396},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":232,"column":1,"offset":7398},"end":{"line":232,"column":11,"offset":7408},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":232,"column":11,"offset":7408},"end":{"line":232,"column":24,"offset":7421},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":232,"column":24,"offset":7421},"end":{"line":232,"column":107,"offset":7504},"indent":[]}}],"position":{"start":{"line":232,"column":1,"offset":7398},"end":{"line":232,"column":107,"offset":7504},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":234,"column":7,"offset":7512},"end":{"line":234,"column":10,"offset":7515},"indent":[]}}],"position":{"start":{"line":234,"column":1,"offset":7506},"end":{"line":234,"column":10,"offset":7515},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":235,"column":7,"offset":7522},"end":{"line":235,"column":10,"offset":7525},"indent":[]}}],"position":{"start":{"line":235,"column":1,"offset":7516},"end":{"line":235,"column":10,"offset":7525},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":237,"column":6,"offset":7532},"end":{"line":237,"column":10,"offset":7536},"indent":[]}}],"position":{"start":{"line":237,"column":1,"offset":7527},"end":{"line":237,"column":10,"offset":7536},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":238,"column":7,"offset":7543},"end":{"line":238,"column":13,"offset":7549},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":7537},"end":{"line":238,"column":13,"offset":7549},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":239,"column":1,"offset":7550},"end":{"line":239,"column":49,"offset":7598},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":239,"column":49,"offset":7598},"end":{"line":239,"column":57,"offset":7606},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":239,"column":57,"offset":7606},"end":{"line":239,"column":133,"offset":7682},"indent":[]}}],"position":{"start":{"line":239,"column":1,"offset":7550},"end":{"line":239,"column":133,"offset":7682},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":240,"column":1,"offset":7683},"end":{"line":250,"column":4,"offset":7878},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":251,"column":1,"offset":7879},"end":{"line":251,"column":5,"offset":7883},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":254,"column":1,"offset":7886},"end":{"line":255,"column":1,"offset":7968},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":255,"column":1,"offset":7968},"end":{"line":255,"column":5,"offset":7972},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":255,"column":5,"offset":7972},"end":{"line":256,"column":1,"offset":7973},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":256,"column":1,"offset":7973},"end":{"line":256,"column":5,"offset":7977},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":256,"column":5,"offset":7977},"end":{"line":257,"column":26,"offset":8003},"indent":[1]}}],"position":{"start":{"line":254,"column":1,"offset":7886},"end":{"line":257,"column":26,"offset":8003},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":258,"column":1,"offset":8004},"end":{"line":263,"column":4,"offset":8132},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":264,"column":1,"offset":8133},"end":{"line":264,"column":14,"offset":8146},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":8133},"end":{"line":264,"column":14,"offset":8146},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":266,"column":1,"offset":8148},"end":{"line":279,"column":4,"offset":8430},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":281,"column":1,"offset":8432},"end":{"line":282,"column":5,"offset":8441},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":285,"column":7,"offset":8450},"end":{"line":285,"column":13,"offset":8456},"indent":[]}}],"position":{"start":{"line":285,"column":1,"offset":8444},"end":{"line":285,"column":13,"offset":8456},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":285,"column":13,"offset":8456}}}}