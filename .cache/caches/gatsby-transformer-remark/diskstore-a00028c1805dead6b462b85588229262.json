{"expireTime":9007200842251368000,"key":"transformer-remark-markdown-ast-ecca93ca2916d618f0d6efbe5e8cc58e-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632},"indent":[]}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities. \n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705},"indent":[]}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791},"indent":[]}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833},"indent":[]}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865},"indent":[]}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884},"indent":[]}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916},"indent":[]}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052},"indent":[]}},{"type":"text","value":"\nEnvironment: The name-object pairs the interpreter keeps in memory.\n","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":34,"column":1,"offset":1121},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1121},"end":{"line":34,"column":5,"offset":1125},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":34,"column":5,"offset":1125},"end":{"line":35,"column":1,"offset":1126},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":35,"column":1,"offset":1126},"end":{"line":35,"column":5,"offset":1130},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":35,"column":5,"offset":1130},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Compound Procedures can be used to build on top of other Compound Procedures:\n","position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":1,"offset":1210},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1210},"end":{"line":38,"column":5,"offset":1214},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":5,"offset":1214},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (sum-of-squares x y)\n(+ (square x) (square y))</code></pre></div>","position":{"start":{"line":39,"column":1,"offset":1215},"end":{"line":42,"column":4,"offset":1277},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":43,"column":1,"offset":1278},"end":{"line":43,"column":5,"offset":1282},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Compound Procedure: procedure that you make out of primitives ex: ","position":{"start":{"line":45,"column":1,"offset":1284},"end":{"line":45,"column":67,"offset":1350},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">square</code>","position":{"start":{"line":45,"column":67,"offset":1350},"end":{"line":45,"column":75,"offset":1358},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1284},"end":{"line":45,"column":75,"offset":1358},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Primitive Procedure: procedure built into the language ex: ","position":{"start":{"line":47,"column":1,"offset":1360},"end":{"line":47,"column":60,"offset":1419},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":47,"column":60,"offset":1419},"end":{"line":47,"column":63,"offset":1422},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1360},"end":{"line":47,"column":63,"offset":1422},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":49,"column":1,"offset":1424},"end":{"line":49,"column":5,"offset":1428},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":51,"column":7,"offset":1436},"end":{"line":51,"column":10,"offset":1439},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1430},"end":{"line":51,"column":10,"offset":1439},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":52,"column":7,"offset":1446},"end":{"line":52,"column":10,"offset":1449},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1440},"end":{"line":52,"column":10,"offset":1449},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":54,"column":6,"offset":1456},"end":{"line":54,"column":14,"offset":1464},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1451},"end":{"line":54,"column":14,"offset":1464},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":55,"column":7,"offset":1471},"end":{"line":55,"column":10,"offset":1474},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":1465},"end":{"line":55,"column":10,"offset":1474},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":57,"column":8,"offset":1483},"end":{"line":57,"column":30,"offset":1505},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1476},"end":{"line":57,"column":30,"offset":1505},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":59,"column":1,"offset":1507},"end":{"line":60,"column":1,"offset":1651},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":60,"column":1,"offset":1651},"end":{"line":60,"column":5,"offset":1655},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":60,"column":5,"offset":1655},"end":{"line":60,"column":16,"offset":1666},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":60,"column":16,"offset":1666},"end":{"line":60,"column":20,"offset":1670},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":60,"column":20,"offset":1670},"end":{"line":62,"column":1,"offset":1814},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":62,"column":1,"offset":1814},"end":{"line":62,"column":5,"offset":1818},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":62,"column":5,"offset":1818},"end":{"line":62,"column":16,"offset":1829},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":62,"column":16,"offset":1829},"end":{"line":62,"column":20,"offset":1833},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":62,"column":20,"offset":1833},"end":{"line":63,"column":45,"offset":1878},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":63,"column":45,"offset":1878},"end":{"line":63,"column":49,"offset":1882},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":63,"column":49,"offset":1882},"end":{"line":63,"column":65,"offset":1898},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":63,"column":65,"offset":1898},"end":{"line":63,"column":69,"offset":1902},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":63,"column":69,"offset":1902},"end":{"line":65,"column":1,"offset":1945},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":65,"column":1,"offset":1945},"end":{"line":65,"column":5,"offset":1949},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":65,"column":5,"offset":1949},"end":{"line":65,"column":22,"offset":1966},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":65,"column":22,"offset":1966},"end":{"line":65,"column":26,"offset":1970},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":65,"column":26,"offset":1970},"end":{"line":66,"column":1,"offset":1971},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":66,"column":1,"offset":1971},"end":{"line":66,"column":5,"offset":1975},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":66,"column":5,"offset":1975},"end":{"line":68,"column":1,"offset":2093},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":68,"column":1,"offset":2093},"end":{"line":68,"column":5,"offset":2097},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":68,"column":5,"offset":2097},"end":{"line":70,"column":1,"offset":2218},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":70,"column":1,"offset":2218},"end":{"line":70,"column":12,"offset":2229},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":70,"column":12,"offset":2229},"end":{"line":70,"column":68,"offset":2285},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":70,"column":68,"offset":2285},"end":{"line":70,"column":79,"offset":2296},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":70,"column":79,"offset":2296},"end":{"line":70,"column":106,"offset":2323},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":70,"column":106,"offset":2323},"end":{"line":70,"column":109,"offset":2326},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":70,"column":109,"offset":2326},"end":{"line":70,"column":189,"offset":2406},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":70,"column":189,"offset":2406},"end":{"line":70,"column":192,"offset":2409},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":70,"column":192,"offset":2409},"end":{"line":70,"column":202,"offset":2419},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1507},"end":{"line":70,"column":202,"offset":2419},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":72,"column":8,"offset":2428},"end":{"line":72,"column":14,"offset":2434},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":2421},"end":{"line":72,"column":14,"offset":2434},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":73,"column":1,"offset":2435},"end":{"line":73,"column":9,"offset":2443},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":73,"column":9,"offset":2443},"end":{"line":73,"column":73,"offset":2507},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":2435},"end":{"line":73,"column":73,"offset":2507},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":74,"column":1,"offset":2508},"end":{"line":77,"column":4,"offset":2547},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2548},"end":{"line":78,"column":5,"offset":2552},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":80,"column":1,"offset":2554},"end":{"line":80,"column":72,"offset":2625},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":80,"column":72,"offset":2625},"end":{"line":80,"column":80,"offset":2633},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":80,"column":80,"offset":2633},"end":{"line":81,"column":1,"offset":2657},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":81,"column":1,"offset":2657},"end":{"line":81,"column":5,"offset":2661},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":81,"column":5,"offset":2661},"end":{"line":82,"column":1,"offset":2662},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":82,"column":1,"offset":2662},"end":{"line":82,"column":5,"offset":2666},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":82,"column":5,"offset":2666},"end":{"line":83,"column":184,"offset":2850},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":83,"column":184,"offset":2850},"end":{"line":83,"column":187,"offset":2853},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":83,"column":187,"offset":2853},"end":{"line":84,"column":1,"offset":2856},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":84,"column":1,"offset":2856},"end":{"line":84,"column":5,"offset":2860},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":84,"column":5,"offset":2860},"end":{"line":85,"column":1,"offset":2861},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":85,"column":1,"offset":2861},"end":{"line":85,"column":5,"offset":2865},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":85,"column":5,"offset":2865},"end":{"line":86,"column":27,"offset":2892},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":86,"column":27,"offset":2892},"end":{"line":86,"column":35,"offset":2900},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":86,"column":35,"offset":2900},"end":{"line":86,"column":86,"offset":2951},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":86,"column":86,"offset":2951},"end":{"line":86,"column":95,"offset":2960},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":86,"column":95,"offset":2960},"end":{"line":86,"column":97,"offset":2962},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":2554},"end":{"line":86,"column":97,"offset":2962},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":88,"column":1,"offset":2964},"end":{"line":88,"column":6,"offset":2969},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":90,"column":1,"offset":2971},"end":{"line":91,"column":1,"offset":3015},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":91,"column":1,"offset":3015},"end":{"line":91,"column":5,"offset":3019},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":91,"column":5,"offset":3019},"end":{"line":92,"column":1,"offset":3020},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":92,"column":1,"offset":3020},"end":{"line":92,"column":22,"offset":3041},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":92,"column":22,"offset":3041},"end":{"line":93,"column":1,"offset":3042},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":93,"column":1,"offset":3042},"end":{"line":93,"column":5,"offset":3046},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":2971},"end":{"line":93,"column":5,"offset":3046},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":95,"column":1,"offset":3048},"end":{"line":95,"column":152,"offset":3199},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":3048},"end":{"line":95,"column":152,"offset":3199},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":97,"column":8,"offset":3208},"end":{"line":97,"column":20,"offset":3220},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":3201},"end":{"line":97,"column":20,"offset":3220},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":99,"column":1,"offset":3222},"end":{"line":99,"column":56,"offset":3277},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":3222},"end":{"line":99,"column":56,"offset":3277},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":100,"column":1,"offset":3278},"end":{"line":105,"column":4,"offset":3369},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":106,"column":1,"offset":3370},"end":{"line":106,"column":5,"offset":3374},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":108,"column":1,"offset":3376},"end":{"line":108,"column":37,"offset":3412},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":108,"column":37,"offset":3412},"end":{"line":108,"column":41,"offset":3416},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":108,"column":41,"offset":3416},"end":{"line":109,"column":1,"offset":3433},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":109,"column":1,"offset":3433},"end":{"line":109,"column":5,"offset":3437},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":109,"column":5,"offset":3437},"end":{"line":110,"column":1,"offset":3438},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":110,"column":1,"offset":3438},"end":{"line":110,"column":5,"offset":3442},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":110,"column":5,"offset":3442},"end":{"line":111,"column":66,"offset":3508},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":111,"column":66,"offset":3508},"end":{"line":111,"column":89,"offset":3531},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":111,"column":89,"offset":3531},"end":{"line":112,"column":1,"offset":3571},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":112,"column":1,"offset":3571},"end":{"line":112,"column":5,"offset":3575},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":112,"column":5,"offset":3575},"end":{"line":113,"column":1,"offset":3576},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":113,"column":1,"offset":3576},"end":{"line":113,"column":5,"offset":3580},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":113,"column":5,"offset":3580},"end":{"line":114,"column":21,"offset":3601},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":114,"column":21,"offset":3601},"end":{"line":114,"column":25,"offset":3605},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":114,"column":25,"offset":3605},"end":{"line":115,"column":1,"offset":3659},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":115,"column":1,"offset":3659},"end":{"line":115,"column":5,"offset":3663},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":115,"column":5,"offset":3663},"end":{"line":116,"column":1,"offset":3664},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":116,"column":1,"offset":3664},"end":{"line":116,"column":5,"offset":3668},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":116,"column":5,"offset":3668},"end":{"line":117,"column":21,"offset":3689},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":117,"column":21,"offset":3689},"end":{"line":117,"column":25,"offset":3693},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":117,"column":25,"offset":3693},"end":{"line":118,"column":1,"offset":3748},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":118,"column":1,"offset":3748},"end":{"line":118,"column":5,"offset":3752},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":118,"column":5,"offset":3752},"end":{"line":119,"column":1,"offset":3753},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":119,"column":1,"offset":3753},"end":{"line":119,"column":5,"offset":3757},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":119,"column":5,"offset":3757},"end":{"line":120,"column":58,"offset":3815},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":120,"column":58,"offset":3815},"end":{"line":120,"column":61,"offset":3818},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":120,"column":61,"offset":3818},"end":{"line":120,"column":145,"offset":3902},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":120,"column":145,"offset":3902},"end":{"line":120,"column":153,"offset":3910},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":120,"column":153,"offset":3910},"end":{"line":120,"column":178,"offset":3935},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":3376},"end":{"line":120,"column":178,"offset":3935},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":122,"column":7,"offset":3943},"end":{"line":122,"column":10,"offset":3946},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":3937},"end":{"line":122,"column":10,"offset":3946},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":124,"column":8,"offset":3955},"end":{"line":124,"column":17,"offset":3964},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":3948},"end":{"line":124,"column":17,"offset":3964},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":125,"column":1,"offset":3965},"end":{"line":136,"column":4,"offset":4164},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":137,"column":1,"offset":4165},"end":{"line":137,"column":5,"offset":4169},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":139,"column":1,"offset":4171},"end":{"line":140,"column":1,"offset":4387},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":140,"column":1,"offset":4387},"end":{"line":140,"column":5,"offset":4391},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":140,"column":5,"offset":4391},"end":{"line":141,"column":1,"offset":4392},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":141,"column":1,"offset":4392},"end":{"line":141,"column":5,"offset":4396},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":141,"column":5,"offset":4396},"end":{"line":142,"column":72,"offset":4468},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":142,"column":72,"offset":4468},"end":{"line":142,"column":81,"offset":4477},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":142,"column":81,"offset":4477},"end":{"line":143,"column":1,"offset":4496},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":143,"column":1,"offset":4496},"end":{"line":143,"column":5,"offset":4500},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":143,"column":5,"offset":4500},"end":{"line":144,"column":1,"offset":4501},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":144,"column":1,"offset":4501},"end":{"line":144,"column":5,"offset":4505},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":144,"column":5,"offset":4505},"end":{"line":145,"column":10,"offset":4515},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":145,"column":10,"offset":4515},"end":{"line":145,"column":16,"offset":4521},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":145,"column":16,"offset":4521},"end":{"line":145,"column":34,"offset":4539},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":145,"column":34,"offset":4539},"end":{"line":145,"column":42,"offset":4547},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":145,"column":42,"offset":4547},"end":{"line":146,"column":24,"offset":4572},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":146,"column":24,"offset":4572},"end":{"line":146,"column":33,"offset":4581},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":146,"column":33,"offset":4581},"end":{"line":146,"column":107,"offset":4655},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":146,"column":107,"offset":4655},"end":{"line":146,"column":116,"offset":4664},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":146,"column":116,"offset":4664},"end":{"line":146,"column":134,"offset":4682},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":146,"column":134,"offset":4682},"end":{"line":146,"column":137,"offset":4685},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":146,"column":137,"offset":4685},"end":{"line":146,"column":161,"offset":4709},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":146,"column":161,"offset":4709},"end":{"line":146,"column":167,"offset":4715},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":146,"column":167,"offset":4715},"end":{"line":146,"column":192,"offset":4740},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":146,"column":192,"offset":4740},"end":{"line":146,"column":200,"offset":4748},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":146,"column":200,"offset":4748},"end":{"line":146,"column":218,"offset":4766},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":146,"column":218,"offset":4766},"end":{"line":146,"column":224,"offset":4772},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":146,"column":224,"offset":4772},"end":{"line":146,"column":245,"offset":4793},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":146,"column":245,"offset":4793},"end":{"line":146,"column":252,"offset":4800},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":146,"column":252,"offset":4800},"end":{"line":146,"column":257,"offset":4805},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":146,"column":257,"offset":4805},"end":{"line":146,"column":260,"offset":4808},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":146,"column":260,"offset":4808},"end":{"line":146,"column":285,"offset":4833},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":146,"column":285,"offset":4833},"end":{"line":146,"column":291,"offset":4839},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":146,"column":291,"offset":4839},"end":{"line":147,"column":96,"offset":4965},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":147,"column":96,"offset":4965},"end":{"line":147,"column":111,"offset":4980},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":147,"column":111,"offset":4980},"end":{"line":147,"column":182,"offset":5051},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":4171},"end":{"line":147,"column":182,"offset":5051},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":149,"column":8,"offset":5060},"end":{"line":149,"column":19,"offset":5071},"indent":[]}}],"position":{"start":{"line":149,"column":1,"offset":5053},"end":{"line":149,"column":19,"offset":5071},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":150,"column":1,"offset":5072},"end":{"line":150,"column":14,"offset":5085},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":5072},"end":{"line":150,"column":14,"offset":5085},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":151,"column":1,"offset":5086},"end":{"line":166,"column":4,"offset":5501},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":167,"column":1,"offset":5502},"end":{"line":167,"column":5,"offset":5506},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":169,"column":1,"offset":5508},"end":{"line":169,"column":141,"offset":5648},"indent":[]}}],"position":{"start":{"line":169,"column":1,"offset":5508},"end":{"line":169,"column":141,"offset":5648},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":171,"column":8,"offset":5657},"end":{"line":171,"column":30,"offset":5679},"indent":[]}}],"position":{"start":{"line":171,"column":1,"offset":5650},"end":{"line":171,"column":30,"offset":5679},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":172,"column":1,"offset":5680},"end":{"line":172,"column":199,"offset":5878},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":5680},"end":{"line":172,"column":199,"offset":5878},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":174,"column":8,"offset":5887},"end":{"line":174,"column":30,"offset":5909},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":5880},"end":{"line":174,"column":30,"offset":5909},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":176,"column":1,"offset":5911},"end":{"line":177,"column":1,"offset":5986},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":177,"column":1,"offset":5986},"end":{"line":177,"column":5,"offset":5990},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":177,"column":5,"offset":5990},"end":{"line":178,"column":1,"offset":5991},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":178,"column":1,"offset":5991},"end":{"line":178,"column":5,"offset":5995},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":178,"column":5,"offset":5995},"end":{"line":180,"column":1,"offset":6057},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":180,"column":1,"offset":6057},"end":{"line":180,"column":5,"offset":6061},"indent":[]}},{"type":"break","position":{"start":{"line":180,"column":5,"offset":6061},"end":{"line":181,"column":1,"offset":6064},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":181,"column":1,"offset":6064},"end":{"line":181,"column":11,"offset":6074},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":181,"column":11,"offset":6074},"end":{"line":181,"column":19,"offset":6082},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":181,"column":19,"offset":6082},"end":{"line":181,"column":24,"offset":6087},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":181,"column":24,"offset":6087},"end":{"line":181,"column":34,"offset":6097},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":181,"column":34,"offset":6097},"end":{"line":182,"column":1,"offset":6146},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":182,"column":1,"offset":6146},"end":{"line":182,"column":5,"offset":6150},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":5911},"end":{"line":182,"column":5,"offset":6150},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":184,"column":8,"offset":6159},"end":{"line":184,"column":12,"offset":6163},"indent":[]}}],"position":{"start":{"line":184,"column":1,"offset":6152},"end":{"line":184,"column":12,"offset":6163},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":185,"column":1,"offset":6164},"end":{"line":190,"column":4,"offset":6275},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":191,"column":1,"offset":6276},"end":{"line":192,"column":5,"offset":6285},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":194,"column":1,"offset":6287},"end":{"line":194,"column":7,"offset":6293},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":194,"column":7,"offset":6293},"end":{"line":196,"column":1,"offset":6375},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":196,"column":1,"offset":6375},"end":{"line":196,"column":5,"offset":6379},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":196,"column":5,"offset":6379},"end":{"line":197,"column":1,"offset":6380},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":197,"column":1,"offset":6380},"end":{"line":197,"column":5,"offset":6384},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":197,"column":5,"offset":6384},"end":{"line":198,"column":10,"offset":6394},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":198,"column":10,"offset":6394},"end":{"line":198,"column":14,"offset":6398},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":198,"column":14,"offset":6398},"end":{"line":198,"column":22,"offset":6406},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":198,"column":22,"offset":6406},"end":{"line":198,"column":30,"offset":6414},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":198,"column":30,"offset":6414},"end":{"line":198,"column":50,"offset":6434},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":198,"column":50,"offset":6434},"end":{"line":198,"column":53,"offset":6437},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":198,"column":53,"offset":6437},"end":{"line":198,"column":90,"offset":6474},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":198,"column":90,"offset":6474},"end":{"line":198,"column":96,"offset":6480},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":198,"column":96,"offset":6480},"end":{"line":199,"column":1,"offset":6483},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":199,"column":1,"offset":6483},"end":{"line":199,"column":5,"offset":6487},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":199,"column":5,"offset":6487},"end":{"line":200,"column":1,"offset":6488},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":200,"column":1,"offset":6488},"end":{"line":200,"column":5,"offset":6492},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":200,"column":5,"offset":6492},"end":{"line":201,"column":14,"offset":6506},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":201,"column":14,"offset":6506},"end":{"line":201,"column":18,"offset":6510},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":201,"column":18,"offset":6510},"end":{"line":201,"column":90,"offset":6582},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":201,"column":90,"offset":6582},"end":{"line":201,"column":94,"offset":6586},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":201,"column":94,"offset":6586},"end":{"line":201,"column":125,"offset":6617},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":201,"column":125,"offset":6617},"end":{"line":201,"column":131,"offset":6623},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":201,"column":131,"offset":6623},"end":{"line":202,"column":1,"offset":6638},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":202,"column":1,"offset":6638},"end":{"line":202,"column":5,"offset":6642},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":202,"column":5,"offset":6642},"end":{"line":203,"column":1,"offset":6643},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":203,"column":1,"offset":6643},"end":{"line":203,"column":5,"offset":6647},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":203,"column":5,"offset":6647},"end":{"line":204,"column":14,"offset":6661},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":204,"column":14,"offset":6661},"end":{"line":204,"column":18,"offset":6665},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":204,"column":18,"offset":6665},"end":{"line":204,"column":37,"offset":6684},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":204,"column":37,"offset":6684},"end":{"line":204,"column":40,"offset":6687},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":204,"column":40,"offset":6687},"end":{"line":204,"column":77,"offset":6724},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":204,"column":77,"offset":6724},"end":{"line":204,"column":81,"offset":6728},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":204,"column":81,"offset":6728},"end":{"line":204,"column":99,"offset":6746},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":204,"column":99,"offset":6746},"end":{"line":204,"column":102,"offset":6749},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":204,"column":102,"offset":6749},"end":{"line":204,"column":133,"offset":6780},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":204,"column":133,"offset":6780},"end":{"line":204,"column":139,"offset":6786},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":204,"column":139,"offset":6786},"end":{"line":204,"column":167,"offset":6814},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":204,"column":167,"offset":6814},"end":{"line":204,"column":171,"offset":6818},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":204,"column":171,"offset":6818},"end":{"line":205,"column":1,"offset":6820},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":205,"column":1,"offset":6820},"end":{"line":205,"column":5,"offset":6824},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":205,"column":5,"offset":6824},"end":{"line":206,"column":1,"offset":6825},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":206,"column":1,"offset":6825},"end":{"line":206,"column":5,"offset":6829},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":206,"column":5,"offset":6829},"end":{"line":208,"column":1,"offset":6849},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":208,"column":1,"offset":6849},"end":{"line":208,"column":5,"offset":6853},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":208,"column":5,"offset":6853},"end":{"line":209,"column":6,"offset":6859},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":209,"column":6,"offset":6859},"end":{"line":209,"column":12,"offset":6865},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":209,"column":12,"offset":6865},"end":{"line":209,"column":30,"offset":6883},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":209,"column":30,"offset":6883},"end":{"line":209,"column":36,"offset":6889},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":209,"column":36,"offset":6889},"end":{"line":209,"column":62,"offset":6915},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":209,"column":62,"offset":6915},"end":{"line":209,"column":75,"offset":6928},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":209,"column":75,"offset":6928},"end":{"line":209,"column":159,"offset":7012},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":6287},"end":{"line":209,"column":159,"offset":7012},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":211,"column":8,"offset":7021},"end":{"line":211,"column":41,"offset":7054},"indent":[]}}],"position":{"start":{"line":211,"column":1,"offset":7014},"end":{"line":211,"column":41,"offset":7054},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":212,"column":1,"offset":7055},"end":{"line":217,"column":4,"offset":7130},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":218,"column":1,"offset":7131},"end":{"line":219,"column":1,"offset":7150},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":219,"column":1,"offset":7150},"end":{"line":219,"column":5,"offset":7154},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":219,"column":5,"offset":7154},"end":{"line":221,"column":5,"offset":7292},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":221,"column":5,"offset":7292},"end":{"line":221,"column":9,"offset":7296},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":221,"column":9,"offset":7296},"end":{"line":222,"column":5,"offset":7301},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":222,"column":5,"offset":7301},"end":{"line":222,"column":27,"offset":7323},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":222,"column":27,"offset":7323},"end":{"line":223,"column":5,"offset":7328},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":223,"column":5,"offset":7328},"end":{"line":223,"column":9,"offset":7332},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":223,"column":9,"offset":7332},"end":{"line":224,"column":5,"offset":7337},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":224,"column":5,"offset":7337},"end":{"line":224,"column":12,"offset":7344},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":224,"column":12,"offset":7344},"end":{"line":224,"column":17,"offset":7349},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":224,"column":17,"offset":7349},"end":{"line":224,"column":25,"offset":7357},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":224,"column":25,"offset":7357},"end":{"line":224,"column":63,"offset":7395},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":224,"column":63,"offset":7395},"end":{"line":224,"column":66,"offset":7398},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":224,"column":66,"offset":7398},"end":{"line":224,"column":86,"offset":7418},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":224,"column":86,"offset":7418},"end":{"line":224,"column":89,"offset":7421},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":224,"column":89,"offset":7421},"end":{"line":224,"column":110,"offset":7442},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":224,"column":110,"offset":7442},"end":{"line":224,"column":119,"offset":7451},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":224,"column":119,"offset":7451},"end":{"line":225,"column":1,"offset":7453},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":225,"column":1,"offset":7453},"end":{"line":225,"column":5,"offset":7457},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":225,"column":5,"offset":7457},"end":{"line":227,"column":1,"offset":7473},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":227,"column":1,"offset":7473},"end":{"line":227,"column":5,"offset":7477},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":227,"column":5,"offset":7477},"end":{"line":229,"column":5,"offset":7584},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":229,"column":5,"offset":7584},"end":{"line":229,"column":9,"offset":7588},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":229,"column":9,"offset":7588},"end":{"line":230,"column":1,"offset":7589},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":230,"column":1,"offset":7589},"end":{"line":230,"column":23,"offset":7611},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":230,"column":23,"offset":7611},"end":{"line":230,"column":35,"offset":7623},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":230,"column":35,"offset":7623},"end":{"line":230,"column":61,"offset":7649},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":230,"column":61,"offset":7649},"end":{"line":231,"column":1,"offset":7650},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":231,"column":1,"offset":7650},"end":{"line":231,"column":5,"offset":7654},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":231,"column":5,"offset":7654},"end":{"line":232,"column":5,"offset":7659},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":232,"column":5,"offset":7659},"end":{"line":232,"column":8,"offset":7662},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":232,"column":8,"offset":7662},"end":{"line":232,"column":58,"offset":7712},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":7131},"end":{"line":232,"column":58,"offset":7712},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":234,"column":1,"offset":7714},"end":{"line":235,"column":1,"offset":7732},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":235,"column":1,"offset":7732},"end":{"line":235,"column":5,"offset":7736},"indent":[]}}],"position":{"start":{"line":234,"column":1,"offset":7714},"end":{"line":235,"column":5,"offset":7736},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":236,"column":1,"offset":7737},"end":{"line":238,"column":4,"offset":7767},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":239,"column":1,"offset":7768},"end":{"line":239,"column":13,"offset":7780},"indent":[]}}],"position":{"start":{"line":239,"column":1,"offset":7768},"end":{"line":239,"column":13,"offset":7780},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":240,"column":1,"offset":7781},"end":{"line":246,"column":4,"offset":7860},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":247,"column":1,"offset":7861},"end":{"line":247,"column":8,"offset":7868},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":7861},"end":{"line":247,"column":8,"offset":7868},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":248,"column":1,"offset":7869},"end":{"line":255,"column":4,"offset":7993},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":256,"column":1,"offset":7994},"end":{"line":257,"column":5,"offset":8003},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":259,"column":1,"offset":8005},"end":{"line":259,"column":11,"offset":8015},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":259,"column":11,"offset":8015},"end":{"line":259,"column":24,"offset":8028},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":259,"column":24,"offset":8028},"end":{"line":259,"column":107,"offset":8111},"indent":[]}}],"position":{"start":{"line":259,"column":1,"offset":8005},"end":{"line":259,"column":107,"offset":8111},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":261,"column":7,"offset":8119},"end":{"line":261,"column":10,"offset":8122},"indent":[]}}],"position":{"start":{"line":261,"column":1,"offset":8113},"end":{"line":261,"column":10,"offset":8122},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":262,"column":7,"offset":8129},"end":{"line":262,"column":10,"offset":8132},"indent":[]}}],"position":{"start":{"line":262,"column":1,"offset":8123},"end":{"line":262,"column":10,"offset":8132},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":264,"column":6,"offset":8139},"end":{"line":264,"column":10,"offset":8143},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":8134},"end":{"line":264,"column":10,"offset":8143},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":265,"column":7,"offset":8150},"end":{"line":265,"column":13,"offset":8156},"indent":[]}}],"position":{"start":{"line":265,"column":1,"offset":8144},"end":{"line":265,"column":13,"offset":8156},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":266,"column":1,"offset":8157},"end":{"line":266,"column":49,"offset":8205},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":266,"column":49,"offset":8205},"end":{"line":266,"column":57,"offset":8213},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":266,"column":57,"offset":8213},"end":{"line":266,"column":133,"offset":8289},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":8157},"end":{"line":266,"column":133,"offset":8289},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":267,"column":1,"offset":8290},"end":{"line":277,"column":4,"offset":8485},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":278,"column":1,"offset":8486},"end":{"line":278,"column":5,"offset":8490},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":281,"column":1,"offset":8493},"end":{"line":282,"column":1,"offset":8575},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":282,"column":1,"offset":8575},"end":{"line":282,"column":5,"offset":8579},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":282,"column":5,"offset":8579},"end":{"line":283,"column":1,"offset":8580},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":283,"column":1,"offset":8580},"end":{"line":283,"column":5,"offset":8584},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":283,"column":5,"offset":8584},"end":{"line":284,"column":26,"offset":8610},"indent":[1]}}],"position":{"start":{"line":281,"column":1,"offset":8493},"end":{"line":284,"column":26,"offset":8610},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":285,"column":1,"offset":8611},"end":{"line":290,"column":4,"offset":8739},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":291,"column":1,"offset":8740},"end":{"line":291,"column":14,"offset":8753},"indent":[]}}],"position":{"start":{"line":291,"column":1,"offset":8740},"end":{"line":291,"column":14,"offset":8753},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":293,"column":1,"offset":8755},"end":{"line":306,"column":4,"offset":9037},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":308,"column":1,"offset":9039},"end":{"line":309,"column":5,"offset":9048},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":312,"column":7,"offset":9057},"end":{"line":312,"column":13,"offset":9063},"indent":[]}}],"position":{"start":{"line":312,"column":1,"offset":9051},"end":{"line":312,"column":13,"offset":9063},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":312,"column":13,"offset":9063}}}}