{"expireTime":9007200842157843000,"key":"transformer-remark-markdown-html-ast-72fde3c2c0e393c642b35fc7b4febb9e-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":7,"column":6,"offset":402},"end":{"line":7,"column":14,"offset":410}}}],"position":{"start":{"line":7,"column":1,"offset":397},"end":{"line":7,"column":14,"offset":410}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":8,"column":7,"offset":417},"end":{"line":8,"column":10,"offset":420}}}],"position":{"start":{"line":8,"column":1,"offset":411},"end":{"line":8,"column":10,"offset":420}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":10,"column":8,"offset":429},"end":{"line":10,"column":30,"offset":451}}}],"position":{"start":{"line":10,"column":1,"offset":422},"end":{"line":10,"column":30,"offset":451}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":12,"column":1,"offset":453},"end":{"line":13,"column":1,"offset":597}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":597},"end":{"line":13,"column":5,"offset":601}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":13,"column":5,"offset":601},"end":{"line":13,"column":16,"offset":612}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":16,"offset":612},"end":{"line":13,"column":20,"offset":616}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":13,"column":20,"offset":616},"end":{"line":15,"column":1,"offset":760}}},{"type":"raw","value":"<br>","position":{"start":{"line":15,"column":1,"offset":760},"end":{"line":15,"column":5,"offset":764}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":15,"column":5,"offset":764},"end":{"line":15,"column":16,"offset":775}}},{"type":"raw","value":"<br>","position":{"start":{"line":15,"column":16,"offset":775},"end":{"line":15,"column":20,"offset":779}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":15,"column":20,"offset":779},"end":{"line":16,"column":45,"offset":824}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":45,"offset":824},"end":{"line":16,"column":49,"offset":828}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":16,"column":49,"offset":828},"end":{"line":16,"column":65,"offset":844}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":65,"offset":844},"end":{"line":16,"column":69,"offset":848}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":16,"column":69,"offset":848},"end":{"line":18,"column":1,"offset":891}}},{"type":"raw","value":"<br>","position":{"start":{"line":18,"column":1,"offset":891},"end":{"line":18,"column":5,"offset":895}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":18,"column":5,"offset":895},"end":{"line":18,"column":22,"offset":912}}},{"type":"raw","value":"<br>","position":{"start":{"line":18,"column":22,"offset":912},"end":{"line":18,"column":26,"offset":916}}},{"type":"text","value":"\n","position":{"start":{"line":18,"column":26,"offset":916},"end":{"line":19,"column":1,"offset":917}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":917},"end":{"line":19,"column":5,"offset":921}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. Scheme takes the arguments and then computes the functions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":19,"column":5,"offset":921},"end":{"line":21,"column":1,"offset":1156}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":21,"column":1,"offset":1156},"end":{"line":21,"column":12,"offset":1167}}},{"type":"text","value":" is a function and not a primitive value, so it calls ","position":{"start":{"line":21,"column":12,"offset":1167},"end":{"line":21,"column":66,"offset":1221}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":21,"column":66,"offset":1221},"end":{"line":21,"column":77,"offset":1232}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":21,"column":77,"offset":1232},"end":{"line":21,"column":104,"offset":1259}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":21,"column":104,"offset":1259},"end":{"line":21,"column":107,"offset":1262}}},{"type":"text","value":" is now 7 and it has 2 primitive values, meaning it can calculate the ","position":{"start":{"line":21,"column":107,"offset":1262},"end":{"line":21,"column":177,"offset":1332}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":21,"column":177,"offset":1332},"end":{"line":21,"column":180,"offset":1335}}},{"type":"text","value":" to get 3.","position":{"start":{"line":21,"column":180,"offset":1335},"end":{"line":21,"column":190,"offset":1345}}}],"position":{"start":{"line":12,"column":1,"offset":453},"end":{"line":21,"column":190,"offset":1345}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":23,"column":8,"offset":1354},"end":{"line":23,"column":14,"offset":1360}}}],"position":{"start":{"line":23,"column":1,"offset":1347},"end":{"line":23,"column":14,"offset":1360}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":24,"column":1,"offset":1361},"end":{"line":24,"column":9,"offset":1369}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":24,"column":9,"offset":1369},"end":{"line":24,"column":73,"offset":1433}}}],"position":{"start":{"line":24,"column":1,"offset":1361},"end":{"line":24,"column":73,"offset":1433}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":25,"column":1,"offset":1434},"end":{"line":28,"column":4,"offset":1473}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":29,"column":1,"offset":1474},"end":{"line":29,"column":5,"offset":1478}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":31,"column":1,"offset":1480},"end":{"line":31,"column":72,"offset":1551}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":31,"column":72,"offset":1551},"end":{"line":31,"column":80,"offset":1559}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":31,"column":80,"offset":1559},"end":{"line":32,"column":1,"offset":1583}}},{"type":"raw","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1583},"end":{"line":32,"column":5,"offset":1587}}},{"type":"text","value":"\n","position":{"start":{"line":32,"column":5,"offset":1587},"end":{"line":33,"column":1,"offset":1588}}},{"type":"raw","value":"<br>","position":{"start":{"line":33,"column":1,"offset":1588},"end":{"line":33,"column":5,"offset":1592}}},{"type":"text","value":"\nThe first argument’s first argument is a symbol (square) that will be the name of the procedure. The rest of the arguments are arguments for that procedure in this case ","position":{"start":{"line":33,"column":5,"offset":1592},"end":{"line":34,"column":170,"offset":1762}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":34,"column":170,"offset":1762},"end":{"line":34,"column":173,"offset":1765}}},{"type":"text","value":".\n","position":{"start":{"line":34,"column":173,"offset":1765},"end":{"line":35,"column":1,"offset":1768}}},{"type":"raw","value":"<br>","position":{"start":{"line":35,"column":1,"offset":1768},"end":{"line":35,"column":5,"offset":1772}}},{"type":"text","value":"\n","position":{"start":{"line":35,"column":5,"offset":1772},"end":{"line":36,"column":1,"offset":1773}}},{"type":"raw","value":"<br>","position":{"start":{"line":36,"column":1,"offset":1773},"end":{"line":36,"column":5,"offset":1777}}},{"type":"text","value":"\nThe second argument that define takes in is the function that the procedure will call ","position":{"start":{"line":36,"column":5,"offset":1777},"end":{"line":37,"column":87,"offset":1864}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":37,"column":87,"offset":1864},"end":{"line":37,"column":96,"offset":1873}}},{"type":"text","value":". ","position":{"start":{"line":37,"column":96,"offset":1873},"end":{"line":37,"column":98,"offset":1875}}}],"position":{"start":{"line":31,"column":1,"offset":1480},"end":{"line":37,"column":98,"offset":1875}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":39,"column":1,"offset":1877},"end":{"line":39,"column":6,"offset":1882}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:","position":{"start":{"line":41,"column":1,"offset":1884},"end":{"line":41,"column":44,"offset":1927}}}],"position":{"start":{"line":41,"column":1,"offset":1884},"end":{"line":41,"column":44,"offset":1927}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    (define pi 3.14159)</code></pre></div>","position":{"start":{"line":42,"column":1,"offset":1928},"end":{"line":44,"column":4,"offset":1959}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":45,"column":1,"offset":1960},"end":{"line":45,"column":5,"offset":1964}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no function needs to be called for the second argument.","position":{"start":{"line":47,"column":1,"offset":1966},"end":{"line":47,"column":146,"offset":2111}}}],"position":{"start":{"line":47,"column":1,"offset":1966},"end":{"line":47,"column":146,"offset":2111}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":49,"column":7,"offset":2119},"end":{"line":49,"column":10,"offset":2122}}}],"position":{"start":{"line":49,"column":1,"offset":2113},"end":{"line":49,"column":10,"offset":2122}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":50,"column":7,"offset":2129},"end":{"line":50,"column":10,"offset":2132}}}],"position":{"start":{"line":50,"column":1,"offset":2123},"end":{"line":50,"column":10,"offset":2132}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":51,"column":7,"offset":2139},"end":{"line":51,"column":10,"offset":2142}}}],"position":{"start":{"line":51,"column":1,"offset":2133},"end":{"line":51,"column":10,"offset":2142}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"BOOK","position":{"start":{"line":52,"column":6,"offset":2148},"end":{"line":52,"column":10,"offset":2152}}}],"position":{"start":{"line":52,"column":1,"offset":2143},"end":{"line":52,"column":10,"offset":2152}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1","position":{"start":{"line":53,"column":7,"offset":2159},"end":{"line":53,"column":10,"offset":2162}}}],"position":{"start":{"line":53,"column":1,"offset":2153},"end":{"line":53,"column":10,"offset":2162}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":54,"column":7,"offset":2169},"end":{"line":54,"column":10,"offset":2172}}}],"position":{"start":{"line":54,"column":1,"offset":2163},"end":{"line":54,"column":10,"offset":2172}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":55,"column":7,"offset":2179},"end":{"line":55,"column":10,"offset":2182}}}],"position":{"start":{"line":55,"column":1,"offset":2173},"end":{"line":55,"column":10,"offset":2182}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":56,"column":6,"offset":2188},"end":{"line":56,"column":10,"offset":2192}}}],"position":{"start":{"line":56,"column":1,"offset":2183},"end":{"line":56,"column":10,"offset":2192}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1","position":{"start":{"line":57,"column":7,"offset":2199},"end":{"line":57,"column":12,"offset":2204}}}],"position":{"start":{"line":57,"column":1,"offset":2193},"end":{"line":57,"column":13,"offset":2205}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 2","position":{"start":{"line":58,"column":7,"offset":2212},"end":{"line":58,"column":12,"offset":2217}}}],"position":{"start":{"line":58,"column":1,"offset":2206},"end":{"line":58,"column":13,"offset":2218}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":58,"column":13,"offset":2218}}}}