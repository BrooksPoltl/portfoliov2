{"expireTime":9007200868482546000,"key":"transformer-remark-markdown-html-6fb631bf2989acfe1a0f4c7105b0752b-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":"<p>This article is a part of a series where I go through <a href=\"https://teachyourselfcs.com/\">teachyourselfcs</a>.\nIf you would like to start at the beginning start <a href=\"https://bpp.dev/articles/teachyourselfcs/programming/00-getting-started/\">here</a>.</p>\n<h4>LECTURES</h4>\n<h5>L5</h5>\n<p>Assembly language below high level language (MIPS)\n<br>\nAssebler turns assembly code into machine code\n<br>\njob of cpu: execute lost of instructions (primitive operations that the cpu can execute)\n<br>\nExample instruction set architectures:\n<br></p>\n<ul>\n<li>ARM</li>\n<li>x86</li>\n<li>mips</li>\n<li>risc-v</li>\n<li>ibm/motorola powerPC</li>\n<li>intel IA64</li>\n</ul>\n<br>\n<p>Assembly Variables: Registers\n<br>\nsince registers are in hardware there is a limited number, 32 registers in MIPS</p>\n<br>\n<p>32 bits in a register, groups of 32 bits called a word in mips.</p>\n<p>Number refererences: ($0, $1, $2)\n<br>\nor\n<br>\nname references: ($s0-$s7, $t0-$t7) c variables and temporary variables (preffered because easier to debug)\n<br>\n<br>\nadd in assembly\n<br>\n<code class=\"language-text\">add $s0, $s1, $s2</code> = <code class=\"language-text\">a = b + c</code>\n<br></p>\n<p>subtract in assembly\n<br>\n<code class=\"language-text\">sub $s3, $s4, $s5</code> = <code class=\"language-text\">d = e - f</code>\n<br></p>\n<p>how to do a = b + c + d - e;</p>\n<h5>L6</h5>\n<h5>L7</h5>\n<h5>L8</h5>\n<h4>LABS</h4>\n<h5>LAB 2</h5>\n<h5>LAB 3</h5>\n<h4>HW 1</h4>\n<h4>HW 2</h4>\n<h4>READINGS</h4>\n<h5>2.1</h5>\n<h5>2.2</h5>\n<h5>2.3</h5>\n<h5>2.5</h5>\n<h5>2.6</h5>\n<h5>2.7</h5>\n<h5>2.8</h5>\n<h5>2.9</h5>\n<h5>2.10</h5>\n<h5>2.12</h5>\n<h5>A.1-A.4</h5>\n<h5>A.6</h5>"}