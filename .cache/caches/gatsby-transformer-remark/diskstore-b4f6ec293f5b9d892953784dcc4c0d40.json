{"expireTime":9007200842248627000,"key":"transformer-remark-markdown-ast-26d0a53fd340efd6795e8b370a05fb04-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632},"indent":[]}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities. \n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705},"indent":[]}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":18,"column":76,"offset":781},"indent":[1]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":18,"column":76,"offset":781},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":19,"column":7,"offset":788},"end":{"line":19,"column":10,"offset":791},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":10,"offset":791},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":20,"column":7,"offset":798},"end":{"line":20,"column":10,"offset":801},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":792},"end":{"line":20,"column":10,"offset":801},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":22,"column":6,"offset":808},"end":{"line":22,"column":14,"offset":816},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":803},"end":{"line":22,"column":14,"offset":816},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":23,"column":7,"offset":823},"end":{"line":23,"column":10,"offset":826},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":817},"end":{"line":23,"column":10,"offset":826},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":25,"column":8,"offset":835},"end":{"line":25,"column":30,"offset":857},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":828},"end":{"line":25,"column":30,"offset":857},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":27,"column":1,"offset":859},"end":{"line":28,"column":1,"offset":1003},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":1,"offset":1003},"end":{"line":28,"column":5,"offset":1007},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":28,"column":5,"offset":1007},"end":{"line":28,"column":16,"offset":1018},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":16,"offset":1018},"end":{"line":28,"column":20,"offset":1022},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":28,"column":20,"offset":1022},"end":{"line":30,"column":1,"offset":1166},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":30,"column":1,"offset":1166},"end":{"line":30,"column":5,"offset":1170},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":30,"column":5,"offset":1170},"end":{"line":30,"column":16,"offset":1181},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":30,"column":16,"offset":1181},"end":{"line":30,"column":20,"offset":1185},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":30,"column":20,"offset":1185},"end":{"line":31,"column":45,"offset":1230},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":45,"offset":1230},"end":{"line":31,"column":49,"offset":1234},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":31,"column":49,"offset":1234},"end":{"line":31,"column":65,"offset":1250},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":65,"offset":1250},"end":{"line":31,"column":69,"offset":1254},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":31,"column":69,"offset":1254},"end":{"line":33,"column":1,"offset":1297},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":33,"column":1,"offset":1297},"end":{"line":33,"column":5,"offset":1301},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":33,"column":5,"offset":1301},"end":{"line":33,"column":22,"offset":1318},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":33,"column":22,"offset":1318},"end":{"line":33,"column":26,"offset":1322},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":33,"column":26,"offset":1322},"end":{"line":34,"column":1,"offset":1323},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1323},"end":{"line":34,"column":5,"offset":1327},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":34,"column":5,"offset":1327},"end":{"line":36,"column":1,"offset":1445},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":36,"column":1,"offset":1445},"end":{"line":36,"column":5,"offset":1449},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":36,"column":5,"offset":1449},"end":{"line":38,"column":1,"offset":1570},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":38,"column":1,"offset":1570},"end":{"line":38,"column":12,"offset":1581},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":38,"column":12,"offset":1581},"end":{"line":38,"column":68,"offset":1637},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":38,"column":68,"offset":1637},"end":{"line":38,"column":79,"offset":1648},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":38,"column":79,"offset":1648},"end":{"line":38,"column":106,"offset":1675},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":38,"column":106,"offset":1675},"end":{"line":38,"column":109,"offset":1678},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":38,"column":109,"offset":1678},"end":{"line":38,"column":189,"offset":1758},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":38,"column":189,"offset":1758},"end":{"line":38,"column":192,"offset":1761},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":38,"column":192,"offset":1761},"end":{"line":38,"column":202,"offset":1771},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":859},"end":{"line":38,"column":202,"offset":1771},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":40,"column":8,"offset":1780},"end":{"line":40,"column":14,"offset":1786},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1773},"end":{"line":40,"column":14,"offset":1786},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":41,"column":1,"offset":1787},"end":{"line":41,"column":9,"offset":1795},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":41,"column":9,"offset":1795},"end":{"line":41,"column":73,"offset":1859},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1787},"end":{"line":41,"column":73,"offset":1859},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":42,"column":1,"offset":1860},"end":{"line":45,"column":4,"offset":1899},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":46,"column":1,"offset":1900},"end":{"line":46,"column":5,"offset":1904},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":48,"column":1,"offset":1906},"end":{"line":48,"column":72,"offset":1977},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":48,"column":72,"offset":1977},"end":{"line":48,"column":80,"offset":1985},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":48,"column":80,"offset":1985},"end":{"line":49,"column":1,"offset":2009},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":49,"column":1,"offset":2009},"end":{"line":49,"column":5,"offset":2013},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":49,"column":5,"offset":2013},"end":{"line":50,"column":1,"offset":2014},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":50,"column":1,"offset":2014},"end":{"line":50,"column":5,"offset":2018},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":50,"column":5,"offset":2018},"end":{"line":51,"column":184,"offset":2202},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":51,"column":184,"offset":2202},"end":{"line":51,"column":187,"offset":2205},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":51,"column":187,"offset":2205},"end":{"line":52,"column":1,"offset":2208},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":52,"column":1,"offset":2208},"end":{"line":52,"column":5,"offset":2212},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":52,"column":5,"offset":2212},"end":{"line":53,"column":1,"offset":2213},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":53,"column":1,"offset":2213},"end":{"line":53,"column":5,"offset":2217},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":53,"column":5,"offset":2217},"end":{"line":54,"column":27,"offset":2244},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":54,"column":27,"offset":2244},"end":{"line":54,"column":35,"offset":2252},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":54,"column":35,"offset":2252},"end":{"line":54,"column":86,"offset":2303},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":54,"column":86,"offset":2303},"end":{"line":54,"column":95,"offset":2312},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":54,"column":95,"offset":2312},"end":{"line":54,"column":97,"offset":2314},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1906},"end":{"line":54,"column":97,"offset":2314},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":56,"column":1,"offset":2316},"end":{"line":56,"column":6,"offset":2321},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":58,"column":1,"offset":2323},"end":{"line":59,"column":1,"offset":2367},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":59,"column":1,"offset":2367},"end":{"line":59,"column":5,"offset":2371},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":59,"column":5,"offset":2371},"end":{"line":60,"column":1,"offset":2372},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":60,"column":1,"offset":2372},"end":{"line":60,"column":22,"offset":2393},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":60,"column":22,"offset":2393},"end":{"line":61,"column":1,"offset":2394},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":61,"column":1,"offset":2394},"end":{"line":61,"column":5,"offset":2398},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":2323},"end":{"line":61,"column":5,"offset":2398},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":63,"column":1,"offset":2400},"end":{"line":63,"column":152,"offset":2551},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":2400},"end":{"line":63,"column":152,"offset":2551},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":65,"column":8,"offset":2560},"end":{"line":65,"column":20,"offset":2572},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":2553},"end":{"line":65,"column":20,"offset":2572},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":67,"column":1,"offset":2574},"end":{"line":67,"column":56,"offset":2629},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":2574},"end":{"line":67,"column":56,"offset":2629},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":68,"column":1,"offset":2630},"end":{"line":73,"column":4,"offset":2721},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":74,"column":1,"offset":2722},"end":{"line":74,"column":5,"offset":2726},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":76,"column":1,"offset":2728},"end":{"line":76,"column":37,"offset":2764},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":76,"column":37,"offset":2764},"end":{"line":76,"column":41,"offset":2768},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":76,"column":41,"offset":2768},"end":{"line":77,"column":1,"offset":2785},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":77,"column":1,"offset":2785},"end":{"line":77,"column":5,"offset":2789},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":77,"column":5,"offset":2789},"end":{"line":78,"column":1,"offset":2790},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2790},"end":{"line":78,"column":5,"offset":2794},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":78,"column":5,"offset":2794},"end":{"line":79,"column":66,"offset":2860},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":79,"column":66,"offset":2860},"end":{"line":79,"column":89,"offset":2883},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":79,"column":89,"offset":2883},"end":{"line":80,"column":1,"offset":2923},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":80,"column":1,"offset":2923},"end":{"line":80,"column":5,"offset":2927},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":80,"column":5,"offset":2927},"end":{"line":81,"column":1,"offset":2928},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":81,"column":1,"offset":2928},"end":{"line":81,"column":5,"offset":2932},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":81,"column":5,"offset":2932},"end":{"line":82,"column":21,"offset":2953},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":82,"column":21,"offset":2953},"end":{"line":82,"column":25,"offset":2957},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":82,"column":25,"offset":2957},"end":{"line":83,"column":1,"offset":3011},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":83,"column":1,"offset":3011},"end":{"line":83,"column":5,"offset":3015},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":83,"column":5,"offset":3015},"end":{"line":84,"column":1,"offset":3016},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":84,"column":1,"offset":3016},"end":{"line":84,"column":5,"offset":3020},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":84,"column":5,"offset":3020},"end":{"line":85,"column":21,"offset":3041},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":85,"column":21,"offset":3041},"end":{"line":85,"column":25,"offset":3045},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":85,"column":25,"offset":3045},"end":{"line":86,"column":1,"offset":3100},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":86,"column":1,"offset":3100},"end":{"line":86,"column":5,"offset":3104},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":86,"column":5,"offset":3104},"end":{"line":87,"column":1,"offset":3105},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":87,"column":1,"offset":3105},"end":{"line":87,"column":5,"offset":3109},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":87,"column":5,"offset":3109},"end":{"line":88,"column":58,"offset":3167},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":88,"column":58,"offset":3167},"end":{"line":88,"column":61,"offset":3170},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":88,"column":61,"offset":3170},"end":{"line":88,"column":145,"offset":3254},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":88,"column":145,"offset":3254},"end":{"line":88,"column":153,"offset":3262},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":88,"column":153,"offset":3262},"end":{"line":88,"column":178,"offset":3287},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":2728},"end":{"line":88,"column":178,"offset":3287},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":90,"column":7,"offset":3295},"end":{"line":90,"column":10,"offset":3298},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":3289},"end":{"line":90,"column":10,"offset":3298},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":92,"column":8,"offset":3307},"end":{"line":92,"column":17,"offset":3316},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":3300},"end":{"line":92,"column":17,"offset":3316},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":93,"column":1,"offset":3317},"end":{"line":104,"column":4,"offset":3516},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":105,"column":1,"offset":3517},"end":{"line":105,"column":5,"offset":3521},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":107,"column":1,"offset":3523},"end":{"line":108,"column":1,"offset":3739},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":108,"column":1,"offset":3739},"end":{"line":108,"column":5,"offset":3743},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":108,"column":5,"offset":3743},"end":{"line":109,"column":1,"offset":3744},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":109,"column":1,"offset":3744},"end":{"line":109,"column":5,"offset":3748},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":109,"column":5,"offset":3748},"end":{"line":110,"column":72,"offset":3820},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":110,"column":72,"offset":3820},"end":{"line":110,"column":81,"offset":3829},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":110,"column":81,"offset":3829},"end":{"line":111,"column":1,"offset":3848},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":111,"column":1,"offset":3848},"end":{"line":111,"column":5,"offset":3852},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":111,"column":5,"offset":3852},"end":{"line":112,"column":1,"offset":3853},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":112,"column":1,"offset":3853},"end":{"line":112,"column":5,"offset":3857},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":112,"column":5,"offset":3857},"end":{"line":113,"column":10,"offset":3867},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":113,"column":10,"offset":3867},"end":{"line":113,"column":16,"offset":3873},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":113,"column":16,"offset":3873},"end":{"line":113,"column":34,"offset":3891},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":113,"column":34,"offset":3891},"end":{"line":113,"column":42,"offset":3899},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":113,"column":42,"offset":3899},"end":{"line":114,"column":24,"offset":3924},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":114,"column":24,"offset":3924},"end":{"line":114,"column":33,"offset":3933},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":114,"column":33,"offset":3933},"end":{"line":114,"column":107,"offset":4007},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":114,"column":107,"offset":4007},"end":{"line":114,"column":116,"offset":4016},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":114,"column":116,"offset":4016},"end":{"line":114,"column":134,"offset":4034},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":114,"column":134,"offset":4034},"end":{"line":114,"column":137,"offset":4037},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":114,"column":137,"offset":4037},"end":{"line":114,"column":161,"offset":4061},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":114,"column":161,"offset":4061},"end":{"line":114,"column":167,"offset":4067},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":114,"column":167,"offset":4067},"end":{"line":114,"column":192,"offset":4092},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":114,"column":192,"offset":4092},"end":{"line":114,"column":200,"offset":4100},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":114,"column":200,"offset":4100},"end":{"line":114,"column":218,"offset":4118},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":114,"column":218,"offset":4118},"end":{"line":114,"column":224,"offset":4124},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":114,"column":224,"offset":4124},"end":{"line":114,"column":245,"offset":4145},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":114,"column":245,"offset":4145},"end":{"line":114,"column":252,"offset":4152},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":114,"column":252,"offset":4152},"end":{"line":114,"column":257,"offset":4157},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":114,"column":257,"offset":4157},"end":{"line":114,"column":260,"offset":4160},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":114,"column":260,"offset":4160},"end":{"line":114,"column":285,"offset":4185},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":114,"column":285,"offset":4185},"end":{"line":114,"column":291,"offset":4191},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":114,"column":291,"offset":4191},"end":{"line":115,"column":96,"offset":4317},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":115,"column":96,"offset":4317},"end":{"line":115,"column":111,"offset":4332},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":115,"column":111,"offset":4332},"end":{"line":115,"column":182,"offset":4403},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":3523},"end":{"line":115,"column":182,"offset":4403},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":117,"column":8,"offset":4412},"end":{"line":117,"column":19,"offset":4423},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":4405},"end":{"line":117,"column":19,"offset":4423},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":118,"column":1,"offset":4424},"end":{"line":118,"column":14,"offset":4437},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":4424},"end":{"line":118,"column":14,"offset":4437},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":119,"column":1,"offset":4438},"end":{"line":134,"column":4,"offset":4853},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":135,"column":1,"offset":4854},"end":{"line":135,"column":5,"offset":4858},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":137,"column":1,"offset":4860},"end":{"line":137,"column":141,"offset":5000},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":4860},"end":{"line":137,"column":141,"offset":5000},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":139,"column":8,"offset":5009},"end":{"line":139,"column":30,"offset":5031},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":5002},"end":{"line":139,"column":30,"offset":5031},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":140,"column":1,"offset":5032},"end":{"line":140,"column":199,"offset":5230},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":5032},"end":{"line":140,"column":199,"offset":5230},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":142,"column":8,"offset":5239},"end":{"line":142,"column":30,"offset":5261},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":5232},"end":{"line":142,"column":30,"offset":5261},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":144,"column":1,"offset":5263},"end":{"line":145,"column":1,"offset":5338},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":145,"column":1,"offset":5338},"end":{"line":145,"column":5,"offset":5342},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":145,"column":5,"offset":5342},"end":{"line":146,"column":1,"offset":5343},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":146,"column":1,"offset":5343},"end":{"line":146,"column":5,"offset":5347},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":146,"column":5,"offset":5347},"end":{"line":148,"column":1,"offset":5409},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":148,"column":1,"offset":5409},"end":{"line":148,"column":5,"offset":5413},"indent":[]}},{"type":"break","position":{"start":{"line":148,"column":5,"offset":5413},"end":{"line":149,"column":1,"offset":5416},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":149,"column":1,"offset":5416},"end":{"line":149,"column":11,"offset":5426},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":149,"column":11,"offset":5426},"end":{"line":149,"column":19,"offset":5434},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":149,"column":19,"offset":5434},"end":{"line":149,"column":24,"offset":5439},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":149,"column":24,"offset":5439},"end":{"line":149,"column":34,"offset":5449},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":149,"column":34,"offset":5449},"end":{"line":150,"column":1,"offset":5498},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":150,"column":1,"offset":5498},"end":{"line":150,"column":5,"offset":5502},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":5263},"end":{"line":150,"column":5,"offset":5502},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":152,"column":8,"offset":5511},"end":{"line":152,"column":12,"offset":5515},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":5504},"end":{"line":152,"column":12,"offset":5515},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":153,"column":1,"offset":5516},"end":{"line":158,"column":4,"offset":5627},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":159,"column":1,"offset":5628},"end":{"line":160,"column":5,"offset":5637},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":162,"column":1,"offset":5639},"end":{"line":162,"column":7,"offset":5645},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":162,"column":7,"offset":5645},"end":{"line":164,"column":1,"offset":5727},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":164,"column":1,"offset":5727},"end":{"line":164,"column":5,"offset":5731},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":164,"column":5,"offset":5731},"end":{"line":165,"column":1,"offset":5732},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":165,"column":1,"offset":5732},"end":{"line":165,"column":5,"offset":5736},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":165,"column":5,"offset":5736},"end":{"line":166,"column":10,"offset":5746},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":166,"column":10,"offset":5746},"end":{"line":166,"column":14,"offset":5750},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":166,"column":14,"offset":5750},"end":{"line":166,"column":22,"offset":5758},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":166,"column":22,"offset":5758},"end":{"line":166,"column":30,"offset":5766},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":166,"column":30,"offset":5766},"end":{"line":166,"column":50,"offset":5786},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":166,"column":50,"offset":5786},"end":{"line":166,"column":53,"offset":5789},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":166,"column":53,"offset":5789},"end":{"line":166,"column":90,"offset":5826},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":166,"column":90,"offset":5826},"end":{"line":166,"column":96,"offset":5832},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":166,"column":96,"offset":5832},"end":{"line":167,"column":1,"offset":5835},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":167,"column":1,"offset":5835},"end":{"line":167,"column":5,"offset":5839},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":167,"column":5,"offset":5839},"end":{"line":168,"column":1,"offset":5840},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":168,"column":1,"offset":5840},"end":{"line":168,"column":5,"offset":5844},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":168,"column":5,"offset":5844},"end":{"line":169,"column":14,"offset":5858},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":169,"column":14,"offset":5858},"end":{"line":169,"column":18,"offset":5862},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":169,"column":18,"offset":5862},"end":{"line":169,"column":90,"offset":5934},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":169,"column":90,"offset":5934},"end":{"line":169,"column":94,"offset":5938},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":169,"column":94,"offset":5938},"end":{"line":169,"column":125,"offset":5969},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":169,"column":125,"offset":5969},"end":{"line":169,"column":131,"offset":5975},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":169,"column":131,"offset":5975},"end":{"line":170,"column":1,"offset":5990},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":170,"column":1,"offset":5990},"end":{"line":170,"column":5,"offset":5994},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":170,"column":5,"offset":5994},"end":{"line":171,"column":1,"offset":5995},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":171,"column":1,"offset":5995},"end":{"line":171,"column":5,"offset":5999},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":171,"column":5,"offset":5999},"end":{"line":172,"column":14,"offset":6013},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":172,"column":14,"offset":6013},"end":{"line":172,"column":18,"offset":6017},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":172,"column":18,"offset":6017},"end":{"line":172,"column":37,"offset":6036},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":172,"column":37,"offset":6036},"end":{"line":172,"column":40,"offset":6039},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":172,"column":40,"offset":6039},"end":{"line":172,"column":77,"offset":6076},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":172,"column":77,"offset":6076},"end":{"line":172,"column":81,"offset":6080},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":172,"column":81,"offset":6080},"end":{"line":172,"column":99,"offset":6098},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":172,"column":99,"offset":6098},"end":{"line":172,"column":102,"offset":6101},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":172,"column":102,"offset":6101},"end":{"line":172,"column":133,"offset":6132},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":172,"column":133,"offset":6132},"end":{"line":172,"column":139,"offset":6138},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":172,"column":139,"offset":6138},"end":{"line":172,"column":167,"offset":6166},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":172,"column":167,"offset":6166},"end":{"line":172,"column":171,"offset":6170},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":172,"column":171,"offset":6170},"end":{"line":173,"column":1,"offset":6172},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":173,"column":1,"offset":6172},"end":{"line":173,"column":5,"offset":6176},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":173,"column":5,"offset":6176},"end":{"line":174,"column":1,"offset":6177},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":174,"column":1,"offset":6177},"end":{"line":174,"column":5,"offset":6181},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":174,"column":5,"offset":6181},"end":{"line":176,"column":1,"offset":6201},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":176,"column":1,"offset":6201},"end":{"line":176,"column":5,"offset":6205},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":176,"column":5,"offset":6205},"end":{"line":177,"column":6,"offset":6211},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":177,"column":6,"offset":6211},"end":{"line":177,"column":12,"offset":6217},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":177,"column":12,"offset":6217},"end":{"line":177,"column":30,"offset":6235},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":177,"column":30,"offset":6235},"end":{"line":177,"column":36,"offset":6241},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":177,"column":36,"offset":6241},"end":{"line":177,"column":62,"offset":6267},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":177,"column":62,"offset":6267},"end":{"line":177,"column":75,"offset":6280},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":177,"column":75,"offset":6280},"end":{"line":177,"column":159,"offset":6364},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":5639},"end":{"line":177,"column":159,"offset":6364},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":179,"column":8,"offset":6373},"end":{"line":179,"column":41,"offset":6406},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":6366},"end":{"line":179,"column":41,"offset":6406},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":180,"column":1,"offset":6407},"end":{"line":185,"column":4,"offset":6482},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":186,"column":1,"offset":6483},"end":{"line":187,"column":1,"offset":6502},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":187,"column":1,"offset":6502},"end":{"line":187,"column":5,"offset":6506},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":187,"column":5,"offset":6506},"end":{"line":189,"column":5,"offset":6644},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":189,"column":5,"offset":6644},"end":{"line":189,"column":9,"offset":6648},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":189,"column":9,"offset":6648},"end":{"line":190,"column":5,"offset":6653},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":190,"column":5,"offset":6653},"end":{"line":190,"column":27,"offset":6675},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":190,"column":27,"offset":6675},"end":{"line":191,"column":5,"offset":6680},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":191,"column":5,"offset":6680},"end":{"line":191,"column":9,"offset":6684},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":191,"column":9,"offset":6684},"end":{"line":192,"column":5,"offset":6689},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":192,"column":5,"offset":6689},"end":{"line":192,"column":12,"offset":6696},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":192,"column":12,"offset":6696},"end":{"line":192,"column":17,"offset":6701},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":192,"column":17,"offset":6701},"end":{"line":192,"column":25,"offset":6709},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":192,"column":25,"offset":6709},"end":{"line":192,"column":63,"offset":6747},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":192,"column":63,"offset":6747},"end":{"line":192,"column":66,"offset":6750},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":192,"column":66,"offset":6750},"end":{"line":192,"column":86,"offset":6770},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":192,"column":86,"offset":6770},"end":{"line":192,"column":89,"offset":6773},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":192,"column":89,"offset":6773},"end":{"line":192,"column":110,"offset":6794},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":192,"column":110,"offset":6794},"end":{"line":192,"column":119,"offset":6803},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":192,"column":119,"offset":6803},"end":{"line":193,"column":1,"offset":6805},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":193,"column":1,"offset":6805},"end":{"line":193,"column":5,"offset":6809},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":193,"column":5,"offset":6809},"end":{"line":195,"column":1,"offset":6825},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":195,"column":1,"offset":6825},"end":{"line":195,"column":5,"offset":6829},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":195,"column":5,"offset":6829},"end":{"line":197,"column":5,"offset":6936},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":197,"column":5,"offset":6936},"end":{"line":197,"column":9,"offset":6940},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":197,"column":9,"offset":6940},"end":{"line":198,"column":1,"offset":6941},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":198,"column":1,"offset":6941},"end":{"line":198,"column":23,"offset":6963},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":198,"column":23,"offset":6963},"end":{"line":198,"column":35,"offset":6975},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":198,"column":35,"offset":6975},"end":{"line":198,"column":61,"offset":7001},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":198,"column":61,"offset":7001},"end":{"line":199,"column":1,"offset":7002},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":199,"column":1,"offset":7002},"end":{"line":199,"column":5,"offset":7006},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":199,"column":5,"offset":7006},"end":{"line":200,"column":5,"offset":7011},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":200,"column":5,"offset":7011},"end":{"line":200,"column":8,"offset":7014},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":200,"column":8,"offset":7014},"end":{"line":200,"column":58,"offset":7064},"indent":[]}}],"position":{"start":{"line":186,"column":1,"offset":6483},"end":{"line":200,"column":58,"offset":7064},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":202,"column":1,"offset":7066},"end":{"line":203,"column":1,"offset":7084},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":203,"column":1,"offset":7084},"end":{"line":203,"column":5,"offset":7088},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":7066},"end":{"line":203,"column":5,"offset":7088},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":204,"column":1,"offset":7089},"end":{"line":206,"column":4,"offset":7119},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":207,"column":1,"offset":7120},"end":{"line":207,"column":13,"offset":7132},"indent":[]}}],"position":{"start":{"line":207,"column":1,"offset":7120},"end":{"line":207,"column":13,"offset":7132},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":208,"column":1,"offset":7133},"end":{"line":214,"column":4,"offset":7212},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":215,"column":1,"offset":7213},"end":{"line":215,"column":8,"offset":7220},"indent":[]}}],"position":{"start":{"line":215,"column":1,"offset":7213},"end":{"line":215,"column":8,"offset":7220},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":216,"column":1,"offset":7221},"end":{"line":223,"column":4,"offset":7345},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":224,"column":1,"offset":7346},"end":{"line":225,"column":5,"offset":7355},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":227,"column":1,"offset":7357},"end":{"line":227,"column":11,"offset":7367},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":227,"column":11,"offset":7367},"end":{"line":227,"column":24,"offset":7380},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":227,"column":24,"offset":7380},"end":{"line":227,"column":107,"offset":7463},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":7357},"end":{"line":227,"column":107,"offset":7463},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":229,"column":7,"offset":7471},"end":{"line":229,"column":10,"offset":7474},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":7465},"end":{"line":229,"column":10,"offset":7474},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":230,"column":7,"offset":7481},"end":{"line":230,"column":10,"offset":7484},"indent":[]}}],"position":{"start":{"line":230,"column":1,"offset":7475},"end":{"line":230,"column":10,"offset":7484},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":232,"column":6,"offset":7491},"end":{"line":232,"column":10,"offset":7495},"indent":[]}}],"position":{"start":{"line":232,"column":1,"offset":7486},"end":{"line":232,"column":10,"offset":7495},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":233,"column":7,"offset":7502},"end":{"line":233,"column":13,"offset":7508},"indent":[]}}],"position":{"start":{"line":233,"column":1,"offset":7496},"end":{"line":233,"column":13,"offset":7508},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":234,"column":1,"offset":7509},"end":{"line":234,"column":49,"offset":7557},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":234,"column":49,"offset":7557},"end":{"line":234,"column":57,"offset":7565},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":234,"column":57,"offset":7565},"end":{"line":234,"column":133,"offset":7641},"indent":[]}}],"position":{"start":{"line":234,"column":1,"offset":7509},"end":{"line":234,"column":133,"offset":7641},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":235,"column":1,"offset":7642},"end":{"line":245,"column":4,"offset":7837},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":246,"column":1,"offset":7838},"end":{"line":246,"column":5,"offset":7842},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":249,"column":1,"offset":7845},"end":{"line":250,"column":1,"offset":7927},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":250,"column":1,"offset":7927},"end":{"line":250,"column":5,"offset":7931},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":250,"column":5,"offset":7931},"end":{"line":251,"column":1,"offset":7932},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":251,"column":1,"offset":7932},"end":{"line":251,"column":5,"offset":7936},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":251,"column":5,"offset":7936},"end":{"line":252,"column":26,"offset":7962},"indent":[1]}}],"position":{"start":{"line":249,"column":1,"offset":7845},"end":{"line":252,"column":26,"offset":7962},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":253,"column":1,"offset":7963},"end":{"line":258,"column":4,"offset":8091},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":259,"column":1,"offset":8092},"end":{"line":259,"column":14,"offset":8105},"indent":[]}}],"position":{"start":{"line":259,"column":1,"offset":8092},"end":{"line":259,"column":14,"offset":8105},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":261,"column":1,"offset":8107},"end":{"line":274,"column":4,"offset":8389},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":276,"column":1,"offset":8391},"end":{"line":277,"column":5,"offset":8400},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":280,"column":7,"offset":8409},"end":{"line":280,"column":13,"offset":8415},"indent":[]}}],"position":{"start":{"line":280,"column":1,"offset":8403},"end":{"line":280,"column":13,"offset":8415},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":280,"column":13,"offset":8415}}}}