{"expireTime":9007200842248802000,"key":"transformer-remark-markdown-ast-1d5f12ccd72193c3ca72bfbcb6573e5f-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632},"indent":[]}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities. \n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705},"indent":[]}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":18,"column":76,"offset":781},"indent":[1]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":18,"column":76,"offset":781},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Breaking down a expression:","position":{"start":{"line":20,"column":1,"offset":783},"end":{"line":20,"column":28,"offset":810},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":783},"end":{"line":20,"column":28,"offset":810},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":22,"column":7,"offset":818},"end":{"line":22,"column":10,"offset":821},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":812},"end":{"line":22,"column":10,"offset":821},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":23,"column":7,"offset":828},"end":{"line":23,"column":10,"offset":831},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":822},"end":{"line":23,"column":10,"offset":831},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":25,"column":6,"offset":838},"end":{"line":25,"column":14,"offset":846},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":833},"end":{"line":25,"column":14,"offset":846},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":26,"column":7,"offset":853},"end":{"line":26,"column":10,"offset":856},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":847},"end":{"line":26,"column":10,"offset":856},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":28,"column":8,"offset":865},"end":{"line":28,"column":30,"offset":887},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":858},"end":{"line":28,"column":30,"offset":887},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":30,"column":1,"offset":889},"end":{"line":31,"column":1,"offset":1033},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1033},"end":{"line":31,"column":5,"offset":1037},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":31,"column":5,"offset":1037},"end":{"line":31,"column":16,"offset":1048},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":16,"offset":1048},"end":{"line":31,"column":20,"offset":1052},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":31,"column":20,"offset":1052},"end":{"line":33,"column":1,"offset":1196},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":33,"column":1,"offset":1196},"end":{"line":33,"column":5,"offset":1200},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":33,"column":5,"offset":1200},"end":{"line":33,"column":16,"offset":1211},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":33,"column":16,"offset":1211},"end":{"line":33,"column":20,"offset":1215},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":33,"column":20,"offset":1215},"end":{"line":34,"column":45,"offset":1260},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":34,"column":45,"offset":1260},"end":{"line":34,"column":49,"offset":1264},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":34,"column":49,"offset":1264},"end":{"line":34,"column":65,"offset":1280},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":34,"column":65,"offset":1280},"end":{"line":34,"column":69,"offset":1284},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":34,"column":69,"offset":1284},"end":{"line":36,"column":1,"offset":1327},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":36,"column":1,"offset":1327},"end":{"line":36,"column":5,"offset":1331},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":36,"column":5,"offset":1331},"end":{"line":36,"column":22,"offset":1348},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":36,"column":22,"offset":1348},"end":{"line":36,"column":26,"offset":1352},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":36,"column":26,"offset":1352},"end":{"line":37,"column":1,"offset":1353},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":37,"column":1,"offset":1353},"end":{"line":37,"column":5,"offset":1357},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":37,"column":5,"offset":1357},"end":{"line":39,"column":1,"offset":1475},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":39,"column":1,"offset":1475},"end":{"line":39,"column":5,"offset":1479},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":39,"column":5,"offset":1479},"end":{"line":41,"column":1,"offset":1600},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":41,"column":1,"offset":1600},"end":{"line":41,"column":12,"offset":1611},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":41,"column":12,"offset":1611},"end":{"line":41,"column":68,"offset":1667},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":41,"column":68,"offset":1667},"end":{"line":41,"column":79,"offset":1678},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":41,"column":79,"offset":1678},"end":{"line":41,"column":106,"offset":1705},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":41,"column":106,"offset":1705},"end":{"line":41,"column":109,"offset":1708},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":41,"column":109,"offset":1708},"end":{"line":41,"column":189,"offset":1788},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":41,"column":189,"offset":1788},"end":{"line":41,"column":192,"offset":1791},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":41,"column":192,"offset":1791},"end":{"line":41,"column":202,"offset":1801},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":889},"end":{"line":41,"column":202,"offset":1801},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":43,"column":8,"offset":1810},"end":{"line":43,"column":14,"offset":1816},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1803},"end":{"line":43,"column":14,"offset":1816},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":44,"column":1,"offset":1817},"end":{"line":44,"column":9,"offset":1825},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":44,"column":9,"offset":1825},"end":{"line":44,"column":73,"offset":1889},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1817},"end":{"line":44,"column":73,"offset":1889},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":45,"column":1,"offset":1890},"end":{"line":48,"column":4,"offset":1929},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":49,"column":1,"offset":1930},"end":{"line":49,"column":5,"offset":1934},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":51,"column":1,"offset":1936},"end":{"line":51,"column":72,"offset":2007},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":51,"column":72,"offset":2007},"end":{"line":51,"column":80,"offset":2015},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":51,"column":80,"offset":2015},"end":{"line":52,"column":1,"offset":2039},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":52,"column":1,"offset":2039},"end":{"line":52,"column":5,"offset":2043},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":52,"column":5,"offset":2043},"end":{"line":53,"column":1,"offset":2044},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":53,"column":1,"offset":2044},"end":{"line":53,"column":5,"offset":2048},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":53,"column":5,"offset":2048},"end":{"line":54,"column":184,"offset":2232},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":54,"column":184,"offset":2232},"end":{"line":54,"column":187,"offset":2235},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":54,"column":187,"offset":2235},"end":{"line":55,"column":1,"offset":2238},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":55,"column":1,"offset":2238},"end":{"line":55,"column":5,"offset":2242},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":55,"column":5,"offset":2242},"end":{"line":56,"column":1,"offset":2243},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":56,"column":1,"offset":2243},"end":{"line":56,"column":5,"offset":2247},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":56,"column":5,"offset":2247},"end":{"line":57,"column":27,"offset":2274},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":57,"column":27,"offset":2274},"end":{"line":57,"column":35,"offset":2282},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":57,"column":35,"offset":2282},"end":{"line":57,"column":86,"offset":2333},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":57,"column":86,"offset":2333},"end":{"line":57,"column":95,"offset":2342},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":57,"column":95,"offset":2342},"end":{"line":57,"column":97,"offset":2344},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1936},"end":{"line":57,"column":97,"offset":2344},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":59,"column":1,"offset":2346},"end":{"line":59,"column":6,"offset":2351},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":61,"column":1,"offset":2353},"end":{"line":62,"column":1,"offset":2397},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":62,"column":1,"offset":2397},"end":{"line":62,"column":5,"offset":2401},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":62,"column":5,"offset":2401},"end":{"line":63,"column":1,"offset":2402},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":63,"column":1,"offset":2402},"end":{"line":63,"column":22,"offset":2423},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":63,"column":22,"offset":2423},"end":{"line":64,"column":1,"offset":2424},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":64,"column":1,"offset":2424},"end":{"line":64,"column":5,"offset":2428},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":2353},"end":{"line":64,"column":5,"offset":2428},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":66,"column":1,"offset":2430},"end":{"line":66,"column":152,"offset":2581},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":2430},"end":{"line":66,"column":152,"offset":2581},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":68,"column":8,"offset":2590},"end":{"line":68,"column":20,"offset":2602},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":2583},"end":{"line":68,"column":20,"offset":2602},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":70,"column":1,"offset":2604},"end":{"line":70,"column":56,"offset":2659},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":2604},"end":{"line":70,"column":56,"offset":2659},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":71,"column":1,"offset":2660},"end":{"line":76,"column":4,"offset":2751},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":77,"column":1,"offset":2752},"end":{"line":77,"column":5,"offset":2756},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":79,"column":1,"offset":2758},"end":{"line":79,"column":37,"offset":2794},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":79,"column":37,"offset":2794},"end":{"line":79,"column":41,"offset":2798},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":79,"column":41,"offset":2798},"end":{"line":80,"column":1,"offset":2815},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":80,"column":1,"offset":2815},"end":{"line":80,"column":5,"offset":2819},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":80,"column":5,"offset":2819},"end":{"line":81,"column":1,"offset":2820},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":81,"column":1,"offset":2820},"end":{"line":81,"column":5,"offset":2824},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":81,"column":5,"offset":2824},"end":{"line":82,"column":66,"offset":2890},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":82,"column":66,"offset":2890},"end":{"line":82,"column":89,"offset":2913},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":82,"column":89,"offset":2913},"end":{"line":83,"column":1,"offset":2953},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":83,"column":1,"offset":2953},"end":{"line":83,"column":5,"offset":2957},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":83,"column":5,"offset":2957},"end":{"line":84,"column":1,"offset":2958},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":84,"column":1,"offset":2958},"end":{"line":84,"column":5,"offset":2962},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":84,"column":5,"offset":2962},"end":{"line":85,"column":21,"offset":2983},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":85,"column":21,"offset":2983},"end":{"line":85,"column":25,"offset":2987},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":85,"column":25,"offset":2987},"end":{"line":86,"column":1,"offset":3041},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":86,"column":1,"offset":3041},"end":{"line":86,"column":5,"offset":3045},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":86,"column":5,"offset":3045},"end":{"line":87,"column":1,"offset":3046},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":87,"column":1,"offset":3046},"end":{"line":87,"column":5,"offset":3050},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":87,"column":5,"offset":3050},"end":{"line":88,"column":21,"offset":3071},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":88,"column":21,"offset":3071},"end":{"line":88,"column":25,"offset":3075},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":88,"column":25,"offset":3075},"end":{"line":89,"column":1,"offset":3130},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":89,"column":1,"offset":3130},"end":{"line":89,"column":5,"offset":3134},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":89,"column":5,"offset":3134},"end":{"line":90,"column":1,"offset":3135},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":90,"column":1,"offset":3135},"end":{"line":90,"column":5,"offset":3139},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":90,"column":5,"offset":3139},"end":{"line":91,"column":58,"offset":3197},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":91,"column":58,"offset":3197},"end":{"line":91,"column":61,"offset":3200},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":91,"column":61,"offset":3200},"end":{"line":91,"column":145,"offset":3284},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":91,"column":145,"offset":3284},"end":{"line":91,"column":153,"offset":3292},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":91,"column":153,"offset":3292},"end":{"line":91,"column":178,"offset":3317},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":2758},"end":{"line":91,"column":178,"offset":3317},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":93,"column":7,"offset":3325},"end":{"line":93,"column":10,"offset":3328},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":3319},"end":{"line":93,"column":10,"offset":3328},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":95,"column":8,"offset":3337},"end":{"line":95,"column":17,"offset":3346},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":3330},"end":{"line":95,"column":17,"offset":3346},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":96,"column":1,"offset":3347},"end":{"line":107,"column":4,"offset":3546},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":108,"column":1,"offset":3547},"end":{"line":108,"column":5,"offset":3551},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":110,"column":1,"offset":3553},"end":{"line":111,"column":1,"offset":3769},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":111,"column":1,"offset":3769},"end":{"line":111,"column":5,"offset":3773},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":111,"column":5,"offset":3773},"end":{"line":112,"column":1,"offset":3774},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":112,"column":1,"offset":3774},"end":{"line":112,"column":5,"offset":3778},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":112,"column":5,"offset":3778},"end":{"line":113,"column":72,"offset":3850},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":113,"column":72,"offset":3850},"end":{"line":113,"column":81,"offset":3859},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":113,"column":81,"offset":3859},"end":{"line":114,"column":1,"offset":3878},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":114,"column":1,"offset":3878},"end":{"line":114,"column":5,"offset":3882},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":114,"column":5,"offset":3882},"end":{"line":115,"column":1,"offset":3883},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":115,"column":1,"offset":3883},"end":{"line":115,"column":5,"offset":3887},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":115,"column":5,"offset":3887},"end":{"line":116,"column":10,"offset":3897},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":116,"column":10,"offset":3897},"end":{"line":116,"column":16,"offset":3903},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":116,"column":16,"offset":3903},"end":{"line":116,"column":34,"offset":3921},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":116,"column":34,"offset":3921},"end":{"line":116,"column":42,"offset":3929},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":116,"column":42,"offset":3929},"end":{"line":117,"column":24,"offset":3954},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":117,"column":24,"offset":3954},"end":{"line":117,"column":33,"offset":3963},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":117,"column":33,"offset":3963},"end":{"line":117,"column":107,"offset":4037},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":117,"column":107,"offset":4037},"end":{"line":117,"column":116,"offset":4046},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":117,"column":116,"offset":4046},"end":{"line":117,"column":134,"offset":4064},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":117,"column":134,"offset":4064},"end":{"line":117,"column":137,"offset":4067},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":117,"column":137,"offset":4067},"end":{"line":117,"column":161,"offset":4091},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":117,"column":161,"offset":4091},"end":{"line":117,"column":167,"offset":4097},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":117,"column":167,"offset":4097},"end":{"line":117,"column":192,"offset":4122},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":117,"column":192,"offset":4122},"end":{"line":117,"column":200,"offset":4130},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":117,"column":200,"offset":4130},"end":{"line":117,"column":218,"offset":4148},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":117,"column":218,"offset":4148},"end":{"line":117,"column":224,"offset":4154},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":117,"column":224,"offset":4154},"end":{"line":117,"column":245,"offset":4175},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":117,"column":245,"offset":4175},"end":{"line":117,"column":252,"offset":4182},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":117,"column":252,"offset":4182},"end":{"line":117,"column":257,"offset":4187},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":117,"column":257,"offset":4187},"end":{"line":117,"column":260,"offset":4190},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":117,"column":260,"offset":4190},"end":{"line":117,"column":285,"offset":4215},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":117,"column":285,"offset":4215},"end":{"line":117,"column":291,"offset":4221},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":117,"column":291,"offset":4221},"end":{"line":118,"column":96,"offset":4347},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":118,"column":96,"offset":4347},"end":{"line":118,"column":111,"offset":4362},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":118,"column":111,"offset":4362},"end":{"line":118,"column":182,"offset":4433},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":3553},"end":{"line":118,"column":182,"offset":4433},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":120,"column":8,"offset":4442},"end":{"line":120,"column":19,"offset":4453},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":4435},"end":{"line":120,"column":19,"offset":4453},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":121,"column":1,"offset":4454},"end":{"line":121,"column":14,"offset":4467},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":4454},"end":{"line":121,"column":14,"offset":4467},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":122,"column":1,"offset":4468},"end":{"line":137,"column":4,"offset":4883},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":138,"column":1,"offset":4884},"end":{"line":138,"column":5,"offset":4888},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":140,"column":1,"offset":4890},"end":{"line":140,"column":141,"offset":5030},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":4890},"end":{"line":140,"column":141,"offset":5030},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":142,"column":8,"offset":5039},"end":{"line":142,"column":30,"offset":5061},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":5032},"end":{"line":142,"column":30,"offset":5061},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":143,"column":1,"offset":5062},"end":{"line":143,"column":199,"offset":5260},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":5062},"end":{"line":143,"column":199,"offset":5260},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":145,"column":8,"offset":5269},"end":{"line":145,"column":30,"offset":5291},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":5262},"end":{"line":145,"column":30,"offset":5291},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":147,"column":1,"offset":5293},"end":{"line":148,"column":1,"offset":5368},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":148,"column":1,"offset":5368},"end":{"line":148,"column":5,"offset":5372},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":148,"column":5,"offset":5372},"end":{"line":149,"column":1,"offset":5373},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":149,"column":1,"offset":5373},"end":{"line":149,"column":5,"offset":5377},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":149,"column":5,"offset":5377},"end":{"line":151,"column":1,"offset":5439},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":151,"column":1,"offset":5439},"end":{"line":151,"column":5,"offset":5443},"indent":[]}},{"type":"break","position":{"start":{"line":151,"column":5,"offset":5443},"end":{"line":152,"column":1,"offset":5446},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":152,"column":1,"offset":5446},"end":{"line":152,"column":11,"offset":5456},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":152,"column":11,"offset":5456},"end":{"line":152,"column":19,"offset":5464},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":152,"column":19,"offset":5464},"end":{"line":152,"column":24,"offset":5469},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":152,"column":24,"offset":5469},"end":{"line":152,"column":34,"offset":5479},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":152,"column":34,"offset":5479},"end":{"line":153,"column":1,"offset":5528},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":153,"column":1,"offset":5528},"end":{"line":153,"column":5,"offset":5532},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":5293},"end":{"line":153,"column":5,"offset":5532},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":155,"column":8,"offset":5541},"end":{"line":155,"column":12,"offset":5545},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":5534},"end":{"line":155,"column":12,"offset":5545},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":156,"column":1,"offset":5546},"end":{"line":161,"column":4,"offset":5657},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":162,"column":1,"offset":5658},"end":{"line":163,"column":5,"offset":5667},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":165,"column":1,"offset":5669},"end":{"line":165,"column":7,"offset":5675},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":165,"column":7,"offset":5675},"end":{"line":167,"column":1,"offset":5757},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":167,"column":1,"offset":5757},"end":{"line":167,"column":5,"offset":5761},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":167,"column":5,"offset":5761},"end":{"line":168,"column":1,"offset":5762},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":168,"column":1,"offset":5762},"end":{"line":168,"column":5,"offset":5766},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":168,"column":5,"offset":5766},"end":{"line":169,"column":10,"offset":5776},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":169,"column":10,"offset":5776},"end":{"line":169,"column":14,"offset":5780},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":169,"column":14,"offset":5780},"end":{"line":169,"column":22,"offset":5788},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":169,"column":22,"offset":5788},"end":{"line":169,"column":30,"offset":5796},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":169,"column":30,"offset":5796},"end":{"line":169,"column":50,"offset":5816},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":169,"column":50,"offset":5816},"end":{"line":169,"column":53,"offset":5819},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":169,"column":53,"offset":5819},"end":{"line":169,"column":90,"offset":5856},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":169,"column":90,"offset":5856},"end":{"line":169,"column":96,"offset":5862},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":169,"column":96,"offset":5862},"end":{"line":170,"column":1,"offset":5865},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":170,"column":1,"offset":5865},"end":{"line":170,"column":5,"offset":5869},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":170,"column":5,"offset":5869},"end":{"line":171,"column":1,"offset":5870},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":171,"column":1,"offset":5870},"end":{"line":171,"column":5,"offset":5874},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":171,"column":5,"offset":5874},"end":{"line":172,"column":14,"offset":5888},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":172,"column":14,"offset":5888},"end":{"line":172,"column":18,"offset":5892},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":172,"column":18,"offset":5892},"end":{"line":172,"column":90,"offset":5964},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":172,"column":90,"offset":5964},"end":{"line":172,"column":94,"offset":5968},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":172,"column":94,"offset":5968},"end":{"line":172,"column":125,"offset":5999},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":172,"column":125,"offset":5999},"end":{"line":172,"column":131,"offset":6005},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":172,"column":131,"offset":6005},"end":{"line":173,"column":1,"offset":6020},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":173,"column":1,"offset":6020},"end":{"line":173,"column":5,"offset":6024},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":173,"column":5,"offset":6024},"end":{"line":174,"column":1,"offset":6025},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":174,"column":1,"offset":6025},"end":{"line":174,"column":5,"offset":6029},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":174,"column":5,"offset":6029},"end":{"line":175,"column":14,"offset":6043},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":175,"column":14,"offset":6043},"end":{"line":175,"column":18,"offset":6047},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":175,"column":18,"offset":6047},"end":{"line":175,"column":37,"offset":6066},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":175,"column":37,"offset":6066},"end":{"line":175,"column":40,"offset":6069},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":175,"column":40,"offset":6069},"end":{"line":175,"column":77,"offset":6106},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":175,"column":77,"offset":6106},"end":{"line":175,"column":81,"offset":6110},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":175,"column":81,"offset":6110},"end":{"line":175,"column":99,"offset":6128},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":175,"column":99,"offset":6128},"end":{"line":175,"column":102,"offset":6131},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":175,"column":102,"offset":6131},"end":{"line":175,"column":133,"offset":6162},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":175,"column":133,"offset":6162},"end":{"line":175,"column":139,"offset":6168},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":175,"column":139,"offset":6168},"end":{"line":175,"column":167,"offset":6196},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":175,"column":167,"offset":6196},"end":{"line":175,"column":171,"offset":6200},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":175,"column":171,"offset":6200},"end":{"line":176,"column":1,"offset":6202},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":176,"column":1,"offset":6202},"end":{"line":176,"column":5,"offset":6206},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":176,"column":5,"offset":6206},"end":{"line":177,"column":1,"offset":6207},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":177,"column":1,"offset":6207},"end":{"line":177,"column":5,"offset":6211},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":177,"column":5,"offset":6211},"end":{"line":179,"column":1,"offset":6231},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":179,"column":1,"offset":6231},"end":{"line":179,"column":5,"offset":6235},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":179,"column":5,"offset":6235},"end":{"line":180,"column":6,"offset":6241},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":180,"column":6,"offset":6241},"end":{"line":180,"column":12,"offset":6247},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":180,"column":12,"offset":6247},"end":{"line":180,"column":30,"offset":6265},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":180,"column":30,"offset":6265},"end":{"line":180,"column":36,"offset":6271},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":180,"column":36,"offset":6271},"end":{"line":180,"column":62,"offset":6297},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":180,"column":62,"offset":6297},"end":{"line":180,"column":75,"offset":6310},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":180,"column":75,"offset":6310},"end":{"line":180,"column":159,"offset":6394},"indent":[]}}],"position":{"start":{"line":165,"column":1,"offset":5669},"end":{"line":180,"column":159,"offset":6394},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":182,"column":8,"offset":6403},"end":{"line":182,"column":41,"offset":6436},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":6396},"end":{"line":182,"column":41,"offset":6436},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":183,"column":1,"offset":6437},"end":{"line":188,"column":4,"offset":6512},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":189,"column":1,"offset":6513},"end":{"line":190,"column":1,"offset":6532},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":190,"column":1,"offset":6532},"end":{"line":190,"column":5,"offset":6536},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":190,"column":5,"offset":6536},"end":{"line":192,"column":5,"offset":6674},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":192,"column":5,"offset":6674},"end":{"line":192,"column":9,"offset":6678},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":192,"column":9,"offset":6678},"end":{"line":193,"column":5,"offset":6683},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":193,"column":5,"offset":6683},"end":{"line":193,"column":27,"offset":6705},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":193,"column":27,"offset":6705},"end":{"line":194,"column":5,"offset":6710},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":194,"column":5,"offset":6710},"end":{"line":194,"column":9,"offset":6714},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":194,"column":9,"offset":6714},"end":{"line":195,"column":5,"offset":6719},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":195,"column":5,"offset":6719},"end":{"line":195,"column":12,"offset":6726},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":195,"column":12,"offset":6726},"end":{"line":195,"column":17,"offset":6731},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":195,"column":17,"offset":6731},"end":{"line":195,"column":25,"offset":6739},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":195,"column":25,"offset":6739},"end":{"line":195,"column":63,"offset":6777},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":195,"column":63,"offset":6777},"end":{"line":195,"column":66,"offset":6780},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":195,"column":66,"offset":6780},"end":{"line":195,"column":86,"offset":6800},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":195,"column":86,"offset":6800},"end":{"line":195,"column":89,"offset":6803},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":195,"column":89,"offset":6803},"end":{"line":195,"column":110,"offset":6824},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":195,"column":110,"offset":6824},"end":{"line":195,"column":119,"offset":6833},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":195,"column":119,"offset":6833},"end":{"line":196,"column":1,"offset":6835},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":196,"column":1,"offset":6835},"end":{"line":196,"column":5,"offset":6839},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":196,"column":5,"offset":6839},"end":{"line":198,"column":1,"offset":6855},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":198,"column":1,"offset":6855},"end":{"line":198,"column":5,"offset":6859},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":198,"column":5,"offset":6859},"end":{"line":200,"column":5,"offset":6966},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":200,"column":5,"offset":6966},"end":{"line":200,"column":9,"offset":6970},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":200,"column":9,"offset":6970},"end":{"line":201,"column":1,"offset":6971},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":201,"column":1,"offset":6971},"end":{"line":201,"column":23,"offset":6993},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":201,"column":23,"offset":6993},"end":{"line":201,"column":35,"offset":7005},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":201,"column":35,"offset":7005},"end":{"line":201,"column":61,"offset":7031},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":201,"column":61,"offset":7031},"end":{"line":202,"column":1,"offset":7032},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":202,"column":1,"offset":7032},"end":{"line":202,"column":5,"offset":7036},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":202,"column":5,"offset":7036},"end":{"line":203,"column":5,"offset":7041},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":203,"column":5,"offset":7041},"end":{"line":203,"column":8,"offset":7044},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":203,"column":8,"offset":7044},"end":{"line":203,"column":58,"offset":7094},"indent":[]}}],"position":{"start":{"line":189,"column":1,"offset":6513},"end":{"line":203,"column":58,"offset":7094},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":205,"column":1,"offset":7096},"end":{"line":206,"column":1,"offset":7114},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":206,"column":1,"offset":7114},"end":{"line":206,"column":5,"offset":7118},"indent":[]}}],"position":{"start":{"line":205,"column":1,"offset":7096},"end":{"line":206,"column":5,"offset":7118},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":207,"column":1,"offset":7119},"end":{"line":209,"column":4,"offset":7149},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":210,"column":1,"offset":7150},"end":{"line":210,"column":13,"offset":7162},"indent":[]}}],"position":{"start":{"line":210,"column":1,"offset":7150},"end":{"line":210,"column":13,"offset":7162},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":211,"column":1,"offset":7163},"end":{"line":217,"column":4,"offset":7242},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":218,"column":1,"offset":7243},"end":{"line":218,"column":8,"offset":7250},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":7243},"end":{"line":218,"column":8,"offset":7250},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":219,"column":1,"offset":7251},"end":{"line":226,"column":4,"offset":7375},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":227,"column":1,"offset":7376},"end":{"line":228,"column":5,"offset":7385},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":230,"column":1,"offset":7387},"end":{"line":230,"column":11,"offset":7397},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":230,"column":11,"offset":7397},"end":{"line":230,"column":24,"offset":7410},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":230,"column":24,"offset":7410},"end":{"line":230,"column":107,"offset":7493},"indent":[]}}],"position":{"start":{"line":230,"column":1,"offset":7387},"end":{"line":230,"column":107,"offset":7493},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":232,"column":7,"offset":7501},"end":{"line":232,"column":10,"offset":7504},"indent":[]}}],"position":{"start":{"line":232,"column":1,"offset":7495},"end":{"line":232,"column":10,"offset":7504},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":233,"column":7,"offset":7511},"end":{"line":233,"column":10,"offset":7514},"indent":[]}}],"position":{"start":{"line":233,"column":1,"offset":7505},"end":{"line":233,"column":10,"offset":7514},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":235,"column":6,"offset":7521},"end":{"line":235,"column":10,"offset":7525},"indent":[]}}],"position":{"start":{"line":235,"column":1,"offset":7516},"end":{"line":235,"column":10,"offset":7525},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":236,"column":7,"offset":7532},"end":{"line":236,"column":13,"offset":7538},"indent":[]}}],"position":{"start":{"line":236,"column":1,"offset":7526},"end":{"line":236,"column":13,"offset":7538},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":237,"column":1,"offset":7539},"end":{"line":237,"column":49,"offset":7587},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":237,"column":49,"offset":7587},"end":{"line":237,"column":57,"offset":7595},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":237,"column":57,"offset":7595},"end":{"line":237,"column":133,"offset":7671},"indent":[]}}],"position":{"start":{"line":237,"column":1,"offset":7539},"end":{"line":237,"column":133,"offset":7671},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":238,"column":1,"offset":7672},"end":{"line":248,"column":4,"offset":7867},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":249,"column":1,"offset":7868},"end":{"line":249,"column":5,"offset":7872},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":252,"column":1,"offset":7875},"end":{"line":253,"column":1,"offset":7957},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":253,"column":1,"offset":7957},"end":{"line":253,"column":5,"offset":7961},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":253,"column":5,"offset":7961},"end":{"line":254,"column":1,"offset":7962},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":254,"column":1,"offset":7962},"end":{"line":254,"column":5,"offset":7966},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":254,"column":5,"offset":7966},"end":{"line":255,"column":26,"offset":7992},"indent":[1]}}],"position":{"start":{"line":252,"column":1,"offset":7875},"end":{"line":255,"column":26,"offset":7992},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":256,"column":1,"offset":7993},"end":{"line":261,"column":4,"offset":8121},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":262,"column":1,"offset":8122},"end":{"line":262,"column":14,"offset":8135},"indent":[]}}],"position":{"start":{"line":262,"column":1,"offset":8122},"end":{"line":262,"column":14,"offset":8135},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":264,"column":1,"offset":8137},"end":{"line":277,"column":4,"offset":8419},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":279,"column":1,"offset":8421},"end":{"line":280,"column":5,"offset":8430},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":283,"column":7,"offset":8439},"end":{"line":283,"column":13,"offset":8445},"indent":[]}}],"position":{"start":{"line":283,"column":1,"offset":8433},"end":{"line":283,"column":13,"offset":8445},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":283,"column":13,"offset":8445}}}}