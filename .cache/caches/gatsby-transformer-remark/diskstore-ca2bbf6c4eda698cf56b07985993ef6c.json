{"expireTime":9007200842255730000,"key":"transformer-remark-markdown-ast-fd5bdaf127d5dfdd578ef612ba669045-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632},"indent":[]}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities. \n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705},"indent":[]}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791},"indent":[]}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833},"indent":[]}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865},"indent":[]}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884},"indent":[]}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916},"indent":[]}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052},"indent":[]}},{"type":"text","value":"\nEnvironment: The name-object pairs the interpreter keeps in memory.\n","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":34,"column":1,"offset":1121},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1121},"end":{"line":34,"column":5,"offset":1125},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":34,"column":5,"offset":1125},"end":{"line":35,"column":1,"offset":1126},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":35,"column":1,"offset":1126},"end":{"line":35,"column":5,"offset":1130},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":35,"column":5,"offset":1130},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Compound Procedures can be used to build on top of other Compound Procedures:\n","position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":1,"offset":1210},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1210},"end":{"line":38,"column":5,"offset":1214},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":5,"offset":1214},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (sum-of-squares x y)\n(+ (square x) (square y))</code></pre></div>","position":{"start":{"line":39,"column":1,"offset":1215},"end":{"line":42,"column":4,"offset":1277},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":43,"column":1,"offset":1278},"end":{"line":43,"column":5,"offset":1282},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Compound Procedure: procedure that you make out of other procedures.","position":{"start":{"line":45,"column":1,"offset":1284},"end":{"line":45,"column":69,"offset":1352},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1284},"end":{"line":45,"column":69,"offset":1352},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Primitive Procedure: procedure built into the language ex: ","position":{"start":{"line":47,"column":1,"offset":1354},"end":{"line":47,"column":60,"offset":1413},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":47,"column":60,"offset":1413},"end":{"line":47,"column":63,"offset":1416},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":47,"column":63,"offset":1416},"end":{"line":48,"column":1,"offset":1417},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1417},"end":{"line":48,"column":5,"offset":1421},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":48,"column":5,"offset":1421},"end":{"line":49,"column":1,"offset":1422},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":49,"column":1,"offset":1422},"end":{"line":49,"column":5,"offset":1426},"indent":[]}},{"type":"text","value":"\nBoth are used exactly the same.\n","position":{"start":{"line":49,"column":5,"offset":1426},"end":{"line":51,"column":1,"offset":1459},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":51,"column":1,"offset":1459},"end":{"line":51,"column":5,"offset":1463},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":51,"column":5,"offset":1463},"end":{"line":52,"column":1,"offset":1464},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":52,"column":1,"offset":1464},"end":{"line":52,"column":5,"offset":1468},"indent":[]}},{"type":"text","value":"\nWhen writing programs it is important to write modular programs that don’t cared how the other things are computed, only what should be computed.\n","position":{"start":{"line":52,"column":5,"offset":1468},"end":{"line":54,"column":1,"offset":1615},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":54,"column":1,"offset":1615},"end":{"line":54,"column":5,"offset":1619},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1354},"end":{"line":54,"column":5,"offset":1619},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":56,"column":7,"offset":1627},"end":{"line":56,"column":10,"offset":1630},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1621},"end":{"line":56,"column":10,"offset":1630},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":57,"column":7,"offset":1637},"end":{"line":57,"column":10,"offset":1640},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1631},"end":{"line":57,"column":10,"offset":1640},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":59,"column":6,"offset":1647},"end":{"line":59,"column":14,"offset":1655},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1642},"end":{"line":59,"column":14,"offset":1655},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":60,"column":7,"offset":1662},"end":{"line":60,"column":10,"offset":1665},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1656},"end":{"line":60,"column":10,"offset":1665},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":62,"column":8,"offset":1674},"end":{"line":62,"column":30,"offset":1696},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1667},"end":{"line":62,"column":30,"offset":1696},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":64,"column":1,"offset":1698},"end":{"line":65,"column":1,"offset":1842},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":65,"column":1,"offset":1842},"end":{"line":65,"column":5,"offset":1846},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":65,"column":5,"offset":1846},"end":{"line":65,"column":16,"offset":1857},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":65,"column":16,"offset":1857},"end":{"line":65,"column":20,"offset":1861},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":65,"column":20,"offset":1861},"end":{"line":67,"column":1,"offset":2005},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":67,"column":1,"offset":2005},"end":{"line":67,"column":5,"offset":2009},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":67,"column":5,"offset":2009},"end":{"line":67,"column":16,"offset":2020},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":67,"column":16,"offset":2020},"end":{"line":67,"column":20,"offset":2024},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":67,"column":20,"offset":2024},"end":{"line":68,"column":45,"offset":2069},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":68,"column":45,"offset":2069},"end":{"line":68,"column":49,"offset":2073},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":68,"column":49,"offset":2073},"end":{"line":68,"column":65,"offset":2089},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":68,"column":65,"offset":2089},"end":{"line":68,"column":69,"offset":2093},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":68,"column":69,"offset":2093},"end":{"line":70,"column":1,"offset":2136},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":70,"column":1,"offset":2136},"end":{"line":70,"column":5,"offset":2140},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":70,"column":5,"offset":2140},"end":{"line":70,"column":22,"offset":2157},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":70,"column":22,"offset":2157},"end":{"line":70,"column":26,"offset":2161},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":70,"column":26,"offset":2161},"end":{"line":71,"column":1,"offset":2162},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":71,"column":1,"offset":2162},"end":{"line":71,"column":5,"offset":2166},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":71,"column":5,"offset":2166},"end":{"line":73,"column":1,"offset":2284},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":73,"column":1,"offset":2284},"end":{"line":73,"column":5,"offset":2288},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":73,"column":5,"offset":2288},"end":{"line":75,"column":1,"offset":2409},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":75,"column":1,"offset":2409},"end":{"line":75,"column":12,"offset":2420},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":75,"column":12,"offset":2420},"end":{"line":75,"column":68,"offset":2476},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":75,"column":68,"offset":2476},"end":{"line":75,"column":79,"offset":2487},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":75,"column":79,"offset":2487},"end":{"line":75,"column":106,"offset":2514},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":75,"column":106,"offset":2514},"end":{"line":75,"column":109,"offset":2517},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":75,"column":109,"offset":2517},"end":{"line":75,"column":189,"offset":2597},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":75,"column":189,"offset":2597},"end":{"line":75,"column":192,"offset":2600},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":75,"column":192,"offset":2600},"end":{"line":75,"column":202,"offset":2610},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1698},"end":{"line":75,"column":202,"offset":2610},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":77,"column":8,"offset":2619},"end":{"line":77,"column":14,"offset":2625},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":2612},"end":{"line":77,"column":14,"offset":2625},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":78,"column":1,"offset":2626},"end":{"line":78,"column":9,"offset":2634},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":78,"column":9,"offset":2634},"end":{"line":78,"column":73,"offset":2698},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":2626},"end":{"line":78,"column":73,"offset":2698},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":79,"column":1,"offset":2699},"end":{"line":82,"column":4,"offset":2738},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":83,"column":1,"offset":2739},"end":{"line":83,"column":5,"offset":2743},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":85,"column":1,"offset":2745},"end":{"line":85,"column":72,"offset":2816},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":85,"column":72,"offset":2816},"end":{"line":85,"column":80,"offset":2824},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":85,"column":80,"offset":2824},"end":{"line":86,"column":1,"offset":2848},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":86,"column":1,"offset":2848},"end":{"line":86,"column":5,"offset":2852},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":86,"column":5,"offset":2852},"end":{"line":87,"column":1,"offset":2853},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":87,"column":1,"offset":2853},"end":{"line":87,"column":5,"offset":2857},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":87,"column":5,"offset":2857},"end":{"line":88,"column":184,"offset":3041},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":88,"column":184,"offset":3041},"end":{"line":88,"column":187,"offset":3044},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":88,"column":187,"offset":3044},"end":{"line":89,"column":1,"offset":3047},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":89,"column":1,"offset":3047},"end":{"line":89,"column":5,"offset":3051},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":89,"column":5,"offset":3051},"end":{"line":90,"column":1,"offset":3052},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":90,"column":1,"offset":3052},"end":{"line":90,"column":5,"offset":3056},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":90,"column":5,"offset":3056},"end":{"line":91,"column":27,"offset":3083},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":91,"column":27,"offset":3083},"end":{"line":91,"column":35,"offset":3091},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":91,"column":35,"offset":3091},"end":{"line":91,"column":86,"offset":3142},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":91,"column":86,"offset":3142},"end":{"line":91,"column":95,"offset":3151},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":91,"column":95,"offset":3151},"end":{"line":91,"column":97,"offset":3153},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":2745},"end":{"line":91,"column":97,"offset":3153},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":93,"column":1,"offset":3155},"end":{"line":93,"column":6,"offset":3160},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":95,"column":1,"offset":3162},"end":{"line":96,"column":1,"offset":3206},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":96,"column":1,"offset":3206},"end":{"line":96,"column":5,"offset":3210},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":96,"column":5,"offset":3210},"end":{"line":97,"column":1,"offset":3211},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":97,"column":1,"offset":3211},"end":{"line":97,"column":22,"offset":3232},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":97,"column":22,"offset":3232},"end":{"line":98,"column":1,"offset":3233},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":98,"column":1,"offset":3233},"end":{"line":98,"column":5,"offset":3237},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":3162},"end":{"line":98,"column":5,"offset":3237},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":100,"column":1,"offset":3239},"end":{"line":100,"column":152,"offset":3390},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":3239},"end":{"line":100,"column":152,"offset":3390},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":102,"column":8,"offset":3399},"end":{"line":102,"column":20,"offset":3411},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":3392},"end":{"line":102,"column":20,"offset":3411},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":104,"column":1,"offset":3413},"end":{"line":104,"column":56,"offset":3468},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":3413},"end":{"line":104,"column":56,"offset":3468},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":105,"column":1,"offset":3469},"end":{"line":110,"column":4,"offset":3560},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":111,"column":1,"offset":3561},"end":{"line":111,"column":5,"offset":3565},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":113,"column":1,"offset":3567},"end":{"line":113,"column":37,"offset":3603},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":113,"column":37,"offset":3603},"end":{"line":113,"column":41,"offset":3607},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":113,"column":41,"offset":3607},"end":{"line":114,"column":1,"offset":3624},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":114,"column":1,"offset":3624},"end":{"line":114,"column":5,"offset":3628},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":114,"column":5,"offset":3628},"end":{"line":115,"column":1,"offset":3629},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":115,"column":1,"offset":3629},"end":{"line":115,"column":5,"offset":3633},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":115,"column":5,"offset":3633},"end":{"line":116,"column":66,"offset":3699},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":116,"column":66,"offset":3699},"end":{"line":116,"column":89,"offset":3722},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":116,"column":89,"offset":3722},"end":{"line":117,"column":1,"offset":3762},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":117,"column":1,"offset":3762},"end":{"line":117,"column":5,"offset":3766},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":117,"column":5,"offset":3766},"end":{"line":118,"column":1,"offset":3767},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":118,"column":1,"offset":3767},"end":{"line":118,"column":5,"offset":3771},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":118,"column":5,"offset":3771},"end":{"line":119,"column":21,"offset":3792},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":119,"column":21,"offset":3792},"end":{"line":119,"column":25,"offset":3796},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":119,"column":25,"offset":3796},"end":{"line":120,"column":1,"offset":3850},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":120,"column":1,"offset":3850},"end":{"line":120,"column":5,"offset":3854},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":120,"column":5,"offset":3854},"end":{"line":121,"column":1,"offset":3855},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":121,"column":1,"offset":3855},"end":{"line":121,"column":5,"offset":3859},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":121,"column":5,"offset":3859},"end":{"line":122,"column":21,"offset":3880},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":122,"column":21,"offset":3880},"end":{"line":122,"column":25,"offset":3884},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":122,"column":25,"offset":3884},"end":{"line":123,"column":1,"offset":3939},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":123,"column":1,"offset":3939},"end":{"line":123,"column":5,"offset":3943},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":123,"column":5,"offset":3943},"end":{"line":124,"column":1,"offset":3944},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":124,"column":1,"offset":3944},"end":{"line":124,"column":5,"offset":3948},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":124,"column":5,"offset":3948},"end":{"line":125,"column":58,"offset":4006},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":125,"column":58,"offset":4006},"end":{"line":125,"column":61,"offset":4009},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":125,"column":61,"offset":4009},"end":{"line":125,"column":145,"offset":4093},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":125,"column":145,"offset":4093},"end":{"line":125,"column":153,"offset":4101},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":125,"column":153,"offset":4101},"end":{"line":125,"column":178,"offset":4126},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":3567},"end":{"line":125,"column":178,"offset":4126},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":127,"column":7,"offset":4134},"end":{"line":127,"column":10,"offset":4137},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":4128},"end":{"line":127,"column":10,"offset":4137},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":129,"column":8,"offset":4146},"end":{"line":129,"column":17,"offset":4155},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":4139},"end":{"line":129,"column":17,"offset":4155},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":130,"column":1,"offset":4156},"end":{"line":141,"column":4,"offset":4355},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":142,"column":1,"offset":4356},"end":{"line":142,"column":5,"offset":4360},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":144,"column":1,"offset":4362},"end":{"line":145,"column":1,"offset":4578},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":145,"column":1,"offset":4578},"end":{"line":145,"column":5,"offset":4582},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":145,"column":5,"offset":4582},"end":{"line":146,"column":1,"offset":4583},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":146,"column":1,"offset":4583},"end":{"line":146,"column":5,"offset":4587},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":146,"column":5,"offset":4587},"end":{"line":147,"column":72,"offset":4659},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":147,"column":72,"offset":4659},"end":{"line":147,"column":81,"offset":4668},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":147,"column":81,"offset":4668},"end":{"line":148,"column":1,"offset":4687},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":148,"column":1,"offset":4687},"end":{"line":148,"column":5,"offset":4691},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":148,"column":5,"offset":4691},"end":{"line":149,"column":1,"offset":4692},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":149,"column":1,"offset":4692},"end":{"line":149,"column":5,"offset":4696},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":149,"column":5,"offset":4696},"end":{"line":150,"column":10,"offset":4706},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":150,"column":10,"offset":4706},"end":{"line":150,"column":16,"offset":4712},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":150,"column":16,"offset":4712},"end":{"line":150,"column":34,"offset":4730},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":150,"column":34,"offset":4730},"end":{"line":150,"column":42,"offset":4738},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":150,"column":42,"offset":4738},"end":{"line":151,"column":24,"offset":4763},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":151,"column":24,"offset":4763},"end":{"line":151,"column":33,"offset":4772},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":151,"column":33,"offset":4772},"end":{"line":151,"column":107,"offset":4846},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":151,"column":107,"offset":4846},"end":{"line":151,"column":116,"offset":4855},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":151,"column":116,"offset":4855},"end":{"line":151,"column":134,"offset":4873},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":151,"column":134,"offset":4873},"end":{"line":151,"column":137,"offset":4876},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":151,"column":137,"offset":4876},"end":{"line":151,"column":161,"offset":4900},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":151,"column":161,"offset":4900},"end":{"line":151,"column":167,"offset":4906},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":151,"column":167,"offset":4906},"end":{"line":151,"column":192,"offset":4931},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":151,"column":192,"offset":4931},"end":{"line":151,"column":200,"offset":4939},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":151,"column":200,"offset":4939},"end":{"line":151,"column":218,"offset":4957},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":151,"column":218,"offset":4957},"end":{"line":151,"column":224,"offset":4963},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":151,"column":224,"offset":4963},"end":{"line":151,"column":245,"offset":4984},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":151,"column":245,"offset":4984},"end":{"line":151,"column":252,"offset":4991},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":151,"column":252,"offset":4991},"end":{"line":151,"column":257,"offset":4996},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":151,"column":257,"offset":4996},"end":{"line":151,"column":260,"offset":4999},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":151,"column":260,"offset":4999},"end":{"line":151,"column":285,"offset":5024},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":151,"column":285,"offset":5024},"end":{"line":151,"column":291,"offset":5030},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":151,"column":291,"offset":5030},"end":{"line":152,"column":96,"offset":5156},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":152,"column":96,"offset":5156},"end":{"line":152,"column":111,"offset":5171},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":152,"column":111,"offset":5171},"end":{"line":152,"column":182,"offset":5242},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":4362},"end":{"line":152,"column":182,"offset":5242},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":154,"column":8,"offset":5251},"end":{"line":154,"column":19,"offset":5262},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":5244},"end":{"line":154,"column":19,"offset":5262},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":155,"column":1,"offset":5263},"end":{"line":155,"column":14,"offset":5276},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":5263},"end":{"line":155,"column":14,"offset":5276},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":156,"column":1,"offset":5277},"end":{"line":171,"column":4,"offset":5692},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":172,"column":1,"offset":5693},"end":{"line":172,"column":5,"offset":5697},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":174,"column":1,"offset":5699},"end":{"line":174,"column":141,"offset":5839},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":5699},"end":{"line":174,"column":141,"offset":5839},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":176,"column":8,"offset":5848},"end":{"line":176,"column":30,"offset":5870},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":5841},"end":{"line":176,"column":30,"offset":5870},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":177,"column":1,"offset":5871},"end":{"line":177,"column":199,"offset":6069},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":5871},"end":{"line":177,"column":199,"offset":6069},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":179,"column":8,"offset":6078},"end":{"line":179,"column":30,"offset":6100},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":6071},"end":{"line":179,"column":30,"offset":6100},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":181,"column":1,"offset":6102},"end":{"line":182,"column":1,"offset":6177},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":182,"column":1,"offset":6177},"end":{"line":182,"column":5,"offset":6181},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":182,"column":5,"offset":6181},"end":{"line":183,"column":1,"offset":6182},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":183,"column":1,"offset":6182},"end":{"line":183,"column":5,"offset":6186},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":183,"column":5,"offset":6186},"end":{"line":185,"column":1,"offset":6248},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":185,"column":1,"offset":6248},"end":{"line":185,"column":5,"offset":6252},"indent":[]}},{"type":"break","position":{"start":{"line":185,"column":5,"offset":6252},"end":{"line":186,"column":1,"offset":6255},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":186,"column":1,"offset":6255},"end":{"line":186,"column":11,"offset":6265},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":186,"column":11,"offset":6265},"end":{"line":186,"column":19,"offset":6273},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":186,"column":19,"offset":6273},"end":{"line":186,"column":24,"offset":6278},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":186,"column":24,"offset":6278},"end":{"line":186,"column":34,"offset":6288},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":186,"column":34,"offset":6288},"end":{"line":187,"column":1,"offset":6337},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":187,"column":1,"offset":6337},"end":{"line":187,"column":5,"offset":6341},"indent":[]}}],"position":{"start":{"line":181,"column":1,"offset":6102},"end":{"line":187,"column":5,"offset":6341},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":189,"column":8,"offset":6350},"end":{"line":189,"column":12,"offset":6354},"indent":[]}}],"position":{"start":{"line":189,"column":1,"offset":6343},"end":{"line":189,"column":12,"offset":6354},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":190,"column":1,"offset":6355},"end":{"line":195,"column":4,"offset":6466},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":196,"column":1,"offset":6467},"end":{"line":197,"column":5,"offset":6476},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":199,"column":1,"offset":6478},"end":{"line":199,"column":7,"offset":6484},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":199,"column":7,"offset":6484},"end":{"line":201,"column":1,"offset":6566},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":201,"column":1,"offset":6566},"end":{"line":201,"column":5,"offset":6570},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":201,"column":5,"offset":6570},"end":{"line":202,"column":1,"offset":6571},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":202,"column":1,"offset":6571},"end":{"line":202,"column":5,"offset":6575},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":202,"column":5,"offset":6575},"end":{"line":203,"column":10,"offset":6585},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":203,"column":10,"offset":6585},"end":{"line":203,"column":14,"offset":6589},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":203,"column":14,"offset":6589},"end":{"line":203,"column":22,"offset":6597},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":203,"column":22,"offset":6597},"end":{"line":203,"column":30,"offset":6605},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":203,"column":30,"offset":6605},"end":{"line":203,"column":50,"offset":6625},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":203,"column":50,"offset":6625},"end":{"line":203,"column":53,"offset":6628},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":203,"column":53,"offset":6628},"end":{"line":203,"column":90,"offset":6665},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":203,"column":90,"offset":6665},"end":{"line":203,"column":96,"offset":6671},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":203,"column":96,"offset":6671},"end":{"line":204,"column":1,"offset":6674},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":204,"column":1,"offset":6674},"end":{"line":204,"column":5,"offset":6678},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":204,"column":5,"offset":6678},"end":{"line":205,"column":1,"offset":6679},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":205,"column":1,"offset":6679},"end":{"line":205,"column":5,"offset":6683},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":205,"column":5,"offset":6683},"end":{"line":206,"column":14,"offset":6697},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":206,"column":14,"offset":6697},"end":{"line":206,"column":18,"offset":6701},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":206,"column":18,"offset":6701},"end":{"line":206,"column":90,"offset":6773},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":206,"column":90,"offset":6773},"end":{"line":206,"column":94,"offset":6777},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":206,"column":94,"offset":6777},"end":{"line":206,"column":125,"offset":6808},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":206,"column":125,"offset":6808},"end":{"line":206,"column":131,"offset":6814},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":206,"column":131,"offset":6814},"end":{"line":207,"column":1,"offset":6829},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":207,"column":1,"offset":6829},"end":{"line":207,"column":5,"offset":6833},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":207,"column":5,"offset":6833},"end":{"line":208,"column":1,"offset":6834},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":208,"column":1,"offset":6834},"end":{"line":208,"column":5,"offset":6838},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":208,"column":5,"offset":6838},"end":{"line":209,"column":14,"offset":6852},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":209,"column":14,"offset":6852},"end":{"line":209,"column":18,"offset":6856},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":209,"column":18,"offset":6856},"end":{"line":209,"column":37,"offset":6875},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":209,"column":37,"offset":6875},"end":{"line":209,"column":40,"offset":6878},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":209,"column":40,"offset":6878},"end":{"line":209,"column":77,"offset":6915},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":209,"column":77,"offset":6915},"end":{"line":209,"column":81,"offset":6919},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":209,"column":81,"offset":6919},"end":{"line":209,"column":99,"offset":6937},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":209,"column":99,"offset":6937},"end":{"line":209,"column":102,"offset":6940},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":209,"column":102,"offset":6940},"end":{"line":209,"column":133,"offset":6971},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":209,"column":133,"offset":6971},"end":{"line":209,"column":139,"offset":6977},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":209,"column":139,"offset":6977},"end":{"line":209,"column":167,"offset":7005},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":209,"column":167,"offset":7005},"end":{"line":209,"column":171,"offset":7009},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":209,"column":171,"offset":7009},"end":{"line":210,"column":1,"offset":7011},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":210,"column":1,"offset":7011},"end":{"line":210,"column":5,"offset":7015},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":210,"column":5,"offset":7015},"end":{"line":211,"column":1,"offset":7016},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":211,"column":1,"offset":7016},"end":{"line":211,"column":5,"offset":7020},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":211,"column":5,"offset":7020},"end":{"line":213,"column":1,"offset":7040},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":213,"column":1,"offset":7040},"end":{"line":213,"column":5,"offset":7044},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":213,"column":5,"offset":7044},"end":{"line":214,"column":6,"offset":7050},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":214,"column":6,"offset":7050},"end":{"line":214,"column":12,"offset":7056},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":214,"column":12,"offset":7056},"end":{"line":214,"column":30,"offset":7074},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":214,"column":30,"offset":7074},"end":{"line":214,"column":36,"offset":7080},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":214,"column":36,"offset":7080},"end":{"line":214,"column":62,"offset":7106},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":214,"column":62,"offset":7106},"end":{"line":214,"column":75,"offset":7119},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":214,"column":75,"offset":7119},"end":{"line":214,"column":159,"offset":7203},"indent":[]}}],"position":{"start":{"line":199,"column":1,"offset":6478},"end":{"line":214,"column":159,"offset":7203},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":216,"column":8,"offset":7212},"end":{"line":216,"column":41,"offset":7245},"indent":[]}}],"position":{"start":{"line":216,"column":1,"offset":7205},"end":{"line":216,"column":41,"offset":7245},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":217,"column":1,"offset":7246},"end":{"line":222,"column":4,"offset":7321},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":223,"column":1,"offset":7322},"end":{"line":224,"column":1,"offset":7341},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":224,"column":1,"offset":7341},"end":{"line":224,"column":5,"offset":7345},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":224,"column":5,"offset":7345},"end":{"line":226,"column":5,"offset":7483},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":226,"column":5,"offset":7483},"end":{"line":226,"column":9,"offset":7487},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":226,"column":9,"offset":7487},"end":{"line":227,"column":5,"offset":7492},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":227,"column":5,"offset":7492},"end":{"line":227,"column":27,"offset":7514},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":227,"column":27,"offset":7514},"end":{"line":228,"column":5,"offset":7519},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":228,"column":5,"offset":7519},"end":{"line":228,"column":9,"offset":7523},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":228,"column":9,"offset":7523},"end":{"line":229,"column":5,"offset":7528},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":229,"column":5,"offset":7528},"end":{"line":229,"column":12,"offset":7535},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":229,"column":12,"offset":7535},"end":{"line":229,"column":17,"offset":7540},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":229,"column":17,"offset":7540},"end":{"line":229,"column":25,"offset":7548},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":229,"column":25,"offset":7548},"end":{"line":229,"column":63,"offset":7586},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":229,"column":63,"offset":7586},"end":{"line":229,"column":66,"offset":7589},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":229,"column":66,"offset":7589},"end":{"line":229,"column":86,"offset":7609},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":229,"column":86,"offset":7609},"end":{"line":229,"column":89,"offset":7612},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":229,"column":89,"offset":7612},"end":{"line":229,"column":110,"offset":7633},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":229,"column":110,"offset":7633},"end":{"line":229,"column":119,"offset":7642},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":229,"column":119,"offset":7642},"end":{"line":230,"column":1,"offset":7644},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":230,"column":1,"offset":7644},"end":{"line":230,"column":5,"offset":7648},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":230,"column":5,"offset":7648},"end":{"line":232,"column":1,"offset":7664},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":232,"column":1,"offset":7664},"end":{"line":232,"column":5,"offset":7668},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":232,"column":5,"offset":7668},"end":{"line":234,"column":5,"offset":7775},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":234,"column":5,"offset":7775},"end":{"line":234,"column":9,"offset":7779},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":234,"column":9,"offset":7779},"end":{"line":235,"column":1,"offset":7780},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":235,"column":1,"offset":7780},"end":{"line":235,"column":23,"offset":7802},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":235,"column":23,"offset":7802},"end":{"line":235,"column":35,"offset":7814},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":235,"column":35,"offset":7814},"end":{"line":235,"column":61,"offset":7840},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":235,"column":61,"offset":7840},"end":{"line":236,"column":1,"offset":7841},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":236,"column":1,"offset":7841},"end":{"line":236,"column":5,"offset":7845},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":236,"column":5,"offset":7845},"end":{"line":237,"column":5,"offset":7850},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":237,"column":5,"offset":7850},"end":{"line":237,"column":8,"offset":7853},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":237,"column":8,"offset":7853},"end":{"line":237,"column":58,"offset":7903},"indent":[]}}],"position":{"start":{"line":223,"column":1,"offset":7322},"end":{"line":237,"column":58,"offset":7903},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":239,"column":1,"offset":7905},"end":{"line":240,"column":1,"offset":7923},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":240,"column":1,"offset":7923},"end":{"line":240,"column":5,"offset":7927},"indent":[]}}],"position":{"start":{"line":239,"column":1,"offset":7905},"end":{"line":240,"column":5,"offset":7927},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":241,"column":1,"offset":7928},"end":{"line":243,"column":4,"offset":7958},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":244,"column":1,"offset":7959},"end":{"line":244,"column":13,"offset":7971},"indent":[]}}],"position":{"start":{"line":244,"column":1,"offset":7959},"end":{"line":244,"column":13,"offset":7971},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":245,"column":1,"offset":7972},"end":{"line":251,"column":4,"offset":8051},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":252,"column":1,"offset":8052},"end":{"line":252,"column":8,"offset":8059},"indent":[]}}],"position":{"start":{"line":252,"column":1,"offset":8052},"end":{"line":252,"column":8,"offset":8059},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":253,"column":1,"offset":8060},"end":{"line":260,"column":4,"offset":8184},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":261,"column":1,"offset":8185},"end":{"line":262,"column":5,"offset":8194},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":264,"column":1,"offset":8196},"end":{"line":264,"column":11,"offset":8206},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":264,"column":11,"offset":8206},"end":{"line":264,"column":24,"offset":8219},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":264,"column":24,"offset":8219},"end":{"line":264,"column":107,"offset":8302},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":8196},"end":{"line":264,"column":107,"offset":8302},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":266,"column":7,"offset":8310},"end":{"line":266,"column":10,"offset":8313},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":8304},"end":{"line":266,"column":10,"offset":8313},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":267,"column":7,"offset":8320},"end":{"line":267,"column":10,"offset":8323},"indent":[]}}],"position":{"start":{"line":267,"column":1,"offset":8314},"end":{"line":267,"column":10,"offset":8323},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":269,"column":6,"offset":8330},"end":{"line":269,"column":10,"offset":8334},"indent":[]}}],"position":{"start":{"line":269,"column":1,"offset":8325},"end":{"line":269,"column":10,"offset":8334},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":270,"column":7,"offset":8341},"end":{"line":270,"column":13,"offset":8347},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":8335},"end":{"line":270,"column":13,"offset":8347},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":271,"column":1,"offset":8348},"end":{"line":271,"column":49,"offset":8396},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":271,"column":49,"offset":8396},"end":{"line":271,"column":57,"offset":8404},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":271,"column":57,"offset":8404},"end":{"line":271,"column":133,"offset":8480},"indent":[]}}],"position":{"start":{"line":271,"column":1,"offset":8348},"end":{"line":271,"column":133,"offset":8480},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":272,"column":1,"offset":8481},"end":{"line":282,"column":4,"offset":8676},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":283,"column":1,"offset":8677},"end":{"line":283,"column":5,"offset":8681},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":286,"column":1,"offset":8684},"end":{"line":287,"column":1,"offset":8766},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":287,"column":1,"offset":8766},"end":{"line":287,"column":5,"offset":8770},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":287,"column":5,"offset":8770},"end":{"line":288,"column":1,"offset":8771},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":288,"column":1,"offset":8771},"end":{"line":288,"column":5,"offset":8775},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":288,"column":5,"offset":8775},"end":{"line":289,"column":26,"offset":8801},"indent":[1]}}],"position":{"start":{"line":286,"column":1,"offset":8684},"end":{"line":289,"column":26,"offset":8801},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":290,"column":1,"offset":8802},"end":{"line":295,"column":4,"offset":8930},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":296,"column":1,"offset":8931},"end":{"line":296,"column":14,"offset":8944},"indent":[]}}],"position":{"start":{"line":296,"column":1,"offset":8931},"end":{"line":296,"column":14,"offset":8944},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":298,"column":1,"offset":8946},"end":{"line":311,"column":4,"offset":9228},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":313,"column":1,"offset":9230},"end":{"line":314,"column":5,"offset":9239},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":317,"column":7,"offset":9248},"end":{"line":317,"column":13,"offset":9254},"indent":[]}}],"position":{"start":{"line":317,"column":1,"offset":9242},"end":{"line":317,"column":13,"offset":9254},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":317,"column":13,"offset":9254}}}}