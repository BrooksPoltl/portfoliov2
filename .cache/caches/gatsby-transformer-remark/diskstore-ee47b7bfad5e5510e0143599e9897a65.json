{"expireTime":9007200842248889000,"key":"transformer-remark-markdown-html-ast-f39be79227c3508ad06e94230e831d65-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":820}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":820},"end":{"line":22,"column":5,"offset":824}}},{"type":"text","value":"\nexpression: ","position":{"start":{"line":22,"column":5,"offset":824},"end":{"line":23,"column":13,"offset":837}}},{"type":"raw","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":13,"offset":837},"end":{"line":23,"column":26,"offset":850}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":23,"column":26,"offset":850}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n`\n##### 1.2\n##### 1.3","position":{"start":{"line":25,"column":1,"offset":852},"end":{"line":28,"column":10,"offset":878}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":30,"column":6,"offset":885},"end":{"line":30,"column":14,"offset":893}}}],"position":{"start":{"line":30,"column":1,"offset":880},"end":{"line":30,"column":14,"offset":893}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":31,"column":7,"offset":900},"end":{"line":31,"column":10,"offset":903}}}],"position":{"start":{"line":31,"column":1,"offset":894},"end":{"line":31,"column":10,"offset":903}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":33,"column":8,"offset":912},"end":{"line":33,"column":30,"offset":934}}}],"position":{"start":{"line":33,"column":1,"offset":905},"end":{"line":33,"column":30,"offset":934}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":35,"column":1,"offset":936},"end":{"line":36,"column":1,"offset":1080}}},{"type":"raw","value":"<br>","position":{"start":{"line":36,"column":1,"offset":1080},"end":{"line":36,"column":5,"offset":1084}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":36,"column":5,"offset":1084},"end":{"line":36,"column":16,"offset":1095}}},{"type":"raw","value":"<br>","position":{"start":{"line":36,"column":16,"offset":1095},"end":{"line":36,"column":20,"offset":1099}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":36,"column":20,"offset":1099},"end":{"line":38,"column":1,"offset":1243}}},{"type":"raw","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1243},"end":{"line":38,"column":5,"offset":1247}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":38,"column":5,"offset":1247},"end":{"line":38,"column":16,"offset":1258}}},{"type":"raw","value":"<br>","position":{"start":{"line":38,"column":16,"offset":1258},"end":{"line":38,"column":20,"offset":1262}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":38,"column":20,"offset":1262},"end":{"line":39,"column":45,"offset":1307}}},{"type":"raw","value":"<br>","position":{"start":{"line":39,"column":45,"offset":1307},"end":{"line":39,"column":49,"offset":1311}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":39,"column":49,"offset":1311},"end":{"line":39,"column":65,"offset":1327}}},{"type":"raw","value":"<br>","position":{"start":{"line":39,"column":65,"offset":1327},"end":{"line":39,"column":69,"offset":1331}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":39,"column":69,"offset":1331},"end":{"line":41,"column":1,"offset":1374}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":1,"offset":1374},"end":{"line":41,"column":5,"offset":1378}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":41,"column":5,"offset":1378},"end":{"line":41,"column":22,"offset":1395}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":22,"offset":1395},"end":{"line":41,"column":26,"offset":1399}}},{"type":"text","value":"\n","position":{"start":{"line":41,"column":26,"offset":1399},"end":{"line":42,"column":1,"offset":1400}}},{"type":"raw","value":"<br>","position":{"start":{"line":42,"column":1,"offset":1400},"end":{"line":42,"column":5,"offset":1404}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":42,"column":5,"offset":1404},"end":{"line":44,"column":1,"offset":1522}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1522},"end":{"line":44,"column":5,"offset":1526}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":44,"column":5,"offset":1526},"end":{"line":46,"column":1,"offset":1647}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":46,"column":1,"offset":1647},"end":{"line":46,"column":12,"offset":1658}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":46,"column":12,"offset":1658},"end":{"line":46,"column":68,"offset":1714}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":46,"column":68,"offset":1714},"end":{"line":46,"column":79,"offset":1725}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":46,"column":79,"offset":1725},"end":{"line":46,"column":106,"offset":1752}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":46,"column":106,"offset":1752},"end":{"line":46,"column":109,"offset":1755}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":46,"column":109,"offset":1755},"end":{"line":46,"column":189,"offset":1835}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":46,"column":189,"offset":1835},"end":{"line":46,"column":192,"offset":1838}}},{"type":"text","value":" to get 3.","position":{"start":{"line":46,"column":192,"offset":1838},"end":{"line":46,"column":202,"offset":1848}}}],"position":{"start":{"line":35,"column":1,"offset":936},"end":{"line":46,"column":202,"offset":1848}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":48,"column":8,"offset":1857},"end":{"line":48,"column":14,"offset":1863}}}],"position":{"start":{"line":48,"column":1,"offset":1850},"end":{"line":48,"column":14,"offset":1863}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":49,"column":1,"offset":1864},"end":{"line":49,"column":9,"offset":1872}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":49,"column":9,"offset":1872},"end":{"line":49,"column":73,"offset":1936}}}],"position":{"start":{"line":49,"column":1,"offset":1864},"end":{"line":49,"column":73,"offset":1936}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":50,"column":1,"offset":1937},"end":{"line":53,"column":4,"offset":1976}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":54,"column":1,"offset":1977},"end":{"line":54,"column":5,"offset":1981}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":56,"column":1,"offset":1983},"end":{"line":56,"column":72,"offset":2054}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":56,"column":72,"offset":2054},"end":{"line":56,"column":80,"offset":2062}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":56,"column":80,"offset":2062},"end":{"line":57,"column":1,"offset":2086}}},{"type":"raw","value":"<br>","position":{"start":{"line":57,"column":1,"offset":2086},"end":{"line":57,"column":5,"offset":2090}}},{"type":"text","value":"\n","position":{"start":{"line":57,"column":5,"offset":2090},"end":{"line":58,"column":1,"offset":2091}}},{"type":"raw","value":"<br>","position":{"start":{"line":58,"column":1,"offset":2091},"end":{"line":58,"column":5,"offset":2095}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":58,"column":5,"offset":2095},"end":{"line":59,"column":184,"offset":2279}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":59,"column":184,"offset":2279},"end":{"line":59,"column":187,"offset":2282}}},{"type":"text","value":".\n","position":{"start":{"line":59,"column":187,"offset":2282},"end":{"line":60,"column":1,"offset":2285}}},{"type":"raw","value":"<br>","position":{"start":{"line":60,"column":1,"offset":2285},"end":{"line":60,"column":5,"offset":2289}}},{"type":"text","value":"\n","position":{"start":{"line":60,"column":5,"offset":2289},"end":{"line":61,"column":1,"offset":2290}}},{"type":"raw","value":"<br>","position":{"start":{"line":61,"column":1,"offset":2290},"end":{"line":61,"column":5,"offset":2294}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":61,"column":5,"offset":2294},"end":{"line":62,"column":27,"offset":2321}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":62,"column":27,"offset":2321},"end":{"line":62,"column":35,"offset":2329}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":62,"column":35,"offset":2329},"end":{"line":62,"column":86,"offset":2380}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":62,"column":86,"offset":2380},"end":{"line":62,"column":95,"offset":2389}}},{"type":"text","value":". ","position":{"start":{"line":62,"column":95,"offset":2389},"end":{"line":62,"column":97,"offset":2391}}}],"position":{"start":{"line":56,"column":1,"offset":1983},"end":{"line":62,"column":97,"offset":2391}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":64,"column":1,"offset":2393},"end":{"line":64,"column":6,"offset":2398}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":66,"column":1,"offset":2400},"end":{"line":67,"column":1,"offset":2444}}},{"type":"raw","value":"<br>","position":{"start":{"line":67,"column":1,"offset":2444},"end":{"line":67,"column":5,"offset":2448}}},{"type":"text","value":"\n","position":{"start":{"line":67,"column":5,"offset":2448},"end":{"line":68,"column":1,"offset":2449}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":68,"column":1,"offset":2449},"end":{"line":68,"column":22,"offset":2470}}},{"type":"text","value":"\n","position":{"start":{"line":68,"column":22,"offset":2470},"end":{"line":69,"column":1,"offset":2471}}},{"type":"raw","value":"<br>","position":{"start":{"line":69,"column":1,"offset":2471},"end":{"line":69,"column":5,"offset":2475}}}],"position":{"start":{"line":66,"column":1,"offset":2400},"end":{"line":69,"column":5,"offset":2475}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":71,"column":1,"offset":2477},"end":{"line":71,"column":152,"offset":2628}}}],"position":{"start":{"line":71,"column":1,"offset":2477},"end":{"line":71,"column":152,"offset":2628}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":73,"column":8,"offset":2637},"end":{"line":73,"column":20,"offset":2649}}}],"position":{"start":{"line":73,"column":1,"offset":2630},"end":{"line":73,"column":20,"offset":2649}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":75,"column":1,"offset":2651},"end":{"line":75,"column":56,"offset":2706}}}],"position":{"start":{"line":75,"column":1,"offset":2651},"end":{"line":75,"column":56,"offset":2706}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":76,"column":1,"offset":2707},"end":{"line":81,"column":4,"offset":2798}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":82,"column":1,"offset":2799},"end":{"line":82,"column":5,"offset":2803}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":84,"column":1,"offset":2805},"end":{"line":84,"column":37,"offset":2841}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":84,"column":37,"offset":2841},"end":{"line":84,"column":41,"offset":2845}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":84,"column":41,"offset":2845},"end":{"line":85,"column":1,"offset":2862}}},{"type":"raw","value":"<br>","position":{"start":{"line":85,"column":1,"offset":2862},"end":{"line":85,"column":5,"offset":2866}}},{"type":"text","value":"\n","position":{"start":{"line":85,"column":5,"offset":2866},"end":{"line":86,"column":1,"offset":2867}}},{"type":"raw","value":"<br>","position":{"start":{"line":86,"column":1,"offset":2867},"end":{"line":86,"column":5,"offset":2871}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":86,"column":5,"offset":2871},"end":{"line":87,"column":66,"offset":2937}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":87,"column":66,"offset":2937},"end":{"line":87,"column":89,"offset":2960}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":87,"column":89,"offset":2960},"end":{"line":88,"column":1,"offset":3000}}},{"type":"raw","value":"<br>","position":{"start":{"line":88,"column":1,"offset":3000},"end":{"line":88,"column":5,"offset":3004}}},{"type":"text","value":"\n","position":{"start":{"line":88,"column":5,"offset":3004},"end":{"line":89,"column":1,"offset":3005}}},{"type":"raw","value":"<br>","position":{"start":{"line":89,"column":1,"offset":3005},"end":{"line":89,"column":5,"offset":3009}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":89,"column":5,"offset":3009},"end":{"line":90,"column":21,"offset":3030}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":90,"column":21,"offset":3030},"end":{"line":90,"column":25,"offset":3034}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":90,"column":25,"offset":3034},"end":{"line":91,"column":1,"offset":3088}}},{"type":"raw","value":"<br>","position":{"start":{"line":91,"column":1,"offset":3088},"end":{"line":91,"column":5,"offset":3092}}},{"type":"text","value":"\n","position":{"start":{"line":91,"column":5,"offset":3092},"end":{"line":92,"column":1,"offset":3093}}},{"type":"raw","value":"<br>","position":{"start":{"line":92,"column":1,"offset":3093},"end":{"line":92,"column":5,"offset":3097}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":92,"column":5,"offset":3097},"end":{"line":93,"column":21,"offset":3118}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":93,"column":21,"offset":3118},"end":{"line":93,"column":25,"offset":3122}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":93,"column":25,"offset":3122},"end":{"line":94,"column":1,"offset":3177}}},{"type":"raw","value":"<br>","position":{"start":{"line":94,"column":1,"offset":3177},"end":{"line":94,"column":5,"offset":3181}}},{"type":"text","value":"\n","position":{"start":{"line":94,"column":5,"offset":3181},"end":{"line":95,"column":1,"offset":3182}}},{"type":"raw","value":"<br>","position":{"start":{"line":95,"column":1,"offset":3182},"end":{"line":95,"column":5,"offset":3186}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":95,"column":5,"offset":3186},"end":{"line":96,"column":58,"offset":3244}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":96,"column":58,"offset":3244},"end":{"line":96,"column":61,"offset":3247}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":96,"column":61,"offset":3247},"end":{"line":96,"column":145,"offset":3331}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":96,"column":145,"offset":3331},"end":{"line":96,"column":153,"offset":3339}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":96,"column":153,"offset":3339},"end":{"line":96,"column":178,"offset":3364}}}],"position":{"start":{"line":84,"column":1,"offset":2805},"end":{"line":96,"column":178,"offset":3364}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":98,"column":7,"offset":3372},"end":{"line":98,"column":10,"offset":3375}}}],"position":{"start":{"line":98,"column":1,"offset":3366},"end":{"line":98,"column":10,"offset":3375}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":100,"column":8,"offset":3384},"end":{"line":100,"column":17,"offset":3393}}}],"position":{"start":{"line":100,"column":1,"offset":3377},"end":{"line":100,"column":17,"offset":3393}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":101,"column":1,"offset":3394},"end":{"line":112,"column":4,"offset":3593}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":113,"column":1,"offset":3594},"end":{"line":113,"column":5,"offset":3598}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":115,"column":1,"offset":3600},"end":{"line":116,"column":1,"offset":3816}}},{"type":"raw","value":"<br>","position":{"start":{"line":116,"column":1,"offset":3816},"end":{"line":116,"column":5,"offset":3820}}},{"type":"text","value":"\n","position":{"start":{"line":116,"column":5,"offset":3820},"end":{"line":117,"column":1,"offset":3821}}},{"type":"raw","value":"<br>","position":{"start":{"line":117,"column":1,"offset":3821},"end":{"line":117,"column":5,"offset":3825}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":117,"column":5,"offset":3825},"end":{"line":118,"column":72,"offset":3897}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":118,"column":72,"offset":3897},"end":{"line":118,"column":81,"offset":3906}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":118,"column":81,"offset":3906},"end":{"line":119,"column":1,"offset":3925}}},{"type":"raw","value":"<br>","position":{"start":{"line":119,"column":1,"offset":3925},"end":{"line":119,"column":5,"offset":3929}}},{"type":"text","value":"\n","position":{"start":{"line":119,"column":5,"offset":3929},"end":{"line":120,"column":1,"offset":3930}}},{"type":"raw","value":"<br>","position":{"start":{"line":120,"column":1,"offset":3930},"end":{"line":120,"column":5,"offset":3934}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":120,"column":5,"offset":3934},"end":{"line":121,"column":10,"offset":3944}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":121,"column":10,"offset":3944},"end":{"line":121,"column":16,"offset":3950}}},{"type":"text","value":" gets called with ","position":{"start":{"line":121,"column":16,"offset":3950},"end":{"line":121,"column":34,"offset":3968}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":121,"column":34,"offset":3968},"end":{"line":121,"column":42,"offset":3976}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":121,"column":42,"offset":3976},"end":{"line":122,"column":24,"offset":4001}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":122,"column":24,"offset":4001},"end":{"line":122,"column":33,"offset":4010}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":122,"column":33,"offset":4010},"end":{"line":122,"column":107,"offset":4084}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":122,"column":107,"offset":4084},"end":{"line":122,"column":116,"offset":4093}}},{"type":"text","value":" is false because ","position":{"start":{"line":122,"column":116,"offset":4093},"end":{"line":122,"column":134,"offset":4111}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":122,"column":134,"offset":4111},"end":{"line":122,"column":137,"offset":4114}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":122,"column":137,"offset":4114},"end":{"line":122,"column":161,"offset":4138}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":122,"column":161,"offset":4138},"end":{"line":122,"column":167,"offset":4144}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":122,"column":167,"offset":4144},"end":{"line":122,"column":192,"offset":4169}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":122,"column":192,"offset":4169},"end":{"line":122,"column":200,"offset":4177}}},{"type":"text","value":". This is because ","position":{"start":{"line":122,"column":200,"offset":4177},"end":{"line":122,"column":218,"offset":4195}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":122,"column":218,"offset":4195},"end":{"line":122,"column":224,"offset":4201}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":122,"column":224,"offset":4201},"end":{"line":122,"column":245,"offset":4222}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":122,"column":245,"offset":4222},"end":{"line":122,"column":252,"offset":4229}}},{"type":"text","value":" and ","position":{"start":{"line":122,"column":252,"offset":4229},"end":{"line":122,"column":257,"offset":4234}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":122,"column":257,"offset":4234},"end":{"line":122,"column":260,"offset":4237}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":122,"column":260,"offset":4237},"end":{"line":122,"column":285,"offset":4262}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":122,"column":285,"offset":4262},"end":{"line":122,"column":291,"offset":4268}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":122,"column":291,"offset":4268},"end":{"line":123,"column":96,"offset":4394}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":123,"column":96,"offset":4394},"end":{"line":123,"column":111,"offset":4409}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":123,"column":111,"offset":4409},"end":{"line":123,"column":182,"offset":4480}}}],"position":{"start":{"line":115,"column":1,"offset":3600},"end":{"line":123,"column":182,"offset":4480}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":125,"column":8,"offset":4489},"end":{"line":125,"column":19,"offset":4500}}}],"position":{"start":{"line":125,"column":1,"offset":4482},"end":{"line":125,"column":19,"offset":4500}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":126,"column":1,"offset":4501},"end":{"line":126,"column":14,"offset":4514}}}],"position":{"start":{"line":126,"column":1,"offset":4501},"end":{"line":126,"column":14,"offset":4514}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":127,"column":1,"offset":4515},"end":{"line":142,"column":4,"offset":4930}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":143,"column":1,"offset":4931},"end":{"line":143,"column":5,"offset":4935}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":145,"column":1,"offset":4937},"end":{"line":145,"column":141,"offset":5077}}}],"position":{"start":{"line":145,"column":1,"offset":4937},"end":{"line":145,"column":141,"offset":5077}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":147,"column":8,"offset":5086},"end":{"line":147,"column":30,"offset":5108}}}],"position":{"start":{"line":147,"column":1,"offset":5079},"end":{"line":147,"column":30,"offset":5108}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":148,"column":1,"offset":5109},"end":{"line":148,"column":199,"offset":5307}}}],"position":{"start":{"line":148,"column":1,"offset":5109},"end":{"line":148,"column":199,"offset":5307}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":150,"column":8,"offset":5316},"end":{"line":150,"column":30,"offset":5338}}}],"position":{"start":{"line":150,"column":1,"offset":5309},"end":{"line":150,"column":30,"offset":5338}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":152,"column":1,"offset":5340},"end":{"line":153,"column":1,"offset":5415}}},{"type":"raw","value":"<br>","position":{"start":{"line":153,"column":1,"offset":5415},"end":{"line":153,"column":5,"offset":5419}}},{"type":"text","value":"\n","position":{"start":{"line":153,"column":5,"offset":5419},"end":{"line":154,"column":1,"offset":5420}}},{"type":"raw","value":"<br>","position":{"start":{"line":154,"column":1,"offset":5420},"end":{"line":154,"column":5,"offset":5424}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":154,"column":5,"offset":5424},"end":{"line":156,"column":1,"offset":5486}}},{"type":"raw","value":"<br>","position":{"start":{"line":156,"column":1,"offset":5486},"end":{"line":156,"column":5,"offset":5490}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":156,"column":5,"offset":5490},"end":{"line":157,"column":1,"offset":5493}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":157,"column":1,"offset":5493},"end":{"line":157,"column":11,"offset":5503}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":157,"column":11,"offset":5503},"end":{"line":157,"column":19,"offset":5511}}},{"type":"text","value":" and ","position":{"start":{"line":157,"column":19,"offset":5511},"end":{"line":157,"column":24,"offset":5516}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":157,"column":24,"offset":5516},"end":{"line":157,"column":34,"offset":5526}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":157,"column":34,"offset":5526},"end":{"line":158,"column":1,"offset":5575}}},{"type":"raw","value":"<br>","position":{"start":{"line":158,"column":1,"offset":5575},"end":{"line":158,"column":5,"offset":5579}}}],"position":{"start":{"line":152,"column":1,"offset":5340},"end":{"line":158,"column":5,"offset":5579}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":160,"column":8,"offset":5588},"end":{"line":160,"column":12,"offset":5592}}}],"position":{"start":{"line":160,"column":1,"offset":5581},"end":{"line":160,"column":12,"offset":5592}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":161,"column":1,"offset":5593},"end":{"line":166,"column":4,"offset":5704}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":167,"column":1,"offset":5705},"end":{"line":168,"column":5,"offset":5714}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":170,"column":1,"offset":5716},"end":{"line":170,"column":7,"offset":5722}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":170,"column":7,"offset":5722},"end":{"line":172,"column":1,"offset":5804}}},{"type":"raw","value":"<br>","position":{"start":{"line":172,"column":1,"offset":5804},"end":{"line":172,"column":5,"offset":5808}}},{"type":"text","value":"\n","position":{"start":{"line":172,"column":5,"offset":5808},"end":{"line":173,"column":1,"offset":5809}}},{"type":"raw","value":"<br>","position":{"start":{"line":173,"column":1,"offset":5809},"end":{"line":173,"column":5,"offset":5813}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":173,"column":5,"offset":5813},"end":{"line":174,"column":10,"offset":5823}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":174,"column":10,"offset":5823},"end":{"line":174,"column":14,"offset":5827}}},{"type":"text","value":". Since ","position":{"start":{"line":174,"column":14,"offset":5827},"end":{"line":174,"column":22,"offset":5835}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":174,"column":22,"offset":5835},"end":{"line":174,"column":30,"offset":5843}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":174,"column":30,"offset":5843},"end":{"line":174,"column":50,"offset":5863}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":174,"column":50,"offset":5863},"end":{"line":174,"column":53,"offset":5866}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":174,"column":53,"offset":5866},"end":{"line":174,"column":90,"offset":5903}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":174,"column":90,"offset":5903},"end":{"line":174,"column":96,"offset":5909}}},{"type":"text","value":".\n","position":{"start":{"line":174,"column":96,"offset":5909},"end":{"line":175,"column":1,"offset":5912}}},{"type":"raw","value":"<br>","position":{"start":{"line":175,"column":1,"offset":5912},"end":{"line":175,"column":5,"offset":5916}}},{"type":"text","value":"\n","position":{"start":{"line":175,"column":5,"offset":5916},"end":{"line":176,"column":1,"offset":5917}}},{"type":"raw","value":"<br>","position":{"start":{"line":176,"column":1,"offset":5917},"end":{"line":176,"column":5,"offset":5921}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":176,"column":5,"offset":5921},"end":{"line":177,"column":14,"offset":5935}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":177,"column":14,"offset":5935},"end":{"line":177,"column":18,"offset":5939}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":177,"column":18,"offset":5939},"end":{"line":177,"column":90,"offset":6011}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":177,"column":90,"offset":6011},"end":{"line":177,"column":94,"offset":6015}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":177,"column":94,"offset":6015},"end":{"line":177,"column":125,"offset":6046}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":177,"column":125,"offset":6046},"end":{"line":177,"column":131,"offset":6052}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":177,"column":131,"offset":6052},"end":{"line":178,"column":1,"offset":6067}}},{"type":"raw","value":"<br>","position":{"start":{"line":178,"column":1,"offset":6067},"end":{"line":178,"column":5,"offset":6071}}},{"type":"text","value":"\n","position":{"start":{"line":178,"column":5,"offset":6071},"end":{"line":179,"column":1,"offset":6072}}},{"type":"raw","value":"<br>","position":{"start":{"line":179,"column":1,"offset":6072},"end":{"line":179,"column":5,"offset":6076}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":179,"column":5,"offset":6076},"end":{"line":180,"column":14,"offset":6090}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":180,"column":14,"offset":6090},"end":{"line":180,"column":18,"offset":6094}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":180,"column":18,"offset":6094},"end":{"line":180,"column":37,"offset":6113}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":180,"column":37,"offset":6113},"end":{"line":180,"column":40,"offset":6116}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":180,"column":40,"offset":6116},"end":{"line":180,"column":77,"offset":6153}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":180,"column":77,"offset":6153},"end":{"line":180,"column":81,"offset":6157}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":180,"column":81,"offset":6157},"end":{"line":180,"column":99,"offset":6175}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":180,"column":99,"offset":6175},"end":{"line":180,"column":102,"offset":6178}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":180,"column":102,"offset":6178},"end":{"line":180,"column":133,"offset":6209}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":180,"column":133,"offset":6209},"end":{"line":180,"column":139,"offset":6215}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":180,"column":139,"offset":6215},"end":{"line":180,"column":167,"offset":6243}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":180,"column":167,"offset":6243},"end":{"line":180,"column":171,"offset":6247}}},{"type":"text","value":".\n","position":{"start":{"line":180,"column":171,"offset":6247},"end":{"line":181,"column":1,"offset":6249}}},{"type":"raw","value":"<br>","position":{"start":{"line":181,"column":1,"offset":6249},"end":{"line":181,"column":5,"offset":6253}}},{"type":"text","value":"\n","position":{"start":{"line":181,"column":5,"offset":6253},"end":{"line":182,"column":1,"offset":6254}}},{"type":"raw","value":"<br>","position":{"start":{"line":182,"column":1,"offset":6254},"end":{"line":182,"column":5,"offset":6258}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":182,"column":5,"offset":6258},"end":{"line":184,"column":1,"offset":6278}}},{"type":"raw","value":"<br>","position":{"start":{"line":184,"column":1,"offset":6278},"end":{"line":184,"column":5,"offset":6282}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":184,"column":5,"offset":6282},"end":{"line":185,"column":6,"offset":6288}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":185,"column":6,"offset":6288},"end":{"line":185,"column":12,"offset":6294}}},{"type":"text","value":" does not have an ","position":{"start":{"line":185,"column":12,"offset":6294},"end":{"line":185,"column":30,"offset":6312}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":185,"column":30,"offset":6312},"end":{"line":185,"column":36,"offset":6318}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":185,"column":36,"offset":6318},"end":{"line":185,"column":62,"offset":6344}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":185,"column":62,"offset":6344},"end":{"line":185,"column":75,"offset":6357}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":185,"column":75,"offset":6357},"end":{"line":185,"column":159,"offset":6441}}}],"position":{"start":{"line":170,"column":1,"offset":5716},"end":{"line":185,"column":159,"offset":6441}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":187,"column":8,"offset":6450},"end":{"line":187,"column":41,"offset":6483}}}],"position":{"start":{"line":187,"column":1,"offset":6443},"end":{"line":187,"column":41,"offset":6483}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":188,"column":1,"offset":6484},"end":{"line":193,"column":4,"offset":6559}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":194,"column":1,"offset":6560},"end":{"line":195,"column":1,"offset":6579}}},{"type":"raw","value":"<br>","position":{"start":{"line":195,"column":1,"offset":6579},"end":{"line":195,"column":5,"offset":6583}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":195,"column":5,"offset":6583},"end":{"line":197,"column":5,"offset":6721}}},{"type":"raw","value":"<br>","position":{"start":{"line":197,"column":5,"offset":6721},"end":{"line":197,"column":9,"offset":6725}}},{"type":"text","value":"\n","position":{"start":{"line":197,"column":9,"offset":6725},"end":{"line":198,"column":5,"offset":6730}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":198,"column":5,"offset":6730},"end":{"line":198,"column":27,"offset":6752}}},{"type":"text","value":"\n","position":{"start":{"line":198,"column":27,"offset":6752},"end":{"line":199,"column":5,"offset":6757}}},{"type":"raw","value":"<br>","position":{"start":{"line":199,"column":5,"offset":6757},"end":{"line":199,"column":9,"offset":6761}}},{"type":"text","value":"\n","position":{"start":{"line":199,"column":9,"offset":6761},"end":{"line":200,"column":5,"offset":6766}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":200,"column":5,"offset":6766},"end":{"line":200,"column":12,"offset":6773}}},{"type":"text","value":" and ","position":{"start":{"line":200,"column":12,"offset":6773},"end":{"line":200,"column":17,"offset":6778}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":200,"column":17,"offset":6778},"end":{"line":200,"column":25,"offset":6786}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":200,"column":25,"offset":6786},"end":{"line":200,"column":63,"offset":6824}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":200,"column":63,"offset":6824},"end":{"line":200,"column":66,"offset":6827}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":200,"column":66,"offset":6827},"end":{"line":200,"column":86,"offset":6847}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":200,"column":86,"offset":6847},"end":{"line":200,"column":89,"offset":6850}}},{"type":"text","value":" will be called with ","position":{"start":{"line":200,"column":89,"offset":6850},"end":{"line":200,"column":110,"offset":6871}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":200,"column":110,"offset":6871},"end":{"line":200,"column":119,"offset":6880}}},{"type":"text","value":".\n","position":{"start":{"line":200,"column":119,"offset":6880},"end":{"line":201,"column":1,"offset":6882}}},{"type":"raw","value":"<br>","position":{"start":{"line":201,"column":1,"offset":6882},"end":{"line":201,"column":5,"offset":6886}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":201,"column":5,"offset":6886},"end":{"line":203,"column":1,"offset":6902}}},{"type":"raw","value":"<br>","position":{"start":{"line":203,"column":1,"offset":6902},"end":{"line":203,"column":5,"offset":6906}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":203,"column":5,"offset":6906},"end":{"line":205,"column":5,"offset":7013}}},{"type":"raw","value":"<br>","position":{"start":{"line":205,"column":5,"offset":7013},"end":{"line":205,"column":9,"offset":7017}}},{"type":"text","value":"\n","position":{"start":{"line":205,"column":9,"offset":7017},"end":{"line":206,"column":1,"offset":7018}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":206,"column":1,"offset":7018},"end":{"line":206,"column":23,"offset":7040}}},{"type":"text","value":" turns into ","position":{"start":{"line":206,"column":23,"offset":7040},"end":{"line":206,"column":35,"offset":7052}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":206,"column":35,"offset":7052},"end":{"line":206,"column":61,"offset":7078}}},{"type":"text","value":"\n","position":{"start":{"line":206,"column":61,"offset":7078},"end":{"line":207,"column":1,"offset":7079}}},{"type":"raw","value":"<br>","position":{"start":{"line":207,"column":1,"offset":7079},"end":{"line":207,"column":5,"offset":7083}}},{"type":"text","value":"\nNow ","position":{"start":{"line":207,"column":5,"offset":7083},"end":{"line":208,"column":5,"offset":7088}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":208,"column":5,"offset":7088},"end":{"line":208,"column":8,"offset":7091}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":208,"column":8,"offset":7091},"end":{"line":208,"column":58,"offset":7141}}}],"position":{"start":{"line":194,"column":1,"offset":6560},"end":{"line":208,"column":58,"offset":7141}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":210,"column":1,"offset":7143},"end":{"line":211,"column":1,"offset":7161}}},{"type":"raw","value":"<br>","position":{"start":{"line":211,"column":1,"offset":7161},"end":{"line":211,"column":5,"offset":7165}}}],"position":{"start":{"line":210,"column":1,"offset":7143},"end":{"line":211,"column":5,"offset":7165}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":212,"column":1,"offset":7166},"end":{"line":214,"column":4,"offset":7196}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":215,"column":1,"offset":7197},"end":{"line":215,"column":13,"offset":7209}}}],"position":{"start":{"line":215,"column":1,"offset":7197},"end":{"line":215,"column":13,"offset":7209}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":216,"column":1,"offset":7210},"end":{"line":222,"column":4,"offset":7289}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":223,"column":1,"offset":7290},"end":{"line":223,"column":8,"offset":7297}}}],"position":{"start":{"line":223,"column":1,"offset":7290},"end":{"line":223,"column":8,"offset":7297}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":224,"column":1,"offset":7298},"end":{"line":231,"column":4,"offset":7422}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":232,"column":1,"offset":7423},"end":{"line":233,"column":5,"offset":7432}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":235,"column":1,"offset":7434},"end":{"line":235,"column":11,"offset":7444}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":235,"column":11,"offset":7444},"end":{"line":235,"column":24,"offset":7457}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":235,"column":24,"offset":7457},"end":{"line":235,"column":107,"offset":7540}}}],"position":{"start":{"line":235,"column":1,"offset":7434},"end":{"line":235,"column":107,"offset":7540}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":237,"column":7,"offset":7548},"end":{"line":237,"column":10,"offset":7551}}}],"position":{"start":{"line":237,"column":1,"offset":7542},"end":{"line":237,"column":10,"offset":7551}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":238,"column":7,"offset":7558},"end":{"line":238,"column":10,"offset":7561}}}],"position":{"start":{"line":238,"column":1,"offset":7552},"end":{"line":238,"column":10,"offset":7561}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":240,"column":6,"offset":7568},"end":{"line":240,"column":10,"offset":7572}}}],"position":{"start":{"line":240,"column":1,"offset":7563},"end":{"line":240,"column":10,"offset":7572}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":241,"column":7,"offset":7579},"end":{"line":241,"column":13,"offset":7585}}}],"position":{"start":{"line":241,"column":1,"offset":7573},"end":{"line":241,"column":13,"offset":7585}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":242,"column":1,"offset":7586},"end":{"line":242,"column":49,"offset":7634}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":242,"column":49,"offset":7634},"end":{"line":242,"column":57,"offset":7642}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":242,"column":57,"offset":7642},"end":{"line":242,"column":133,"offset":7718}}}],"position":{"start":{"line":242,"column":1,"offset":7586},"end":{"line":242,"column":133,"offset":7718}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":243,"column":1,"offset":7719},"end":{"line":253,"column":4,"offset":7914}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":254,"column":1,"offset":7915},"end":{"line":254,"column":5,"offset":7919}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":257,"column":1,"offset":7922},"end":{"line":258,"column":1,"offset":8004}}},{"type":"raw","value":"<br>","position":{"start":{"line":258,"column":1,"offset":8004},"end":{"line":258,"column":5,"offset":8008}}},{"type":"text","value":"\n","position":{"start":{"line":258,"column":5,"offset":8008},"end":{"line":259,"column":1,"offset":8009}}},{"type":"raw","value":"<br>","position":{"start":{"line":259,"column":1,"offset":8009},"end":{"line":259,"column":5,"offset":8013}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":259,"column":5,"offset":8013},"end":{"line":260,"column":26,"offset":8039}}}],"position":{"start":{"line":257,"column":1,"offset":7922},"end":{"line":260,"column":26,"offset":8039}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":261,"column":1,"offset":8040},"end":{"line":266,"column":4,"offset":8168}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":267,"column":1,"offset":8169},"end":{"line":267,"column":14,"offset":8182}}}],"position":{"start":{"line":267,"column":1,"offset":8169},"end":{"line":267,"column":14,"offset":8182}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":269,"column":1,"offset":8184},"end":{"line":282,"column":4,"offset":8466}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":284,"column":1,"offset":8468},"end":{"line":285,"column":5,"offset":8477}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":288,"column":7,"offset":8486},"end":{"line":288,"column":13,"offset":8492}}}],"position":{"start":{"line":288,"column":1,"offset":8480},"end":{"line":288,"column":13,"offset":8492}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":288,"column":13,"offset":8492}}}}