{"expireTime":9007200842251411000,"key":"transformer-remark-markdown-html-ast-b65dbdf339714f04e0595173460c65dc-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833}}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847}}},{"type":"raw","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860}}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865}}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879}}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884}}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895}}},{"type":"raw","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900}}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901}}},{"type":"raw","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906}}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911}}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912}}},{"type":"raw","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916}}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043}}},{"type":"raw","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047}}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048}}},{"type":"raw","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052}}},{"type":"text","value":"\nEnvironment: The name-object pairs the interpreter keeps in memory.\n","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":34,"column":1,"offset":1121}}},{"type":"raw","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1121},"end":{"line":34,"column":5,"offset":1125}}},{"type":"text","value":"\n","position":{"start":{"line":34,"column":5,"offset":1125},"end":{"line":35,"column":1,"offset":1126}}},{"type":"raw","value":"<br>","position":{"start":{"line":35,"column":1,"offset":1126},"end":{"line":35,"column":5,"offset":1130}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":35,"column":5,"offset":1130}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Compound Procedures can be used to build on top of other Compound Procedures:\n","position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":1,"offset":1210}}},{"type":"raw","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1210},"end":{"line":38,"column":5,"offset":1214}}}],"position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":5,"offset":1214}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (sum-of-squares x y)\n(+ (square x) (square y))</code></pre></div>","position":{"start":{"line":39,"column":1,"offset":1215},"end":{"line":42,"column":4,"offset":1277}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":43,"column":1,"offset":1278},"end":{"line":43,"column":5,"offset":1282}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Compound Procedure: procedure that you make out of other procedures.","position":{"start":{"line":45,"column":1,"offset":1284},"end":{"line":45,"column":69,"offset":1352}}}],"position":{"start":{"line":45,"column":1,"offset":1284},"end":{"line":45,"column":69,"offset":1352}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Primitive Procedure: procedure built into the language ex: ","position":{"start":{"line":47,"column":1,"offset":1354},"end":{"line":47,"column":60,"offset":1413}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":47,"column":60,"offset":1413},"end":{"line":47,"column":63,"offset":1416}}}],"position":{"start":{"line":47,"column":1,"offset":1354},"end":{"line":47,"column":63,"offset":1416}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Both are used exactly the same.\n","position":{"start":{"line":49,"column":1,"offset":1418},"end":{"line":50,"column":1,"offset":1450}}},{"type":"raw","value":"<br>","position":{"start":{"line":50,"column":1,"offset":1450},"end":{"line":50,"column":5,"offset":1454}}}],"position":{"start":{"line":49,"column":1,"offset":1418},"end":{"line":50,"column":5,"offset":1454}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":52,"column":7,"offset":1462},"end":{"line":52,"column":10,"offset":1465}}}],"position":{"start":{"line":52,"column":1,"offset":1456},"end":{"line":52,"column":10,"offset":1465}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":53,"column":7,"offset":1472},"end":{"line":53,"column":10,"offset":1475}}}],"position":{"start":{"line":53,"column":1,"offset":1466},"end":{"line":53,"column":10,"offset":1475}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":55,"column":6,"offset":1482},"end":{"line":55,"column":14,"offset":1490}}}],"position":{"start":{"line":55,"column":1,"offset":1477},"end":{"line":55,"column":14,"offset":1490}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":56,"column":7,"offset":1497},"end":{"line":56,"column":10,"offset":1500}}}],"position":{"start":{"line":56,"column":1,"offset":1491},"end":{"line":56,"column":10,"offset":1500}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":58,"column":8,"offset":1509},"end":{"line":58,"column":30,"offset":1531}}}],"position":{"start":{"line":58,"column":1,"offset":1502},"end":{"line":58,"column":30,"offset":1531}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":60,"column":1,"offset":1533},"end":{"line":61,"column":1,"offset":1677}}},{"type":"raw","value":"<br>","position":{"start":{"line":61,"column":1,"offset":1677},"end":{"line":61,"column":5,"offset":1681}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":61,"column":5,"offset":1681},"end":{"line":61,"column":16,"offset":1692}}},{"type":"raw","value":"<br>","position":{"start":{"line":61,"column":16,"offset":1692},"end":{"line":61,"column":20,"offset":1696}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":61,"column":20,"offset":1696},"end":{"line":63,"column":1,"offset":1840}}},{"type":"raw","value":"<br>","position":{"start":{"line":63,"column":1,"offset":1840},"end":{"line":63,"column":5,"offset":1844}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":63,"column":5,"offset":1844},"end":{"line":63,"column":16,"offset":1855}}},{"type":"raw","value":"<br>","position":{"start":{"line":63,"column":16,"offset":1855},"end":{"line":63,"column":20,"offset":1859}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":63,"column":20,"offset":1859},"end":{"line":64,"column":45,"offset":1904}}},{"type":"raw","value":"<br>","position":{"start":{"line":64,"column":45,"offset":1904},"end":{"line":64,"column":49,"offset":1908}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":64,"column":49,"offset":1908},"end":{"line":64,"column":65,"offset":1924}}},{"type":"raw","value":"<br>","position":{"start":{"line":64,"column":65,"offset":1924},"end":{"line":64,"column":69,"offset":1928}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":64,"column":69,"offset":1928},"end":{"line":66,"column":1,"offset":1971}}},{"type":"raw","value":"<br>","position":{"start":{"line":66,"column":1,"offset":1971},"end":{"line":66,"column":5,"offset":1975}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":66,"column":5,"offset":1975},"end":{"line":66,"column":22,"offset":1992}}},{"type":"raw","value":"<br>","position":{"start":{"line":66,"column":22,"offset":1992},"end":{"line":66,"column":26,"offset":1996}}},{"type":"text","value":"\n","position":{"start":{"line":66,"column":26,"offset":1996},"end":{"line":67,"column":1,"offset":1997}}},{"type":"raw","value":"<br>","position":{"start":{"line":67,"column":1,"offset":1997},"end":{"line":67,"column":5,"offset":2001}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":67,"column":5,"offset":2001},"end":{"line":69,"column":1,"offset":2119}}},{"type":"raw","value":"<br>","position":{"start":{"line":69,"column":1,"offset":2119},"end":{"line":69,"column":5,"offset":2123}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":69,"column":5,"offset":2123},"end":{"line":71,"column":1,"offset":2244}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":71,"column":1,"offset":2244},"end":{"line":71,"column":12,"offset":2255}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":71,"column":12,"offset":2255},"end":{"line":71,"column":68,"offset":2311}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":71,"column":68,"offset":2311},"end":{"line":71,"column":79,"offset":2322}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":71,"column":79,"offset":2322},"end":{"line":71,"column":106,"offset":2349}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":71,"column":106,"offset":2349},"end":{"line":71,"column":109,"offset":2352}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":71,"column":109,"offset":2352},"end":{"line":71,"column":189,"offset":2432}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":71,"column":189,"offset":2432},"end":{"line":71,"column":192,"offset":2435}}},{"type":"text","value":" to get 3.","position":{"start":{"line":71,"column":192,"offset":2435},"end":{"line":71,"column":202,"offset":2445}}}],"position":{"start":{"line":60,"column":1,"offset":1533},"end":{"line":71,"column":202,"offset":2445}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":73,"column":8,"offset":2454},"end":{"line":73,"column":14,"offset":2460}}}],"position":{"start":{"line":73,"column":1,"offset":2447},"end":{"line":73,"column":14,"offset":2460}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":74,"column":1,"offset":2461},"end":{"line":74,"column":9,"offset":2469}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":74,"column":9,"offset":2469},"end":{"line":74,"column":73,"offset":2533}}}],"position":{"start":{"line":74,"column":1,"offset":2461},"end":{"line":74,"column":73,"offset":2533}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":75,"column":1,"offset":2534},"end":{"line":78,"column":4,"offset":2573}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":79,"column":1,"offset":2574},"end":{"line":79,"column":5,"offset":2578}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":81,"column":1,"offset":2580},"end":{"line":81,"column":72,"offset":2651}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":81,"column":72,"offset":2651},"end":{"line":81,"column":80,"offset":2659}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":81,"column":80,"offset":2659},"end":{"line":82,"column":1,"offset":2683}}},{"type":"raw","value":"<br>","position":{"start":{"line":82,"column":1,"offset":2683},"end":{"line":82,"column":5,"offset":2687}}},{"type":"text","value":"\n","position":{"start":{"line":82,"column":5,"offset":2687},"end":{"line":83,"column":1,"offset":2688}}},{"type":"raw","value":"<br>","position":{"start":{"line":83,"column":1,"offset":2688},"end":{"line":83,"column":5,"offset":2692}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":83,"column":5,"offset":2692},"end":{"line":84,"column":184,"offset":2876}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":84,"column":184,"offset":2876},"end":{"line":84,"column":187,"offset":2879}}},{"type":"text","value":".\n","position":{"start":{"line":84,"column":187,"offset":2879},"end":{"line":85,"column":1,"offset":2882}}},{"type":"raw","value":"<br>","position":{"start":{"line":85,"column":1,"offset":2882},"end":{"line":85,"column":5,"offset":2886}}},{"type":"text","value":"\n","position":{"start":{"line":85,"column":5,"offset":2886},"end":{"line":86,"column":1,"offset":2887}}},{"type":"raw","value":"<br>","position":{"start":{"line":86,"column":1,"offset":2887},"end":{"line":86,"column":5,"offset":2891}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":86,"column":5,"offset":2891},"end":{"line":87,"column":27,"offset":2918}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":87,"column":27,"offset":2918},"end":{"line":87,"column":35,"offset":2926}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":87,"column":35,"offset":2926},"end":{"line":87,"column":86,"offset":2977}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":87,"column":86,"offset":2977},"end":{"line":87,"column":95,"offset":2986}}},{"type":"text","value":". ","position":{"start":{"line":87,"column":95,"offset":2986},"end":{"line":87,"column":97,"offset":2988}}}],"position":{"start":{"line":81,"column":1,"offset":2580},"end":{"line":87,"column":97,"offset":2988}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":89,"column":1,"offset":2990},"end":{"line":89,"column":6,"offset":2995}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":91,"column":1,"offset":2997},"end":{"line":92,"column":1,"offset":3041}}},{"type":"raw","value":"<br>","position":{"start":{"line":92,"column":1,"offset":3041},"end":{"line":92,"column":5,"offset":3045}}},{"type":"text","value":"\n","position":{"start":{"line":92,"column":5,"offset":3045},"end":{"line":93,"column":1,"offset":3046}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":93,"column":1,"offset":3046},"end":{"line":93,"column":22,"offset":3067}}},{"type":"text","value":"\n","position":{"start":{"line":93,"column":22,"offset":3067},"end":{"line":94,"column":1,"offset":3068}}},{"type":"raw","value":"<br>","position":{"start":{"line":94,"column":1,"offset":3068},"end":{"line":94,"column":5,"offset":3072}}}],"position":{"start":{"line":91,"column":1,"offset":2997},"end":{"line":94,"column":5,"offset":3072}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":96,"column":1,"offset":3074},"end":{"line":96,"column":152,"offset":3225}}}],"position":{"start":{"line":96,"column":1,"offset":3074},"end":{"line":96,"column":152,"offset":3225}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":98,"column":8,"offset":3234},"end":{"line":98,"column":20,"offset":3246}}}],"position":{"start":{"line":98,"column":1,"offset":3227},"end":{"line":98,"column":20,"offset":3246}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":100,"column":1,"offset":3248},"end":{"line":100,"column":56,"offset":3303}}}],"position":{"start":{"line":100,"column":1,"offset":3248},"end":{"line":100,"column":56,"offset":3303}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":101,"column":1,"offset":3304},"end":{"line":106,"column":4,"offset":3395}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":107,"column":1,"offset":3396},"end":{"line":107,"column":5,"offset":3400}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":109,"column":1,"offset":3402},"end":{"line":109,"column":37,"offset":3438}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":109,"column":37,"offset":3438},"end":{"line":109,"column":41,"offset":3442}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":109,"column":41,"offset":3442},"end":{"line":110,"column":1,"offset":3459}}},{"type":"raw","value":"<br>","position":{"start":{"line":110,"column":1,"offset":3459},"end":{"line":110,"column":5,"offset":3463}}},{"type":"text","value":"\n","position":{"start":{"line":110,"column":5,"offset":3463},"end":{"line":111,"column":1,"offset":3464}}},{"type":"raw","value":"<br>","position":{"start":{"line":111,"column":1,"offset":3464},"end":{"line":111,"column":5,"offset":3468}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":111,"column":5,"offset":3468},"end":{"line":112,"column":66,"offset":3534}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":112,"column":66,"offset":3534},"end":{"line":112,"column":89,"offset":3557}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":112,"column":89,"offset":3557},"end":{"line":113,"column":1,"offset":3597}}},{"type":"raw","value":"<br>","position":{"start":{"line":113,"column":1,"offset":3597},"end":{"line":113,"column":5,"offset":3601}}},{"type":"text","value":"\n","position":{"start":{"line":113,"column":5,"offset":3601},"end":{"line":114,"column":1,"offset":3602}}},{"type":"raw","value":"<br>","position":{"start":{"line":114,"column":1,"offset":3602},"end":{"line":114,"column":5,"offset":3606}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":114,"column":5,"offset":3606},"end":{"line":115,"column":21,"offset":3627}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":115,"column":21,"offset":3627},"end":{"line":115,"column":25,"offset":3631}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":115,"column":25,"offset":3631},"end":{"line":116,"column":1,"offset":3685}}},{"type":"raw","value":"<br>","position":{"start":{"line":116,"column":1,"offset":3685},"end":{"line":116,"column":5,"offset":3689}}},{"type":"text","value":"\n","position":{"start":{"line":116,"column":5,"offset":3689},"end":{"line":117,"column":1,"offset":3690}}},{"type":"raw","value":"<br>","position":{"start":{"line":117,"column":1,"offset":3690},"end":{"line":117,"column":5,"offset":3694}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":117,"column":5,"offset":3694},"end":{"line":118,"column":21,"offset":3715}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":118,"column":21,"offset":3715},"end":{"line":118,"column":25,"offset":3719}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":118,"column":25,"offset":3719},"end":{"line":119,"column":1,"offset":3774}}},{"type":"raw","value":"<br>","position":{"start":{"line":119,"column":1,"offset":3774},"end":{"line":119,"column":5,"offset":3778}}},{"type":"text","value":"\n","position":{"start":{"line":119,"column":5,"offset":3778},"end":{"line":120,"column":1,"offset":3779}}},{"type":"raw","value":"<br>","position":{"start":{"line":120,"column":1,"offset":3779},"end":{"line":120,"column":5,"offset":3783}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":120,"column":5,"offset":3783},"end":{"line":121,"column":58,"offset":3841}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":121,"column":58,"offset":3841},"end":{"line":121,"column":61,"offset":3844}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":121,"column":61,"offset":3844},"end":{"line":121,"column":145,"offset":3928}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":121,"column":145,"offset":3928},"end":{"line":121,"column":153,"offset":3936}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":121,"column":153,"offset":3936},"end":{"line":121,"column":178,"offset":3961}}}],"position":{"start":{"line":109,"column":1,"offset":3402},"end":{"line":121,"column":178,"offset":3961}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":123,"column":7,"offset":3969},"end":{"line":123,"column":10,"offset":3972}}}],"position":{"start":{"line":123,"column":1,"offset":3963},"end":{"line":123,"column":10,"offset":3972}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":125,"column":8,"offset":3981},"end":{"line":125,"column":17,"offset":3990}}}],"position":{"start":{"line":125,"column":1,"offset":3974},"end":{"line":125,"column":17,"offset":3990}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":126,"column":1,"offset":3991},"end":{"line":137,"column":4,"offset":4190}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":138,"column":1,"offset":4191},"end":{"line":138,"column":5,"offset":4195}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":140,"column":1,"offset":4197},"end":{"line":141,"column":1,"offset":4413}}},{"type":"raw","value":"<br>","position":{"start":{"line":141,"column":1,"offset":4413},"end":{"line":141,"column":5,"offset":4417}}},{"type":"text","value":"\n","position":{"start":{"line":141,"column":5,"offset":4417},"end":{"line":142,"column":1,"offset":4418}}},{"type":"raw","value":"<br>","position":{"start":{"line":142,"column":1,"offset":4418},"end":{"line":142,"column":5,"offset":4422}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":142,"column":5,"offset":4422},"end":{"line":143,"column":72,"offset":4494}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":143,"column":72,"offset":4494},"end":{"line":143,"column":81,"offset":4503}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":143,"column":81,"offset":4503},"end":{"line":144,"column":1,"offset":4522}}},{"type":"raw","value":"<br>","position":{"start":{"line":144,"column":1,"offset":4522},"end":{"line":144,"column":5,"offset":4526}}},{"type":"text","value":"\n","position":{"start":{"line":144,"column":5,"offset":4526},"end":{"line":145,"column":1,"offset":4527}}},{"type":"raw","value":"<br>","position":{"start":{"line":145,"column":1,"offset":4527},"end":{"line":145,"column":5,"offset":4531}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":145,"column":5,"offset":4531},"end":{"line":146,"column":10,"offset":4541}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":146,"column":10,"offset":4541},"end":{"line":146,"column":16,"offset":4547}}},{"type":"text","value":" gets called with ","position":{"start":{"line":146,"column":16,"offset":4547},"end":{"line":146,"column":34,"offset":4565}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":146,"column":34,"offset":4565},"end":{"line":146,"column":42,"offset":4573}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":146,"column":42,"offset":4573},"end":{"line":147,"column":24,"offset":4598}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":147,"column":24,"offset":4598},"end":{"line":147,"column":33,"offset":4607}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":147,"column":33,"offset":4607},"end":{"line":147,"column":107,"offset":4681}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":147,"column":107,"offset":4681},"end":{"line":147,"column":116,"offset":4690}}},{"type":"text","value":" is false because ","position":{"start":{"line":147,"column":116,"offset":4690},"end":{"line":147,"column":134,"offset":4708}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":147,"column":134,"offset":4708},"end":{"line":147,"column":137,"offset":4711}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":147,"column":137,"offset":4711},"end":{"line":147,"column":161,"offset":4735}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":147,"column":161,"offset":4735},"end":{"line":147,"column":167,"offset":4741}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":147,"column":167,"offset":4741},"end":{"line":147,"column":192,"offset":4766}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":147,"column":192,"offset":4766},"end":{"line":147,"column":200,"offset":4774}}},{"type":"text","value":". This is because ","position":{"start":{"line":147,"column":200,"offset":4774},"end":{"line":147,"column":218,"offset":4792}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":147,"column":218,"offset":4792},"end":{"line":147,"column":224,"offset":4798}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":147,"column":224,"offset":4798},"end":{"line":147,"column":245,"offset":4819}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":147,"column":245,"offset":4819},"end":{"line":147,"column":252,"offset":4826}}},{"type":"text","value":" and ","position":{"start":{"line":147,"column":252,"offset":4826},"end":{"line":147,"column":257,"offset":4831}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":147,"column":257,"offset":4831},"end":{"line":147,"column":260,"offset":4834}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":147,"column":260,"offset":4834},"end":{"line":147,"column":285,"offset":4859}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":147,"column":285,"offset":4859},"end":{"line":147,"column":291,"offset":4865}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":147,"column":291,"offset":4865},"end":{"line":148,"column":96,"offset":4991}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":148,"column":96,"offset":4991},"end":{"line":148,"column":111,"offset":5006}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":148,"column":111,"offset":5006},"end":{"line":148,"column":182,"offset":5077}}}],"position":{"start":{"line":140,"column":1,"offset":4197},"end":{"line":148,"column":182,"offset":5077}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":150,"column":8,"offset":5086},"end":{"line":150,"column":19,"offset":5097}}}],"position":{"start":{"line":150,"column":1,"offset":5079},"end":{"line":150,"column":19,"offset":5097}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":151,"column":1,"offset":5098},"end":{"line":151,"column":14,"offset":5111}}}],"position":{"start":{"line":151,"column":1,"offset":5098},"end":{"line":151,"column":14,"offset":5111}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":152,"column":1,"offset":5112},"end":{"line":167,"column":4,"offset":5527}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":168,"column":1,"offset":5528},"end":{"line":168,"column":5,"offset":5532}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":170,"column":1,"offset":5534},"end":{"line":170,"column":141,"offset":5674}}}],"position":{"start":{"line":170,"column":1,"offset":5534},"end":{"line":170,"column":141,"offset":5674}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":172,"column":8,"offset":5683},"end":{"line":172,"column":30,"offset":5705}}}],"position":{"start":{"line":172,"column":1,"offset":5676},"end":{"line":172,"column":30,"offset":5705}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":173,"column":1,"offset":5706},"end":{"line":173,"column":199,"offset":5904}}}],"position":{"start":{"line":173,"column":1,"offset":5706},"end":{"line":173,"column":199,"offset":5904}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":175,"column":8,"offset":5913},"end":{"line":175,"column":30,"offset":5935}}}],"position":{"start":{"line":175,"column":1,"offset":5906},"end":{"line":175,"column":30,"offset":5935}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":177,"column":1,"offset":5937},"end":{"line":178,"column":1,"offset":6012}}},{"type":"raw","value":"<br>","position":{"start":{"line":178,"column":1,"offset":6012},"end":{"line":178,"column":5,"offset":6016}}},{"type":"text","value":"\n","position":{"start":{"line":178,"column":5,"offset":6016},"end":{"line":179,"column":1,"offset":6017}}},{"type":"raw","value":"<br>","position":{"start":{"line":179,"column":1,"offset":6017},"end":{"line":179,"column":5,"offset":6021}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":179,"column":5,"offset":6021},"end":{"line":181,"column":1,"offset":6083}}},{"type":"raw","value":"<br>","position":{"start":{"line":181,"column":1,"offset":6083},"end":{"line":181,"column":5,"offset":6087}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":181,"column":5,"offset":6087},"end":{"line":182,"column":1,"offset":6090}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":182,"column":1,"offset":6090},"end":{"line":182,"column":11,"offset":6100}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":182,"column":11,"offset":6100},"end":{"line":182,"column":19,"offset":6108}}},{"type":"text","value":" and ","position":{"start":{"line":182,"column":19,"offset":6108},"end":{"line":182,"column":24,"offset":6113}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":182,"column":24,"offset":6113},"end":{"line":182,"column":34,"offset":6123}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":182,"column":34,"offset":6123},"end":{"line":183,"column":1,"offset":6172}}},{"type":"raw","value":"<br>","position":{"start":{"line":183,"column":1,"offset":6172},"end":{"line":183,"column":5,"offset":6176}}}],"position":{"start":{"line":177,"column":1,"offset":5937},"end":{"line":183,"column":5,"offset":6176}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":185,"column":8,"offset":6185},"end":{"line":185,"column":12,"offset":6189}}}],"position":{"start":{"line":185,"column":1,"offset":6178},"end":{"line":185,"column":12,"offset":6189}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":186,"column":1,"offset":6190},"end":{"line":191,"column":4,"offset":6301}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":192,"column":1,"offset":6302},"end":{"line":193,"column":5,"offset":6311}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":195,"column":1,"offset":6313},"end":{"line":195,"column":7,"offset":6319}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":195,"column":7,"offset":6319},"end":{"line":197,"column":1,"offset":6401}}},{"type":"raw","value":"<br>","position":{"start":{"line":197,"column":1,"offset":6401},"end":{"line":197,"column":5,"offset":6405}}},{"type":"text","value":"\n","position":{"start":{"line":197,"column":5,"offset":6405},"end":{"line":198,"column":1,"offset":6406}}},{"type":"raw","value":"<br>","position":{"start":{"line":198,"column":1,"offset":6406},"end":{"line":198,"column":5,"offset":6410}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":198,"column":5,"offset":6410},"end":{"line":199,"column":10,"offset":6420}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":199,"column":10,"offset":6420},"end":{"line":199,"column":14,"offset":6424}}},{"type":"text","value":". Since ","position":{"start":{"line":199,"column":14,"offset":6424},"end":{"line":199,"column":22,"offset":6432}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":199,"column":22,"offset":6432},"end":{"line":199,"column":30,"offset":6440}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":199,"column":30,"offset":6440},"end":{"line":199,"column":50,"offset":6460}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":199,"column":50,"offset":6460},"end":{"line":199,"column":53,"offset":6463}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":199,"column":53,"offset":6463},"end":{"line":199,"column":90,"offset":6500}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":199,"column":90,"offset":6500},"end":{"line":199,"column":96,"offset":6506}}},{"type":"text","value":".\n","position":{"start":{"line":199,"column":96,"offset":6506},"end":{"line":200,"column":1,"offset":6509}}},{"type":"raw","value":"<br>","position":{"start":{"line":200,"column":1,"offset":6509},"end":{"line":200,"column":5,"offset":6513}}},{"type":"text","value":"\n","position":{"start":{"line":200,"column":5,"offset":6513},"end":{"line":201,"column":1,"offset":6514}}},{"type":"raw","value":"<br>","position":{"start":{"line":201,"column":1,"offset":6514},"end":{"line":201,"column":5,"offset":6518}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":201,"column":5,"offset":6518},"end":{"line":202,"column":14,"offset":6532}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":202,"column":14,"offset":6532},"end":{"line":202,"column":18,"offset":6536}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":202,"column":18,"offset":6536},"end":{"line":202,"column":90,"offset":6608}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":202,"column":90,"offset":6608},"end":{"line":202,"column":94,"offset":6612}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":202,"column":94,"offset":6612},"end":{"line":202,"column":125,"offset":6643}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":202,"column":125,"offset":6643},"end":{"line":202,"column":131,"offset":6649}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":202,"column":131,"offset":6649},"end":{"line":203,"column":1,"offset":6664}}},{"type":"raw","value":"<br>","position":{"start":{"line":203,"column":1,"offset":6664},"end":{"line":203,"column":5,"offset":6668}}},{"type":"text","value":"\n","position":{"start":{"line":203,"column":5,"offset":6668},"end":{"line":204,"column":1,"offset":6669}}},{"type":"raw","value":"<br>","position":{"start":{"line":204,"column":1,"offset":6669},"end":{"line":204,"column":5,"offset":6673}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":204,"column":5,"offset":6673},"end":{"line":205,"column":14,"offset":6687}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":205,"column":14,"offset":6687},"end":{"line":205,"column":18,"offset":6691}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":205,"column":18,"offset":6691},"end":{"line":205,"column":37,"offset":6710}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":205,"column":37,"offset":6710},"end":{"line":205,"column":40,"offset":6713}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":205,"column":40,"offset":6713},"end":{"line":205,"column":77,"offset":6750}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":205,"column":77,"offset":6750},"end":{"line":205,"column":81,"offset":6754}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":205,"column":81,"offset":6754},"end":{"line":205,"column":99,"offset":6772}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":205,"column":99,"offset":6772},"end":{"line":205,"column":102,"offset":6775}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":205,"column":102,"offset":6775},"end":{"line":205,"column":133,"offset":6806}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":205,"column":133,"offset":6806},"end":{"line":205,"column":139,"offset":6812}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":205,"column":139,"offset":6812},"end":{"line":205,"column":167,"offset":6840}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":205,"column":167,"offset":6840},"end":{"line":205,"column":171,"offset":6844}}},{"type":"text","value":".\n","position":{"start":{"line":205,"column":171,"offset":6844},"end":{"line":206,"column":1,"offset":6846}}},{"type":"raw","value":"<br>","position":{"start":{"line":206,"column":1,"offset":6846},"end":{"line":206,"column":5,"offset":6850}}},{"type":"text","value":"\n","position":{"start":{"line":206,"column":5,"offset":6850},"end":{"line":207,"column":1,"offset":6851}}},{"type":"raw","value":"<br>","position":{"start":{"line":207,"column":1,"offset":6851},"end":{"line":207,"column":5,"offset":6855}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":207,"column":5,"offset":6855},"end":{"line":209,"column":1,"offset":6875}}},{"type":"raw","value":"<br>","position":{"start":{"line":209,"column":1,"offset":6875},"end":{"line":209,"column":5,"offset":6879}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":209,"column":5,"offset":6879},"end":{"line":210,"column":6,"offset":6885}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":210,"column":6,"offset":6885},"end":{"line":210,"column":12,"offset":6891}}},{"type":"text","value":" does not have an ","position":{"start":{"line":210,"column":12,"offset":6891},"end":{"line":210,"column":30,"offset":6909}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":210,"column":30,"offset":6909},"end":{"line":210,"column":36,"offset":6915}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":210,"column":36,"offset":6915},"end":{"line":210,"column":62,"offset":6941}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":210,"column":62,"offset":6941},"end":{"line":210,"column":75,"offset":6954}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":210,"column":75,"offset":6954},"end":{"line":210,"column":159,"offset":7038}}}],"position":{"start":{"line":195,"column":1,"offset":6313},"end":{"line":210,"column":159,"offset":7038}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":212,"column":8,"offset":7047},"end":{"line":212,"column":41,"offset":7080}}}],"position":{"start":{"line":212,"column":1,"offset":7040},"end":{"line":212,"column":41,"offset":7080}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":213,"column":1,"offset":7081},"end":{"line":218,"column":4,"offset":7156}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":219,"column":1,"offset":7157},"end":{"line":220,"column":1,"offset":7176}}},{"type":"raw","value":"<br>","position":{"start":{"line":220,"column":1,"offset":7176},"end":{"line":220,"column":5,"offset":7180}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":220,"column":5,"offset":7180},"end":{"line":222,"column":5,"offset":7318}}},{"type":"raw","value":"<br>","position":{"start":{"line":222,"column":5,"offset":7318},"end":{"line":222,"column":9,"offset":7322}}},{"type":"text","value":"\n","position":{"start":{"line":222,"column":9,"offset":7322},"end":{"line":223,"column":5,"offset":7327}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":223,"column":5,"offset":7327},"end":{"line":223,"column":27,"offset":7349}}},{"type":"text","value":"\n","position":{"start":{"line":223,"column":27,"offset":7349},"end":{"line":224,"column":5,"offset":7354}}},{"type":"raw","value":"<br>","position":{"start":{"line":224,"column":5,"offset":7354},"end":{"line":224,"column":9,"offset":7358}}},{"type":"text","value":"\n","position":{"start":{"line":224,"column":9,"offset":7358},"end":{"line":225,"column":5,"offset":7363}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":225,"column":5,"offset":7363},"end":{"line":225,"column":12,"offset":7370}}},{"type":"text","value":" and ","position":{"start":{"line":225,"column":12,"offset":7370},"end":{"line":225,"column":17,"offset":7375}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":225,"column":17,"offset":7375},"end":{"line":225,"column":25,"offset":7383}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":225,"column":25,"offset":7383},"end":{"line":225,"column":63,"offset":7421}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":225,"column":63,"offset":7421},"end":{"line":225,"column":66,"offset":7424}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":225,"column":66,"offset":7424},"end":{"line":225,"column":86,"offset":7444}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":225,"column":86,"offset":7444},"end":{"line":225,"column":89,"offset":7447}}},{"type":"text","value":" will be called with ","position":{"start":{"line":225,"column":89,"offset":7447},"end":{"line":225,"column":110,"offset":7468}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":225,"column":110,"offset":7468},"end":{"line":225,"column":119,"offset":7477}}},{"type":"text","value":".\n","position":{"start":{"line":225,"column":119,"offset":7477},"end":{"line":226,"column":1,"offset":7479}}},{"type":"raw","value":"<br>","position":{"start":{"line":226,"column":1,"offset":7479},"end":{"line":226,"column":5,"offset":7483}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":226,"column":5,"offset":7483},"end":{"line":228,"column":1,"offset":7499}}},{"type":"raw","value":"<br>","position":{"start":{"line":228,"column":1,"offset":7499},"end":{"line":228,"column":5,"offset":7503}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":228,"column":5,"offset":7503},"end":{"line":230,"column":5,"offset":7610}}},{"type":"raw","value":"<br>","position":{"start":{"line":230,"column":5,"offset":7610},"end":{"line":230,"column":9,"offset":7614}}},{"type":"text","value":"\n","position":{"start":{"line":230,"column":9,"offset":7614},"end":{"line":231,"column":1,"offset":7615}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":231,"column":1,"offset":7615},"end":{"line":231,"column":23,"offset":7637}}},{"type":"text","value":" turns into ","position":{"start":{"line":231,"column":23,"offset":7637},"end":{"line":231,"column":35,"offset":7649}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":231,"column":35,"offset":7649},"end":{"line":231,"column":61,"offset":7675}}},{"type":"text","value":"\n","position":{"start":{"line":231,"column":61,"offset":7675},"end":{"line":232,"column":1,"offset":7676}}},{"type":"raw","value":"<br>","position":{"start":{"line":232,"column":1,"offset":7676},"end":{"line":232,"column":5,"offset":7680}}},{"type":"text","value":"\nNow ","position":{"start":{"line":232,"column":5,"offset":7680},"end":{"line":233,"column":5,"offset":7685}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":233,"column":5,"offset":7685},"end":{"line":233,"column":8,"offset":7688}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":233,"column":8,"offset":7688},"end":{"line":233,"column":58,"offset":7738}}}],"position":{"start":{"line":219,"column":1,"offset":7157},"end":{"line":233,"column":58,"offset":7738}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":235,"column":1,"offset":7740},"end":{"line":236,"column":1,"offset":7758}}},{"type":"raw","value":"<br>","position":{"start":{"line":236,"column":1,"offset":7758},"end":{"line":236,"column":5,"offset":7762}}}],"position":{"start":{"line":235,"column":1,"offset":7740},"end":{"line":236,"column":5,"offset":7762}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":237,"column":1,"offset":7763},"end":{"line":239,"column":4,"offset":7793}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":240,"column":1,"offset":7794},"end":{"line":240,"column":13,"offset":7806}}}],"position":{"start":{"line":240,"column":1,"offset":7794},"end":{"line":240,"column":13,"offset":7806}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":241,"column":1,"offset":7807},"end":{"line":247,"column":4,"offset":7886}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":248,"column":1,"offset":7887},"end":{"line":248,"column":8,"offset":7894}}}],"position":{"start":{"line":248,"column":1,"offset":7887},"end":{"line":248,"column":8,"offset":7894}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":249,"column":1,"offset":7895},"end":{"line":256,"column":4,"offset":8019}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":257,"column":1,"offset":8020},"end":{"line":258,"column":5,"offset":8029}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":260,"column":1,"offset":8031},"end":{"line":260,"column":11,"offset":8041}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":260,"column":11,"offset":8041},"end":{"line":260,"column":24,"offset":8054}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":260,"column":24,"offset":8054},"end":{"line":260,"column":107,"offset":8137}}}],"position":{"start":{"line":260,"column":1,"offset":8031},"end":{"line":260,"column":107,"offset":8137}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":262,"column":7,"offset":8145},"end":{"line":262,"column":10,"offset":8148}}}],"position":{"start":{"line":262,"column":1,"offset":8139},"end":{"line":262,"column":10,"offset":8148}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":263,"column":7,"offset":8155},"end":{"line":263,"column":10,"offset":8158}}}],"position":{"start":{"line":263,"column":1,"offset":8149},"end":{"line":263,"column":10,"offset":8158}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":265,"column":6,"offset":8165},"end":{"line":265,"column":10,"offset":8169}}}],"position":{"start":{"line":265,"column":1,"offset":8160},"end":{"line":265,"column":10,"offset":8169}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":266,"column":7,"offset":8176},"end":{"line":266,"column":13,"offset":8182}}}],"position":{"start":{"line":266,"column":1,"offset":8170},"end":{"line":266,"column":13,"offset":8182}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":267,"column":1,"offset":8183},"end":{"line":267,"column":49,"offset":8231}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":267,"column":49,"offset":8231},"end":{"line":267,"column":57,"offset":8239}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":267,"column":57,"offset":8239},"end":{"line":267,"column":133,"offset":8315}}}],"position":{"start":{"line":267,"column":1,"offset":8183},"end":{"line":267,"column":133,"offset":8315}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":268,"column":1,"offset":8316},"end":{"line":278,"column":4,"offset":8511}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":279,"column":1,"offset":8512},"end":{"line":279,"column":5,"offset":8516}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":282,"column":1,"offset":8519},"end":{"line":283,"column":1,"offset":8601}}},{"type":"raw","value":"<br>","position":{"start":{"line":283,"column":1,"offset":8601},"end":{"line":283,"column":5,"offset":8605}}},{"type":"text","value":"\n","position":{"start":{"line":283,"column":5,"offset":8605},"end":{"line":284,"column":1,"offset":8606}}},{"type":"raw","value":"<br>","position":{"start":{"line":284,"column":1,"offset":8606},"end":{"line":284,"column":5,"offset":8610}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":284,"column":5,"offset":8610},"end":{"line":285,"column":26,"offset":8636}}}],"position":{"start":{"line":282,"column":1,"offset":8519},"end":{"line":285,"column":26,"offset":8636}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":286,"column":1,"offset":8637},"end":{"line":291,"column":4,"offset":8765}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":292,"column":1,"offset":8766},"end":{"line":292,"column":14,"offset":8779}}}],"position":{"start":{"line":292,"column":1,"offset":8766},"end":{"line":292,"column":14,"offset":8779}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":294,"column":1,"offset":8781},"end":{"line":307,"column":4,"offset":9063}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":309,"column":1,"offset":9065},"end":{"line":310,"column":5,"offset":9074}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":313,"column":7,"offset":9083},"end":{"line":313,"column":13,"offset":9089}}}],"position":{"start":{"line":313,"column":1,"offset":9077},"end":{"line":313,"column":13,"offset":9089}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":313,"column":13,"offset":9089}}}}