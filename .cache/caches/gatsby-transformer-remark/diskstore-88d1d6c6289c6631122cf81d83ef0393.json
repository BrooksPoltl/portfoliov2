{"expireTime":9007200842249526000,"key":"transformer-remark-markdown-html-ast-c522de407c73193aaf1387f5a263da4d-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833}}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847}}},{"type":"raw","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860}}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865}}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879}}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884}}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895}}},{"type":"raw","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900}}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901}}},{"type":"raw","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906}}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911}}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912}}},{"type":"raw","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916}}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":30,"column":126,"offset":1042}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":30,"column":126,"offset":1042}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":31,"column":7,"offset":1049},"end":{"line":31,"column":10,"offset":1052}}}],"position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":10,"offset":1052}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":32,"column":7,"offset":1059},"end":{"line":32,"column":10,"offset":1062}}}],"position":{"start":{"line":32,"column":1,"offset":1053},"end":{"line":32,"column":10,"offset":1062}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":34,"column":6,"offset":1069},"end":{"line":34,"column":14,"offset":1077}}}],"position":{"start":{"line":34,"column":1,"offset":1064},"end":{"line":34,"column":14,"offset":1077}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":35,"column":7,"offset":1084},"end":{"line":35,"column":10,"offset":1087}}}],"position":{"start":{"line":35,"column":1,"offset":1078},"end":{"line":35,"column":10,"offset":1087}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":37,"column":8,"offset":1096},"end":{"line":37,"column":30,"offset":1118}}}],"position":{"start":{"line":37,"column":1,"offset":1089},"end":{"line":37,"column":30,"offset":1118}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":39,"column":1,"offset":1120},"end":{"line":40,"column":1,"offset":1264}}},{"type":"raw","value":"<br>","position":{"start":{"line":40,"column":1,"offset":1264},"end":{"line":40,"column":5,"offset":1268}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":40,"column":5,"offset":1268},"end":{"line":40,"column":16,"offset":1279}}},{"type":"raw","value":"<br>","position":{"start":{"line":40,"column":16,"offset":1279},"end":{"line":40,"column":20,"offset":1283}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":40,"column":20,"offset":1283},"end":{"line":42,"column":1,"offset":1427}}},{"type":"raw","value":"<br>","position":{"start":{"line":42,"column":1,"offset":1427},"end":{"line":42,"column":5,"offset":1431}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":42,"column":5,"offset":1431},"end":{"line":42,"column":16,"offset":1442}}},{"type":"raw","value":"<br>","position":{"start":{"line":42,"column":16,"offset":1442},"end":{"line":42,"column":20,"offset":1446}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":42,"column":20,"offset":1446},"end":{"line":43,"column":45,"offset":1491}}},{"type":"raw","value":"<br>","position":{"start":{"line":43,"column":45,"offset":1491},"end":{"line":43,"column":49,"offset":1495}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":43,"column":49,"offset":1495},"end":{"line":43,"column":65,"offset":1511}}},{"type":"raw","value":"<br>","position":{"start":{"line":43,"column":65,"offset":1511},"end":{"line":43,"column":69,"offset":1515}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":43,"column":69,"offset":1515},"end":{"line":45,"column":1,"offset":1558}}},{"type":"raw","value":"<br>","position":{"start":{"line":45,"column":1,"offset":1558},"end":{"line":45,"column":5,"offset":1562}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":45,"column":5,"offset":1562},"end":{"line":45,"column":22,"offset":1579}}},{"type":"raw","value":"<br>","position":{"start":{"line":45,"column":22,"offset":1579},"end":{"line":45,"column":26,"offset":1583}}},{"type":"text","value":"\n","position":{"start":{"line":45,"column":26,"offset":1583},"end":{"line":46,"column":1,"offset":1584}}},{"type":"raw","value":"<br>","position":{"start":{"line":46,"column":1,"offset":1584},"end":{"line":46,"column":5,"offset":1588}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":46,"column":5,"offset":1588},"end":{"line":48,"column":1,"offset":1706}}},{"type":"raw","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1706},"end":{"line":48,"column":5,"offset":1710}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":48,"column":5,"offset":1710},"end":{"line":50,"column":1,"offset":1831}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":50,"column":1,"offset":1831},"end":{"line":50,"column":12,"offset":1842}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":50,"column":12,"offset":1842},"end":{"line":50,"column":68,"offset":1898}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":50,"column":68,"offset":1898},"end":{"line":50,"column":79,"offset":1909}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":50,"column":79,"offset":1909},"end":{"line":50,"column":106,"offset":1936}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":50,"column":106,"offset":1936},"end":{"line":50,"column":109,"offset":1939}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":50,"column":109,"offset":1939},"end":{"line":50,"column":189,"offset":2019}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":50,"column":189,"offset":2019},"end":{"line":50,"column":192,"offset":2022}}},{"type":"text","value":" to get 3.","position":{"start":{"line":50,"column":192,"offset":2022},"end":{"line":50,"column":202,"offset":2032}}}],"position":{"start":{"line":39,"column":1,"offset":1120},"end":{"line":50,"column":202,"offset":2032}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":52,"column":8,"offset":2041},"end":{"line":52,"column":14,"offset":2047}}}],"position":{"start":{"line":52,"column":1,"offset":2034},"end":{"line":52,"column":14,"offset":2047}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":53,"column":1,"offset":2048},"end":{"line":53,"column":9,"offset":2056}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":53,"column":9,"offset":2056},"end":{"line":53,"column":73,"offset":2120}}}],"position":{"start":{"line":53,"column":1,"offset":2048},"end":{"line":53,"column":73,"offset":2120}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":54,"column":1,"offset":2121},"end":{"line":57,"column":4,"offset":2160}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":58,"column":1,"offset":2161},"end":{"line":58,"column":5,"offset":2165}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":60,"column":1,"offset":2167},"end":{"line":60,"column":72,"offset":2238}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":60,"column":72,"offset":2238},"end":{"line":60,"column":80,"offset":2246}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":60,"column":80,"offset":2246},"end":{"line":61,"column":1,"offset":2270}}},{"type":"raw","value":"<br>","position":{"start":{"line":61,"column":1,"offset":2270},"end":{"line":61,"column":5,"offset":2274}}},{"type":"text","value":"\n","position":{"start":{"line":61,"column":5,"offset":2274},"end":{"line":62,"column":1,"offset":2275}}},{"type":"raw","value":"<br>","position":{"start":{"line":62,"column":1,"offset":2275},"end":{"line":62,"column":5,"offset":2279}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":62,"column":5,"offset":2279},"end":{"line":63,"column":184,"offset":2463}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":63,"column":184,"offset":2463},"end":{"line":63,"column":187,"offset":2466}}},{"type":"text","value":".\n","position":{"start":{"line":63,"column":187,"offset":2466},"end":{"line":64,"column":1,"offset":2469}}},{"type":"raw","value":"<br>","position":{"start":{"line":64,"column":1,"offset":2469},"end":{"line":64,"column":5,"offset":2473}}},{"type":"text","value":"\n","position":{"start":{"line":64,"column":5,"offset":2473},"end":{"line":65,"column":1,"offset":2474}}},{"type":"raw","value":"<br>","position":{"start":{"line":65,"column":1,"offset":2474},"end":{"line":65,"column":5,"offset":2478}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":65,"column":5,"offset":2478},"end":{"line":66,"column":27,"offset":2505}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":66,"column":27,"offset":2505},"end":{"line":66,"column":35,"offset":2513}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":66,"column":35,"offset":2513},"end":{"line":66,"column":86,"offset":2564}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":66,"column":86,"offset":2564},"end":{"line":66,"column":95,"offset":2573}}},{"type":"text","value":". ","position":{"start":{"line":66,"column":95,"offset":2573},"end":{"line":66,"column":97,"offset":2575}}}],"position":{"start":{"line":60,"column":1,"offset":2167},"end":{"line":66,"column":97,"offset":2575}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":68,"column":1,"offset":2577},"end":{"line":68,"column":6,"offset":2582}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":70,"column":1,"offset":2584},"end":{"line":71,"column":1,"offset":2628}}},{"type":"raw","value":"<br>","position":{"start":{"line":71,"column":1,"offset":2628},"end":{"line":71,"column":5,"offset":2632}}},{"type":"text","value":"\n","position":{"start":{"line":71,"column":5,"offset":2632},"end":{"line":72,"column":1,"offset":2633}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":72,"column":1,"offset":2633},"end":{"line":72,"column":22,"offset":2654}}},{"type":"text","value":"\n","position":{"start":{"line":72,"column":22,"offset":2654},"end":{"line":73,"column":1,"offset":2655}}},{"type":"raw","value":"<br>","position":{"start":{"line":73,"column":1,"offset":2655},"end":{"line":73,"column":5,"offset":2659}}}],"position":{"start":{"line":70,"column":1,"offset":2584},"end":{"line":73,"column":5,"offset":2659}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":75,"column":1,"offset":2661},"end":{"line":75,"column":152,"offset":2812}}}],"position":{"start":{"line":75,"column":1,"offset":2661},"end":{"line":75,"column":152,"offset":2812}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":77,"column":8,"offset":2821},"end":{"line":77,"column":20,"offset":2833}}}],"position":{"start":{"line":77,"column":1,"offset":2814},"end":{"line":77,"column":20,"offset":2833}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":79,"column":1,"offset":2835},"end":{"line":79,"column":56,"offset":2890}}}],"position":{"start":{"line":79,"column":1,"offset":2835},"end":{"line":79,"column":56,"offset":2890}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":80,"column":1,"offset":2891},"end":{"line":85,"column":4,"offset":2982}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":86,"column":1,"offset":2983},"end":{"line":86,"column":5,"offset":2987}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":88,"column":1,"offset":2989},"end":{"line":88,"column":37,"offset":3025}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":88,"column":37,"offset":3025},"end":{"line":88,"column":41,"offset":3029}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":88,"column":41,"offset":3029},"end":{"line":89,"column":1,"offset":3046}}},{"type":"raw","value":"<br>","position":{"start":{"line":89,"column":1,"offset":3046},"end":{"line":89,"column":5,"offset":3050}}},{"type":"text","value":"\n","position":{"start":{"line":89,"column":5,"offset":3050},"end":{"line":90,"column":1,"offset":3051}}},{"type":"raw","value":"<br>","position":{"start":{"line":90,"column":1,"offset":3051},"end":{"line":90,"column":5,"offset":3055}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":90,"column":5,"offset":3055},"end":{"line":91,"column":66,"offset":3121}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":91,"column":66,"offset":3121},"end":{"line":91,"column":89,"offset":3144}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":91,"column":89,"offset":3144},"end":{"line":92,"column":1,"offset":3184}}},{"type":"raw","value":"<br>","position":{"start":{"line":92,"column":1,"offset":3184},"end":{"line":92,"column":5,"offset":3188}}},{"type":"text","value":"\n","position":{"start":{"line":92,"column":5,"offset":3188},"end":{"line":93,"column":1,"offset":3189}}},{"type":"raw","value":"<br>","position":{"start":{"line":93,"column":1,"offset":3189},"end":{"line":93,"column":5,"offset":3193}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":93,"column":5,"offset":3193},"end":{"line":94,"column":21,"offset":3214}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":94,"column":21,"offset":3214},"end":{"line":94,"column":25,"offset":3218}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":94,"column":25,"offset":3218},"end":{"line":95,"column":1,"offset":3272}}},{"type":"raw","value":"<br>","position":{"start":{"line":95,"column":1,"offset":3272},"end":{"line":95,"column":5,"offset":3276}}},{"type":"text","value":"\n","position":{"start":{"line":95,"column":5,"offset":3276},"end":{"line":96,"column":1,"offset":3277}}},{"type":"raw","value":"<br>","position":{"start":{"line":96,"column":1,"offset":3277},"end":{"line":96,"column":5,"offset":3281}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":96,"column":5,"offset":3281},"end":{"line":97,"column":21,"offset":3302}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":97,"column":21,"offset":3302},"end":{"line":97,"column":25,"offset":3306}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":97,"column":25,"offset":3306},"end":{"line":98,"column":1,"offset":3361}}},{"type":"raw","value":"<br>","position":{"start":{"line":98,"column":1,"offset":3361},"end":{"line":98,"column":5,"offset":3365}}},{"type":"text","value":"\n","position":{"start":{"line":98,"column":5,"offset":3365},"end":{"line":99,"column":1,"offset":3366}}},{"type":"raw","value":"<br>","position":{"start":{"line":99,"column":1,"offset":3366},"end":{"line":99,"column":5,"offset":3370}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":99,"column":5,"offset":3370},"end":{"line":100,"column":58,"offset":3428}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":100,"column":58,"offset":3428},"end":{"line":100,"column":61,"offset":3431}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":100,"column":61,"offset":3431},"end":{"line":100,"column":145,"offset":3515}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":100,"column":145,"offset":3515},"end":{"line":100,"column":153,"offset":3523}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":100,"column":153,"offset":3523},"end":{"line":100,"column":178,"offset":3548}}}],"position":{"start":{"line":88,"column":1,"offset":2989},"end":{"line":100,"column":178,"offset":3548}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":102,"column":7,"offset":3556},"end":{"line":102,"column":10,"offset":3559}}}],"position":{"start":{"line":102,"column":1,"offset":3550},"end":{"line":102,"column":10,"offset":3559}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":104,"column":8,"offset":3568},"end":{"line":104,"column":17,"offset":3577}}}],"position":{"start":{"line":104,"column":1,"offset":3561},"end":{"line":104,"column":17,"offset":3577}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":105,"column":1,"offset":3578},"end":{"line":116,"column":4,"offset":3777}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":117,"column":1,"offset":3778},"end":{"line":117,"column":5,"offset":3782}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":119,"column":1,"offset":3784},"end":{"line":120,"column":1,"offset":4000}}},{"type":"raw","value":"<br>","position":{"start":{"line":120,"column":1,"offset":4000},"end":{"line":120,"column":5,"offset":4004}}},{"type":"text","value":"\n","position":{"start":{"line":120,"column":5,"offset":4004},"end":{"line":121,"column":1,"offset":4005}}},{"type":"raw","value":"<br>","position":{"start":{"line":121,"column":1,"offset":4005},"end":{"line":121,"column":5,"offset":4009}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":121,"column":5,"offset":4009},"end":{"line":122,"column":72,"offset":4081}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":122,"column":72,"offset":4081},"end":{"line":122,"column":81,"offset":4090}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":122,"column":81,"offset":4090},"end":{"line":123,"column":1,"offset":4109}}},{"type":"raw","value":"<br>","position":{"start":{"line":123,"column":1,"offset":4109},"end":{"line":123,"column":5,"offset":4113}}},{"type":"text","value":"\n","position":{"start":{"line":123,"column":5,"offset":4113},"end":{"line":124,"column":1,"offset":4114}}},{"type":"raw","value":"<br>","position":{"start":{"line":124,"column":1,"offset":4114},"end":{"line":124,"column":5,"offset":4118}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":124,"column":5,"offset":4118},"end":{"line":125,"column":10,"offset":4128}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":125,"column":10,"offset":4128},"end":{"line":125,"column":16,"offset":4134}}},{"type":"text","value":" gets called with ","position":{"start":{"line":125,"column":16,"offset":4134},"end":{"line":125,"column":34,"offset":4152}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":125,"column":34,"offset":4152},"end":{"line":125,"column":42,"offset":4160}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":125,"column":42,"offset":4160},"end":{"line":126,"column":24,"offset":4185}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":126,"column":24,"offset":4185},"end":{"line":126,"column":33,"offset":4194}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":126,"column":33,"offset":4194},"end":{"line":126,"column":107,"offset":4268}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":126,"column":107,"offset":4268},"end":{"line":126,"column":116,"offset":4277}}},{"type":"text","value":" is false because ","position":{"start":{"line":126,"column":116,"offset":4277},"end":{"line":126,"column":134,"offset":4295}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":126,"column":134,"offset":4295},"end":{"line":126,"column":137,"offset":4298}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":126,"column":137,"offset":4298},"end":{"line":126,"column":161,"offset":4322}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":126,"column":161,"offset":4322},"end":{"line":126,"column":167,"offset":4328}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":126,"column":167,"offset":4328},"end":{"line":126,"column":192,"offset":4353}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":126,"column":192,"offset":4353},"end":{"line":126,"column":200,"offset":4361}}},{"type":"text","value":". This is because ","position":{"start":{"line":126,"column":200,"offset":4361},"end":{"line":126,"column":218,"offset":4379}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":126,"column":218,"offset":4379},"end":{"line":126,"column":224,"offset":4385}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":126,"column":224,"offset":4385},"end":{"line":126,"column":245,"offset":4406}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":126,"column":245,"offset":4406},"end":{"line":126,"column":252,"offset":4413}}},{"type":"text","value":" and ","position":{"start":{"line":126,"column":252,"offset":4413},"end":{"line":126,"column":257,"offset":4418}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":126,"column":257,"offset":4418},"end":{"line":126,"column":260,"offset":4421}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":126,"column":260,"offset":4421},"end":{"line":126,"column":285,"offset":4446}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":126,"column":285,"offset":4446},"end":{"line":126,"column":291,"offset":4452}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":126,"column":291,"offset":4452},"end":{"line":127,"column":96,"offset":4578}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":127,"column":96,"offset":4578},"end":{"line":127,"column":111,"offset":4593}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":127,"column":111,"offset":4593},"end":{"line":127,"column":182,"offset":4664}}}],"position":{"start":{"line":119,"column":1,"offset":3784},"end":{"line":127,"column":182,"offset":4664}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":129,"column":8,"offset":4673},"end":{"line":129,"column":19,"offset":4684}}}],"position":{"start":{"line":129,"column":1,"offset":4666},"end":{"line":129,"column":19,"offset":4684}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":130,"column":1,"offset":4685},"end":{"line":130,"column":14,"offset":4698}}}],"position":{"start":{"line":130,"column":1,"offset":4685},"end":{"line":130,"column":14,"offset":4698}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":131,"column":1,"offset":4699},"end":{"line":146,"column":4,"offset":5114}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":147,"column":1,"offset":5115},"end":{"line":147,"column":5,"offset":5119}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":149,"column":1,"offset":5121},"end":{"line":149,"column":141,"offset":5261}}}],"position":{"start":{"line":149,"column":1,"offset":5121},"end":{"line":149,"column":141,"offset":5261}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":151,"column":8,"offset":5270},"end":{"line":151,"column":30,"offset":5292}}}],"position":{"start":{"line":151,"column":1,"offset":5263},"end":{"line":151,"column":30,"offset":5292}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":152,"column":1,"offset":5293},"end":{"line":152,"column":199,"offset":5491}}}],"position":{"start":{"line":152,"column":1,"offset":5293},"end":{"line":152,"column":199,"offset":5491}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":154,"column":8,"offset":5500},"end":{"line":154,"column":30,"offset":5522}}}],"position":{"start":{"line":154,"column":1,"offset":5493},"end":{"line":154,"column":30,"offset":5522}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":156,"column":1,"offset":5524},"end":{"line":157,"column":1,"offset":5599}}},{"type":"raw","value":"<br>","position":{"start":{"line":157,"column":1,"offset":5599},"end":{"line":157,"column":5,"offset":5603}}},{"type":"text","value":"\n","position":{"start":{"line":157,"column":5,"offset":5603},"end":{"line":158,"column":1,"offset":5604}}},{"type":"raw","value":"<br>","position":{"start":{"line":158,"column":1,"offset":5604},"end":{"line":158,"column":5,"offset":5608}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":158,"column":5,"offset":5608},"end":{"line":160,"column":1,"offset":5670}}},{"type":"raw","value":"<br>","position":{"start":{"line":160,"column":1,"offset":5670},"end":{"line":160,"column":5,"offset":5674}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":160,"column":5,"offset":5674},"end":{"line":161,"column":1,"offset":5677}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":161,"column":1,"offset":5677},"end":{"line":161,"column":11,"offset":5687}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":161,"column":11,"offset":5687},"end":{"line":161,"column":19,"offset":5695}}},{"type":"text","value":" and ","position":{"start":{"line":161,"column":19,"offset":5695},"end":{"line":161,"column":24,"offset":5700}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":161,"column":24,"offset":5700},"end":{"line":161,"column":34,"offset":5710}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":161,"column":34,"offset":5710},"end":{"line":162,"column":1,"offset":5759}}},{"type":"raw","value":"<br>","position":{"start":{"line":162,"column":1,"offset":5759},"end":{"line":162,"column":5,"offset":5763}}}],"position":{"start":{"line":156,"column":1,"offset":5524},"end":{"line":162,"column":5,"offset":5763}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":164,"column":8,"offset":5772},"end":{"line":164,"column":12,"offset":5776}}}],"position":{"start":{"line":164,"column":1,"offset":5765},"end":{"line":164,"column":12,"offset":5776}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":165,"column":1,"offset":5777},"end":{"line":170,"column":4,"offset":5888}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":171,"column":1,"offset":5889},"end":{"line":172,"column":5,"offset":5898}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":174,"column":1,"offset":5900},"end":{"line":174,"column":7,"offset":5906}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":174,"column":7,"offset":5906},"end":{"line":176,"column":1,"offset":5988}}},{"type":"raw","value":"<br>","position":{"start":{"line":176,"column":1,"offset":5988},"end":{"line":176,"column":5,"offset":5992}}},{"type":"text","value":"\n","position":{"start":{"line":176,"column":5,"offset":5992},"end":{"line":177,"column":1,"offset":5993}}},{"type":"raw","value":"<br>","position":{"start":{"line":177,"column":1,"offset":5993},"end":{"line":177,"column":5,"offset":5997}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":177,"column":5,"offset":5997},"end":{"line":178,"column":10,"offset":6007}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":178,"column":10,"offset":6007},"end":{"line":178,"column":14,"offset":6011}}},{"type":"text","value":". Since ","position":{"start":{"line":178,"column":14,"offset":6011},"end":{"line":178,"column":22,"offset":6019}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":178,"column":22,"offset":6019},"end":{"line":178,"column":30,"offset":6027}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":178,"column":30,"offset":6027},"end":{"line":178,"column":50,"offset":6047}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":178,"column":50,"offset":6047},"end":{"line":178,"column":53,"offset":6050}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":178,"column":53,"offset":6050},"end":{"line":178,"column":90,"offset":6087}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":178,"column":90,"offset":6087},"end":{"line":178,"column":96,"offset":6093}}},{"type":"text","value":".\n","position":{"start":{"line":178,"column":96,"offset":6093},"end":{"line":179,"column":1,"offset":6096}}},{"type":"raw","value":"<br>","position":{"start":{"line":179,"column":1,"offset":6096},"end":{"line":179,"column":5,"offset":6100}}},{"type":"text","value":"\n","position":{"start":{"line":179,"column":5,"offset":6100},"end":{"line":180,"column":1,"offset":6101}}},{"type":"raw","value":"<br>","position":{"start":{"line":180,"column":1,"offset":6101},"end":{"line":180,"column":5,"offset":6105}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":180,"column":5,"offset":6105},"end":{"line":181,"column":14,"offset":6119}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":181,"column":14,"offset":6119},"end":{"line":181,"column":18,"offset":6123}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":181,"column":18,"offset":6123},"end":{"line":181,"column":90,"offset":6195}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":181,"column":90,"offset":6195},"end":{"line":181,"column":94,"offset":6199}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":181,"column":94,"offset":6199},"end":{"line":181,"column":125,"offset":6230}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":181,"column":125,"offset":6230},"end":{"line":181,"column":131,"offset":6236}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":181,"column":131,"offset":6236},"end":{"line":182,"column":1,"offset":6251}}},{"type":"raw","value":"<br>","position":{"start":{"line":182,"column":1,"offset":6251},"end":{"line":182,"column":5,"offset":6255}}},{"type":"text","value":"\n","position":{"start":{"line":182,"column":5,"offset":6255},"end":{"line":183,"column":1,"offset":6256}}},{"type":"raw","value":"<br>","position":{"start":{"line":183,"column":1,"offset":6256},"end":{"line":183,"column":5,"offset":6260}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":183,"column":5,"offset":6260},"end":{"line":184,"column":14,"offset":6274}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":184,"column":14,"offset":6274},"end":{"line":184,"column":18,"offset":6278}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":184,"column":18,"offset":6278},"end":{"line":184,"column":37,"offset":6297}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":184,"column":37,"offset":6297},"end":{"line":184,"column":40,"offset":6300}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":184,"column":40,"offset":6300},"end":{"line":184,"column":77,"offset":6337}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":184,"column":77,"offset":6337},"end":{"line":184,"column":81,"offset":6341}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":184,"column":81,"offset":6341},"end":{"line":184,"column":99,"offset":6359}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":184,"column":99,"offset":6359},"end":{"line":184,"column":102,"offset":6362}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":184,"column":102,"offset":6362},"end":{"line":184,"column":133,"offset":6393}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":184,"column":133,"offset":6393},"end":{"line":184,"column":139,"offset":6399}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":184,"column":139,"offset":6399},"end":{"line":184,"column":167,"offset":6427}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":184,"column":167,"offset":6427},"end":{"line":184,"column":171,"offset":6431}}},{"type":"text","value":".\n","position":{"start":{"line":184,"column":171,"offset":6431},"end":{"line":185,"column":1,"offset":6433}}},{"type":"raw","value":"<br>","position":{"start":{"line":185,"column":1,"offset":6433},"end":{"line":185,"column":5,"offset":6437}}},{"type":"text","value":"\n","position":{"start":{"line":185,"column":5,"offset":6437},"end":{"line":186,"column":1,"offset":6438}}},{"type":"raw","value":"<br>","position":{"start":{"line":186,"column":1,"offset":6438},"end":{"line":186,"column":5,"offset":6442}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":186,"column":5,"offset":6442},"end":{"line":188,"column":1,"offset":6462}}},{"type":"raw","value":"<br>","position":{"start":{"line":188,"column":1,"offset":6462},"end":{"line":188,"column":5,"offset":6466}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":188,"column":5,"offset":6466},"end":{"line":189,"column":6,"offset":6472}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":189,"column":6,"offset":6472},"end":{"line":189,"column":12,"offset":6478}}},{"type":"text","value":" does not have an ","position":{"start":{"line":189,"column":12,"offset":6478},"end":{"line":189,"column":30,"offset":6496}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":189,"column":30,"offset":6496},"end":{"line":189,"column":36,"offset":6502}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":189,"column":36,"offset":6502},"end":{"line":189,"column":62,"offset":6528}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":189,"column":62,"offset":6528},"end":{"line":189,"column":75,"offset":6541}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":189,"column":75,"offset":6541},"end":{"line":189,"column":159,"offset":6625}}}],"position":{"start":{"line":174,"column":1,"offset":5900},"end":{"line":189,"column":159,"offset":6625}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":191,"column":8,"offset":6634},"end":{"line":191,"column":41,"offset":6667}}}],"position":{"start":{"line":191,"column":1,"offset":6627},"end":{"line":191,"column":41,"offset":6667}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":192,"column":1,"offset":6668},"end":{"line":197,"column":4,"offset":6743}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":198,"column":1,"offset":6744},"end":{"line":199,"column":1,"offset":6763}}},{"type":"raw","value":"<br>","position":{"start":{"line":199,"column":1,"offset":6763},"end":{"line":199,"column":5,"offset":6767}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":199,"column":5,"offset":6767},"end":{"line":201,"column":5,"offset":6905}}},{"type":"raw","value":"<br>","position":{"start":{"line":201,"column":5,"offset":6905},"end":{"line":201,"column":9,"offset":6909}}},{"type":"text","value":"\n","position":{"start":{"line":201,"column":9,"offset":6909},"end":{"line":202,"column":5,"offset":6914}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":202,"column":5,"offset":6914},"end":{"line":202,"column":27,"offset":6936}}},{"type":"text","value":"\n","position":{"start":{"line":202,"column":27,"offset":6936},"end":{"line":203,"column":5,"offset":6941}}},{"type":"raw","value":"<br>","position":{"start":{"line":203,"column":5,"offset":6941},"end":{"line":203,"column":9,"offset":6945}}},{"type":"text","value":"\n","position":{"start":{"line":203,"column":9,"offset":6945},"end":{"line":204,"column":5,"offset":6950}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":204,"column":5,"offset":6950},"end":{"line":204,"column":12,"offset":6957}}},{"type":"text","value":" and ","position":{"start":{"line":204,"column":12,"offset":6957},"end":{"line":204,"column":17,"offset":6962}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":204,"column":17,"offset":6962},"end":{"line":204,"column":25,"offset":6970}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":204,"column":25,"offset":6970},"end":{"line":204,"column":63,"offset":7008}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":204,"column":63,"offset":7008},"end":{"line":204,"column":66,"offset":7011}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":204,"column":66,"offset":7011},"end":{"line":204,"column":86,"offset":7031}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":204,"column":86,"offset":7031},"end":{"line":204,"column":89,"offset":7034}}},{"type":"text","value":" will be called with ","position":{"start":{"line":204,"column":89,"offset":7034},"end":{"line":204,"column":110,"offset":7055}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":204,"column":110,"offset":7055},"end":{"line":204,"column":119,"offset":7064}}},{"type":"text","value":".\n","position":{"start":{"line":204,"column":119,"offset":7064},"end":{"line":205,"column":1,"offset":7066}}},{"type":"raw","value":"<br>","position":{"start":{"line":205,"column":1,"offset":7066},"end":{"line":205,"column":5,"offset":7070}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":205,"column":5,"offset":7070},"end":{"line":207,"column":1,"offset":7086}}},{"type":"raw","value":"<br>","position":{"start":{"line":207,"column":1,"offset":7086},"end":{"line":207,"column":5,"offset":7090}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":207,"column":5,"offset":7090},"end":{"line":209,"column":5,"offset":7197}}},{"type":"raw","value":"<br>","position":{"start":{"line":209,"column":5,"offset":7197},"end":{"line":209,"column":9,"offset":7201}}},{"type":"text","value":"\n","position":{"start":{"line":209,"column":9,"offset":7201},"end":{"line":210,"column":1,"offset":7202}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":210,"column":1,"offset":7202},"end":{"line":210,"column":23,"offset":7224}}},{"type":"text","value":" turns into ","position":{"start":{"line":210,"column":23,"offset":7224},"end":{"line":210,"column":35,"offset":7236}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":210,"column":35,"offset":7236},"end":{"line":210,"column":61,"offset":7262}}},{"type":"text","value":"\n","position":{"start":{"line":210,"column":61,"offset":7262},"end":{"line":211,"column":1,"offset":7263}}},{"type":"raw","value":"<br>","position":{"start":{"line":211,"column":1,"offset":7263},"end":{"line":211,"column":5,"offset":7267}}},{"type":"text","value":"\nNow ","position":{"start":{"line":211,"column":5,"offset":7267},"end":{"line":212,"column":5,"offset":7272}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":212,"column":5,"offset":7272},"end":{"line":212,"column":8,"offset":7275}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":212,"column":8,"offset":7275},"end":{"line":212,"column":58,"offset":7325}}}],"position":{"start":{"line":198,"column":1,"offset":6744},"end":{"line":212,"column":58,"offset":7325}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":214,"column":1,"offset":7327},"end":{"line":215,"column":1,"offset":7345}}},{"type":"raw","value":"<br>","position":{"start":{"line":215,"column":1,"offset":7345},"end":{"line":215,"column":5,"offset":7349}}}],"position":{"start":{"line":214,"column":1,"offset":7327},"end":{"line":215,"column":5,"offset":7349}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":216,"column":1,"offset":7350},"end":{"line":218,"column":4,"offset":7380}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":219,"column":1,"offset":7381},"end":{"line":219,"column":13,"offset":7393}}}],"position":{"start":{"line":219,"column":1,"offset":7381},"end":{"line":219,"column":13,"offset":7393}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":220,"column":1,"offset":7394},"end":{"line":226,"column":4,"offset":7473}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":227,"column":1,"offset":7474},"end":{"line":227,"column":8,"offset":7481}}}],"position":{"start":{"line":227,"column":1,"offset":7474},"end":{"line":227,"column":8,"offset":7481}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":228,"column":1,"offset":7482},"end":{"line":235,"column":4,"offset":7606}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":236,"column":1,"offset":7607},"end":{"line":237,"column":5,"offset":7616}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":239,"column":1,"offset":7618},"end":{"line":239,"column":11,"offset":7628}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":239,"column":11,"offset":7628},"end":{"line":239,"column":24,"offset":7641}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":239,"column":24,"offset":7641},"end":{"line":239,"column":107,"offset":7724}}}],"position":{"start":{"line":239,"column":1,"offset":7618},"end":{"line":239,"column":107,"offset":7724}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":241,"column":7,"offset":7732},"end":{"line":241,"column":10,"offset":7735}}}],"position":{"start":{"line":241,"column":1,"offset":7726},"end":{"line":241,"column":10,"offset":7735}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":242,"column":7,"offset":7742},"end":{"line":242,"column":10,"offset":7745}}}],"position":{"start":{"line":242,"column":1,"offset":7736},"end":{"line":242,"column":10,"offset":7745}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":244,"column":6,"offset":7752},"end":{"line":244,"column":10,"offset":7756}}}],"position":{"start":{"line":244,"column":1,"offset":7747},"end":{"line":244,"column":10,"offset":7756}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":245,"column":7,"offset":7763},"end":{"line":245,"column":13,"offset":7769}}}],"position":{"start":{"line":245,"column":1,"offset":7757},"end":{"line":245,"column":13,"offset":7769}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":246,"column":1,"offset":7770},"end":{"line":246,"column":49,"offset":7818}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":246,"column":49,"offset":7818},"end":{"line":246,"column":57,"offset":7826}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":246,"column":57,"offset":7826},"end":{"line":246,"column":133,"offset":7902}}}],"position":{"start":{"line":246,"column":1,"offset":7770},"end":{"line":246,"column":133,"offset":7902}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":247,"column":1,"offset":7903},"end":{"line":257,"column":4,"offset":8098}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":258,"column":1,"offset":8099},"end":{"line":258,"column":5,"offset":8103}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":261,"column":1,"offset":8106},"end":{"line":262,"column":1,"offset":8188}}},{"type":"raw","value":"<br>","position":{"start":{"line":262,"column":1,"offset":8188},"end":{"line":262,"column":5,"offset":8192}}},{"type":"text","value":"\n","position":{"start":{"line":262,"column":5,"offset":8192},"end":{"line":263,"column":1,"offset":8193}}},{"type":"raw","value":"<br>","position":{"start":{"line":263,"column":1,"offset":8193},"end":{"line":263,"column":5,"offset":8197}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":263,"column":5,"offset":8197},"end":{"line":264,"column":26,"offset":8223}}}],"position":{"start":{"line":261,"column":1,"offset":8106},"end":{"line":264,"column":26,"offset":8223}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":265,"column":1,"offset":8224},"end":{"line":270,"column":4,"offset":8352}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":271,"column":1,"offset":8353},"end":{"line":271,"column":14,"offset":8366}}}],"position":{"start":{"line":271,"column":1,"offset":8353},"end":{"line":271,"column":14,"offset":8366}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":273,"column":1,"offset":8368},"end":{"line":286,"column":4,"offset":8650}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":288,"column":1,"offset":8652},"end":{"line":289,"column":5,"offset":8661}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":292,"column":7,"offset":8670},"end":{"line":292,"column":13,"offset":8676}}}],"position":{"start":{"line":292,"column":1,"offset":8664},"end":{"line":292,"column":13,"offset":8676}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":292,"column":13,"offset":8676}}}}