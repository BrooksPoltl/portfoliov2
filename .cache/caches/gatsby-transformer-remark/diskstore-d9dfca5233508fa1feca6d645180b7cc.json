{"expireTime":9007200842155378000,"key":"transformer-remark-markdown-ast-2eb1d26c257f801fa3d838d5395a784b-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":7,"offset":239},"end":{"line":4,"column":12,"offset":244},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":12,"offset":244},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"LECTURE","position":{"start":{"line":5,"column":7,"offset":251},"end":{"line":5,"column":14,"offset":258},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":245},"end":{"line":5,"column":14,"offset":258},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"L01","position":{"start":{"line":6,"column":8,"offset":266},"end":{"line":6,"column":11,"offset":269},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":259},"end":{"line":6,"column":11,"offset":269},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":7,"column":1,"offset":270},"end":{"line":8,"column":1,"offset":414},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":8,"column":1,"offset":414},"end":{"line":8,"column":5,"offset":418},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":8,"column":5,"offset":418},"end":{"line":8,"column":16,"offset":429},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":8,"column":16,"offset":429},"end":{"line":8,"column":20,"offset":433},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":8,"column":20,"offset":433},"end":{"line":10,"column":1,"offset":577},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":10,"column":1,"offset":577},"end":{"line":10,"column":5,"offset":581},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":10,"column":5,"offset":581},"end":{"line":10,"column":16,"offset":592},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":10,"column":16,"offset":592},"end":{"line":10,"column":20,"offset":596},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":10,"column":20,"offset":596},"end":{"line":11,"column":45,"offset":641},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":45,"offset":641},"end":{"line":11,"column":49,"offset":645},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":11,"column":49,"offset":645},"end":{"line":11,"column":65,"offset":661},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":65,"offset":661},"end":{"line":11,"column":69,"offset":665},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":11,"column":69,"offset":665},"end":{"line":13,"column":1,"offset":708},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":708},"end":{"line":13,"column":5,"offset":712},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":13,"column":5,"offset":712},"end":{"line":13,"column":22,"offset":729},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":22,"offset":729},"end":{"line":13,"column":26,"offset":733},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":26,"offset":733},"end":{"line":14,"column":1,"offset":734},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":1,"offset":734},"end":{"line":14,"column":5,"offset":738},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. Scheme takes the arguments and then computes the functions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":14,"column":5,"offset":738},"end":{"line":16,"column":1,"offset":973},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":16,"column":1,"offset":973},"end":{"line":16,"column":12,"offset":984},"indent":[]}},{"type":"text","value":" is a function and not a primitive value, so it calls ","position":{"start":{"line":16,"column":12,"offset":984},"end":{"line":16,"column":66,"offset":1038},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":16,"column":66,"offset":1038},"end":{"line":16,"column":77,"offset":1049},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":16,"column":77,"offset":1049},"end":{"line":16,"column":104,"offset":1076},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":16,"column":104,"offset":1076},"end":{"line":16,"column":107,"offset":1079},"indent":[]}},{"type":"text","value":" is now 7 and it has 2 primitive values, meaning it can calculate the ","position":{"start":{"line":16,"column":107,"offset":1079},"end":{"line":16,"column":177,"offset":1149},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":16,"column":177,"offset":1149},"end":{"line":16,"column":180,"offset":1152},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":16,"column":180,"offset":1152},"end":{"line":16,"column":190,"offset":1162},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":270},"end":{"line":16,"column":190,"offset":1162},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"L02","position":{"start":{"line":18,"column":8,"offset":1171},"end":{"line":18,"column":11,"offset":1174},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":1164},"end":{"line":18,"column":11,"offset":1174},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"BOOK","position":{"start":{"line":19,"column":7,"offset":1181},"end":{"line":19,"column":11,"offset":1185},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":1175},"end":{"line":19,"column":11,"offset":1185},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"1.1","position":{"start":{"line":20,"column":8,"offset":1193},"end":{"line":20,"column":11,"offset":1196},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1186},"end":{"line":20,"column":11,"offset":1196},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"1.2","position":{"start":{"line":21,"column":8,"offset":1204},"end":{"line":21,"column":11,"offset":1207},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1197},"end":{"line":21,"column":11,"offset":1207},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"1.3","position":{"start":{"line":22,"column":8,"offset":1215},"end":{"line":22,"column":11,"offset":1218},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":1208},"end":{"line":22,"column":11,"offset":1218},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"LABS","position":{"start":{"line":23,"column":7,"offset":1225},"end":{"line":23,"column":11,"offset":1229},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1219},"end":{"line":23,"column":11,"offset":1229},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Lab 1","position":{"start":{"line":24,"column":8,"offset":1237},"end":{"line":24,"column":13,"offset":1242},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":1230},"end":{"line":24,"column":14,"offset":1243},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Lab 2","position":{"start":{"line":25,"column":8,"offset":1251},"end":{"line":25,"column":13,"offset":1256},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1244},"end":{"line":25,"column":14,"offset":1257},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":25,"column":14,"offset":1257}}}}