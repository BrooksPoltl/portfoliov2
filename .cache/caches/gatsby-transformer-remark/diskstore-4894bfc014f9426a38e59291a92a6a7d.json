{"expireTime":9007200842248983000,"key":"transformer-remark-markdown-html-ast-d8796304d221d051f68054abf7195ca7-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a combination:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":821}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":821},"end":{"line":22,"column":5,"offset":825}}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":825},"end":{"line":23,"column":14,"offset":839}}},{"type":"raw","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":839},"end":{"line":23,"column":27,"offset":852}}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":852},"end":{"line":24,"column":1,"offset":853}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":1,"offset":853},"end":{"line":24,"column":5,"offset":857}}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":857},"end":{"line":25,"column":11,"offset":868}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":868},"end":{"line":25,"column":14,"offset":871}}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":871},"end":{"line":26,"column":1,"offset":872}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":1,"offset":872},"end":{"line":26,"column":5,"offset":876}}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":876},"end":{"line":27,"column":11,"offset":887}}},{"type":"raw","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":887},"end":{"line":27,"column":16,"offset":892}}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":892},"end":{"line":27,"column":17,"offset":893}}},{"type":"raw","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":893},"end":{"line":27,"column":22,"offset":898}}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":898},"end":{"line":28,"column":1,"offset":899}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":1,"offset":899},"end":{"line":28,"column":5,"offset":903}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":28,"column":5,"offset":903}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":30,"column":7,"offset":911},"end":{"line":30,"column":10,"offset":914}}}],"position":{"start":{"line":30,"column":1,"offset":905},"end":{"line":30,"column":10,"offset":914}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":31,"column":7,"offset":921},"end":{"line":31,"column":10,"offset":924}}}],"position":{"start":{"line":31,"column":1,"offset":915},"end":{"line":31,"column":10,"offset":924}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":33,"column":6,"offset":931},"end":{"line":33,"column":14,"offset":939}}}],"position":{"start":{"line":33,"column":1,"offset":926},"end":{"line":33,"column":14,"offset":939}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":34,"column":7,"offset":946},"end":{"line":34,"column":10,"offset":949}}}],"position":{"start":{"line":34,"column":1,"offset":940},"end":{"line":34,"column":10,"offset":949}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":36,"column":8,"offset":958},"end":{"line":36,"column":30,"offset":980}}}],"position":{"start":{"line":36,"column":1,"offset":951},"end":{"line":36,"column":30,"offset":980}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":38,"column":1,"offset":982},"end":{"line":39,"column":1,"offset":1126}}},{"type":"raw","value":"<br>","position":{"start":{"line":39,"column":1,"offset":1126},"end":{"line":39,"column":5,"offset":1130}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":39,"column":5,"offset":1130},"end":{"line":39,"column":16,"offset":1141}}},{"type":"raw","value":"<br>","position":{"start":{"line":39,"column":16,"offset":1141},"end":{"line":39,"column":20,"offset":1145}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":39,"column":20,"offset":1145},"end":{"line":41,"column":1,"offset":1289}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":1,"offset":1289},"end":{"line":41,"column":5,"offset":1293}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":41,"column":5,"offset":1293},"end":{"line":41,"column":16,"offset":1304}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":16,"offset":1304},"end":{"line":41,"column":20,"offset":1308}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":41,"column":20,"offset":1308},"end":{"line":42,"column":45,"offset":1353}}},{"type":"raw","value":"<br>","position":{"start":{"line":42,"column":45,"offset":1353},"end":{"line":42,"column":49,"offset":1357}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":42,"column":49,"offset":1357},"end":{"line":42,"column":65,"offset":1373}}},{"type":"raw","value":"<br>","position":{"start":{"line":42,"column":65,"offset":1373},"end":{"line":42,"column":69,"offset":1377}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":42,"column":69,"offset":1377},"end":{"line":44,"column":1,"offset":1420}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1420},"end":{"line":44,"column":5,"offset":1424}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":44,"column":5,"offset":1424},"end":{"line":44,"column":22,"offset":1441}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":22,"offset":1441},"end":{"line":44,"column":26,"offset":1445}}},{"type":"text","value":"\n","position":{"start":{"line":44,"column":26,"offset":1445},"end":{"line":45,"column":1,"offset":1446}}},{"type":"raw","value":"<br>","position":{"start":{"line":45,"column":1,"offset":1446},"end":{"line":45,"column":5,"offset":1450}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":45,"column":5,"offset":1450},"end":{"line":47,"column":1,"offset":1568}}},{"type":"raw","value":"<br>","position":{"start":{"line":47,"column":1,"offset":1568},"end":{"line":47,"column":5,"offset":1572}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":47,"column":5,"offset":1572},"end":{"line":49,"column":1,"offset":1693}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":49,"column":1,"offset":1693},"end":{"line":49,"column":12,"offset":1704}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":49,"column":12,"offset":1704},"end":{"line":49,"column":68,"offset":1760}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":49,"column":68,"offset":1760},"end":{"line":49,"column":79,"offset":1771}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":49,"column":79,"offset":1771},"end":{"line":49,"column":106,"offset":1798}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":49,"column":106,"offset":1798},"end":{"line":49,"column":109,"offset":1801}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":49,"column":109,"offset":1801},"end":{"line":49,"column":189,"offset":1881}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":49,"column":189,"offset":1881},"end":{"line":49,"column":192,"offset":1884}}},{"type":"text","value":" to get 3.","position":{"start":{"line":49,"column":192,"offset":1884},"end":{"line":49,"column":202,"offset":1894}}}],"position":{"start":{"line":38,"column":1,"offset":982},"end":{"line":49,"column":202,"offset":1894}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":51,"column":8,"offset":1903},"end":{"line":51,"column":14,"offset":1909}}}],"position":{"start":{"line":51,"column":1,"offset":1896},"end":{"line":51,"column":14,"offset":1909}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":52,"column":1,"offset":1910},"end":{"line":52,"column":9,"offset":1918}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":52,"column":9,"offset":1918},"end":{"line":52,"column":73,"offset":1982}}}],"position":{"start":{"line":52,"column":1,"offset":1910},"end":{"line":52,"column":73,"offset":1982}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":53,"column":1,"offset":1983},"end":{"line":56,"column":4,"offset":2022}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":57,"column":1,"offset":2023},"end":{"line":57,"column":5,"offset":2027}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":59,"column":1,"offset":2029},"end":{"line":59,"column":72,"offset":2100}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":59,"column":72,"offset":2100},"end":{"line":59,"column":80,"offset":2108}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":59,"column":80,"offset":2108},"end":{"line":60,"column":1,"offset":2132}}},{"type":"raw","value":"<br>","position":{"start":{"line":60,"column":1,"offset":2132},"end":{"line":60,"column":5,"offset":2136}}},{"type":"text","value":"\n","position":{"start":{"line":60,"column":5,"offset":2136},"end":{"line":61,"column":1,"offset":2137}}},{"type":"raw","value":"<br>","position":{"start":{"line":61,"column":1,"offset":2137},"end":{"line":61,"column":5,"offset":2141}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":61,"column":5,"offset":2141},"end":{"line":62,"column":184,"offset":2325}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":62,"column":184,"offset":2325},"end":{"line":62,"column":187,"offset":2328}}},{"type":"text","value":".\n","position":{"start":{"line":62,"column":187,"offset":2328},"end":{"line":63,"column":1,"offset":2331}}},{"type":"raw","value":"<br>","position":{"start":{"line":63,"column":1,"offset":2331},"end":{"line":63,"column":5,"offset":2335}}},{"type":"text","value":"\n","position":{"start":{"line":63,"column":5,"offset":2335},"end":{"line":64,"column":1,"offset":2336}}},{"type":"raw","value":"<br>","position":{"start":{"line":64,"column":1,"offset":2336},"end":{"line":64,"column":5,"offset":2340}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":64,"column":5,"offset":2340},"end":{"line":65,"column":27,"offset":2367}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":65,"column":27,"offset":2367},"end":{"line":65,"column":35,"offset":2375}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":65,"column":35,"offset":2375},"end":{"line":65,"column":86,"offset":2426}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":65,"column":86,"offset":2426},"end":{"line":65,"column":95,"offset":2435}}},{"type":"text","value":". ","position":{"start":{"line":65,"column":95,"offset":2435},"end":{"line":65,"column":97,"offset":2437}}}],"position":{"start":{"line":59,"column":1,"offset":2029},"end":{"line":65,"column":97,"offset":2437}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":67,"column":1,"offset":2439},"end":{"line":67,"column":6,"offset":2444}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":69,"column":1,"offset":2446},"end":{"line":70,"column":1,"offset":2490}}},{"type":"raw","value":"<br>","position":{"start":{"line":70,"column":1,"offset":2490},"end":{"line":70,"column":5,"offset":2494}}},{"type":"text","value":"\n","position":{"start":{"line":70,"column":5,"offset":2494},"end":{"line":71,"column":1,"offset":2495}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":71,"column":1,"offset":2495},"end":{"line":71,"column":22,"offset":2516}}},{"type":"text","value":"\n","position":{"start":{"line":71,"column":22,"offset":2516},"end":{"line":72,"column":1,"offset":2517}}},{"type":"raw","value":"<br>","position":{"start":{"line":72,"column":1,"offset":2517},"end":{"line":72,"column":5,"offset":2521}}}],"position":{"start":{"line":69,"column":1,"offset":2446},"end":{"line":72,"column":5,"offset":2521}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":74,"column":1,"offset":2523},"end":{"line":74,"column":152,"offset":2674}}}],"position":{"start":{"line":74,"column":1,"offset":2523},"end":{"line":74,"column":152,"offset":2674}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":76,"column":8,"offset":2683},"end":{"line":76,"column":20,"offset":2695}}}],"position":{"start":{"line":76,"column":1,"offset":2676},"end":{"line":76,"column":20,"offset":2695}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":78,"column":1,"offset":2697},"end":{"line":78,"column":56,"offset":2752}}}],"position":{"start":{"line":78,"column":1,"offset":2697},"end":{"line":78,"column":56,"offset":2752}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":79,"column":1,"offset":2753},"end":{"line":84,"column":4,"offset":2844}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":85,"column":1,"offset":2845},"end":{"line":85,"column":5,"offset":2849}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":87,"column":1,"offset":2851},"end":{"line":87,"column":37,"offset":2887}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":87,"column":37,"offset":2887},"end":{"line":87,"column":41,"offset":2891}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":87,"column":41,"offset":2891},"end":{"line":88,"column":1,"offset":2908}}},{"type":"raw","value":"<br>","position":{"start":{"line":88,"column":1,"offset":2908},"end":{"line":88,"column":5,"offset":2912}}},{"type":"text","value":"\n","position":{"start":{"line":88,"column":5,"offset":2912},"end":{"line":89,"column":1,"offset":2913}}},{"type":"raw","value":"<br>","position":{"start":{"line":89,"column":1,"offset":2913},"end":{"line":89,"column":5,"offset":2917}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":89,"column":5,"offset":2917},"end":{"line":90,"column":66,"offset":2983}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":90,"column":66,"offset":2983},"end":{"line":90,"column":89,"offset":3006}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":90,"column":89,"offset":3006},"end":{"line":91,"column":1,"offset":3046}}},{"type":"raw","value":"<br>","position":{"start":{"line":91,"column":1,"offset":3046},"end":{"line":91,"column":5,"offset":3050}}},{"type":"text","value":"\n","position":{"start":{"line":91,"column":5,"offset":3050},"end":{"line":92,"column":1,"offset":3051}}},{"type":"raw","value":"<br>","position":{"start":{"line":92,"column":1,"offset":3051},"end":{"line":92,"column":5,"offset":3055}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":92,"column":5,"offset":3055},"end":{"line":93,"column":21,"offset":3076}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":93,"column":21,"offset":3076},"end":{"line":93,"column":25,"offset":3080}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":93,"column":25,"offset":3080},"end":{"line":94,"column":1,"offset":3134}}},{"type":"raw","value":"<br>","position":{"start":{"line":94,"column":1,"offset":3134},"end":{"line":94,"column":5,"offset":3138}}},{"type":"text","value":"\n","position":{"start":{"line":94,"column":5,"offset":3138},"end":{"line":95,"column":1,"offset":3139}}},{"type":"raw","value":"<br>","position":{"start":{"line":95,"column":1,"offset":3139},"end":{"line":95,"column":5,"offset":3143}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":95,"column":5,"offset":3143},"end":{"line":96,"column":21,"offset":3164}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":96,"column":21,"offset":3164},"end":{"line":96,"column":25,"offset":3168}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":96,"column":25,"offset":3168},"end":{"line":97,"column":1,"offset":3223}}},{"type":"raw","value":"<br>","position":{"start":{"line":97,"column":1,"offset":3223},"end":{"line":97,"column":5,"offset":3227}}},{"type":"text","value":"\n","position":{"start":{"line":97,"column":5,"offset":3227},"end":{"line":98,"column":1,"offset":3228}}},{"type":"raw","value":"<br>","position":{"start":{"line":98,"column":1,"offset":3228},"end":{"line":98,"column":5,"offset":3232}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":98,"column":5,"offset":3232},"end":{"line":99,"column":58,"offset":3290}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":99,"column":58,"offset":3290},"end":{"line":99,"column":61,"offset":3293}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":99,"column":61,"offset":3293},"end":{"line":99,"column":145,"offset":3377}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":99,"column":145,"offset":3377},"end":{"line":99,"column":153,"offset":3385}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":99,"column":153,"offset":3385},"end":{"line":99,"column":178,"offset":3410}}}],"position":{"start":{"line":87,"column":1,"offset":2851},"end":{"line":99,"column":178,"offset":3410}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":101,"column":7,"offset":3418},"end":{"line":101,"column":10,"offset":3421}}}],"position":{"start":{"line":101,"column":1,"offset":3412},"end":{"line":101,"column":10,"offset":3421}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":103,"column":8,"offset":3430},"end":{"line":103,"column":17,"offset":3439}}}],"position":{"start":{"line":103,"column":1,"offset":3423},"end":{"line":103,"column":17,"offset":3439}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":104,"column":1,"offset":3440},"end":{"line":115,"column":4,"offset":3639}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":116,"column":1,"offset":3640},"end":{"line":116,"column":5,"offset":3644}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":118,"column":1,"offset":3646},"end":{"line":119,"column":1,"offset":3862}}},{"type":"raw","value":"<br>","position":{"start":{"line":119,"column":1,"offset":3862},"end":{"line":119,"column":5,"offset":3866}}},{"type":"text","value":"\n","position":{"start":{"line":119,"column":5,"offset":3866},"end":{"line":120,"column":1,"offset":3867}}},{"type":"raw","value":"<br>","position":{"start":{"line":120,"column":1,"offset":3867},"end":{"line":120,"column":5,"offset":3871}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":120,"column":5,"offset":3871},"end":{"line":121,"column":72,"offset":3943}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":121,"column":72,"offset":3943},"end":{"line":121,"column":81,"offset":3952}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":121,"column":81,"offset":3952},"end":{"line":122,"column":1,"offset":3971}}},{"type":"raw","value":"<br>","position":{"start":{"line":122,"column":1,"offset":3971},"end":{"line":122,"column":5,"offset":3975}}},{"type":"text","value":"\n","position":{"start":{"line":122,"column":5,"offset":3975},"end":{"line":123,"column":1,"offset":3976}}},{"type":"raw","value":"<br>","position":{"start":{"line":123,"column":1,"offset":3976},"end":{"line":123,"column":5,"offset":3980}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":123,"column":5,"offset":3980},"end":{"line":124,"column":10,"offset":3990}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":124,"column":10,"offset":3990},"end":{"line":124,"column":16,"offset":3996}}},{"type":"text","value":" gets called with ","position":{"start":{"line":124,"column":16,"offset":3996},"end":{"line":124,"column":34,"offset":4014}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":124,"column":34,"offset":4014},"end":{"line":124,"column":42,"offset":4022}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":124,"column":42,"offset":4022},"end":{"line":125,"column":24,"offset":4047}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":125,"column":24,"offset":4047},"end":{"line":125,"column":33,"offset":4056}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":125,"column":33,"offset":4056},"end":{"line":125,"column":107,"offset":4130}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":125,"column":107,"offset":4130},"end":{"line":125,"column":116,"offset":4139}}},{"type":"text","value":" is false because ","position":{"start":{"line":125,"column":116,"offset":4139},"end":{"line":125,"column":134,"offset":4157}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":125,"column":134,"offset":4157},"end":{"line":125,"column":137,"offset":4160}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":125,"column":137,"offset":4160},"end":{"line":125,"column":161,"offset":4184}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":125,"column":161,"offset":4184},"end":{"line":125,"column":167,"offset":4190}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":125,"column":167,"offset":4190},"end":{"line":125,"column":192,"offset":4215}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":125,"column":192,"offset":4215},"end":{"line":125,"column":200,"offset":4223}}},{"type":"text","value":". This is because ","position":{"start":{"line":125,"column":200,"offset":4223},"end":{"line":125,"column":218,"offset":4241}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":125,"column":218,"offset":4241},"end":{"line":125,"column":224,"offset":4247}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":125,"column":224,"offset":4247},"end":{"line":125,"column":245,"offset":4268}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":125,"column":245,"offset":4268},"end":{"line":125,"column":252,"offset":4275}}},{"type":"text","value":" and ","position":{"start":{"line":125,"column":252,"offset":4275},"end":{"line":125,"column":257,"offset":4280}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":125,"column":257,"offset":4280},"end":{"line":125,"column":260,"offset":4283}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":125,"column":260,"offset":4283},"end":{"line":125,"column":285,"offset":4308}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":125,"column":285,"offset":4308},"end":{"line":125,"column":291,"offset":4314}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":125,"column":291,"offset":4314},"end":{"line":126,"column":96,"offset":4440}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":126,"column":96,"offset":4440},"end":{"line":126,"column":111,"offset":4455}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":126,"column":111,"offset":4455},"end":{"line":126,"column":182,"offset":4526}}}],"position":{"start":{"line":118,"column":1,"offset":3646},"end":{"line":126,"column":182,"offset":4526}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":128,"column":8,"offset":4535},"end":{"line":128,"column":19,"offset":4546}}}],"position":{"start":{"line":128,"column":1,"offset":4528},"end":{"line":128,"column":19,"offset":4546}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":129,"column":1,"offset":4547},"end":{"line":129,"column":14,"offset":4560}}}],"position":{"start":{"line":129,"column":1,"offset":4547},"end":{"line":129,"column":14,"offset":4560}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":130,"column":1,"offset":4561},"end":{"line":145,"column":4,"offset":4976}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":146,"column":1,"offset":4977},"end":{"line":146,"column":5,"offset":4981}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":148,"column":1,"offset":4983},"end":{"line":148,"column":141,"offset":5123}}}],"position":{"start":{"line":148,"column":1,"offset":4983},"end":{"line":148,"column":141,"offset":5123}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":150,"column":8,"offset":5132},"end":{"line":150,"column":30,"offset":5154}}}],"position":{"start":{"line":150,"column":1,"offset":5125},"end":{"line":150,"column":30,"offset":5154}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":151,"column":1,"offset":5155},"end":{"line":151,"column":199,"offset":5353}}}],"position":{"start":{"line":151,"column":1,"offset":5155},"end":{"line":151,"column":199,"offset":5353}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":153,"column":8,"offset":5362},"end":{"line":153,"column":30,"offset":5384}}}],"position":{"start":{"line":153,"column":1,"offset":5355},"end":{"line":153,"column":30,"offset":5384}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":155,"column":1,"offset":5386},"end":{"line":156,"column":1,"offset":5461}}},{"type":"raw","value":"<br>","position":{"start":{"line":156,"column":1,"offset":5461},"end":{"line":156,"column":5,"offset":5465}}},{"type":"text","value":"\n","position":{"start":{"line":156,"column":5,"offset":5465},"end":{"line":157,"column":1,"offset":5466}}},{"type":"raw","value":"<br>","position":{"start":{"line":157,"column":1,"offset":5466},"end":{"line":157,"column":5,"offset":5470}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":157,"column":5,"offset":5470},"end":{"line":159,"column":1,"offset":5532}}},{"type":"raw","value":"<br>","position":{"start":{"line":159,"column":1,"offset":5532},"end":{"line":159,"column":5,"offset":5536}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":159,"column":5,"offset":5536},"end":{"line":160,"column":1,"offset":5539}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":160,"column":1,"offset":5539},"end":{"line":160,"column":11,"offset":5549}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":160,"column":11,"offset":5549},"end":{"line":160,"column":19,"offset":5557}}},{"type":"text","value":" and ","position":{"start":{"line":160,"column":19,"offset":5557},"end":{"line":160,"column":24,"offset":5562}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":160,"column":24,"offset":5562},"end":{"line":160,"column":34,"offset":5572}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":160,"column":34,"offset":5572},"end":{"line":161,"column":1,"offset":5621}}},{"type":"raw","value":"<br>","position":{"start":{"line":161,"column":1,"offset":5621},"end":{"line":161,"column":5,"offset":5625}}}],"position":{"start":{"line":155,"column":1,"offset":5386},"end":{"line":161,"column":5,"offset":5625}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":163,"column":8,"offset":5634},"end":{"line":163,"column":12,"offset":5638}}}],"position":{"start":{"line":163,"column":1,"offset":5627},"end":{"line":163,"column":12,"offset":5638}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":164,"column":1,"offset":5639},"end":{"line":169,"column":4,"offset":5750}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":170,"column":1,"offset":5751},"end":{"line":171,"column":5,"offset":5760}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":173,"column":1,"offset":5762},"end":{"line":173,"column":7,"offset":5768}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":173,"column":7,"offset":5768},"end":{"line":175,"column":1,"offset":5850}}},{"type":"raw","value":"<br>","position":{"start":{"line":175,"column":1,"offset":5850},"end":{"line":175,"column":5,"offset":5854}}},{"type":"text","value":"\n","position":{"start":{"line":175,"column":5,"offset":5854},"end":{"line":176,"column":1,"offset":5855}}},{"type":"raw","value":"<br>","position":{"start":{"line":176,"column":1,"offset":5855},"end":{"line":176,"column":5,"offset":5859}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":176,"column":5,"offset":5859},"end":{"line":177,"column":10,"offset":5869}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":177,"column":10,"offset":5869},"end":{"line":177,"column":14,"offset":5873}}},{"type":"text","value":". Since ","position":{"start":{"line":177,"column":14,"offset":5873},"end":{"line":177,"column":22,"offset":5881}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":177,"column":22,"offset":5881},"end":{"line":177,"column":30,"offset":5889}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":177,"column":30,"offset":5889},"end":{"line":177,"column":50,"offset":5909}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":177,"column":50,"offset":5909},"end":{"line":177,"column":53,"offset":5912}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":177,"column":53,"offset":5912},"end":{"line":177,"column":90,"offset":5949}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":177,"column":90,"offset":5949},"end":{"line":177,"column":96,"offset":5955}}},{"type":"text","value":".\n","position":{"start":{"line":177,"column":96,"offset":5955},"end":{"line":178,"column":1,"offset":5958}}},{"type":"raw","value":"<br>","position":{"start":{"line":178,"column":1,"offset":5958},"end":{"line":178,"column":5,"offset":5962}}},{"type":"text","value":"\n","position":{"start":{"line":178,"column":5,"offset":5962},"end":{"line":179,"column":1,"offset":5963}}},{"type":"raw","value":"<br>","position":{"start":{"line":179,"column":1,"offset":5963},"end":{"line":179,"column":5,"offset":5967}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":179,"column":5,"offset":5967},"end":{"line":180,"column":14,"offset":5981}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":180,"column":14,"offset":5981},"end":{"line":180,"column":18,"offset":5985}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":180,"column":18,"offset":5985},"end":{"line":180,"column":90,"offset":6057}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":180,"column":90,"offset":6057},"end":{"line":180,"column":94,"offset":6061}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":180,"column":94,"offset":6061},"end":{"line":180,"column":125,"offset":6092}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":180,"column":125,"offset":6092},"end":{"line":180,"column":131,"offset":6098}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":180,"column":131,"offset":6098},"end":{"line":181,"column":1,"offset":6113}}},{"type":"raw","value":"<br>","position":{"start":{"line":181,"column":1,"offset":6113},"end":{"line":181,"column":5,"offset":6117}}},{"type":"text","value":"\n","position":{"start":{"line":181,"column":5,"offset":6117},"end":{"line":182,"column":1,"offset":6118}}},{"type":"raw","value":"<br>","position":{"start":{"line":182,"column":1,"offset":6118},"end":{"line":182,"column":5,"offset":6122}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":182,"column":5,"offset":6122},"end":{"line":183,"column":14,"offset":6136}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":183,"column":14,"offset":6136},"end":{"line":183,"column":18,"offset":6140}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":183,"column":18,"offset":6140},"end":{"line":183,"column":37,"offset":6159}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":183,"column":37,"offset":6159},"end":{"line":183,"column":40,"offset":6162}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":183,"column":40,"offset":6162},"end":{"line":183,"column":77,"offset":6199}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":183,"column":77,"offset":6199},"end":{"line":183,"column":81,"offset":6203}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":183,"column":81,"offset":6203},"end":{"line":183,"column":99,"offset":6221}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":183,"column":99,"offset":6221},"end":{"line":183,"column":102,"offset":6224}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":183,"column":102,"offset":6224},"end":{"line":183,"column":133,"offset":6255}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":183,"column":133,"offset":6255},"end":{"line":183,"column":139,"offset":6261}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":183,"column":139,"offset":6261},"end":{"line":183,"column":167,"offset":6289}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":183,"column":167,"offset":6289},"end":{"line":183,"column":171,"offset":6293}}},{"type":"text","value":".\n","position":{"start":{"line":183,"column":171,"offset":6293},"end":{"line":184,"column":1,"offset":6295}}},{"type":"raw","value":"<br>","position":{"start":{"line":184,"column":1,"offset":6295},"end":{"line":184,"column":5,"offset":6299}}},{"type":"text","value":"\n","position":{"start":{"line":184,"column":5,"offset":6299},"end":{"line":185,"column":1,"offset":6300}}},{"type":"raw","value":"<br>","position":{"start":{"line":185,"column":1,"offset":6300},"end":{"line":185,"column":5,"offset":6304}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":185,"column":5,"offset":6304},"end":{"line":187,"column":1,"offset":6324}}},{"type":"raw","value":"<br>","position":{"start":{"line":187,"column":1,"offset":6324},"end":{"line":187,"column":5,"offset":6328}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":187,"column":5,"offset":6328},"end":{"line":188,"column":6,"offset":6334}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":188,"column":6,"offset":6334},"end":{"line":188,"column":12,"offset":6340}}},{"type":"text","value":" does not have an ","position":{"start":{"line":188,"column":12,"offset":6340},"end":{"line":188,"column":30,"offset":6358}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":188,"column":30,"offset":6358},"end":{"line":188,"column":36,"offset":6364}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":188,"column":36,"offset":6364},"end":{"line":188,"column":62,"offset":6390}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":188,"column":62,"offset":6390},"end":{"line":188,"column":75,"offset":6403}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":188,"column":75,"offset":6403},"end":{"line":188,"column":159,"offset":6487}}}],"position":{"start":{"line":173,"column":1,"offset":5762},"end":{"line":188,"column":159,"offset":6487}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":190,"column":8,"offset":6496},"end":{"line":190,"column":41,"offset":6529}}}],"position":{"start":{"line":190,"column":1,"offset":6489},"end":{"line":190,"column":41,"offset":6529}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":191,"column":1,"offset":6530},"end":{"line":196,"column":4,"offset":6605}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":197,"column":1,"offset":6606},"end":{"line":198,"column":1,"offset":6625}}},{"type":"raw","value":"<br>","position":{"start":{"line":198,"column":1,"offset":6625},"end":{"line":198,"column":5,"offset":6629}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":198,"column":5,"offset":6629},"end":{"line":200,"column":5,"offset":6767}}},{"type":"raw","value":"<br>","position":{"start":{"line":200,"column":5,"offset":6767},"end":{"line":200,"column":9,"offset":6771}}},{"type":"text","value":"\n","position":{"start":{"line":200,"column":9,"offset":6771},"end":{"line":201,"column":5,"offset":6776}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":201,"column":5,"offset":6776},"end":{"line":201,"column":27,"offset":6798}}},{"type":"text","value":"\n","position":{"start":{"line":201,"column":27,"offset":6798},"end":{"line":202,"column":5,"offset":6803}}},{"type":"raw","value":"<br>","position":{"start":{"line":202,"column":5,"offset":6803},"end":{"line":202,"column":9,"offset":6807}}},{"type":"text","value":"\n","position":{"start":{"line":202,"column":9,"offset":6807},"end":{"line":203,"column":5,"offset":6812}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":203,"column":5,"offset":6812},"end":{"line":203,"column":12,"offset":6819}}},{"type":"text","value":" and ","position":{"start":{"line":203,"column":12,"offset":6819},"end":{"line":203,"column":17,"offset":6824}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":203,"column":17,"offset":6824},"end":{"line":203,"column":25,"offset":6832}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":203,"column":25,"offset":6832},"end":{"line":203,"column":63,"offset":6870}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":203,"column":63,"offset":6870},"end":{"line":203,"column":66,"offset":6873}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":203,"column":66,"offset":6873},"end":{"line":203,"column":86,"offset":6893}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":203,"column":86,"offset":6893},"end":{"line":203,"column":89,"offset":6896}}},{"type":"text","value":" will be called with ","position":{"start":{"line":203,"column":89,"offset":6896},"end":{"line":203,"column":110,"offset":6917}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":203,"column":110,"offset":6917},"end":{"line":203,"column":119,"offset":6926}}},{"type":"text","value":".\n","position":{"start":{"line":203,"column":119,"offset":6926},"end":{"line":204,"column":1,"offset":6928}}},{"type":"raw","value":"<br>","position":{"start":{"line":204,"column":1,"offset":6928},"end":{"line":204,"column":5,"offset":6932}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":204,"column":5,"offset":6932},"end":{"line":206,"column":1,"offset":6948}}},{"type":"raw","value":"<br>","position":{"start":{"line":206,"column":1,"offset":6948},"end":{"line":206,"column":5,"offset":6952}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":206,"column":5,"offset":6952},"end":{"line":208,"column":5,"offset":7059}}},{"type":"raw","value":"<br>","position":{"start":{"line":208,"column":5,"offset":7059},"end":{"line":208,"column":9,"offset":7063}}},{"type":"text","value":"\n","position":{"start":{"line":208,"column":9,"offset":7063},"end":{"line":209,"column":1,"offset":7064}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":209,"column":1,"offset":7064},"end":{"line":209,"column":23,"offset":7086}}},{"type":"text","value":" turns into ","position":{"start":{"line":209,"column":23,"offset":7086},"end":{"line":209,"column":35,"offset":7098}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":209,"column":35,"offset":7098},"end":{"line":209,"column":61,"offset":7124}}},{"type":"text","value":"\n","position":{"start":{"line":209,"column":61,"offset":7124},"end":{"line":210,"column":1,"offset":7125}}},{"type":"raw","value":"<br>","position":{"start":{"line":210,"column":1,"offset":7125},"end":{"line":210,"column":5,"offset":7129}}},{"type":"text","value":"\nNow ","position":{"start":{"line":210,"column":5,"offset":7129},"end":{"line":211,"column":5,"offset":7134}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":211,"column":5,"offset":7134},"end":{"line":211,"column":8,"offset":7137}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":211,"column":8,"offset":7137},"end":{"line":211,"column":58,"offset":7187}}}],"position":{"start":{"line":197,"column":1,"offset":6606},"end":{"line":211,"column":58,"offset":7187}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":213,"column":1,"offset":7189},"end":{"line":214,"column":1,"offset":7207}}},{"type":"raw","value":"<br>","position":{"start":{"line":214,"column":1,"offset":7207},"end":{"line":214,"column":5,"offset":7211}}}],"position":{"start":{"line":213,"column":1,"offset":7189},"end":{"line":214,"column":5,"offset":7211}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":215,"column":1,"offset":7212},"end":{"line":217,"column":4,"offset":7242}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":218,"column":1,"offset":7243},"end":{"line":218,"column":13,"offset":7255}}}],"position":{"start":{"line":218,"column":1,"offset":7243},"end":{"line":218,"column":13,"offset":7255}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":219,"column":1,"offset":7256},"end":{"line":225,"column":4,"offset":7335}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":226,"column":1,"offset":7336},"end":{"line":226,"column":8,"offset":7343}}}],"position":{"start":{"line":226,"column":1,"offset":7336},"end":{"line":226,"column":8,"offset":7343}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":227,"column":1,"offset":7344},"end":{"line":234,"column":4,"offset":7468}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":235,"column":1,"offset":7469},"end":{"line":236,"column":5,"offset":7478}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":238,"column":1,"offset":7480},"end":{"line":238,"column":11,"offset":7490}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":238,"column":11,"offset":7490},"end":{"line":238,"column":24,"offset":7503}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":238,"column":24,"offset":7503},"end":{"line":238,"column":107,"offset":7586}}}],"position":{"start":{"line":238,"column":1,"offset":7480},"end":{"line":238,"column":107,"offset":7586}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":240,"column":7,"offset":7594},"end":{"line":240,"column":10,"offset":7597}}}],"position":{"start":{"line":240,"column":1,"offset":7588},"end":{"line":240,"column":10,"offset":7597}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":241,"column":7,"offset":7604},"end":{"line":241,"column":10,"offset":7607}}}],"position":{"start":{"line":241,"column":1,"offset":7598},"end":{"line":241,"column":10,"offset":7607}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":243,"column":6,"offset":7614},"end":{"line":243,"column":10,"offset":7618}}}],"position":{"start":{"line":243,"column":1,"offset":7609},"end":{"line":243,"column":10,"offset":7618}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":244,"column":7,"offset":7625},"end":{"line":244,"column":13,"offset":7631}}}],"position":{"start":{"line":244,"column":1,"offset":7619},"end":{"line":244,"column":13,"offset":7631}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":245,"column":1,"offset":7632},"end":{"line":245,"column":49,"offset":7680}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":245,"column":49,"offset":7680},"end":{"line":245,"column":57,"offset":7688}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":245,"column":57,"offset":7688},"end":{"line":245,"column":133,"offset":7764}}}],"position":{"start":{"line":245,"column":1,"offset":7632},"end":{"line":245,"column":133,"offset":7764}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":246,"column":1,"offset":7765},"end":{"line":256,"column":4,"offset":7960}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":257,"column":1,"offset":7961},"end":{"line":257,"column":5,"offset":7965}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":260,"column":1,"offset":7968},"end":{"line":261,"column":1,"offset":8050}}},{"type":"raw","value":"<br>","position":{"start":{"line":261,"column":1,"offset":8050},"end":{"line":261,"column":5,"offset":8054}}},{"type":"text","value":"\n","position":{"start":{"line":261,"column":5,"offset":8054},"end":{"line":262,"column":1,"offset":8055}}},{"type":"raw","value":"<br>","position":{"start":{"line":262,"column":1,"offset":8055},"end":{"line":262,"column":5,"offset":8059}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":262,"column":5,"offset":8059},"end":{"line":263,"column":26,"offset":8085}}}],"position":{"start":{"line":260,"column":1,"offset":7968},"end":{"line":263,"column":26,"offset":8085}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":264,"column":1,"offset":8086},"end":{"line":269,"column":4,"offset":8214}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":270,"column":1,"offset":8215},"end":{"line":270,"column":14,"offset":8228}}}],"position":{"start":{"line":270,"column":1,"offset":8215},"end":{"line":270,"column":14,"offset":8228}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":272,"column":1,"offset":8230},"end":{"line":285,"column":4,"offset":8512}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":287,"column":1,"offset":8514},"end":{"line":288,"column":5,"offset":8523}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":291,"column":7,"offset":8532},"end":{"line":291,"column":13,"offset":8538}}}],"position":{"start":{"line":291,"column":1,"offset":8526},"end":{"line":291,"column":13,"offset":8538}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":291,"column":13,"offset":8538}}}}