{"expireTime":9007200842249895000,"key":"transformer-remark-markdown-html-ast-a35a4b069fac29eb3a18391240e42e83-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833}}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847}}},{"type":"raw","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860}}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865}}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879}}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884}}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895}}},{"type":"raw","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900}}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901}}},{"type":"raw","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906}}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911}}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912}}},{"type":"raw","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916}}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043}}},{"type":"raw","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047}}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048}}},{"type":"raw","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052}}},{"type":"text","value":"\nEnvironment: The name-object pairs the interpreter keeps in memory.","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":33,"column":68,"offset":1120}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":33,"column":68,"offset":1120}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":35,"column":7,"offset":1128},"end":{"line":35,"column":10,"offset":1131}}}],"position":{"start":{"line":35,"column":1,"offset":1122},"end":{"line":35,"column":10,"offset":1131}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":36,"column":7,"offset":1138},"end":{"line":36,"column":10,"offset":1141}}}],"position":{"start":{"line":36,"column":1,"offset":1132},"end":{"line":36,"column":10,"offset":1141}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":38,"column":6,"offset":1148},"end":{"line":38,"column":14,"offset":1156}}}],"position":{"start":{"line":38,"column":1,"offset":1143},"end":{"line":38,"column":14,"offset":1156}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":39,"column":7,"offset":1163},"end":{"line":39,"column":10,"offset":1166}}}],"position":{"start":{"line":39,"column":1,"offset":1157},"end":{"line":39,"column":10,"offset":1166}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":41,"column":8,"offset":1175},"end":{"line":41,"column":30,"offset":1197}}}],"position":{"start":{"line":41,"column":1,"offset":1168},"end":{"line":41,"column":30,"offset":1197}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":43,"column":1,"offset":1199},"end":{"line":44,"column":1,"offset":1343}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1343},"end":{"line":44,"column":5,"offset":1347}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":44,"column":5,"offset":1347},"end":{"line":44,"column":16,"offset":1358}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":16,"offset":1358},"end":{"line":44,"column":20,"offset":1362}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":44,"column":20,"offset":1362},"end":{"line":46,"column":1,"offset":1506}}},{"type":"raw","value":"<br>","position":{"start":{"line":46,"column":1,"offset":1506},"end":{"line":46,"column":5,"offset":1510}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":46,"column":5,"offset":1510},"end":{"line":46,"column":16,"offset":1521}}},{"type":"raw","value":"<br>","position":{"start":{"line":46,"column":16,"offset":1521},"end":{"line":46,"column":20,"offset":1525}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":46,"column":20,"offset":1525},"end":{"line":47,"column":45,"offset":1570}}},{"type":"raw","value":"<br>","position":{"start":{"line":47,"column":45,"offset":1570},"end":{"line":47,"column":49,"offset":1574}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":47,"column":49,"offset":1574},"end":{"line":47,"column":65,"offset":1590}}},{"type":"raw","value":"<br>","position":{"start":{"line":47,"column":65,"offset":1590},"end":{"line":47,"column":69,"offset":1594}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":47,"column":69,"offset":1594},"end":{"line":49,"column":1,"offset":1637}}},{"type":"raw","value":"<br>","position":{"start":{"line":49,"column":1,"offset":1637},"end":{"line":49,"column":5,"offset":1641}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":49,"column":5,"offset":1641},"end":{"line":49,"column":22,"offset":1658}}},{"type":"raw","value":"<br>","position":{"start":{"line":49,"column":22,"offset":1658},"end":{"line":49,"column":26,"offset":1662}}},{"type":"text","value":"\n","position":{"start":{"line":49,"column":26,"offset":1662},"end":{"line":50,"column":1,"offset":1663}}},{"type":"raw","value":"<br>","position":{"start":{"line":50,"column":1,"offset":1663},"end":{"line":50,"column":5,"offset":1667}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":50,"column":5,"offset":1667},"end":{"line":52,"column":1,"offset":1785}}},{"type":"raw","value":"<br>","position":{"start":{"line":52,"column":1,"offset":1785},"end":{"line":52,"column":5,"offset":1789}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":52,"column":5,"offset":1789},"end":{"line":54,"column":1,"offset":1910}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":54,"column":1,"offset":1910},"end":{"line":54,"column":12,"offset":1921}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":54,"column":12,"offset":1921},"end":{"line":54,"column":68,"offset":1977}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":54,"column":68,"offset":1977},"end":{"line":54,"column":79,"offset":1988}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":54,"column":79,"offset":1988},"end":{"line":54,"column":106,"offset":2015}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":54,"column":106,"offset":2015},"end":{"line":54,"column":109,"offset":2018}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":54,"column":109,"offset":2018},"end":{"line":54,"column":189,"offset":2098}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":54,"column":189,"offset":2098},"end":{"line":54,"column":192,"offset":2101}}},{"type":"text","value":" to get 3.","position":{"start":{"line":54,"column":192,"offset":2101},"end":{"line":54,"column":202,"offset":2111}}}],"position":{"start":{"line":43,"column":1,"offset":1199},"end":{"line":54,"column":202,"offset":2111}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":56,"column":8,"offset":2120},"end":{"line":56,"column":14,"offset":2126}}}],"position":{"start":{"line":56,"column":1,"offset":2113},"end":{"line":56,"column":14,"offset":2126}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":57,"column":1,"offset":2127},"end":{"line":57,"column":9,"offset":2135}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":57,"column":9,"offset":2135},"end":{"line":57,"column":73,"offset":2199}}}],"position":{"start":{"line":57,"column":1,"offset":2127},"end":{"line":57,"column":73,"offset":2199}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":58,"column":1,"offset":2200},"end":{"line":61,"column":4,"offset":2239}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":62,"column":1,"offset":2240},"end":{"line":62,"column":5,"offset":2244}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":64,"column":1,"offset":2246},"end":{"line":64,"column":72,"offset":2317}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":64,"column":72,"offset":2317},"end":{"line":64,"column":80,"offset":2325}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":64,"column":80,"offset":2325},"end":{"line":65,"column":1,"offset":2349}}},{"type":"raw","value":"<br>","position":{"start":{"line":65,"column":1,"offset":2349},"end":{"line":65,"column":5,"offset":2353}}},{"type":"text","value":"\n","position":{"start":{"line":65,"column":5,"offset":2353},"end":{"line":66,"column":1,"offset":2354}}},{"type":"raw","value":"<br>","position":{"start":{"line":66,"column":1,"offset":2354},"end":{"line":66,"column":5,"offset":2358}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":66,"column":5,"offset":2358},"end":{"line":67,"column":184,"offset":2542}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":67,"column":184,"offset":2542},"end":{"line":67,"column":187,"offset":2545}}},{"type":"text","value":".\n","position":{"start":{"line":67,"column":187,"offset":2545},"end":{"line":68,"column":1,"offset":2548}}},{"type":"raw","value":"<br>","position":{"start":{"line":68,"column":1,"offset":2548},"end":{"line":68,"column":5,"offset":2552}}},{"type":"text","value":"\n","position":{"start":{"line":68,"column":5,"offset":2552},"end":{"line":69,"column":1,"offset":2553}}},{"type":"raw","value":"<br>","position":{"start":{"line":69,"column":1,"offset":2553},"end":{"line":69,"column":5,"offset":2557}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":69,"column":5,"offset":2557},"end":{"line":70,"column":27,"offset":2584}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":70,"column":27,"offset":2584},"end":{"line":70,"column":35,"offset":2592}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":70,"column":35,"offset":2592},"end":{"line":70,"column":86,"offset":2643}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":70,"column":86,"offset":2643},"end":{"line":70,"column":95,"offset":2652}}},{"type":"text","value":". ","position":{"start":{"line":70,"column":95,"offset":2652},"end":{"line":70,"column":97,"offset":2654}}}],"position":{"start":{"line":64,"column":1,"offset":2246},"end":{"line":70,"column":97,"offset":2654}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":72,"column":1,"offset":2656},"end":{"line":72,"column":6,"offset":2661}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":74,"column":1,"offset":2663},"end":{"line":75,"column":1,"offset":2707}}},{"type":"raw","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2707},"end":{"line":75,"column":5,"offset":2711}}},{"type":"text","value":"\n","position":{"start":{"line":75,"column":5,"offset":2711},"end":{"line":76,"column":1,"offset":2712}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":76,"column":1,"offset":2712},"end":{"line":76,"column":22,"offset":2733}}},{"type":"text","value":"\n","position":{"start":{"line":76,"column":22,"offset":2733},"end":{"line":77,"column":1,"offset":2734}}},{"type":"raw","value":"<br>","position":{"start":{"line":77,"column":1,"offset":2734},"end":{"line":77,"column":5,"offset":2738}}}],"position":{"start":{"line":74,"column":1,"offset":2663},"end":{"line":77,"column":5,"offset":2738}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":79,"column":1,"offset":2740},"end":{"line":79,"column":152,"offset":2891}}}],"position":{"start":{"line":79,"column":1,"offset":2740},"end":{"line":79,"column":152,"offset":2891}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":81,"column":8,"offset":2900},"end":{"line":81,"column":20,"offset":2912}}}],"position":{"start":{"line":81,"column":1,"offset":2893},"end":{"line":81,"column":20,"offset":2912}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":83,"column":1,"offset":2914},"end":{"line":83,"column":56,"offset":2969}}}],"position":{"start":{"line":83,"column":1,"offset":2914},"end":{"line":83,"column":56,"offset":2969}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":84,"column":1,"offset":2970},"end":{"line":89,"column":4,"offset":3061}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":90,"column":1,"offset":3062},"end":{"line":90,"column":5,"offset":3066}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":92,"column":1,"offset":3068},"end":{"line":92,"column":37,"offset":3104}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":92,"column":37,"offset":3104},"end":{"line":92,"column":41,"offset":3108}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":92,"column":41,"offset":3108},"end":{"line":93,"column":1,"offset":3125}}},{"type":"raw","value":"<br>","position":{"start":{"line":93,"column":1,"offset":3125},"end":{"line":93,"column":5,"offset":3129}}},{"type":"text","value":"\n","position":{"start":{"line":93,"column":5,"offset":3129},"end":{"line":94,"column":1,"offset":3130}}},{"type":"raw","value":"<br>","position":{"start":{"line":94,"column":1,"offset":3130},"end":{"line":94,"column":5,"offset":3134}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":94,"column":5,"offset":3134},"end":{"line":95,"column":66,"offset":3200}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":95,"column":66,"offset":3200},"end":{"line":95,"column":89,"offset":3223}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":95,"column":89,"offset":3223},"end":{"line":96,"column":1,"offset":3263}}},{"type":"raw","value":"<br>","position":{"start":{"line":96,"column":1,"offset":3263},"end":{"line":96,"column":5,"offset":3267}}},{"type":"text","value":"\n","position":{"start":{"line":96,"column":5,"offset":3267},"end":{"line":97,"column":1,"offset":3268}}},{"type":"raw","value":"<br>","position":{"start":{"line":97,"column":1,"offset":3268},"end":{"line":97,"column":5,"offset":3272}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":97,"column":5,"offset":3272},"end":{"line":98,"column":21,"offset":3293}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":98,"column":21,"offset":3293},"end":{"line":98,"column":25,"offset":3297}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":98,"column":25,"offset":3297},"end":{"line":99,"column":1,"offset":3351}}},{"type":"raw","value":"<br>","position":{"start":{"line":99,"column":1,"offset":3351},"end":{"line":99,"column":5,"offset":3355}}},{"type":"text","value":"\n","position":{"start":{"line":99,"column":5,"offset":3355},"end":{"line":100,"column":1,"offset":3356}}},{"type":"raw","value":"<br>","position":{"start":{"line":100,"column":1,"offset":3356},"end":{"line":100,"column":5,"offset":3360}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":100,"column":5,"offset":3360},"end":{"line":101,"column":21,"offset":3381}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":101,"column":21,"offset":3381},"end":{"line":101,"column":25,"offset":3385}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":101,"column":25,"offset":3385},"end":{"line":102,"column":1,"offset":3440}}},{"type":"raw","value":"<br>","position":{"start":{"line":102,"column":1,"offset":3440},"end":{"line":102,"column":5,"offset":3444}}},{"type":"text","value":"\n","position":{"start":{"line":102,"column":5,"offset":3444},"end":{"line":103,"column":1,"offset":3445}}},{"type":"raw","value":"<br>","position":{"start":{"line":103,"column":1,"offset":3445},"end":{"line":103,"column":5,"offset":3449}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":103,"column":5,"offset":3449},"end":{"line":104,"column":58,"offset":3507}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":104,"column":58,"offset":3507},"end":{"line":104,"column":61,"offset":3510}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":104,"column":61,"offset":3510},"end":{"line":104,"column":145,"offset":3594}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":104,"column":145,"offset":3594},"end":{"line":104,"column":153,"offset":3602}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":104,"column":153,"offset":3602},"end":{"line":104,"column":178,"offset":3627}}}],"position":{"start":{"line":92,"column":1,"offset":3068},"end":{"line":104,"column":178,"offset":3627}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":106,"column":7,"offset":3635},"end":{"line":106,"column":10,"offset":3638}}}],"position":{"start":{"line":106,"column":1,"offset":3629},"end":{"line":106,"column":10,"offset":3638}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":108,"column":8,"offset":3647},"end":{"line":108,"column":17,"offset":3656}}}],"position":{"start":{"line":108,"column":1,"offset":3640},"end":{"line":108,"column":17,"offset":3656}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":109,"column":1,"offset":3657},"end":{"line":120,"column":4,"offset":3856}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":121,"column":1,"offset":3857},"end":{"line":121,"column":5,"offset":3861}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":123,"column":1,"offset":3863},"end":{"line":124,"column":1,"offset":4079}}},{"type":"raw","value":"<br>","position":{"start":{"line":124,"column":1,"offset":4079},"end":{"line":124,"column":5,"offset":4083}}},{"type":"text","value":"\n","position":{"start":{"line":124,"column":5,"offset":4083},"end":{"line":125,"column":1,"offset":4084}}},{"type":"raw","value":"<br>","position":{"start":{"line":125,"column":1,"offset":4084},"end":{"line":125,"column":5,"offset":4088}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":125,"column":5,"offset":4088},"end":{"line":126,"column":72,"offset":4160}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":126,"column":72,"offset":4160},"end":{"line":126,"column":81,"offset":4169}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":126,"column":81,"offset":4169},"end":{"line":127,"column":1,"offset":4188}}},{"type":"raw","value":"<br>","position":{"start":{"line":127,"column":1,"offset":4188},"end":{"line":127,"column":5,"offset":4192}}},{"type":"text","value":"\n","position":{"start":{"line":127,"column":5,"offset":4192},"end":{"line":128,"column":1,"offset":4193}}},{"type":"raw","value":"<br>","position":{"start":{"line":128,"column":1,"offset":4193},"end":{"line":128,"column":5,"offset":4197}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":128,"column":5,"offset":4197},"end":{"line":129,"column":10,"offset":4207}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":129,"column":10,"offset":4207},"end":{"line":129,"column":16,"offset":4213}}},{"type":"text","value":" gets called with ","position":{"start":{"line":129,"column":16,"offset":4213},"end":{"line":129,"column":34,"offset":4231}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":129,"column":34,"offset":4231},"end":{"line":129,"column":42,"offset":4239}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":129,"column":42,"offset":4239},"end":{"line":130,"column":24,"offset":4264}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":130,"column":24,"offset":4264},"end":{"line":130,"column":33,"offset":4273}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":130,"column":33,"offset":4273},"end":{"line":130,"column":107,"offset":4347}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":130,"column":107,"offset":4347},"end":{"line":130,"column":116,"offset":4356}}},{"type":"text","value":" is false because ","position":{"start":{"line":130,"column":116,"offset":4356},"end":{"line":130,"column":134,"offset":4374}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":130,"column":134,"offset":4374},"end":{"line":130,"column":137,"offset":4377}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":130,"column":137,"offset":4377},"end":{"line":130,"column":161,"offset":4401}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":130,"column":161,"offset":4401},"end":{"line":130,"column":167,"offset":4407}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":130,"column":167,"offset":4407},"end":{"line":130,"column":192,"offset":4432}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":130,"column":192,"offset":4432},"end":{"line":130,"column":200,"offset":4440}}},{"type":"text","value":". This is because ","position":{"start":{"line":130,"column":200,"offset":4440},"end":{"line":130,"column":218,"offset":4458}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":130,"column":218,"offset":4458},"end":{"line":130,"column":224,"offset":4464}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":130,"column":224,"offset":4464},"end":{"line":130,"column":245,"offset":4485}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":130,"column":245,"offset":4485},"end":{"line":130,"column":252,"offset":4492}}},{"type":"text","value":" and ","position":{"start":{"line":130,"column":252,"offset":4492},"end":{"line":130,"column":257,"offset":4497}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":130,"column":257,"offset":4497},"end":{"line":130,"column":260,"offset":4500}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":130,"column":260,"offset":4500},"end":{"line":130,"column":285,"offset":4525}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":130,"column":285,"offset":4525},"end":{"line":130,"column":291,"offset":4531}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":130,"column":291,"offset":4531},"end":{"line":131,"column":96,"offset":4657}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":131,"column":96,"offset":4657},"end":{"line":131,"column":111,"offset":4672}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":131,"column":111,"offset":4672},"end":{"line":131,"column":182,"offset":4743}}}],"position":{"start":{"line":123,"column":1,"offset":3863},"end":{"line":131,"column":182,"offset":4743}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":133,"column":8,"offset":4752},"end":{"line":133,"column":19,"offset":4763}}}],"position":{"start":{"line":133,"column":1,"offset":4745},"end":{"line":133,"column":19,"offset":4763}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":134,"column":1,"offset":4764},"end":{"line":134,"column":14,"offset":4777}}}],"position":{"start":{"line":134,"column":1,"offset":4764},"end":{"line":134,"column":14,"offset":4777}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":135,"column":1,"offset":4778},"end":{"line":150,"column":4,"offset":5193}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":151,"column":1,"offset":5194},"end":{"line":151,"column":5,"offset":5198}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":153,"column":1,"offset":5200},"end":{"line":153,"column":141,"offset":5340}}}],"position":{"start":{"line":153,"column":1,"offset":5200},"end":{"line":153,"column":141,"offset":5340}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":155,"column":8,"offset":5349},"end":{"line":155,"column":30,"offset":5371}}}],"position":{"start":{"line":155,"column":1,"offset":5342},"end":{"line":155,"column":30,"offset":5371}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":156,"column":1,"offset":5372},"end":{"line":156,"column":199,"offset":5570}}}],"position":{"start":{"line":156,"column":1,"offset":5372},"end":{"line":156,"column":199,"offset":5570}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":158,"column":8,"offset":5579},"end":{"line":158,"column":30,"offset":5601}}}],"position":{"start":{"line":158,"column":1,"offset":5572},"end":{"line":158,"column":30,"offset":5601}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":160,"column":1,"offset":5603},"end":{"line":161,"column":1,"offset":5678}}},{"type":"raw","value":"<br>","position":{"start":{"line":161,"column":1,"offset":5678},"end":{"line":161,"column":5,"offset":5682}}},{"type":"text","value":"\n","position":{"start":{"line":161,"column":5,"offset":5682},"end":{"line":162,"column":1,"offset":5683}}},{"type":"raw","value":"<br>","position":{"start":{"line":162,"column":1,"offset":5683},"end":{"line":162,"column":5,"offset":5687}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":162,"column":5,"offset":5687},"end":{"line":164,"column":1,"offset":5749}}},{"type":"raw","value":"<br>","position":{"start":{"line":164,"column":1,"offset":5749},"end":{"line":164,"column":5,"offset":5753}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":164,"column":5,"offset":5753},"end":{"line":165,"column":1,"offset":5756}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":165,"column":1,"offset":5756},"end":{"line":165,"column":11,"offset":5766}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":165,"column":11,"offset":5766},"end":{"line":165,"column":19,"offset":5774}}},{"type":"text","value":" and ","position":{"start":{"line":165,"column":19,"offset":5774},"end":{"line":165,"column":24,"offset":5779}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":165,"column":24,"offset":5779},"end":{"line":165,"column":34,"offset":5789}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":165,"column":34,"offset":5789},"end":{"line":166,"column":1,"offset":5838}}},{"type":"raw","value":"<br>","position":{"start":{"line":166,"column":1,"offset":5838},"end":{"line":166,"column":5,"offset":5842}}}],"position":{"start":{"line":160,"column":1,"offset":5603},"end":{"line":166,"column":5,"offset":5842}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":168,"column":8,"offset":5851},"end":{"line":168,"column":12,"offset":5855}}}],"position":{"start":{"line":168,"column":1,"offset":5844},"end":{"line":168,"column":12,"offset":5855}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":169,"column":1,"offset":5856},"end":{"line":174,"column":4,"offset":5967}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":175,"column":1,"offset":5968},"end":{"line":176,"column":5,"offset":5977}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":178,"column":1,"offset":5979},"end":{"line":178,"column":7,"offset":5985}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":178,"column":7,"offset":5985},"end":{"line":180,"column":1,"offset":6067}}},{"type":"raw","value":"<br>","position":{"start":{"line":180,"column":1,"offset":6067},"end":{"line":180,"column":5,"offset":6071}}},{"type":"text","value":"\n","position":{"start":{"line":180,"column":5,"offset":6071},"end":{"line":181,"column":1,"offset":6072}}},{"type":"raw","value":"<br>","position":{"start":{"line":181,"column":1,"offset":6072},"end":{"line":181,"column":5,"offset":6076}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":181,"column":5,"offset":6076},"end":{"line":182,"column":10,"offset":6086}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":182,"column":10,"offset":6086},"end":{"line":182,"column":14,"offset":6090}}},{"type":"text","value":". Since ","position":{"start":{"line":182,"column":14,"offset":6090},"end":{"line":182,"column":22,"offset":6098}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":182,"column":22,"offset":6098},"end":{"line":182,"column":30,"offset":6106}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":182,"column":30,"offset":6106},"end":{"line":182,"column":50,"offset":6126}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":182,"column":50,"offset":6126},"end":{"line":182,"column":53,"offset":6129}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":182,"column":53,"offset":6129},"end":{"line":182,"column":90,"offset":6166}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":182,"column":90,"offset":6166},"end":{"line":182,"column":96,"offset":6172}}},{"type":"text","value":".\n","position":{"start":{"line":182,"column":96,"offset":6172},"end":{"line":183,"column":1,"offset":6175}}},{"type":"raw","value":"<br>","position":{"start":{"line":183,"column":1,"offset":6175},"end":{"line":183,"column":5,"offset":6179}}},{"type":"text","value":"\n","position":{"start":{"line":183,"column":5,"offset":6179},"end":{"line":184,"column":1,"offset":6180}}},{"type":"raw","value":"<br>","position":{"start":{"line":184,"column":1,"offset":6180},"end":{"line":184,"column":5,"offset":6184}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":184,"column":5,"offset":6184},"end":{"line":185,"column":14,"offset":6198}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":185,"column":14,"offset":6198},"end":{"line":185,"column":18,"offset":6202}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":185,"column":18,"offset":6202},"end":{"line":185,"column":90,"offset":6274}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":185,"column":90,"offset":6274},"end":{"line":185,"column":94,"offset":6278}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":185,"column":94,"offset":6278},"end":{"line":185,"column":125,"offset":6309}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":185,"column":125,"offset":6309},"end":{"line":185,"column":131,"offset":6315}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":185,"column":131,"offset":6315},"end":{"line":186,"column":1,"offset":6330}}},{"type":"raw","value":"<br>","position":{"start":{"line":186,"column":1,"offset":6330},"end":{"line":186,"column":5,"offset":6334}}},{"type":"text","value":"\n","position":{"start":{"line":186,"column":5,"offset":6334},"end":{"line":187,"column":1,"offset":6335}}},{"type":"raw","value":"<br>","position":{"start":{"line":187,"column":1,"offset":6335},"end":{"line":187,"column":5,"offset":6339}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":187,"column":5,"offset":6339},"end":{"line":188,"column":14,"offset":6353}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":188,"column":14,"offset":6353},"end":{"line":188,"column":18,"offset":6357}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":188,"column":18,"offset":6357},"end":{"line":188,"column":37,"offset":6376}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":188,"column":37,"offset":6376},"end":{"line":188,"column":40,"offset":6379}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":188,"column":40,"offset":6379},"end":{"line":188,"column":77,"offset":6416}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":188,"column":77,"offset":6416},"end":{"line":188,"column":81,"offset":6420}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":188,"column":81,"offset":6420},"end":{"line":188,"column":99,"offset":6438}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":188,"column":99,"offset":6438},"end":{"line":188,"column":102,"offset":6441}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":188,"column":102,"offset":6441},"end":{"line":188,"column":133,"offset":6472}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":188,"column":133,"offset":6472},"end":{"line":188,"column":139,"offset":6478}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":188,"column":139,"offset":6478},"end":{"line":188,"column":167,"offset":6506}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":188,"column":167,"offset":6506},"end":{"line":188,"column":171,"offset":6510}}},{"type":"text","value":".\n","position":{"start":{"line":188,"column":171,"offset":6510},"end":{"line":189,"column":1,"offset":6512}}},{"type":"raw","value":"<br>","position":{"start":{"line":189,"column":1,"offset":6512},"end":{"line":189,"column":5,"offset":6516}}},{"type":"text","value":"\n","position":{"start":{"line":189,"column":5,"offset":6516},"end":{"line":190,"column":1,"offset":6517}}},{"type":"raw","value":"<br>","position":{"start":{"line":190,"column":1,"offset":6517},"end":{"line":190,"column":5,"offset":6521}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":190,"column":5,"offset":6521},"end":{"line":192,"column":1,"offset":6541}}},{"type":"raw","value":"<br>","position":{"start":{"line":192,"column":1,"offset":6541},"end":{"line":192,"column":5,"offset":6545}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":192,"column":5,"offset":6545},"end":{"line":193,"column":6,"offset":6551}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":193,"column":6,"offset":6551},"end":{"line":193,"column":12,"offset":6557}}},{"type":"text","value":" does not have an ","position":{"start":{"line":193,"column":12,"offset":6557},"end":{"line":193,"column":30,"offset":6575}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":193,"column":30,"offset":6575},"end":{"line":193,"column":36,"offset":6581}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":193,"column":36,"offset":6581},"end":{"line":193,"column":62,"offset":6607}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":193,"column":62,"offset":6607},"end":{"line":193,"column":75,"offset":6620}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":193,"column":75,"offset":6620},"end":{"line":193,"column":159,"offset":6704}}}],"position":{"start":{"line":178,"column":1,"offset":5979},"end":{"line":193,"column":159,"offset":6704}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":195,"column":8,"offset":6713},"end":{"line":195,"column":41,"offset":6746}}}],"position":{"start":{"line":195,"column":1,"offset":6706},"end":{"line":195,"column":41,"offset":6746}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":196,"column":1,"offset":6747},"end":{"line":201,"column":4,"offset":6822}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":202,"column":1,"offset":6823},"end":{"line":203,"column":1,"offset":6842}}},{"type":"raw","value":"<br>","position":{"start":{"line":203,"column":1,"offset":6842},"end":{"line":203,"column":5,"offset":6846}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":203,"column":5,"offset":6846},"end":{"line":205,"column":5,"offset":6984}}},{"type":"raw","value":"<br>","position":{"start":{"line":205,"column":5,"offset":6984},"end":{"line":205,"column":9,"offset":6988}}},{"type":"text","value":"\n","position":{"start":{"line":205,"column":9,"offset":6988},"end":{"line":206,"column":5,"offset":6993}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":206,"column":5,"offset":6993},"end":{"line":206,"column":27,"offset":7015}}},{"type":"text","value":"\n","position":{"start":{"line":206,"column":27,"offset":7015},"end":{"line":207,"column":5,"offset":7020}}},{"type":"raw","value":"<br>","position":{"start":{"line":207,"column":5,"offset":7020},"end":{"line":207,"column":9,"offset":7024}}},{"type":"text","value":"\n","position":{"start":{"line":207,"column":9,"offset":7024},"end":{"line":208,"column":5,"offset":7029}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":208,"column":5,"offset":7029},"end":{"line":208,"column":12,"offset":7036}}},{"type":"text","value":" and ","position":{"start":{"line":208,"column":12,"offset":7036},"end":{"line":208,"column":17,"offset":7041}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":208,"column":17,"offset":7041},"end":{"line":208,"column":25,"offset":7049}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":208,"column":25,"offset":7049},"end":{"line":208,"column":63,"offset":7087}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":208,"column":63,"offset":7087},"end":{"line":208,"column":66,"offset":7090}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":208,"column":66,"offset":7090},"end":{"line":208,"column":86,"offset":7110}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":208,"column":86,"offset":7110},"end":{"line":208,"column":89,"offset":7113}}},{"type":"text","value":" will be called with ","position":{"start":{"line":208,"column":89,"offset":7113},"end":{"line":208,"column":110,"offset":7134}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":208,"column":110,"offset":7134},"end":{"line":208,"column":119,"offset":7143}}},{"type":"text","value":".\n","position":{"start":{"line":208,"column":119,"offset":7143},"end":{"line":209,"column":1,"offset":7145}}},{"type":"raw","value":"<br>","position":{"start":{"line":209,"column":1,"offset":7145},"end":{"line":209,"column":5,"offset":7149}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":209,"column":5,"offset":7149},"end":{"line":211,"column":1,"offset":7165}}},{"type":"raw","value":"<br>","position":{"start":{"line":211,"column":1,"offset":7165},"end":{"line":211,"column":5,"offset":7169}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":211,"column":5,"offset":7169},"end":{"line":213,"column":5,"offset":7276}}},{"type":"raw","value":"<br>","position":{"start":{"line":213,"column":5,"offset":7276},"end":{"line":213,"column":9,"offset":7280}}},{"type":"text","value":"\n","position":{"start":{"line":213,"column":9,"offset":7280},"end":{"line":214,"column":1,"offset":7281}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":214,"column":1,"offset":7281},"end":{"line":214,"column":23,"offset":7303}}},{"type":"text","value":" turns into ","position":{"start":{"line":214,"column":23,"offset":7303},"end":{"line":214,"column":35,"offset":7315}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":214,"column":35,"offset":7315},"end":{"line":214,"column":61,"offset":7341}}},{"type":"text","value":"\n","position":{"start":{"line":214,"column":61,"offset":7341},"end":{"line":215,"column":1,"offset":7342}}},{"type":"raw","value":"<br>","position":{"start":{"line":215,"column":1,"offset":7342},"end":{"line":215,"column":5,"offset":7346}}},{"type":"text","value":"\nNow ","position":{"start":{"line":215,"column":5,"offset":7346},"end":{"line":216,"column":5,"offset":7351}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":216,"column":5,"offset":7351},"end":{"line":216,"column":8,"offset":7354}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":216,"column":8,"offset":7354},"end":{"line":216,"column":58,"offset":7404}}}],"position":{"start":{"line":202,"column":1,"offset":6823},"end":{"line":216,"column":58,"offset":7404}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":218,"column":1,"offset":7406},"end":{"line":219,"column":1,"offset":7424}}},{"type":"raw","value":"<br>","position":{"start":{"line":219,"column":1,"offset":7424},"end":{"line":219,"column":5,"offset":7428}}}],"position":{"start":{"line":218,"column":1,"offset":7406},"end":{"line":219,"column":5,"offset":7428}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":220,"column":1,"offset":7429},"end":{"line":222,"column":4,"offset":7459}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":223,"column":1,"offset":7460},"end":{"line":223,"column":13,"offset":7472}}}],"position":{"start":{"line":223,"column":1,"offset":7460},"end":{"line":223,"column":13,"offset":7472}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":224,"column":1,"offset":7473},"end":{"line":230,"column":4,"offset":7552}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":231,"column":1,"offset":7553},"end":{"line":231,"column":8,"offset":7560}}}],"position":{"start":{"line":231,"column":1,"offset":7553},"end":{"line":231,"column":8,"offset":7560}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":232,"column":1,"offset":7561},"end":{"line":239,"column":4,"offset":7685}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":240,"column":1,"offset":7686},"end":{"line":241,"column":5,"offset":7695}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":243,"column":1,"offset":7697},"end":{"line":243,"column":11,"offset":7707}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":243,"column":11,"offset":7707},"end":{"line":243,"column":24,"offset":7720}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":243,"column":24,"offset":7720},"end":{"line":243,"column":107,"offset":7803}}}],"position":{"start":{"line":243,"column":1,"offset":7697},"end":{"line":243,"column":107,"offset":7803}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":245,"column":7,"offset":7811},"end":{"line":245,"column":10,"offset":7814}}}],"position":{"start":{"line":245,"column":1,"offset":7805},"end":{"line":245,"column":10,"offset":7814}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":246,"column":7,"offset":7821},"end":{"line":246,"column":10,"offset":7824}}}],"position":{"start":{"line":246,"column":1,"offset":7815},"end":{"line":246,"column":10,"offset":7824}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":248,"column":6,"offset":7831},"end":{"line":248,"column":10,"offset":7835}}}],"position":{"start":{"line":248,"column":1,"offset":7826},"end":{"line":248,"column":10,"offset":7835}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":249,"column":7,"offset":7842},"end":{"line":249,"column":13,"offset":7848}}}],"position":{"start":{"line":249,"column":1,"offset":7836},"end":{"line":249,"column":13,"offset":7848}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":250,"column":1,"offset":7849},"end":{"line":250,"column":49,"offset":7897}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":250,"column":49,"offset":7897},"end":{"line":250,"column":57,"offset":7905}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":250,"column":57,"offset":7905},"end":{"line":250,"column":133,"offset":7981}}}],"position":{"start":{"line":250,"column":1,"offset":7849},"end":{"line":250,"column":133,"offset":7981}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":251,"column":1,"offset":7982},"end":{"line":261,"column":4,"offset":8177}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":262,"column":1,"offset":8178},"end":{"line":262,"column":5,"offset":8182}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":265,"column":1,"offset":8185},"end":{"line":266,"column":1,"offset":8267}}},{"type":"raw","value":"<br>","position":{"start":{"line":266,"column":1,"offset":8267},"end":{"line":266,"column":5,"offset":8271}}},{"type":"text","value":"\n","position":{"start":{"line":266,"column":5,"offset":8271},"end":{"line":267,"column":1,"offset":8272}}},{"type":"raw","value":"<br>","position":{"start":{"line":267,"column":1,"offset":8272},"end":{"line":267,"column":5,"offset":8276}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":267,"column":5,"offset":8276},"end":{"line":268,"column":26,"offset":8302}}}],"position":{"start":{"line":265,"column":1,"offset":8185},"end":{"line":268,"column":26,"offset":8302}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":269,"column":1,"offset":8303},"end":{"line":274,"column":4,"offset":8431}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":275,"column":1,"offset":8432},"end":{"line":275,"column":14,"offset":8445}}}],"position":{"start":{"line":275,"column":1,"offset":8432},"end":{"line":275,"column":14,"offset":8445}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":277,"column":1,"offset":8447},"end":{"line":290,"column":4,"offset":8729}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":292,"column":1,"offset":8731},"end":{"line":293,"column":5,"offset":8740}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":296,"column":7,"offset":8749},"end":{"line":296,"column":13,"offset":8755}}}],"position":{"start":{"line":296,"column":1,"offset":8743},"end":{"line":296,"column":13,"offset":8755}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":296,"column":13,"offset":8755}}}}