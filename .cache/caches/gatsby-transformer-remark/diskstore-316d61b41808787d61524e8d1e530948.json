{"expireTime":9007200842248920000,"key":"transformer-remark-markdown-ast-863017e59d69c471d988b13e19b4744b-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632},"indent":[]}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities. \n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705},"indent":[]}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791},"indent":[]}},{"type":"text","value":"\nBreaking down a expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":820},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":1,"offset":820},"end":{"line":22,"column":5,"offset":824},"indent":[]}},{"type":"text","value":"\nexpression: ","position":{"start":{"line":22,"column":5,"offset":824},"end":{"line":23,"column":13,"offset":837},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":13,"offset":837},"end":{"line":23,"column":26,"offset":850},"indent":[]}},{"type":"text","value":"\noperator: ","position":{"start":{"line":23,"column":26,"offset":850},"end":{"line":24,"column":11,"offset":861},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":24,"column":11,"offset":861},"end":{"line":24,"column":14,"offset":864},"indent":[]}},{"type":"text","value":"\noperands: ","position":{"start":{"line":24,"column":14,"offset":864},"end":{"line":25,"column":11,"offset":875},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":25,"column":11,"offset":875},"end":{"line":25,"column":16,"offset":880},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":25,"column":16,"offset":880},"end":{"line":25,"column":17,"offset":881},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":25,"column":17,"offset":881},"end":{"line":25,"column":22,"offset":886},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":22,"offset":886},"end":{"line":26,"column":1,"offset":887},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":26,"column":1,"offset":887},"end":{"line":26,"column":5,"offset":891},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":26,"column":5,"offset":891},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":28,"column":7,"offset":899},"end":{"line":28,"column":10,"offset":902},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":893},"end":{"line":28,"column":10,"offset":902},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":29,"column":7,"offset":909},"end":{"line":29,"column":10,"offset":912},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":903},"end":{"line":29,"column":10,"offset":912},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":31,"column":6,"offset":919},"end":{"line":31,"column":14,"offset":927},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":914},"end":{"line":31,"column":14,"offset":927},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":32,"column":7,"offset":934},"end":{"line":32,"column":10,"offset":937},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":928},"end":{"line":32,"column":10,"offset":937},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":34,"column":8,"offset":946},"end":{"line":34,"column":30,"offset":968},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":939},"end":{"line":34,"column":30,"offset":968},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":36,"column":1,"offset":970},"end":{"line":37,"column":1,"offset":1114},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":37,"column":1,"offset":1114},"end":{"line":37,"column":5,"offset":1118},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":37,"column":5,"offset":1118},"end":{"line":37,"column":16,"offset":1129},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":37,"column":16,"offset":1129},"end":{"line":37,"column":20,"offset":1133},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":37,"column":20,"offset":1133},"end":{"line":39,"column":1,"offset":1277},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":39,"column":1,"offset":1277},"end":{"line":39,"column":5,"offset":1281},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":39,"column":5,"offset":1281},"end":{"line":39,"column":16,"offset":1292},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":39,"column":16,"offset":1292},"end":{"line":39,"column":20,"offset":1296},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":39,"column":20,"offset":1296},"end":{"line":40,"column":45,"offset":1341},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":40,"column":45,"offset":1341},"end":{"line":40,"column":49,"offset":1345},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":40,"column":49,"offset":1345},"end":{"line":40,"column":65,"offset":1361},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":40,"column":65,"offset":1361},"end":{"line":40,"column":69,"offset":1365},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":40,"column":69,"offset":1365},"end":{"line":42,"column":1,"offset":1408},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":42,"column":1,"offset":1408},"end":{"line":42,"column":5,"offset":1412},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":42,"column":5,"offset":1412},"end":{"line":42,"column":22,"offset":1429},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":42,"column":22,"offset":1429},"end":{"line":42,"column":26,"offset":1433},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":42,"column":26,"offset":1433},"end":{"line":43,"column":1,"offset":1434},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":43,"column":1,"offset":1434},"end":{"line":43,"column":5,"offset":1438},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":43,"column":5,"offset":1438},"end":{"line":45,"column":1,"offset":1556},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":45,"column":1,"offset":1556},"end":{"line":45,"column":5,"offset":1560},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":45,"column":5,"offset":1560},"end":{"line":47,"column":1,"offset":1681},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":47,"column":1,"offset":1681},"end":{"line":47,"column":12,"offset":1692},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":47,"column":12,"offset":1692},"end":{"line":47,"column":68,"offset":1748},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":47,"column":68,"offset":1748},"end":{"line":47,"column":79,"offset":1759},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":47,"column":79,"offset":1759},"end":{"line":47,"column":106,"offset":1786},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":47,"column":106,"offset":1786},"end":{"line":47,"column":109,"offset":1789},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":47,"column":109,"offset":1789},"end":{"line":47,"column":189,"offset":1869},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":47,"column":189,"offset":1869},"end":{"line":47,"column":192,"offset":1872},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":47,"column":192,"offset":1872},"end":{"line":47,"column":202,"offset":1882},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":970},"end":{"line":47,"column":202,"offset":1882},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":49,"column":8,"offset":1891},"end":{"line":49,"column":14,"offset":1897},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1884},"end":{"line":49,"column":14,"offset":1897},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":50,"column":1,"offset":1898},"end":{"line":50,"column":9,"offset":1906},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":50,"column":9,"offset":1906},"end":{"line":50,"column":73,"offset":1970},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1898},"end":{"line":50,"column":73,"offset":1970},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":51,"column":1,"offset":1971},"end":{"line":54,"column":4,"offset":2010},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":55,"column":1,"offset":2011},"end":{"line":55,"column":5,"offset":2015},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":57,"column":1,"offset":2017},"end":{"line":57,"column":72,"offset":2088},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":57,"column":72,"offset":2088},"end":{"line":57,"column":80,"offset":2096},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":57,"column":80,"offset":2096},"end":{"line":58,"column":1,"offset":2120},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":58,"column":1,"offset":2120},"end":{"line":58,"column":5,"offset":2124},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":58,"column":5,"offset":2124},"end":{"line":59,"column":1,"offset":2125},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":59,"column":1,"offset":2125},"end":{"line":59,"column":5,"offset":2129},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":59,"column":5,"offset":2129},"end":{"line":60,"column":184,"offset":2313},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":60,"column":184,"offset":2313},"end":{"line":60,"column":187,"offset":2316},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":60,"column":187,"offset":2316},"end":{"line":61,"column":1,"offset":2319},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":61,"column":1,"offset":2319},"end":{"line":61,"column":5,"offset":2323},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":61,"column":5,"offset":2323},"end":{"line":62,"column":1,"offset":2324},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":62,"column":1,"offset":2324},"end":{"line":62,"column":5,"offset":2328},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":62,"column":5,"offset":2328},"end":{"line":63,"column":27,"offset":2355},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":63,"column":27,"offset":2355},"end":{"line":63,"column":35,"offset":2363},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":63,"column":35,"offset":2363},"end":{"line":63,"column":86,"offset":2414},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":63,"column":86,"offset":2414},"end":{"line":63,"column":95,"offset":2423},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":63,"column":95,"offset":2423},"end":{"line":63,"column":97,"offset":2425},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":2017},"end":{"line":63,"column":97,"offset":2425},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":65,"column":1,"offset":2427},"end":{"line":65,"column":6,"offset":2432},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":67,"column":1,"offset":2434},"end":{"line":68,"column":1,"offset":2478},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":68,"column":1,"offset":2478},"end":{"line":68,"column":5,"offset":2482},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":68,"column":5,"offset":2482},"end":{"line":69,"column":1,"offset":2483},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":69,"column":1,"offset":2483},"end":{"line":69,"column":22,"offset":2504},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":69,"column":22,"offset":2504},"end":{"line":70,"column":1,"offset":2505},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":70,"column":1,"offset":2505},"end":{"line":70,"column":5,"offset":2509},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":2434},"end":{"line":70,"column":5,"offset":2509},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":72,"column":1,"offset":2511},"end":{"line":72,"column":152,"offset":2662},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":2511},"end":{"line":72,"column":152,"offset":2662},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":74,"column":8,"offset":2671},"end":{"line":74,"column":20,"offset":2683},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":2664},"end":{"line":74,"column":20,"offset":2683},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":76,"column":1,"offset":2685},"end":{"line":76,"column":56,"offset":2740},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":2685},"end":{"line":76,"column":56,"offset":2740},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":77,"column":1,"offset":2741},"end":{"line":82,"column":4,"offset":2832},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":83,"column":1,"offset":2833},"end":{"line":83,"column":5,"offset":2837},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":85,"column":1,"offset":2839},"end":{"line":85,"column":37,"offset":2875},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":85,"column":37,"offset":2875},"end":{"line":85,"column":41,"offset":2879},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":85,"column":41,"offset":2879},"end":{"line":86,"column":1,"offset":2896},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":86,"column":1,"offset":2896},"end":{"line":86,"column":5,"offset":2900},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":86,"column":5,"offset":2900},"end":{"line":87,"column":1,"offset":2901},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":87,"column":1,"offset":2901},"end":{"line":87,"column":5,"offset":2905},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":87,"column":5,"offset":2905},"end":{"line":88,"column":66,"offset":2971},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":88,"column":66,"offset":2971},"end":{"line":88,"column":89,"offset":2994},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":88,"column":89,"offset":2994},"end":{"line":89,"column":1,"offset":3034},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":89,"column":1,"offset":3034},"end":{"line":89,"column":5,"offset":3038},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":89,"column":5,"offset":3038},"end":{"line":90,"column":1,"offset":3039},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":90,"column":1,"offset":3039},"end":{"line":90,"column":5,"offset":3043},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":90,"column":5,"offset":3043},"end":{"line":91,"column":21,"offset":3064},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":91,"column":21,"offset":3064},"end":{"line":91,"column":25,"offset":3068},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":91,"column":25,"offset":3068},"end":{"line":92,"column":1,"offset":3122},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":92,"column":1,"offset":3122},"end":{"line":92,"column":5,"offset":3126},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":92,"column":5,"offset":3126},"end":{"line":93,"column":1,"offset":3127},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":93,"column":1,"offset":3127},"end":{"line":93,"column":5,"offset":3131},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":93,"column":5,"offset":3131},"end":{"line":94,"column":21,"offset":3152},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":94,"column":21,"offset":3152},"end":{"line":94,"column":25,"offset":3156},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":94,"column":25,"offset":3156},"end":{"line":95,"column":1,"offset":3211},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":95,"column":1,"offset":3211},"end":{"line":95,"column":5,"offset":3215},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":95,"column":5,"offset":3215},"end":{"line":96,"column":1,"offset":3216},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":96,"column":1,"offset":3216},"end":{"line":96,"column":5,"offset":3220},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":96,"column":5,"offset":3220},"end":{"line":97,"column":58,"offset":3278},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":97,"column":58,"offset":3278},"end":{"line":97,"column":61,"offset":3281},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":97,"column":61,"offset":3281},"end":{"line":97,"column":145,"offset":3365},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":97,"column":145,"offset":3365},"end":{"line":97,"column":153,"offset":3373},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":97,"column":153,"offset":3373},"end":{"line":97,"column":178,"offset":3398},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":2839},"end":{"line":97,"column":178,"offset":3398},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":99,"column":7,"offset":3406},"end":{"line":99,"column":10,"offset":3409},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":3400},"end":{"line":99,"column":10,"offset":3409},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":101,"column":8,"offset":3418},"end":{"line":101,"column":17,"offset":3427},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":3411},"end":{"line":101,"column":17,"offset":3427},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":102,"column":1,"offset":3428},"end":{"line":113,"column":4,"offset":3627},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":114,"column":1,"offset":3628},"end":{"line":114,"column":5,"offset":3632},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":116,"column":1,"offset":3634},"end":{"line":117,"column":1,"offset":3850},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":117,"column":1,"offset":3850},"end":{"line":117,"column":5,"offset":3854},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":117,"column":5,"offset":3854},"end":{"line":118,"column":1,"offset":3855},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":118,"column":1,"offset":3855},"end":{"line":118,"column":5,"offset":3859},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":118,"column":5,"offset":3859},"end":{"line":119,"column":72,"offset":3931},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":119,"column":72,"offset":3931},"end":{"line":119,"column":81,"offset":3940},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":119,"column":81,"offset":3940},"end":{"line":120,"column":1,"offset":3959},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":120,"column":1,"offset":3959},"end":{"line":120,"column":5,"offset":3963},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":120,"column":5,"offset":3963},"end":{"line":121,"column":1,"offset":3964},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":121,"column":1,"offset":3964},"end":{"line":121,"column":5,"offset":3968},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":121,"column":5,"offset":3968},"end":{"line":122,"column":10,"offset":3978},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":122,"column":10,"offset":3978},"end":{"line":122,"column":16,"offset":3984},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":122,"column":16,"offset":3984},"end":{"line":122,"column":34,"offset":4002},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":122,"column":34,"offset":4002},"end":{"line":122,"column":42,"offset":4010},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":122,"column":42,"offset":4010},"end":{"line":123,"column":24,"offset":4035},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":123,"column":24,"offset":4035},"end":{"line":123,"column":33,"offset":4044},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":123,"column":33,"offset":4044},"end":{"line":123,"column":107,"offset":4118},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":123,"column":107,"offset":4118},"end":{"line":123,"column":116,"offset":4127},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":123,"column":116,"offset":4127},"end":{"line":123,"column":134,"offset":4145},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":123,"column":134,"offset":4145},"end":{"line":123,"column":137,"offset":4148},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":123,"column":137,"offset":4148},"end":{"line":123,"column":161,"offset":4172},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":123,"column":161,"offset":4172},"end":{"line":123,"column":167,"offset":4178},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":123,"column":167,"offset":4178},"end":{"line":123,"column":192,"offset":4203},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":123,"column":192,"offset":4203},"end":{"line":123,"column":200,"offset":4211},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":123,"column":200,"offset":4211},"end":{"line":123,"column":218,"offset":4229},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":123,"column":218,"offset":4229},"end":{"line":123,"column":224,"offset":4235},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":123,"column":224,"offset":4235},"end":{"line":123,"column":245,"offset":4256},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":123,"column":245,"offset":4256},"end":{"line":123,"column":252,"offset":4263},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":123,"column":252,"offset":4263},"end":{"line":123,"column":257,"offset":4268},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":123,"column":257,"offset":4268},"end":{"line":123,"column":260,"offset":4271},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":123,"column":260,"offset":4271},"end":{"line":123,"column":285,"offset":4296},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":123,"column":285,"offset":4296},"end":{"line":123,"column":291,"offset":4302},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":123,"column":291,"offset":4302},"end":{"line":124,"column":96,"offset":4428},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":124,"column":96,"offset":4428},"end":{"line":124,"column":111,"offset":4443},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":124,"column":111,"offset":4443},"end":{"line":124,"column":182,"offset":4514},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":3634},"end":{"line":124,"column":182,"offset":4514},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":126,"column":8,"offset":4523},"end":{"line":126,"column":19,"offset":4534},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":4516},"end":{"line":126,"column":19,"offset":4534},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":127,"column":1,"offset":4535},"end":{"line":127,"column":14,"offset":4548},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":4535},"end":{"line":127,"column":14,"offset":4548},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":128,"column":1,"offset":4549},"end":{"line":143,"column":4,"offset":4964},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":144,"column":1,"offset":4965},"end":{"line":144,"column":5,"offset":4969},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":146,"column":1,"offset":4971},"end":{"line":146,"column":141,"offset":5111},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":4971},"end":{"line":146,"column":141,"offset":5111},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":148,"column":8,"offset":5120},"end":{"line":148,"column":30,"offset":5142},"indent":[]}}],"position":{"start":{"line":148,"column":1,"offset":5113},"end":{"line":148,"column":30,"offset":5142},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":149,"column":1,"offset":5143},"end":{"line":149,"column":199,"offset":5341},"indent":[]}}],"position":{"start":{"line":149,"column":1,"offset":5143},"end":{"line":149,"column":199,"offset":5341},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":151,"column":8,"offset":5350},"end":{"line":151,"column":30,"offset":5372},"indent":[]}}],"position":{"start":{"line":151,"column":1,"offset":5343},"end":{"line":151,"column":30,"offset":5372},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":153,"column":1,"offset":5374},"end":{"line":154,"column":1,"offset":5449},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":154,"column":1,"offset":5449},"end":{"line":154,"column":5,"offset":5453},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":154,"column":5,"offset":5453},"end":{"line":155,"column":1,"offset":5454},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":155,"column":1,"offset":5454},"end":{"line":155,"column":5,"offset":5458},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":155,"column":5,"offset":5458},"end":{"line":157,"column":1,"offset":5520},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":157,"column":1,"offset":5520},"end":{"line":157,"column":5,"offset":5524},"indent":[]}},{"type":"break","position":{"start":{"line":157,"column":5,"offset":5524},"end":{"line":158,"column":1,"offset":5527},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":158,"column":1,"offset":5527},"end":{"line":158,"column":11,"offset":5537},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":158,"column":11,"offset":5537},"end":{"line":158,"column":19,"offset":5545},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":158,"column":19,"offset":5545},"end":{"line":158,"column":24,"offset":5550},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":158,"column":24,"offset":5550},"end":{"line":158,"column":34,"offset":5560},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":158,"column":34,"offset":5560},"end":{"line":159,"column":1,"offset":5609},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":159,"column":1,"offset":5609},"end":{"line":159,"column":5,"offset":5613},"indent":[]}}],"position":{"start":{"line":153,"column":1,"offset":5374},"end":{"line":159,"column":5,"offset":5613},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":161,"column":8,"offset":5622},"end":{"line":161,"column":12,"offset":5626},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":5615},"end":{"line":161,"column":12,"offset":5626},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":162,"column":1,"offset":5627},"end":{"line":167,"column":4,"offset":5738},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":168,"column":1,"offset":5739},"end":{"line":169,"column":5,"offset":5748},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":171,"column":1,"offset":5750},"end":{"line":171,"column":7,"offset":5756},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":171,"column":7,"offset":5756},"end":{"line":173,"column":1,"offset":5838},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":173,"column":1,"offset":5838},"end":{"line":173,"column":5,"offset":5842},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":173,"column":5,"offset":5842},"end":{"line":174,"column":1,"offset":5843},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":174,"column":1,"offset":5843},"end":{"line":174,"column":5,"offset":5847},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":174,"column":5,"offset":5847},"end":{"line":175,"column":10,"offset":5857},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":175,"column":10,"offset":5857},"end":{"line":175,"column":14,"offset":5861},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":175,"column":14,"offset":5861},"end":{"line":175,"column":22,"offset":5869},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":175,"column":22,"offset":5869},"end":{"line":175,"column":30,"offset":5877},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":175,"column":30,"offset":5877},"end":{"line":175,"column":50,"offset":5897},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":175,"column":50,"offset":5897},"end":{"line":175,"column":53,"offset":5900},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":175,"column":53,"offset":5900},"end":{"line":175,"column":90,"offset":5937},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":175,"column":90,"offset":5937},"end":{"line":175,"column":96,"offset":5943},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":175,"column":96,"offset":5943},"end":{"line":176,"column":1,"offset":5946},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":176,"column":1,"offset":5946},"end":{"line":176,"column":5,"offset":5950},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":176,"column":5,"offset":5950},"end":{"line":177,"column":1,"offset":5951},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":177,"column":1,"offset":5951},"end":{"line":177,"column":5,"offset":5955},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":177,"column":5,"offset":5955},"end":{"line":178,"column":14,"offset":5969},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":178,"column":14,"offset":5969},"end":{"line":178,"column":18,"offset":5973},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":178,"column":18,"offset":5973},"end":{"line":178,"column":90,"offset":6045},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":178,"column":90,"offset":6045},"end":{"line":178,"column":94,"offset":6049},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":178,"column":94,"offset":6049},"end":{"line":178,"column":125,"offset":6080},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":178,"column":125,"offset":6080},"end":{"line":178,"column":131,"offset":6086},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":178,"column":131,"offset":6086},"end":{"line":179,"column":1,"offset":6101},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":179,"column":1,"offset":6101},"end":{"line":179,"column":5,"offset":6105},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":179,"column":5,"offset":6105},"end":{"line":180,"column":1,"offset":6106},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":180,"column":1,"offset":6106},"end":{"line":180,"column":5,"offset":6110},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":180,"column":5,"offset":6110},"end":{"line":181,"column":14,"offset":6124},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":181,"column":14,"offset":6124},"end":{"line":181,"column":18,"offset":6128},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":181,"column":18,"offset":6128},"end":{"line":181,"column":37,"offset":6147},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":181,"column":37,"offset":6147},"end":{"line":181,"column":40,"offset":6150},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":181,"column":40,"offset":6150},"end":{"line":181,"column":77,"offset":6187},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":181,"column":77,"offset":6187},"end":{"line":181,"column":81,"offset":6191},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":181,"column":81,"offset":6191},"end":{"line":181,"column":99,"offset":6209},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":181,"column":99,"offset":6209},"end":{"line":181,"column":102,"offset":6212},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":181,"column":102,"offset":6212},"end":{"line":181,"column":133,"offset":6243},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":181,"column":133,"offset":6243},"end":{"line":181,"column":139,"offset":6249},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":181,"column":139,"offset":6249},"end":{"line":181,"column":167,"offset":6277},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":181,"column":167,"offset":6277},"end":{"line":181,"column":171,"offset":6281},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":181,"column":171,"offset":6281},"end":{"line":182,"column":1,"offset":6283},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":182,"column":1,"offset":6283},"end":{"line":182,"column":5,"offset":6287},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":182,"column":5,"offset":6287},"end":{"line":183,"column":1,"offset":6288},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":183,"column":1,"offset":6288},"end":{"line":183,"column":5,"offset":6292},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":183,"column":5,"offset":6292},"end":{"line":185,"column":1,"offset":6312},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":185,"column":1,"offset":6312},"end":{"line":185,"column":5,"offset":6316},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":185,"column":5,"offset":6316},"end":{"line":186,"column":6,"offset":6322},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":186,"column":6,"offset":6322},"end":{"line":186,"column":12,"offset":6328},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":186,"column":12,"offset":6328},"end":{"line":186,"column":30,"offset":6346},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":186,"column":30,"offset":6346},"end":{"line":186,"column":36,"offset":6352},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":186,"column":36,"offset":6352},"end":{"line":186,"column":62,"offset":6378},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":186,"column":62,"offset":6378},"end":{"line":186,"column":75,"offset":6391},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":186,"column":75,"offset":6391},"end":{"line":186,"column":159,"offset":6475},"indent":[]}}],"position":{"start":{"line":171,"column":1,"offset":5750},"end":{"line":186,"column":159,"offset":6475},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":188,"column":8,"offset":6484},"end":{"line":188,"column":41,"offset":6517},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":6477},"end":{"line":188,"column":41,"offset":6517},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":189,"column":1,"offset":6518},"end":{"line":194,"column":4,"offset":6593},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":195,"column":1,"offset":6594},"end":{"line":196,"column":1,"offset":6613},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":196,"column":1,"offset":6613},"end":{"line":196,"column":5,"offset":6617},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":196,"column":5,"offset":6617},"end":{"line":198,"column":5,"offset":6755},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":198,"column":5,"offset":6755},"end":{"line":198,"column":9,"offset":6759},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":198,"column":9,"offset":6759},"end":{"line":199,"column":5,"offset":6764},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":199,"column":5,"offset":6764},"end":{"line":199,"column":27,"offset":6786},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":199,"column":27,"offset":6786},"end":{"line":200,"column":5,"offset":6791},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":200,"column":5,"offset":6791},"end":{"line":200,"column":9,"offset":6795},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":200,"column":9,"offset":6795},"end":{"line":201,"column":5,"offset":6800},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":201,"column":5,"offset":6800},"end":{"line":201,"column":12,"offset":6807},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":201,"column":12,"offset":6807},"end":{"line":201,"column":17,"offset":6812},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":201,"column":17,"offset":6812},"end":{"line":201,"column":25,"offset":6820},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":201,"column":25,"offset":6820},"end":{"line":201,"column":63,"offset":6858},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":201,"column":63,"offset":6858},"end":{"line":201,"column":66,"offset":6861},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":201,"column":66,"offset":6861},"end":{"line":201,"column":86,"offset":6881},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":201,"column":86,"offset":6881},"end":{"line":201,"column":89,"offset":6884},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":201,"column":89,"offset":6884},"end":{"line":201,"column":110,"offset":6905},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":201,"column":110,"offset":6905},"end":{"line":201,"column":119,"offset":6914},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":201,"column":119,"offset":6914},"end":{"line":202,"column":1,"offset":6916},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":202,"column":1,"offset":6916},"end":{"line":202,"column":5,"offset":6920},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":202,"column":5,"offset":6920},"end":{"line":204,"column":1,"offset":6936},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":204,"column":1,"offset":6936},"end":{"line":204,"column":5,"offset":6940},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":204,"column":5,"offset":6940},"end":{"line":206,"column":5,"offset":7047},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":206,"column":5,"offset":7047},"end":{"line":206,"column":9,"offset":7051},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":206,"column":9,"offset":7051},"end":{"line":207,"column":1,"offset":7052},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":207,"column":1,"offset":7052},"end":{"line":207,"column":23,"offset":7074},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":207,"column":23,"offset":7074},"end":{"line":207,"column":35,"offset":7086},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":207,"column":35,"offset":7086},"end":{"line":207,"column":61,"offset":7112},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":207,"column":61,"offset":7112},"end":{"line":208,"column":1,"offset":7113},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":208,"column":1,"offset":7113},"end":{"line":208,"column":5,"offset":7117},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":208,"column":5,"offset":7117},"end":{"line":209,"column":5,"offset":7122},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":209,"column":5,"offset":7122},"end":{"line":209,"column":8,"offset":7125},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":209,"column":8,"offset":7125},"end":{"line":209,"column":58,"offset":7175},"indent":[]}}],"position":{"start":{"line":195,"column":1,"offset":6594},"end":{"line":209,"column":58,"offset":7175},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":211,"column":1,"offset":7177},"end":{"line":212,"column":1,"offset":7195},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":212,"column":1,"offset":7195},"end":{"line":212,"column":5,"offset":7199},"indent":[]}}],"position":{"start":{"line":211,"column":1,"offset":7177},"end":{"line":212,"column":5,"offset":7199},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":213,"column":1,"offset":7200},"end":{"line":215,"column":4,"offset":7230},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":216,"column":1,"offset":7231},"end":{"line":216,"column":13,"offset":7243},"indent":[]}}],"position":{"start":{"line":216,"column":1,"offset":7231},"end":{"line":216,"column":13,"offset":7243},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":217,"column":1,"offset":7244},"end":{"line":223,"column":4,"offset":7323},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":224,"column":1,"offset":7324},"end":{"line":224,"column":8,"offset":7331},"indent":[]}}],"position":{"start":{"line":224,"column":1,"offset":7324},"end":{"line":224,"column":8,"offset":7331},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":225,"column":1,"offset":7332},"end":{"line":232,"column":4,"offset":7456},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":233,"column":1,"offset":7457},"end":{"line":234,"column":5,"offset":7466},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":236,"column":1,"offset":7468},"end":{"line":236,"column":11,"offset":7478},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":236,"column":11,"offset":7478},"end":{"line":236,"column":24,"offset":7491},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":236,"column":24,"offset":7491},"end":{"line":236,"column":107,"offset":7574},"indent":[]}}],"position":{"start":{"line":236,"column":1,"offset":7468},"end":{"line":236,"column":107,"offset":7574},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":238,"column":7,"offset":7582},"end":{"line":238,"column":10,"offset":7585},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":7576},"end":{"line":238,"column":10,"offset":7585},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":239,"column":7,"offset":7592},"end":{"line":239,"column":10,"offset":7595},"indent":[]}}],"position":{"start":{"line":239,"column":1,"offset":7586},"end":{"line":239,"column":10,"offset":7595},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":241,"column":6,"offset":7602},"end":{"line":241,"column":10,"offset":7606},"indent":[]}}],"position":{"start":{"line":241,"column":1,"offset":7597},"end":{"line":241,"column":10,"offset":7606},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":242,"column":7,"offset":7613},"end":{"line":242,"column":13,"offset":7619},"indent":[]}}],"position":{"start":{"line":242,"column":1,"offset":7607},"end":{"line":242,"column":13,"offset":7619},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":243,"column":1,"offset":7620},"end":{"line":243,"column":49,"offset":7668},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":243,"column":49,"offset":7668},"end":{"line":243,"column":57,"offset":7676},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":243,"column":57,"offset":7676},"end":{"line":243,"column":133,"offset":7752},"indent":[]}}],"position":{"start":{"line":243,"column":1,"offset":7620},"end":{"line":243,"column":133,"offset":7752},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":244,"column":1,"offset":7753},"end":{"line":254,"column":4,"offset":7948},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":255,"column":1,"offset":7949},"end":{"line":255,"column":5,"offset":7953},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":258,"column":1,"offset":7956},"end":{"line":259,"column":1,"offset":8038},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":259,"column":1,"offset":8038},"end":{"line":259,"column":5,"offset":8042},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":259,"column":5,"offset":8042},"end":{"line":260,"column":1,"offset":8043},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":260,"column":1,"offset":8043},"end":{"line":260,"column":5,"offset":8047},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":260,"column":5,"offset":8047},"end":{"line":261,"column":26,"offset":8073},"indent":[1]}}],"position":{"start":{"line":258,"column":1,"offset":7956},"end":{"line":261,"column":26,"offset":8073},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":262,"column":1,"offset":8074},"end":{"line":267,"column":4,"offset":8202},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":268,"column":1,"offset":8203},"end":{"line":268,"column":14,"offset":8216},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":8203},"end":{"line":268,"column":14,"offset":8216},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":270,"column":1,"offset":8218},"end":{"line":283,"column":4,"offset":8500},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":285,"column":1,"offset":8502},"end":{"line":286,"column":5,"offset":8511},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":289,"column":7,"offset":8520},"end":{"line":289,"column":13,"offset":8526},"indent":[]}}],"position":{"start":{"line":289,"column":1,"offset":8514},"end":{"line":289,"column":13,"offset":8526},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":289,"column":13,"offset":8526}}}}