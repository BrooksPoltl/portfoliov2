{"expireTime":9007200843264184000,"key":"transformer-remark-markdown-ast-4efee8cc3dd1ae18ec4f5ee173d43833-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":2,"column":6,"offset":6},"end":{"line":2,"column":14,"offset":14},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":14,"offset":14},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L14","position":{"start":{"line":3,"column":7,"offset":21},"end":{"line":3,"column":10,"offset":24},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":15},"end":{"line":3,"column":10,"offset":24},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"2 types of expressions:","position":{"start":{"line":4,"column":1,"offset":25},"end":{"line":4,"column":24,"offset":48},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":25},"end":{"line":4,"column":24,"offset":48},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">                 expr\n    _______________|___________________    \n    |                                 |\n    atomic                           list\n    ___|__________                     |\n    |            |            _______________________       \nself-eval    variables        procedures special-forms</code></pre></div>","position":{"start":{"line":5,"column":1,"offset":49},"end":{"line":13,"column":4,"offset":361},"indent":[1,1,1,1,1,1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    (define (eval exp)\n    (cond ((self-evaluating? exp) exp)\n    ((symbol? exp) (look-up-global-value exp))\n    ((special-form? exp) (do-special-form exp))\n    (else (apply (eval (car exp))\n    (map eval (cdr exp)) ))))</code></pre></div>","position":{"start":{"line":15,"column":1,"offset":363},"end":{"line":22,"column":4,"offset":591},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Above is the eval function for an interpreter in Scheme. Notice it attempts to determine the type of expression then has a function to handle them. If it is a list it recursively calls eval to break the list into primitives.\n","position":{"start":{"line":23,"column":1,"offset":592},"end":{"line":24,"column":1,"offset":817},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":24,"column":1,"offset":817},"end":{"line":24,"column":5,"offset":821},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":24,"column":5,"offset":821},"end":{"line":25,"column":1,"offset":822},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":25,"column":1,"offset":822},"end":{"line":25,"column":5,"offset":826},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":592},"end":{"line":25,"column":5,"offset":826},"indent":[1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    (define (apply proc args)\n        (if (primitive? proc)\n            (do-magic proc args)\n            (eval (substitute (body proc) (formals proc) args))))</code></pre></div>","position":{"start":{"line":26,"column":1,"offset":827},"end":{"line":31,"column":4,"offset":993},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"apply takes a procedure and a list of arguments. In the else of ","position":{"start":{"line":32,"column":1,"offset":994},"end":{"line":32,"column":65,"offset":1058},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">eval</code>","position":{"start":{"line":32,"column":65,"offset":1058},"end":{"line":32,"column":71,"offset":1064},"indent":[]}},{"type":"text","value":" apply gets the first argument which will always the procedure call, and then it maps the arguments.\n","position":{"start":{"line":32,"column":71,"offset":1064},"end":{"line":33,"column":1,"offset":1165},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":33,"column":1,"offset":1165},"end":{"line":33,"column":5,"offset":1169},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":33,"column":5,"offset":1169},"end":{"line":34,"column":1,"offset":1170},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1170},"end":{"line":34,"column":5,"offset":1174},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":994},"end":{"line":34,"column":5,"offset":1174},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If the procedure is a primitive it gets handled at the machine language level.","position":{"start":{"line":36,"column":1,"offset":1176},"end":{"line":36,"column":79,"offset":1254},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1176},"end":{"line":36,"column":79,"offset":1254},"indent":[]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":38,"column":1,"offset":1256},"end":{"line":39,"column":5,"offset":1265},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"If the procedure is created by a lambda,\nit has formal parameters and a body.\n","position":{"start":{"line":41,"column":1,"offset":1267},"end":{"line":43,"column":1,"offset":1345},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":43,"column":1,"offset":1345},"end":{"line":43,"column":5,"offset":1349},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":43,"column":5,"offset":1349},"end":{"line":44,"column":1,"offset":1350},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1350},"end":{"line":44,"column":5,"offset":1354},"indent":[]}},{"type":"text","value":"\nScheme uses environmental model of evaluation, but we are building a substitution model interpreter right now. \nSubstitution works for functional programming, but not all paradigms.\n","position":{"start":{"line":44,"column":5,"offset":1354},"end":{"line":47,"column":1,"offset":1537},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":47,"column":1,"offset":1537},"end":{"line":47,"column":5,"offset":1541},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":47,"column":5,"offset":1541},"end":{"line":48,"column":1,"offset":1542},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1542},"end":{"line":48,"column":5,"offset":1546},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1267},"end":{"line":48,"column":5,"offset":1546},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L15","position":{"start":{"line":50,"column":7,"offset":1554},"end":{"line":50,"column":10,"offset":1557},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1548},"end":{"line":50,"column":10,"offset":1557},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Why use a scheme interpreter to build a new one? \n","position":{"start":{"line":51,"column":1,"offset":1558},"end":{"line":52,"column":1,"offset":1608},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":52,"column":1,"offset":1608},"end":{"line":52,"column":5,"offset":1612},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":52,"column":5,"offset":1612},"end":{"line":53,"column":1,"offset":1613},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":53,"column":1,"offset":1613},"end":{"line":53,"column":5,"offset":1617},"indent":[]}},{"type":"text","value":"\nHelps understand model of evaluation\n","position":{"start":{"line":53,"column":5,"offset":1617},"end":{"line":55,"column":1,"offset":1655},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":55,"column":1,"offset":1655},"end":{"line":55,"column":5,"offset":1659},"indent":[]}},{"type":"text","value":"\nExperiment with modifications to scheme\n","position":{"start":{"line":55,"column":5,"offset":1659},"end":{"line":57,"column":1,"offset":1700},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":57,"column":1,"offset":1700},"end":{"line":57,"column":5,"offset":1704},"indent":[]}},{"type":"text","value":"\nMost of the original interpreter is written in scheme.\n","position":{"start":{"line":57,"column":5,"offset":1704},"end":{"line":59,"column":1,"offset":1760},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":59,"column":1,"offset":1760},"end":{"line":59,"column":5,"offset":1764},"indent":[]}},{"type":"text","value":"\nConveys a big concept in cs which is universality.\n","position":{"start":{"line":59,"column":5,"offset":1764},"end":{"line":61,"column":1,"offset":1816},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":61,"column":1,"offset":1816},"end":{"line":61,"column":5,"offset":1820},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":61,"column":5,"offset":1820},"end":{"line":62,"column":1,"offset":1821},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":62,"column":1,"offset":1821},"end":{"line":62,"column":5,"offset":1825},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1558},"end":{"line":62,"column":5,"offset":1825},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"universality is the concept of one machine that can run a large breadth of functions.\n","position":{"start":{"line":64,"column":1,"offset":1827},"end":{"line":65,"column":1,"offset":1913},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":65,"column":1,"offset":1913},"end":{"line":65,"column":5,"offset":1917},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":65,"column":5,"offset":1917},"end":{"line":66,"column":1,"offset":1918},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":66,"column":1,"offset":1918},"end":{"line":66,"column":5,"offset":1922},"indent":[]}},{"type":"text","value":"\nApplicative: argument values\n","position":{"start":{"line":66,"column":5,"offset":1922},"end":{"line":68,"column":1,"offset":1952},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":68,"column":1,"offset":1952},"end":{"line":68,"column":5,"offset":1956},"indent":[]}},{"type":"text","value":"\nNormal: argument expressions\n","position":{"start":{"line":68,"column":5,"offset":1956},"end":{"line":70,"column":1,"offset":1986},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":70,"column":1,"offset":1986},"end":{"line":70,"column":5,"offset":1990},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1827},"end":{"line":70,"column":5,"offset":1990},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Read: takes the input and turns it into box pointer diagrams. \n","position":{"start":{"line":72,"column":1,"offset":1992},"end":{"line":73,"column":1,"offset":2055},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":73,"column":1,"offset":2055},"end":{"line":73,"column":5,"offset":2059},"indent":[]}},{"type":"text","value":"\nQuote: takes cadr of the next expression.\n","position":{"start":{"line":73,"column":5,"offset":2059},"end":{"line":75,"column":1,"offset":2102},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2102},"end":{"line":75,"column":5,"offset":2106},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":1992},"end":{"line":75,"column":5,"offset":2106},"indent":[1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L16","position":{"start":{"line":78,"column":7,"offset":2115},"end":{"line":78,"column":10,"offset":2118},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":2109},"end":{"line":78,"column":10,"offset":2118},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"concepts:\n","position":{"start":{"line":80,"column":1,"offset":2120},"end":{"line":81,"column":1,"offset":2130},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":81,"column":1,"offset":2130},"end":{"line":81,"column":5,"offset":2134},"indent":[]}},{"type":"text","value":"\ntype tagging\n","position":{"start":{"line":81,"column":5,"offset":2134},"end":{"line":83,"column":1,"offset":2148},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":83,"column":1,"offset":2148},"end":{"line":83,"column":5,"offset":2152},"indent":[]}},{"type":"text","value":"\ndata directed programming\n","position":{"start":{"line":83,"column":5,"offset":2152},"end":{"line":85,"column":1,"offset":2179},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":85,"column":1,"offset":2179},"end":{"line":85,"column":5,"offset":2183},"indent":[]}},{"type":"text","value":"\nmessage passing\n","position":{"start":{"line":85,"column":5,"offset":2183},"end":{"line":87,"column":1,"offset":2200},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":87,"column":1,"offset":2200},"end":{"line":87,"column":5,"offset":2204},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":2120},"end":{"line":87,"column":5,"offset":2204},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"type tagging: car is the symbol, cdr is the arguments.\n","position":{"start":{"line":89,"column":1,"offset":2206},"end":{"line":90,"column":1,"offset":2261},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":90,"column":1,"offset":2261},"end":{"line":90,"column":5,"offset":2265},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":2206},"end":{"line":90,"column":5,"offset":2265},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"data directed programming: write one operation that does everything.\n","position":{"start":{"line":92,"column":1,"offset":2267},"end":{"line":93,"column":1,"offset":2336},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":93,"column":1,"offset":2336},"end":{"line":93,"column":5,"offset":2340},"indent":[]}},{"type":"text","value":"\nNot functional programming if you call the same expression and get different results.\n","position":{"start":{"line":93,"column":5,"offset":2340},"end":{"line":95,"column":1,"offset":2427},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":95,"column":1,"offset":2427},"end":{"line":95,"column":5,"offset":2431},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2267},"end":{"line":95,"column":5,"offset":2431},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(get &#39;brian &#39;address)\n; #f\n(put &#39;brian &#39;address &#39;(781 Soda))\n; ok\n(get &#39;brian &#39;address)\n; (781 soda)</code></pre></div>","position":{"start":{"line":96,"column":1,"offset":2432},"end":{"line":103,"column":4,"offset":2540},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":105,"column":1,"offset":2542},"end":{"line":106,"column":5,"offset":2551},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"This is not functional because same expression returns different results.\nYou can still use these in a functional way by assigning at the beginning and never reassigning.\n","position":{"start":{"line":108,"column":1,"offset":2553},"end":{"line":110,"column":1,"offset":2724},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":110,"column":1,"offset":2724},"end":{"line":110,"column":5,"offset":2728},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":2553},"end":{"line":110,"column":5,"offset":2728},"indent":[1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L17","position":{"start":{"line":114,"column":7,"offset":2738},"end":{"line":114,"column":10,"offset":2741},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":2732},"end":{"line":114,"column":10,"offset":2741},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Horizontal slices through the table: messaging. The name of the interface knows all the function.","position":{"start":{"line":116,"column":1,"offset":2743},"end":{"line":116,"column":98,"offset":2840},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":2743},"end":{"line":116,"column":98,"offset":2840},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":118,"column":1,"offset":2842},"end":{"line":118,"column":5,"offset":2846},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Horizontal slicing good for making prototypes.","position":{"start":{"line":120,"column":1,"offset":2848},"end":{"line":120,"column":47,"offset":2894},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":2848},"end":{"line":120,"column":47,"offset":2894},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":122,"column":1,"offset":2896},"end":{"line":122,"column":5,"offset":2900},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"4 kinds of numbers:\n","position":{"start":{"line":124,"column":1,"offset":2902},"end":{"line":125,"column":1,"offset":2922},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":125,"column":1,"offset":2922},"end":{"line":125,"column":5,"offset":2926},"indent":[]}},{"type":"text","value":"\ninteger\n","position":{"start":{"line":125,"column":5,"offset":2926},"end":{"line":127,"column":1,"offset":2935},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":127,"column":1,"offset":2935},"end":{"line":127,"column":5,"offset":2939},"indent":[]}},{"type":"text","value":"\nrational\n","position":{"start":{"line":127,"column":5,"offset":2939},"end":{"line":129,"column":1,"offset":2949},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":129,"column":1,"offset":2949},"end":{"line":129,"column":5,"offset":2953},"indent":[]}},{"type":"text","value":"\nreal\n","position":{"start":{"line":129,"column":5,"offset":2953},"end":{"line":131,"column":1,"offset":2959},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":131,"column":1,"offset":2959},"end":{"line":131,"column":5,"offset":2963},"indent":[]}},{"type":"text","value":"\ncomplex\n","position":{"start":{"line":131,"column":5,"offset":2963},"end":{"line":133,"column":1,"offset":2972},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":133,"column":1,"offset":2972},"end":{"line":133,"column":5,"offset":2976},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":133,"column":5,"offset":2976},"end":{"line":134,"column":1,"offset":2977},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":134,"column":1,"offset":2977},"end":{"line":134,"column":5,"offset":2981},"indent":[]}},{"type":"text","value":"\nregular people: 1 operand = unary, 2 operands = binary\n","position":{"start":{"line":134,"column":5,"offset":2981},"end":{"line":136,"column":1,"offset":3037},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":136,"column":1,"offset":3037},"end":{"line":136,"column":5,"offset":3041},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":136,"column":5,"offset":3041},"end":{"line":137,"column":1,"offset":3042},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":137,"column":1,"offset":3042},"end":{"line":137,"column":5,"offset":3046},"indent":[]}},{"type":"text","value":"\nprogrammers: 1 operand = monadic, 2 operands = dyadic\n","position":{"start":{"line":137,"column":5,"offset":3046},"end":{"line":139,"column":1,"offset":3101},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":139,"column":1,"offset":3101},"end":{"line":139,"column":5,"offset":3105},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":139,"column":5,"offset":3105},"end":{"line":140,"column":1,"offset":3106},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":140,"column":1,"offset":3106},"end":{"line":140,"column":5,"offset":3110},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":2902},"end":{"line":140,"column":5,"offset":3110},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LAB","position":{"start":{"line":142,"column":6,"offset":3117},"end":{"line":142,"column":9,"offset":3120},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":3112},"end":{"line":142,"column":9,"offset":3120},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"lab 3","position":{"start":{"line":143,"column":7,"offset":3127},"end":{"line":143,"column":12,"offset":3132},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":3121},"end":{"line":143,"column":12,"offset":3132},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (count-change amount)\n(cc amount &#39;(50 25 10 5 1)))\n\n(define (cc amount kinds-of-coins)\n    (cond ((= amount 0) 1)\n    ((or (&lt; amount 0) (equal? kinds-of-coins &#39;())) 0)\n    (else (+ (cc amount\n                (cdr kinds-of-coins))\n    (cc (- amount \n    (first-denomination kinds-of-coins))\n    kinds-of-coins)))))\n\n(define (first-denomination kinds-of-coins)\n(car kinds-of-coins))</code></pre></div>","position":{"start":{"line":144,"column":1,"offset":3133},"end":{"line":159,"column":4,"offset":3529},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This modifies the procedure on page 40-41 for count-change.\n","position":{"start":{"line":160,"column":1,"offset":3530},"end":{"line":161,"column":1,"offset":3590},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":161,"column":1,"offset":3590},"end":{"line":161,"column":5,"offset":3594},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":161,"column":5,"offset":3594},"end":{"line":162,"column":1,"offset":3595},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":162,"column":1,"offset":3595},"end":{"line":162,"column":5,"offset":3599},"indent":[]}},{"type":"text","value":"\nThis replaces the amount of coins with a sentence of coin amounts. I modified it to check for an empty array instead of 0, then when all possibilities of a denomination are checked I switch it to the remaining denominations using ","position":{"start":{"line":162,"column":5,"offset":3599},"end":{"line":163,"column":231,"offset":3830},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cdr</code>","position":{"start":{"line":163,"column":231,"offset":3830},"end":{"line":163,"column":236,"offset":3835},"indent":[]}},{"type":"text","value":". Then all I have to do to find the ","position":{"start":{"line":163,"column":236,"offset":3835},"end":{"line":163,"column":272,"offset":3871},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">first-denomination</code>","position":{"start":{"line":163,"column":272,"offset":3871},"end":{"line":163,"column":292,"offset":3891},"indent":[]}},{"type":"text","value":" os return ","position":{"start":{"line":163,"column":292,"offset":3891},"end":{"line":163,"column":303,"offset":3902},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">car</code>","position":{"start":{"line":163,"column":303,"offset":3902},"end":{"line":163,"column":308,"offset":3907},"indent":[]}},{"type":"text","value":" of the list.","position":{"start":{"line":163,"column":308,"offset":3907},"end":{"line":163,"column":321,"offset":3920},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":3530},"end":{"line":163,"column":321,"offset":3920},"indent":[1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":166,"column":6,"offset":3928},"end":{"line":166,"column":14,"offset":3936},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":3923},"end":{"line":166,"column":14,"offset":3936},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"2.4","position":{"start":{"line":167,"column":7,"offset":3943},"end":{"line":167,"column":10,"offset":3946},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":3937},"end":{"line":167,"column":10,"offset":3946},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"2.5","position":{"start":{"line":168,"column":7,"offset":3953},"end":{"line":168,"column":10,"offset":3956},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":3947},"end":{"line":168,"column":10,"offset":3956},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":168,"column":10,"offset":3956}}}}