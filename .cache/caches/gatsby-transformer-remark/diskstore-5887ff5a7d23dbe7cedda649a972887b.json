{"expireTime":9007200843285540000,"key":"transformer-remark-markdown-html-ca18c120d6d691667220d9a667512b49-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":"<p>This article is a part of a series where I go through <a href=\"https://teachyourselfcs.com/\">teachyourselfcs</a>.\nIf you would like to start at the beginning start <a href=\"https://bpp.dev/articles/teachyourselfcs/programming/00:getting-started/\">here</a>.</p>\n<h4>LECTURES</h4>\n<h5>L18</h5>\n<p>OOP is a implementation of lambda.\n<br>\n<br></p>\n<p>class\n<br>\ninstance\n<br>\ninstantiation variable\n<br>\nclause\n<br>\nmethod\n<br>\ninstance-vars\n<br>\nClass variables\n<br>\n<br></p>\n<p>Anytime you change the value of something use a exclamation point to signify you are not doing functional programming.</p>\n<h5>L19</h5>\n<p>OOP implements inheritance through delegation (assigning to something else).</p>\n<h5>L20</h5>\n<h5>L21</h5>\n<h5>L22</h5>\n<h5>L23</h5>\n<h4>LABS</h4>\n<h5>4A</h5>\n<h5>4B</h5>\n<h4>READINGS</h4>\n<h5>3.1</h5>\n<h5>3.2</h5>"}