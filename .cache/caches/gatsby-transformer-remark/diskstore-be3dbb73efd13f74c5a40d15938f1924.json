{"expireTime":9007200851219997000,"key":"transformer-remark-markdown-html-5b00b5a93ae97c7a60249d6082ef9b93-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":"<p>This article is a part of a series where I go through <a href=\"https://teachyourselfcs.com/\">teachyourselfcs</a>.\nIf you would like to start at the beginning start <a href=\"https://bpp.dev/articles/teachyourselfcs/programming/00-getting-started/\">here</a>.</p>\n<h4>LECTURES</h4>\n<h5>L40</h5>\n<p>Sometimes normal order is prefferable, you can modify evaluator to use normal order.\n<br>\n<br></p>\n<h5>L41</h5>\n<p>Analyzing evaluator: variant on metacircular evaluator, basically a compiler for scheme into scheme (transpiler like typescript).\n<br>\n<br></p>\n<h5>L42</h5>\n<p>declaritive programming or logic programming: not telling computer sequence of steps. Gives a set of sentences in logical form, to form rules to determine an output.\n<br>\n<br></p>\n<h5>L43</h5>\n<p>Unification: Variables on both sides (bindings), you can use unification to compute anything computable (Turing complete). Popular in database systems.\n<br>\n<br></p>\n<h5>L44</h5>\n<p>Programming Paradigms:\n<br>\nfunctional\n<br>\nobject oriented\n<br>\nclient/server\n<br>\ndeclarative/logic</p>\n<br>\n<br>\n<h4>LABS</h4>\n<h4>READING</h4>\n<h5>4.2</h5>\n<h5>4.3</h5>\n<h5>4.4</h5>\n<h5>4.1.7</h5>"}