{"expireTime":9007200842248378000,"key":"transformer-remark-markdown-html-ast-70b7508ac3b9502764be0dc908e5f53c-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"primitive expressions","position":{"start":{"line":12,"column":3,"offset":565},"end":{"line":12,"column":24,"offset":586}}}],"position":{"start":{"line":12,"column":1,"offset":563},"end":{"line":13,"column":3,"offset":589}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"means of combination","position":{"start":{"line":14,"column":3,"offset":592},"end":{"line":14,"column":23,"offset":612}}}],"position":{"start":{"line":14,"column":1,"offset":590},"end":{"line":15,"column":3,"offset":615}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"means of abstraction","position":{"start":{"line":16,"column":3,"offset":618},"end":{"line":16,"column":23,"offset":638}}}],"position":{"start":{"line":16,"column":3,"offset":618},"end":{"line":16,"column":23,"offset":638}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":17,"column":7,"offset":645},"end":{"line":17,"column":10,"offset":648}}}],"position":{"start":{"line":17,"column":1,"offset":639},"end":{"line":17,"column":10,"offset":648}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":18,"column":7,"offset":655},"end":{"line":18,"column":10,"offset":658}}}],"position":{"start":{"line":18,"column":1,"offset":649},"end":{"line":18,"column":10,"offset":658}}},{"type":"text","value":"\n"}],"position":{"start":{"line":16,"column":1,"offset":616},"end":{"line":18,"column":10,"offset":658}}},{"type":"text","value":"\n"}],"position":{"start":{"line":12,"column":1,"offset":563},"end":{"line":18,"column":10,"offset":658}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":20,"column":6,"offset":665},"end":{"line":20,"column":14,"offset":673}}}],"position":{"start":{"line":20,"column":1,"offset":660},"end":{"line":20,"column":14,"offset":673}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":21,"column":7,"offset":680},"end":{"line":21,"column":10,"offset":683}}}],"position":{"start":{"line":21,"column":1,"offset":674},"end":{"line":21,"column":10,"offset":683}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":23,"column":8,"offset":692},"end":{"line":23,"column":30,"offset":714}}}],"position":{"start":{"line":23,"column":1,"offset":685},"end":{"line":23,"column":30,"offset":714}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":25,"column":1,"offset":716},"end":{"line":26,"column":1,"offset":860}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":1,"offset":860},"end":{"line":26,"column":5,"offset":864}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":26,"column":5,"offset":864},"end":{"line":26,"column":16,"offset":875}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":16,"offset":875},"end":{"line":26,"column":20,"offset":879}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":26,"column":20,"offset":879},"end":{"line":28,"column":1,"offset":1023}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":1,"offset":1023},"end":{"line":28,"column":5,"offset":1027}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":28,"column":5,"offset":1027},"end":{"line":28,"column":16,"offset":1038}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":16,"offset":1038},"end":{"line":28,"column":20,"offset":1042}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":28,"column":20,"offset":1042},"end":{"line":29,"column":45,"offset":1087}}},{"type":"raw","value":"<br>","position":{"start":{"line":29,"column":45,"offset":1087},"end":{"line":29,"column":49,"offset":1091}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":29,"column":49,"offset":1091},"end":{"line":29,"column":65,"offset":1107}}},{"type":"raw","value":"<br>","position":{"start":{"line":29,"column":65,"offset":1107},"end":{"line":29,"column":69,"offset":1111}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":29,"column":69,"offset":1111},"end":{"line":31,"column":1,"offset":1154}}},{"type":"raw","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1154},"end":{"line":31,"column":5,"offset":1158}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":31,"column":5,"offset":1158},"end":{"line":31,"column":22,"offset":1175}}},{"type":"raw","value":"<br>","position":{"start":{"line":31,"column":22,"offset":1175},"end":{"line":31,"column":26,"offset":1179}}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":26,"offset":1179},"end":{"line":32,"column":1,"offset":1180}}},{"type":"raw","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1180},"end":{"line":32,"column":5,"offset":1184}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":32,"column":5,"offset":1184},"end":{"line":34,"column":1,"offset":1302}}},{"type":"raw","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1302},"end":{"line":34,"column":5,"offset":1306}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":34,"column":5,"offset":1306},"end":{"line":36,"column":1,"offset":1427}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":36,"column":1,"offset":1427},"end":{"line":36,"column":12,"offset":1438}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":36,"column":12,"offset":1438},"end":{"line":36,"column":68,"offset":1494}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":36,"column":68,"offset":1494},"end":{"line":36,"column":79,"offset":1505}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":36,"column":79,"offset":1505},"end":{"line":36,"column":106,"offset":1532}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":36,"column":106,"offset":1532},"end":{"line":36,"column":109,"offset":1535}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":36,"column":109,"offset":1535},"end":{"line":36,"column":189,"offset":1615}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":36,"column":189,"offset":1615},"end":{"line":36,"column":192,"offset":1618}}},{"type":"text","value":" to get 3.","position":{"start":{"line":36,"column":192,"offset":1618},"end":{"line":36,"column":202,"offset":1628}}}],"position":{"start":{"line":25,"column":1,"offset":716},"end":{"line":36,"column":202,"offset":1628}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":38,"column":8,"offset":1637},"end":{"line":38,"column":14,"offset":1643}}}],"position":{"start":{"line":38,"column":1,"offset":1630},"end":{"line":38,"column":14,"offset":1643}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":39,"column":1,"offset":1644},"end":{"line":39,"column":9,"offset":1652}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":39,"column":9,"offset":1652},"end":{"line":39,"column":73,"offset":1716}}}],"position":{"start":{"line":39,"column":1,"offset":1644},"end":{"line":39,"column":73,"offset":1716}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":40,"column":1,"offset":1717},"end":{"line":43,"column":4,"offset":1756}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1757},"end":{"line":44,"column":5,"offset":1761}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":46,"column":1,"offset":1763},"end":{"line":46,"column":72,"offset":1834}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":46,"column":72,"offset":1834},"end":{"line":46,"column":80,"offset":1842}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":46,"column":80,"offset":1842},"end":{"line":47,"column":1,"offset":1866}}},{"type":"raw","value":"<br>","position":{"start":{"line":47,"column":1,"offset":1866},"end":{"line":47,"column":5,"offset":1870}}},{"type":"text","value":"\n","position":{"start":{"line":47,"column":5,"offset":1870},"end":{"line":48,"column":1,"offset":1871}}},{"type":"raw","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1871},"end":{"line":48,"column":5,"offset":1875}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":48,"column":5,"offset":1875},"end":{"line":49,"column":184,"offset":2059}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":49,"column":184,"offset":2059},"end":{"line":49,"column":187,"offset":2062}}},{"type":"text","value":".\n","position":{"start":{"line":49,"column":187,"offset":2062},"end":{"line":50,"column":1,"offset":2065}}},{"type":"raw","value":"<br>","position":{"start":{"line":50,"column":1,"offset":2065},"end":{"line":50,"column":5,"offset":2069}}},{"type":"text","value":"\n","position":{"start":{"line":50,"column":5,"offset":2069},"end":{"line":51,"column":1,"offset":2070}}},{"type":"raw","value":"<br>","position":{"start":{"line":51,"column":1,"offset":2070},"end":{"line":51,"column":5,"offset":2074}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":51,"column":5,"offset":2074},"end":{"line":52,"column":27,"offset":2101}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":52,"column":27,"offset":2101},"end":{"line":52,"column":35,"offset":2109}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":52,"column":35,"offset":2109},"end":{"line":52,"column":86,"offset":2160}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":52,"column":86,"offset":2160},"end":{"line":52,"column":95,"offset":2169}}},{"type":"text","value":". ","position":{"start":{"line":52,"column":95,"offset":2169},"end":{"line":52,"column":97,"offset":2171}}}],"position":{"start":{"line":46,"column":1,"offset":1763},"end":{"line":52,"column":97,"offset":2171}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":54,"column":1,"offset":2173},"end":{"line":54,"column":6,"offset":2178}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":56,"column":1,"offset":2180},"end":{"line":57,"column":1,"offset":2224}}},{"type":"raw","value":"<br>","position":{"start":{"line":57,"column":1,"offset":2224},"end":{"line":57,"column":5,"offset":2228}}},{"type":"text","value":"\n","position":{"start":{"line":57,"column":5,"offset":2228},"end":{"line":58,"column":1,"offset":2229}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":58,"column":1,"offset":2229},"end":{"line":58,"column":22,"offset":2250}}},{"type":"text","value":"\n","position":{"start":{"line":58,"column":22,"offset":2250},"end":{"line":59,"column":1,"offset":2251}}},{"type":"raw","value":"<br>","position":{"start":{"line":59,"column":1,"offset":2251},"end":{"line":59,"column":5,"offset":2255}}}],"position":{"start":{"line":56,"column":1,"offset":2180},"end":{"line":59,"column":5,"offset":2255}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":61,"column":1,"offset":2257},"end":{"line":61,"column":152,"offset":2408}}}],"position":{"start":{"line":61,"column":1,"offset":2257},"end":{"line":61,"column":152,"offset":2408}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":63,"column":8,"offset":2417},"end":{"line":63,"column":20,"offset":2429}}}],"position":{"start":{"line":63,"column":1,"offset":2410},"end":{"line":63,"column":20,"offset":2429}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":65,"column":1,"offset":2431},"end":{"line":65,"column":56,"offset":2486}}}],"position":{"start":{"line":65,"column":1,"offset":2431},"end":{"line":65,"column":56,"offset":2486}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":66,"column":1,"offset":2487},"end":{"line":71,"column":4,"offset":2578}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":72,"column":1,"offset":2579},"end":{"line":72,"column":5,"offset":2583}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":74,"column":1,"offset":2585},"end":{"line":74,"column":37,"offset":2621}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":74,"column":37,"offset":2621},"end":{"line":74,"column":41,"offset":2625}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":74,"column":41,"offset":2625},"end":{"line":75,"column":1,"offset":2642}}},{"type":"raw","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2642},"end":{"line":75,"column":5,"offset":2646}}},{"type":"text","value":"\n","position":{"start":{"line":75,"column":5,"offset":2646},"end":{"line":76,"column":1,"offset":2647}}},{"type":"raw","value":"<br>","position":{"start":{"line":76,"column":1,"offset":2647},"end":{"line":76,"column":5,"offset":2651}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":76,"column":5,"offset":2651},"end":{"line":77,"column":66,"offset":2717}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":77,"column":66,"offset":2717},"end":{"line":77,"column":89,"offset":2740}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":77,"column":89,"offset":2740},"end":{"line":78,"column":1,"offset":2780}}},{"type":"raw","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2780},"end":{"line":78,"column":5,"offset":2784}}},{"type":"text","value":"\n","position":{"start":{"line":78,"column":5,"offset":2784},"end":{"line":79,"column":1,"offset":2785}}},{"type":"raw","value":"<br>","position":{"start":{"line":79,"column":1,"offset":2785},"end":{"line":79,"column":5,"offset":2789}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":79,"column":5,"offset":2789},"end":{"line":80,"column":21,"offset":2810}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":80,"column":21,"offset":2810},"end":{"line":80,"column":25,"offset":2814}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":80,"column":25,"offset":2814},"end":{"line":81,"column":1,"offset":2868}}},{"type":"raw","value":"<br>","position":{"start":{"line":81,"column":1,"offset":2868},"end":{"line":81,"column":5,"offset":2872}}},{"type":"text","value":"\n","position":{"start":{"line":81,"column":5,"offset":2872},"end":{"line":82,"column":1,"offset":2873}}},{"type":"raw","value":"<br>","position":{"start":{"line":82,"column":1,"offset":2873},"end":{"line":82,"column":5,"offset":2877}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":82,"column":5,"offset":2877},"end":{"line":83,"column":21,"offset":2898}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":83,"column":21,"offset":2898},"end":{"line":83,"column":25,"offset":2902}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":83,"column":25,"offset":2902},"end":{"line":84,"column":1,"offset":2957}}},{"type":"raw","value":"<br>","position":{"start":{"line":84,"column":1,"offset":2957},"end":{"line":84,"column":5,"offset":2961}}},{"type":"text","value":"\n","position":{"start":{"line":84,"column":5,"offset":2961},"end":{"line":85,"column":1,"offset":2962}}},{"type":"raw","value":"<br>","position":{"start":{"line":85,"column":1,"offset":2962},"end":{"line":85,"column":5,"offset":2966}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":85,"column":5,"offset":2966},"end":{"line":86,"column":58,"offset":3024}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":86,"column":58,"offset":3024},"end":{"line":86,"column":61,"offset":3027}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":86,"column":61,"offset":3027},"end":{"line":86,"column":145,"offset":3111}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":86,"column":145,"offset":3111},"end":{"line":86,"column":153,"offset":3119}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":86,"column":153,"offset":3119},"end":{"line":86,"column":178,"offset":3144}}}],"position":{"start":{"line":74,"column":1,"offset":2585},"end":{"line":86,"column":178,"offset":3144}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":88,"column":7,"offset":3152},"end":{"line":88,"column":10,"offset":3155}}}],"position":{"start":{"line":88,"column":1,"offset":3146},"end":{"line":88,"column":10,"offset":3155}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":90,"column":8,"offset":3164},"end":{"line":90,"column":17,"offset":3173}}}],"position":{"start":{"line":90,"column":1,"offset":3157},"end":{"line":90,"column":17,"offset":3173}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":91,"column":1,"offset":3174},"end":{"line":102,"column":4,"offset":3373}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":103,"column":1,"offset":3374},"end":{"line":103,"column":5,"offset":3378}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":105,"column":1,"offset":3380},"end":{"line":106,"column":1,"offset":3596}}},{"type":"raw","value":"<br>","position":{"start":{"line":106,"column":1,"offset":3596},"end":{"line":106,"column":5,"offset":3600}}},{"type":"text","value":"\n","position":{"start":{"line":106,"column":5,"offset":3600},"end":{"line":107,"column":1,"offset":3601}}},{"type":"raw","value":"<br>","position":{"start":{"line":107,"column":1,"offset":3601},"end":{"line":107,"column":5,"offset":3605}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":107,"column":5,"offset":3605},"end":{"line":108,"column":72,"offset":3677}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":108,"column":72,"offset":3677},"end":{"line":108,"column":81,"offset":3686}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":108,"column":81,"offset":3686},"end":{"line":109,"column":1,"offset":3705}}},{"type":"raw","value":"<br>","position":{"start":{"line":109,"column":1,"offset":3705},"end":{"line":109,"column":5,"offset":3709}}},{"type":"text","value":"\n","position":{"start":{"line":109,"column":5,"offset":3709},"end":{"line":110,"column":1,"offset":3710}}},{"type":"raw","value":"<br>","position":{"start":{"line":110,"column":1,"offset":3710},"end":{"line":110,"column":5,"offset":3714}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":110,"column":5,"offset":3714},"end":{"line":111,"column":10,"offset":3724}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":111,"column":10,"offset":3724},"end":{"line":111,"column":16,"offset":3730}}},{"type":"text","value":" gets called with ","position":{"start":{"line":111,"column":16,"offset":3730},"end":{"line":111,"column":34,"offset":3748}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":111,"column":34,"offset":3748},"end":{"line":111,"column":42,"offset":3756}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":111,"column":42,"offset":3756},"end":{"line":112,"column":24,"offset":3781}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":112,"column":24,"offset":3781},"end":{"line":112,"column":33,"offset":3790}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":112,"column":33,"offset":3790},"end":{"line":112,"column":107,"offset":3864}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":112,"column":107,"offset":3864},"end":{"line":112,"column":116,"offset":3873}}},{"type":"text","value":" is false because ","position":{"start":{"line":112,"column":116,"offset":3873},"end":{"line":112,"column":134,"offset":3891}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":112,"column":134,"offset":3891},"end":{"line":112,"column":137,"offset":3894}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":112,"column":137,"offset":3894},"end":{"line":112,"column":161,"offset":3918}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":112,"column":161,"offset":3918},"end":{"line":112,"column":167,"offset":3924}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":112,"column":167,"offset":3924},"end":{"line":112,"column":192,"offset":3949}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":112,"column":192,"offset":3949},"end":{"line":112,"column":200,"offset":3957}}},{"type":"text","value":". This is because ","position":{"start":{"line":112,"column":200,"offset":3957},"end":{"line":112,"column":218,"offset":3975}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":112,"column":218,"offset":3975},"end":{"line":112,"column":224,"offset":3981}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":112,"column":224,"offset":3981},"end":{"line":112,"column":245,"offset":4002}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":112,"column":245,"offset":4002},"end":{"line":112,"column":252,"offset":4009}}},{"type":"text","value":" and ","position":{"start":{"line":112,"column":252,"offset":4009},"end":{"line":112,"column":257,"offset":4014}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":112,"column":257,"offset":4014},"end":{"line":112,"column":260,"offset":4017}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":112,"column":260,"offset":4017},"end":{"line":112,"column":285,"offset":4042}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":112,"column":285,"offset":4042},"end":{"line":112,"column":291,"offset":4048}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":112,"column":291,"offset":4048},"end":{"line":113,"column":96,"offset":4174}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":113,"column":96,"offset":4174},"end":{"line":113,"column":111,"offset":4189}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":113,"column":111,"offset":4189},"end":{"line":113,"column":182,"offset":4260}}}],"position":{"start":{"line":105,"column":1,"offset":3380},"end":{"line":113,"column":182,"offset":4260}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":115,"column":8,"offset":4269},"end":{"line":115,"column":19,"offset":4280}}}],"position":{"start":{"line":115,"column":1,"offset":4262},"end":{"line":115,"column":19,"offset":4280}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":116,"column":1,"offset":4281},"end":{"line":116,"column":14,"offset":4294}}}],"position":{"start":{"line":116,"column":1,"offset":4281},"end":{"line":116,"column":14,"offset":4294}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":117,"column":1,"offset":4295},"end":{"line":132,"column":4,"offset":4710}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":133,"column":1,"offset":4711},"end":{"line":133,"column":5,"offset":4715}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":135,"column":1,"offset":4717},"end":{"line":135,"column":141,"offset":4857}}}],"position":{"start":{"line":135,"column":1,"offset":4717},"end":{"line":135,"column":141,"offset":4857}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":137,"column":8,"offset":4866},"end":{"line":137,"column":30,"offset":4888}}}],"position":{"start":{"line":137,"column":1,"offset":4859},"end":{"line":137,"column":30,"offset":4888}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":138,"column":1,"offset":4889},"end":{"line":138,"column":199,"offset":5087}}}],"position":{"start":{"line":138,"column":1,"offset":4889},"end":{"line":138,"column":199,"offset":5087}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":140,"column":8,"offset":5096},"end":{"line":140,"column":30,"offset":5118}}}],"position":{"start":{"line":140,"column":1,"offset":5089},"end":{"line":140,"column":30,"offset":5118}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":142,"column":1,"offset":5120},"end":{"line":143,"column":1,"offset":5195}}},{"type":"raw","value":"<br>","position":{"start":{"line":143,"column":1,"offset":5195},"end":{"line":143,"column":5,"offset":5199}}},{"type":"text","value":"\n","position":{"start":{"line":143,"column":5,"offset":5199},"end":{"line":144,"column":1,"offset":5200}}},{"type":"raw","value":"<br>","position":{"start":{"line":144,"column":1,"offset":5200},"end":{"line":144,"column":5,"offset":5204}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":144,"column":5,"offset":5204},"end":{"line":146,"column":1,"offset":5266}}},{"type":"raw","value":"<br>","position":{"start":{"line":146,"column":1,"offset":5266},"end":{"line":146,"column":5,"offset":5270}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":146,"column":5,"offset":5270},"end":{"line":147,"column":1,"offset":5273}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":147,"column":1,"offset":5273},"end":{"line":147,"column":11,"offset":5283}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":147,"column":11,"offset":5283},"end":{"line":147,"column":19,"offset":5291}}},{"type":"text","value":" and ","position":{"start":{"line":147,"column":19,"offset":5291},"end":{"line":147,"column":24,"offset":5296}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":147,"column":24,"offset":5296},"end":{"line":147,"column":34,"offset":5306}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":147,"column":34,"offset":5306},"end":{"line":148,"column":1,"offset":5355}}},{"type":"raw","value":"<br>","position":{"start":{"line":148,"column":1,"offset":5355},"end":{"line":148,"column":5,"offset":5359}}}],"position":{"start":{"line":142,"column":1,"offset":5120},"end":{"line":148,"column":5,"offset":5359}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":150,"column":8,"offset":5368},"end":{"line":150,"column":12,"offset":5372}}}],"position":{"start":{"line":150,"column":1,"offset":5361},"end":{"line":150,"column":12,"offset":5372}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":151,"column":1,"offset":5373},"end":{"line":156,"column":4,"offset":5484}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":157,"column":1,"offset":5485},"end":{"line":158,"column":5,"offset":5494}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":160,"column":1,"offset":5496},"end":{"line":160,"column":7,"offset":5502}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":160,"column":7,"offset":5502},"end":{"line":162,"column":1,"offset":5584}}},{"type":"raw","value":"<br>","position":{"start":{"line":162,"column":1,"offset":5584},"end":{"line":162,"column":5,"offset":5588}}},{"type":"text","value":"\n","position":{"start":{"line":162,"column":5,"offset":5588},"end":{"line":163,"column":1,"offset":5589}}},{"type":"raw","value":"<br>","position":{"start":{"line":163,"column":1,"offset":5589},"end":{"line":163,"column":5,"offset":5593}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":163,"column":5,"offset":5593},"end":{"line":164,"column":10,"offset":5603}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":164,"column":10,"offset":5603},"end":{"line":164,"column":14,"offset":5607}}},{"type":"text","value":". Since ","position":{"start":{"line":164,"column":14,"offset":5607},"end":{"line":164,"column":22,"offset":5615}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":164,"column":22,"offset":5615},"end":{"line":164,"column":30,"offset":5623}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":164,"column":30,"offset":5623},"end":{"line":164,"column":50,"offset":5643}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":164,"column":50,"offset":5643},"end":{"line":164,"column":53,"offset":5646}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":164,"column":53,"offset":5646},"end":{"line":164,"column":90,"offset":5683}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":164,"column":90,"offset":5683},"end":{"line":164,"column":96,"offset":5689}}},{"type":"text","value":".\n","position":{"start":{"line":164,"column":96,"offset":5689},"end":{"line":165,"column":1,"offset":5692}}},{"type":"raw","value":"<br>","position":{"start":{"line":165,"column":1,"offset":5692},"end":{"line":165,"column":5,"offset":5696}}},{"type":"text","value":"\n","position":{"start":{"line":165,"column":5,"offset":5696},"end":{"line":166,"column":1,"offset":5697}}},{"type":"raw","value":"<br>","position":{"start":{"line":166,"column":1,"offset":5697},"end":{"line":166,"column":5,"offset":5701}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":166,"column":5,"offset":5701},"end":{"line":167,"column":14,"offset":5715}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":167,"column":14,"offset":5715},"end":{"line":167,"column":18,"offset":5719}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":167,"column":18,"offset":5719},"end":{"line":167,"column":90,"offset":5791}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":167,"column":90,"offset":5791},"end":{"line":167,"column":94,"offset":5795}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":167,"column":94,"offset":5795},"end":{"line":167,"column":125,"offset":5826}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":167,"column":125,"offset":5826},"end":{"line":167,"column":131,"offset":5832}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":167,"column":131,"offset":5832},"end":{"line":168,"column":1,"offset":5847}}},{"type":"raw","value":"<br>","position":{"start":{"line":168,"column":1,"offset":5847},"end":{"line":168,"column":5,"offset":5851}}},{"type":"text","value":"\n","position":{"start":{"line":168,"column":5,"offset":5851},"end":{"line":169,"column":1,"offset":5852}}},{"type":"raw","value":"<br>","position":{"start":{"line":169,"column":1,"offset":5852},"end":{"line":169,"column":5,"offset":5856}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":169,"column":5,"offset":5856},"end":{"line":170,"column":14,"offset":5870}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":170,"column":14,"offset":5870},"end":{"line":170,"column":18,"offset":5874}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":170,"column":18,"offset":5874},"end":{"line":170,"column":37,"offset":5893}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":170,"column":37,"offset":5893},"end":{"line":170,"column":40,"offset":5896}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":170,"column":40,"offset":5896},"end":{"line":170,"column":77,"offset":5933}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":170,"column":77,"offset":5933},"end":{"line":170,"column":81,"offset":5937}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":170,"column":81,"offset":5937},"end":{"line":170,"column":99,"offset":5955}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":170,"column":99,"offset":5955},"end":{"line":170,"column":102,"offset":5958}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":170,"column":102,"offset":5958},"end":{"line":170,"column":133,"offset":5989}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":170,"column":133,"offset":5989},"end":{"line":170,"column":139,"offset":5995}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":170,"column":139,"offset":5995},"end":{"line":170,"column":167,"offset":6023}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":170,"column":167,"offset":6023},"end":{"line":170,"column":171,"offset":6027}}},{"type":"text","value":".\n","position":{"start":{"line":170,"column":171,"offset":6027},"end":{"line":171,"column":1,"offset":6029}}},{"type":"raw","value":"<br>","position":{"start":{"line":171,"column":1,"offset":6029},"end":{"line":171,"column":5,"offset":6033}}},{"type":"text","value":"\n","position":{"start":{"line":171,"column":5,"offset":6033},"end":{"line":172,"column":1,"offset":6034}}},{"type":"raw","value":"<br>","position":{"start":{"line":172,"column":1,"offset":6034},"end":{"line":172,"column":5,"offset":6038}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":172,"column":5,"offset":6038},"end":{"line":174,"column":1,"offset":6058}}},{"type":"raw","value":"<br>","position":{"start":{"line":174,"column":1,"offset":6058},"end":{"line":174,"column":5,"offset":6062}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":174,"column":5,"offset":6062},"end":{"line":175,"column":6,"offset":6068}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":175,"column":6,"offset":6068},"end":{"line":175,"column":12,"offset":6074}}},{"type":"text","value":" does not have an ","position":{"start":{"line":175,"column":12,"offset":6074},"end":{"line":175,"column":30,"offset":6092}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":175,"column":30,"offset":6092},"end":{"line":175,"column":36,"offset":6098}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":175,"column":36,"offset":6098},"end":{"line":175,"column":62,"offset":6124}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":175,"column":62,"offset":6124},"end":{"line":175,"column":75,"offset":6137}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":175,"column":75,"offset":6137},"end":{"line":175,"column":159,"offset":6221}}}],"position":{"start":{"line":160,"column":1,"offset":5496},"end":{"line":175,"column":159,"offset":6221}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":177,"column":8,"offset":6230},"end":{"line":177,"column":41,"offset":6263}}}],"position":{"start":{"line":177,"column":1,"offset":6223},"end":{"line":177,"column":41,"offset":6263}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":178,"column":1,"offset":6264},"end":{"line":183,"column":4,"offset":6339}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":184,"column":1,"offset":6340},"end":{"line":185,"column":1,"offset":6359}}},{"type":"raw","value":"<br>","position":{"start":{"line":185,"column":1,"offset":6359},"end":{"line":185,"column":5,"offset":6363}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":185,"column":5,"offset":6363},"end":{"line":187,"column":5,"offset":6501}}},{"type":"raw","value":"<br>","position":{"start":{"line":187,"column":5,"offset":6501},"end":{"line":187,"column":9,"offset":6505}}},{"type":"text","value":"\n","position":{"start":{"line":187,"column":9,"offset":6505},"end":{"line":188,"column":5,"offset":6510}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":188,"column":5,"offset":6510},"end":{"line":188,"column":27,"offset":6532}}},{"type":"text","value":"\n","position":{"start":{"line":188,"column":27,"offset":6532},"end":{"line":189,"column":5,"offset":6537}}},{"type":"raw","value":"<br>","position":{"start":{"line":189,"column":5,"offset":6537},"end":{"line":189,"column":9,"offset":6541}}},{"type":"text","value":"\n","position":{"start":{"line":189,"column":9,"offset":6541},"end":{"line":190,"column":5,"offset":6546}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":190,"column":5,"offset":6546},"end":{"line":190,"column":12,"offset":6553}}},{"type":"text","value":" and ","position":{"start":{"line":190,"column":12,"offset":6553},"end":{"line":190,"column":17,"offset":6558}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":190,"column":17,"offset":6558},"end":{"line":190,"column":25,"offset":6566}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":190,"column":25,"offset":6566},"end":{"line":190,"column":63,"offset":6604}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":190,"column":63,"offset":6604},"end":{"line":190,"column":66,"offset":6607}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":190,"column":66,"offset":6607},"end":{"line":190,"column":86,"offset":6627}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":190,"column":86,"offset":6627},"end":{"line":190,"column":89,"offset":6630}}},{"type":"text","value":" will be called with ","position":{"start":{"line":190,"column":89,"offset":6630},"end":{"line":190,"column":110,"offset":6651}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":190,"column":110,"offset":6651},"end":{"line":190,"column":119,"offset":6660}}},{"type":"text","value":".\n","position":{"start":{"line":190,"column":119,"offset":6660},"end":{"line":191,"column":1,"offset":6662}}},{"type":"raw","value":"<br>","position":{"start":{"line":191,"column":1,"offset":6662},"end":{"line":191,"column":5,"offset":6666}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":191,"column":5,"offset":6666},"end":{"line":193,"column":1,"offset":6682}}},{"type":"raw","value":"<br>","position":{"start":{"line":193,"column":1,"offset":6682},"end":{"line":193,"column":5,"offset":6686}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":193,"column":5,"offset":6686},"end":{"line":195,"column":5,"offset":6793}}},{"type":"raw","value":"<br>","position":{"start":{"line":195,"column":5,"offset":6793},"end":{"line":195,"column":9,"offset":6797}}},{"type":"text","value":"\n","position":{"start":{"line":195,"column":9,"offset":6797},"end":{"line":196,"column":1,"offset":6798}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":196,"column":1,"offset":6798},"end":{"line":196,"column":23,"offset":6820}}},{"type":"text","value":" turns into ","position":{"start":{"line":196,"column":23,"offset":6820},"end":{"line":196,"column":35,"offset":6832}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":196,"column":35,"offset":6832},"end":{"line":196,"column":61,"offset":6858}}},{"type":"text","value":"\n","position":{"start":{"line":196,"column":61,"offset":6858},"end":{"line":197,"column":1,"offset":6859}}},{"type":"raw","value":"<br>","position":{"start":{"line":197,"column":1,"offset":6859},"end":{"line":197,"column":5,"offset":6863}}},{"type":"text","value":"\nNow ","position":{"start":{"line":197,"column":5,"offset":6863},"end":{"line":198,"column":5,"offset":6868}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":198,"column":5,"offset":6868},"end":{"line":198,"column":8,"offset":6871}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":198,"column":8,"offset":6871},"end":{"line":198,"column":58,"offset":6921}}}],"position":{"start":{"line":184,"column":1,"offset":6340},"end":{"line":198,"column":58,"offset":6921}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":200,"column":1,"offset":6923},"end":{"line":201,"column":1,"offset":6941}}},{"type":"raw","value":"<br>","position":{"start":{"line":201,"column":1,"offset":6941},"end":{"line":201,"column":5,"offset":6945}}}],"position":{"start":{"line":200,"column":1,"offset":6923},"end":{"line":201,"column":5,"offset":6945}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":202,"column":1,"offset":6946},"end":{"line":204,"column":4,"offset":6976}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":205,"column":1,"offset":6977},"end":{"line":205,"column":13,"offset":6989}}}],"position":{"start":{"line":205,"column":1,"offset":6977},"end":{"line":205,"column":13,"offset":6989}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":206,"column":1,"offset":6990},"end":{"line":212,"column":4,"offset":7069}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":213,"column":1,"offset":7070},"end":{"line":213,"column":8,"offset":7077}}}],"position":{"start":{"line":213,"column":1,"offset":7070},"end":{"line":213,"column":8,"offset":7077}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":214,"column":1,"offset":7078},"end":{"line":221,"column":4,"offset":7202}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":222,"column":1,"offset":7203},"end":{"line":223,"column":5,"offset":7212}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":225,"column":1,"offset":7214},"end":{"line":225,"column":11,"offset":7224}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":225,"column":11,"offset":7224},"end":{"line":225,"column":24,"offset":7237}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":225,"column":24,"offset":7237},"end":{"line":225,"column":107,"offset":7320}}}],"position":{"start":{"line":225,"column":1,"offset":7214},"end":{"line":225,"column":107,"offset":7320}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":227,"column":7,"offset":7328},"end":{"line":227,"column":10,"offset":7331}}}],"position":{"start":{"line":227,"column":1,"offset":7322},"end":{"line":227,"column":10,"offset":7331}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":228,"column":7,"offset":7338},"end":{"line":228,"column":10,"offset":7341}}}],"position":{"start":{"line":228,"column":1,"offset":7332},"end":{"line":228,"column":10,"offset":7341}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":230,"column":6,"offset":7348},"end":{"line":230,"column":10,"offset":7352}}}],"position":{"start":{"line":230,"column":1,"offset":7343},"end":{"line":230,"column":10,"offset":7352}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":231,"column":7,"offset":7359},"end":{"line":231,"column":13,"offset":7365}}}],"position":{"start":{"line":231,"column":1,"offset":7353},"end":{"line":231,"column":13,"offset":7365}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":232,"column":1,"offset":7366},"end":{"line":232,"column":49,"offset":7414}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":232,"column":49,"offset":7414},"end":{"line":232,"column":57,"offset":7422}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":232,"column":57,"offset":7422},"end":{"line":232,"column":133,"offset":7498}}}],"position":{"start":{"line":232,"column":1,"offset":7366},"end":{"line":232,"column":133,"offset":7498}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":233,"column":1,"offset":7499},"end":{"line":243,"column":4,"offset":7694}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":244,"column":1,"offset":7695},"end":{"line":244,"column":5,"offset":7699}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":247,"column":1,"offset":7702},"end":{"line":248,"column":1,"offset":7784}}},{"type":"raw","value":"<br>","position":{"start":{"line":248,"column":1,"offset":7784},"end":{"line":248,"column":5,"offset":7788}}},{"type":"text","value":"\n","position":{"start":{"line":248,"column":5,"offset":7788},"end":{"line":249,"column":1,"offset":7789}}},{"type":"raw","value":"<br>","position":{"start":{"line":249,"column":1,"offset":7789},"end":{"line":249,"column":5,"offset":7793}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":249,"column":5,"offset":7793},"end":{"line":250,"column":26,"offset":7819}}}],"position":{"start":{"line":247,"column":1,"offset":7702},"end":{"line":250,"column":26,"offset":7819}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":251,"column":1,"offset":7820},"end":{"line":256,"column":4,"offset":7948}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":257,"column":1,"offset":7949},"end":{"line":257,"column":14,"offset":7962}}}],"position":{"start":{"line":257,"column":1,"offset":7949},"end":{"line":257,"column":14,"offset":7962}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":259,"column":1,"offset":7964},"end":{"line":272,"column":4,"offset":8246}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":274,"column":1,"offset":8248},"end":{"line":275,"column":5,"offset":8257}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":278,"column":7,"offset":8266},"end":{"line":278,"column":13,"offset":8272}}}],"position":{"start":{"line":278,"column":1,"offset":8260},"end":{"line":278,"column":13,"offset":8272}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":278,"column":13,"offset":8272}}}}