{"expireTime":9007200842248923000,"key":"transformer-remark-markdown-html-ast-3200244d68ff56c560fc811cca07de7f-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":820}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":820},"end":{"line":22,"column":5,"offset":824}}},{"type":"text","value":"\nexpression: ","position":{"start":{"line":22,"column":5,"offset":824},"end":{"line":23,"column":13,"offset":837}}},{"type":"raw","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":13,"offset":837},"end":{"line":23,"column":26,"offset":850}}},{"type":"text","value":"\noperator: ","position":{"start":{"line":23,"column":26,"offset":850},"end":{"line":24,"column":11,"offset":861}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":24,"column":11,"offset":861},"end":{"line":24,"column":14,"offset":864}}},{"type":"text","value":"\n","position":{"start":{"line":24,"column":14,"offset":864},"end":{"line":25,"column":1,"offset":865}}},{"type":"raw","value":"<br>","position":{"start":{"line":25,"column":1,"offset":865},"end":{"line":25,"column":5,"offset":869}}},{"type":"text","value":"\noperands: ","position":{"start":{"line":25,"column":5,"offset":869},"end":{"line":26,"column":11,"offset":880}}},{"type":"raw","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":26,"column":11,"offset":880},"end":{"line":26,"column":16,"offset":885}}},{"type":"text","value":" ","position":{"start":{"line":26,"column":16,"offset":885},"end":{"line":26,"column":17,"offset":886}}},{"type":"raw","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":26,"column":17,"offset":886},"end":{"line":26,"column":22,"offset":891}}},{"type":"text","value":"\n","position":{"start":{"line":26,"column":22,"offset":891},"end":{"line":27,"column":1,"offset":892}}},{"type":"raw","value":"<br>","position":{"start":{"line":27,"column":1,"offset":892},"end":{"line":27,"column":5,"offset":896}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":27,"column":5,"offset":896}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":29,"column":7,"offset":904},"end":{"line":29,"column":10,"offset":907}}}],"position":{"start":{"line":29,"column":1,"offset":898},"end":{"line":29,"column":10,"offset":907}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":30,"column":7,"offset":914},"end":{"line":30,"column":10,"offset":917}}}],"position":{"start":{"line":30,"column":1,"offset":908},"end":{"line":30,"column":10,"offset":917}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":32,"column":6,"offset":924},"end":{"line":32,"column":14,"offset":932}}}],"position":{"start":{"line":32,"column":1,"offset":919},"end":{"line":32,"column":14,"offset":932}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":33,"column":7,"offset":939},"end":{"line":33,"column":10,"offset":942}}}],"position":{"start":{"line":33,"column":1,"offset":933},"end":{"line":33,"column":10,"offset":942}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":35,"column":8,"offset":951},"end":{"line":35,"column":30,"offset":973}}}],"position":{"start":{"line":35,"column":1,"offset":944},"end":{"line":35,"column":30,"offset":973}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":37,"column":1,"offset":975},"end":{"line":38,"column":1,"offset":1119}}},{"type":"raw","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1119},"end":{"line":38,"column":5,"offset":1123}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":38,"column":5,"offset":1123},"end":{"line":38,"column":16,"offset":1134}}},{"type":"raw","value":"<br>","position":{"start":{"line":38,"column":16,"offset":1134},"end":{"line":38,"column":20,"offset":1138}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":38,"column":20,"offset":1138},"end":{"line":40,"column":1,"offset":1282}}},{"type":"raw","value":"<br>","position":{"start":{"line":40,"column":1,"offset":1282},"end":{"line":40,"column":5,"offset":1286}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":40,"column":5,"offset":1286},"end":{"line":40,"column":16,"offset":1297}}},{"type":"raw","value":"<br>","position":{"start":{"line":40,"column":16,"offset":1297},"end":{"line":40,"column":20,"offset":1301}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":40,"column":20,"offset":1301},"end":{"line":41,"column":45,"offset":1346}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":45,"offset":1346},"end":{"line":41,"column":49,"offset":1350}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":41,"column":49,"offset":1350},"end":{"line":41,"column":65,"offset":1366}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":65,"offset":1366},"end":{"line":41,"column":69,"offset":1370}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":41,"column":69,"offset":1370},"end":{"line":43,"column":1,"offset":1413}}},{"type":"raw","value":"<br>","position":{"start":{"line":43,"column":1,"offset":1413},"end":{"line":43,"column":5,"offset":1417}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":43,"column":5,"offset":1417},"end":{"line":43,"column":22,"offset":1434}}},{"type":"raw","value":"<br>","position":{"start":{"line":43,"column":22,"offset":1434},"end":{"line":43,"column":26,"offset":1438}}},{"type":"text","value":"\n","position":{"start":{"line":43,"column":26,"offset":1438},"end":{"line":44,"column":1,"offset":1439}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1439},"end":{"line":44,"column":5,"offset":1443}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":44,"column":5,"offset":1443},"end":{"line":46,"column":1,"offset":1561}}},{"type":"raw","value":"<br>","position":{"start":{"line":46,"column":1,"offset":1561},"end":{"line":46,"column":5,"offset":1565}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":46,"column":5,"offset":1565},"end":{"line":48,"column":1,"offset":1686}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":48,"column":1,"offset":1686},"end":{"line":48,"column":12,"offset":1697}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":48,"column":12,"offset":1697},"end":{"line":48,"column":68,"offset":1753}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":48,"column":68,"offset":1753},"end":{"line":48,"column":79,"offset":1764}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":48,"column":79,"offset":1764},"end":{"line":48,"column":106,"offset":1791}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":48,"column":106,"offset":1791},"end":{"line":48,"column":109,"offset":1794}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":48,"column":109,"offset":1794},"end":{"line":48,"column":189,"offset":1874}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":48,"column":189,"offset":1874},"end":{"line":48,"column":192,"offset":1877}}},{"type":"text","value":" to get 3.","position":{"start":{"line":48,"column":192,"offset":1877},"end":{"line":48,"column":202,"offset":1887}}}],"position":{"start":{"line":37,"column":1,"offset":975},"end":{"line":48,"column":202,"offset":1887}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":50,"column":8,"offset":1896},"end":{"line":50,"column":14,"offset":1902}}}],"position":{"start":{"line":50,"column":1,"offset":1889},"end":{"line":50,"column":14,"offset":1902}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":51,"column":1,"offset":1903},"end":{"line":51,"column":9,"offset":1911}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":51,"column":9,"offset":1911},"end":{"line":51,"column":73,"offset":1975}}}],"position":{"start":{"line":51,"column":1,"offset":1903},"end":{"line":51,"column":73,"offset":1975}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":52,"column":1,"offset":1976},"end":{"line":55,"column":4,"offset":2015}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":56,"column":1,"offset":2016},"end":{"line":56,"column":5,"offset":2020}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":58,"column":1,"offset":2022},"end":{"line":58,"column":72,"offset":2093}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":58,"column":72,"offset":2093},"end":{"line":58,"column":80,"offset":2101}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":58,"column":80,"offset":2101},"end":{"line":59,"column":1,"offset":2125}}},{"type":"raw","value":"<br>","position":{"start":{"line":59,"column":1,"offset":2125},"end":{"line":59,"column":5,"offset":2129}}},{"type":"text","value":"\n","position":{"start":{"line":59,"column":5,"offset":2129},"end":{"line":60,"column":1,"offset":2130}}},{"type":"raw","value":"<br>","position":{"start":{"line":60,"column":1,"offset":2130},"end":{"line":60,"column":5,"offset":2134}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":60,"column":5,"offset":2134},"end":{"line":61,"column":184,"offset":2318}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":61,"column":184,"offset":2318},"end":{"line":61,"column":187,"offset":2321}}},{"type":"text","value":".\n","position":{"start":{"line":61,"column":187,"offset":2321},"end":{"line":62,"column":1,"offset":2324}}},{"type":"raw","value":"<br>","position":{"start":{"line":62,"column":1,"offset":2324},"end":{"line":62,"column":5,"offset":2328}}},{"type":"text","value":"\n","position":{"start":{"line":62,"column":5,"offset":2328},"end":{"line":63,"column":1,"offset":2329}}},{"type":"raw","value":"<br>","position":{"start":{"line":63,"column":1,"offset":2329},"end":{"line":63,"column":5,"offset":2333}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":63,"column":5,"offset":2333},"end":{"line":64,"column":27,"offset":2360}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":64,"column":27,"offset":2360},"end":{"line":64,"column":35,"offset":2368}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":64,"column":35,"offset":2368},"end":{"line":64,"column":86,"offset":2419}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":64,"column":86,"offset":2419},"end":{"line":64,"column":95,"offset":2428}}},{"type":"text","value":". ","position":{"start":{"line":64,"column":95,"offset":2428},"end":{"line":64,"column":97,"offset":2430}}}],"position":{"start":{"line":58,"column":1,"offset":2022},"end":{"line":64,"column":97,"offset":2430}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":66,"column":1,"offset":2432},"end":{"line":66,"column":6,"offset":2437}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":68,"column":1,"offset":2439},"end":{"line":69,"column":1,"offset":2483}}},{"type":"raw","value":"<br>","position":{"start":{"line":69,"column":1,"offset":2483},"end":{"line":69,"column":5,"offset":2487}}},{"type":"text","value":"\n","position":{"start":{"line":69,"column":5,"offset":2487},"end":{"line":70,"column":1,"offset":2488}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":70,"column":1,"offset":2488},"end":{"line":70,"column":22,"offset":2509}}},{"type":"text","value":"\n","position":{"start":{"line":70,"column":22,"offset":2509},"end":{"line":71,"column":1,"offset":2510}}},{"type":"raw","value":"<br>","position":{"start":{"line":71,"column":1,"offset":2510},"end":{"line":71,"column":5,"offset":2514}}}],"position":{"start":{"line":68,"column":1,"offset":2439},"end":{"line":71,"column":5,"offset":2514}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":73,"column":1,"offset":2516},"end":{"line":73,"column":152,"offset":2667}}}],"position":{"start":{"line":73,"column":1,"offset":2516},"end":{"line":73,"column":152,"offset":2667}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":75,"column":8,"offset":2676},"end":{"line":75,"column":20,"offset":2688}}}],"position":{"start":{"line":75,"column":1,"offset":2669},"end":{"line":75,"column":20,"offset":2688}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":77,"column":1,"offset":2690},"end":{"line":77,"column":56,"offset":2745}}}],"position":{"start":{"line":77,"column":1,"offset":2690},"end":{"line":77,"column":56,"offset":2745}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":78,"column":1,"offset":2746},"end":{"line":83,"column":4,"offset":2837}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":84,"column":1,"offset":2838},"end":{"line":84,"column":5,"offset":2842}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":86,"column":1,"offset":2844},"end":{"line":86,"column":37,"offset":2880}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":86,"column":37,"offset":2880},"end":{"line":86,"column":41,"offset":2884}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":86,"column":41,"offset":2884},"end":{"line":87,"column":1,"offset":2901}}},{"type":"raw","value":"<br>","position":{"start":{"line":87,"column":1,"offset":2901},"end":{"line":87,"column":5,"offset":2905}}},{"type":"text","value":"\n","position":{"start":{"line":87,"column":5,"offset":2905},"end":{"line":88,"column":1,"offset":2906}}},{"type":"raw","value":"<br>","position":{"start":{"line":88,"column":1,"offset":2906},"end":{"line":88,"column":5,"offset":2910}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":88,"column":5,"offset":2910},"end":{"line":89,"column":66,"offset":2976}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":89,"column":66,"offset":2976},"end":{"line":89,"column":89,"offset":2999}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":89,"column":89,"offset":2999},"end":{"line":90,"column":1,"offset":3039}}},{"type":"raw","value":"<br>","position":{"start":{"line":90,"column":1,"offset":3039},"end":{"line":90,"column":5,"offset":3043}}},{"type":"text","value":"\n","position":{"start":{"line":90,"column":5,"offset":3043},"end":{"line":91,"column":1,"offset":3044}}},{"type":"raw","value":"<br>","position":{"start":{"line":91,"column":1,"offset":3044},"end":{"line":91,"column":5,"offset":3048}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":91,"column":5,"offset":3048},"end":{"line":92,"column":21,"offset":3069}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":92,"column":21,"offset":3069},"end":{"line":92,"column":25,"offset":3073}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":92,"column":25,"offset":3073},"end":{"line":93,"column":1,"offset":3127}}},{"type":"raw","value":"<br>","position":{"start":{"line":93,"column":1,"offset":3127},"end":{"line":93,"column":5,"offset":3131}}},{"type":"text","value":"\n","position":{"start":{"line":93,"column":5,"offset":3131},"end":{"line":94,"column":1,"offset":3132}}},{"type":"raw","value":"<br>","position":{"start":{"line":94,"column":1,"offset":3132},"end":{"line":94,"column":5,"offset":3136}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":94,"column":5,"offset":3136},"end":{"line":95,"column":21,"offset":3157}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":95,"column":21,"offset":3157},"end":{"line":95,"column":25,"offset":3161}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":95,"column":25,"offset":3161},"end":{"line":96,"column":1,"offset":3216}}},{"type":"raw","value":"<br>","position":{"start":{"line":96,"column":1,"offset":3216},"end":{"line":96,"column":5,"offset":3220}}},{"type":"text","value":"\n","position":{"start":{"line":96,"column":5,"offset":3220},"end":{"line":97,"column":1,"offset":3221}}},{"type":"raw","value":"<br>","position":{"start":{"line":97,"column":1,"offset":3221},"end":{"line":97,"column":5,"offset":3225}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":97,"column":5,"offset":3225},"end":{"line":98,"column":58,"offset":3283}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":98,"column":58,"offset":3283},"end":{"line":98,"column":61,"offset":3286}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":98,"column":61,"offset":3286},"end":{"line":98,"column":145,"offset":3370}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":98,"column":145,"offset":3370},"end":{"line":98,"column":153,"offset":3378}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":98,"column":153,"offset":3378},"end":{"line":98,"column":178,"offset":3403}}}],"position":{"start":{"line":86,"column":1,"offset":2844},"end":{"line":98,"column":178,"offset":3403}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":100,"column":7,"offset":3411},"end":{"line":100,"column":10,"offset":3414}}}],"position":{"start":{"line":100,"column":1,"offset":3405},"end":{"line":100,"column":10,"offset":3414}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":102,"column":8,"offset":3423},"end":{"line":102,"column":17,"offset":3432}}}],"position":{"start":{"line":102,"column":1,"offset":3416},"end":{"line":102,"column":17,"offset":3432}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":103,"column":1,"offset":3433},"end":{"line":114,"column":4,"offset":3632}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":115,"column":1,"offset":3633},"end":{"line":115,"column":5,"offset":3637}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":117,"column":1,"offset":3639},"end":{"line":118,"column":1,"offset":3855}}},{"type":"raw","value":"<br>","position":{"start":{"line":118,"column":1,"offset":3855},"end":{"line":118,"column":5,"offset":3859}}},{"type":"text","value":"\n","position":{"start":{"line":118,"column":5,"offset":3859},"end":{"line":119,"column":1,"offset":3860}}},{"type":"raw","value":"<br>","position":{"start":{"line":119,"column":1,"offset":3860},"end":{"line":119,"column":5,"offset":3864}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":119,"column":5,"offset":3864},"end":{"line":120,"column":72,"offset":3936}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":120,"column":72,"offset":3936},"end":{"line":120,"column":81,"offset":3945}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":120,"column":81,"offset":3945},"end":{"line":121,"column":1,"offset":3964}}},{"type":"raw","value":"<br>","position":{"start":{"line":121,"column":1,"offset":3964},"end":{"line":121,"column":5,"offset":3968}}},{"type":"text","value":"\n","position":{"start":{"line":121,"column":5,"offset":3968},"end":{"line":122,"column":1,"offset":3969}}},{"type":"raw","value":"<br>","position":{"start":{"line":122,"column":1,"offset":3969},"end":{"line":122,"column":5,"offset":3973}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":122,"column":5,"offset":3973},"end":{"line":123,"column":10,"offset":3983}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":123,"column":10,"offset":3983},"end":{"line":123,"column":16,"offset":3989}}},{"type":"text","value":" gets called with ","position":{"start":{"line":123,"column":16,"offset":3989},"end":{"line":123,"column":34,"offset":4007}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":123,"column":34,"offset":4007},"end":{"line":123,"column":42,"offset":4015}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":123,"column":42,"offset":4015},"end":{"line":124,"column":24,"offset":4040}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":124,"column":24,"offset":4040},"end":{"line":124,"column":33,"offset":4049}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":124,"column":33,"offset":4049},"end":{"line":124,"column":107,"offset":4123}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":124,"column":107,"offset":4123},"end":{"line":124,"column":116,"offset":4132}}},{"type":"text","value":" is false because ","position":{"start":{"line":124,"column":116,"offset":4132},"end":{"line":124,"column":134,"offset":4150}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":124,"column":134,"offset":4150},"end":{"line":124,"column":137,"offset":4153}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":124,"column":137,"offset":4153},"end":{"line":124,"column":161,"offset":4177}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":124,"column":161,"offset":4177},"end":{"line":124,"column":167,"offset":4183}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":124,"column":167,"offset":4183},"end":{"line":124,"column":192,"offset":4208}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":124,"column":192,"offset":4208},"end":{"line":124,"column":200,"offset":4216}}},{"type":"text","value":". This is because ","position":{"start":{"line":124,"column":200,"offset":4216},"end":{"line":124,"column":218,"offset":4234}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":124,"column":218,"offset":4234},"end":{"line":124,"column":224,"offset":4240}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":124,"column":224,"offset":4240},"end":{"line":124,"column":245,"offset":4261}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":124,"column":245,"offset":4261},"end":{"line":124,"column":252,"offset":4268}}},{"type":"text","value":" and ","position":{"start":{"line":124,"column":252,"offset":4268},"end":{"line":124,"column":257,"offset":4273}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":124,"column":257,"offset":4273},"end":{"line":124,"column":260,"offset":4276}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":124,"column":260,"offset":4276},"end":{"line":124,"column":285,"offset":4301}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":124,"column":285,"offset":4301},"end":{"line":124,"column":291,"offset":4307}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":124,"column":291,"offset":4307},"end":{"line":125,"column":96,"offset":4433}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":125,"column":96,"offset":4433},"end":{"line":125,"column":111,"offset":4448}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":125,"column":111,"offset":4448},"end":{"line":125,"column":182,"offset":4519}}}],"position":{"start":{"line":117,"column":1,"offset":3639},"end":{"line":125,"column":182,"offset":4519}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":127,"column":8,"offset":4528},"end":{"line":127,"column":19,"offset":4539}}}],"position":{"start":{"line":127,"column":1,"offset":4521},"end":{"line":127,"column":19,"offset":4539}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":128,"column":1,"offset":4540},"end":{"line":128,"column":14,"offset":4553}}}],"position":{"start":{"line":128,"column":1,"offset":4540},"end":{"line":128,"column":14,"offset":4553}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":129,"column":1,"offset":4554},"end":{"line":144,"column":4,"offset":4969}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":145,"column":1,"offset":4970},"end":{"line":145,"column":5,"offset":4974}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":147,"column":1,"offset":4976},"end":{"line":147,"column":141,"offset":5116}}}],"position":{"start":{"line":147,"column":1,"offset":4976},"end":{"line":147,"column":141,"offset":5116}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":149,"column":8,"offset":5125},"end":{"line":149,"column":30,"offset":5147}}}],"position":{"start":{"line":149,"column":1,"offset":5118},"end":{"line":149,"column":30,"offset":5147}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":150,"column":1,"offset":5148},"end":{"line":150,"column":199,"offset":5346}}}],"position":{"start":{"line":150,"column":1,"offset":5148},"end":{"line":150,"column":199,"offset":5346}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":152,"column":8,"offset":5355},"end":{"line":152,"column":30,"offset":5377}}}],"position":{"start":{"line":152,"column":1,"offset":5348},"end":{"line":152,"column":30,"offset":5377}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":154,"column":1,"offset":5379},"end":{"line":155,"column":1,"offset":5454}}},{"type":"raw","value":"<br>","position":{"start":{"line":155,"column":1,"offset":5454},"end":{"line":155,"column":5,"offset":5458}}},{"type":"text","value":"\n","position":{"start":{"line":155,"column":5,"offset":5458},"end":{"line":156,"column":1,"offset":5459}}},{"type":"raw","value":"<br>","position":{"start":{"line":156,"column":1,"offset":5459},"end":{"line":156,"column":5,"offset":5463}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":156,"column":5,"offset":5463},"end":{"line":158,"column":1,"offset":5525}}},{"type":"raw","value":"<br>","position":{"start":{"line":158,"column":1,"offset":5525},"end":{"line":158,"column":5,"offset":5529}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":158,"column":5,"offset":5529},"end":{"line":159,"column":1,"offset":5532}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":159,"column":1,"offset":5532},"end":{"line":159,"column":11,"offset":5542}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":159,"column":11,"offset":5542},"end":{"line":159,"column":19,"offset":5550}}},{"type":"text","value":" and ","position":{"start":{"line":159,"column":19,"offset":5550},"end":{"line":159,"column":24,"offset":5555}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":159,"column":24,"offset":5555},"end":{"line":159,"column":34,"offset":5565}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":159,"column":34,"offset":5565},"end":{"line":160,"column":1,"offset":5614}}},{"type":"raw","value":"<br>","position":{"start":{"line":160,"column":1,"offset":5614},"end":{"line":160,"column":5,"offset":5618}}}],"position":{"start":{"line":154,"column":1,"offset":5379},"end":{"line":160,"column":5,"offset":5618}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":162,"column":8,"offset":5627},"end":{"line":162,"column":12,"offset":5631}}}],"position":{"start":{"line":162,"column":1,"offset":5620},"end":{"line":162,"column":12,"offset":5631}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":163,"column":1,"offset":5632},"end":{"line":168,"column":4,"offset":5743}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":169,"column":1,"offset":5744},"end":{"line":170,"column":5,"offset":5753}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":172,"column":1,"offset":5755},"end":{"line":172,"column":7,"offset":5761}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":172,"column":7,"offset":5761},"end":{"line":174,"column":1,"offset":5843}}},{"type":"raw","value":"<br>","position":{"start":{"line":174,"column":1,"offset":5843},"end":{"line":174,"column":5,"offset":5847}}},{"type":"text","value":"\n","position":{"start":{"line":174,"column":5,"offset":5847},"end":{"line":175,"column":1,"offset":5848}}},{"type":"raw","value":"<br>","position":{"start":{"line":175,"column":1,"offset":5848},"end":{"line":175,"column":5,"offset":5852}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":175,"column":5,"offset":5852},"end":{"line":176,"column":10,"offset":5862}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":176,"column":10,"offset":5862},"end":{"line":176,"column":14,"offset":5866}}},{"type":"text","value":". Since ","position":{"start":{"line":176,"column":14,"offset":5866},"end":{"line":176,"column":22,"offset":5874}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":176,"column":22,"offset":5874},"end":{"line":176,"column":30,"offset":5882}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":176,"column":30,"offset":5882},"end":{"line":176,"column":50,"offset":5902}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":176,"column":50,"offset":5902},"end":{"line":176,"column":53,"offset":5905}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":176,"column":53,"offset":5905},"end":{"line":176,"column":90,"offset":5942}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":176,"column":90,"offset":5942},"end":{"line":176,"column":96,"offset":5948}}},{"type":"text","value":".\n","position":{"start":{"line":176,"column":96,"offset":5948},"end":{"line":177,"column":1,"offset":5951}}},{"type":"raw","value":"<br>","position":{"start":{"line":177,"column":1,"offset":5951},"end":{"line":177,"column":5,"offset":5955}}},{"type":"text","value":"\n","position":{"start":{"line":177,"column":5,"offset":5955},"end":{"line":178,"column":1,"offset":5956}}},{"type":"raw","value":"<br>","position":{"start":{"line":178,"column":1,"offset":5956},"end":{"line":178,"column":5,"offset":5960}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":178,"column":5,"offset":5960},"end":{"line":179,"column":14,"offset":5974}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":179,"column":14,"offset":5974},"end":{"line":179,"column":18,"offset":5978}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":179,"column":18,"offset":5978},"end":{"line":179,"column":90,"offset":6050}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":179,"column":90,"offset":6050},"end":{"line":179,"column":94,"offset":6054}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":179,"column":94,"offset":6054},"end":{"line":179,"column":125,"offset":6085}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":179,"column":125,"offset":6085},"end":{"line":179,"column":131,"offset":6091}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":179,"column":131,"offset":6091},"end":{"line":180,"column":1,"offset":6106}}},{"type":"raw","value":"<br>","position":{"start":{"line":180,"column":1,"offset":6106},"end":{"line":180,"column":5,"offset":6110}}},{"type":"text","value":"\n","position":{"start":{"line":180,"column":5,"offset":6110},"end":{"line":181,"column":1,"offset":6111}}},{"type":"raw","value":"<br>","position":{"start":{"line":181,"column":1,"offset":6111},"end":{"line":181,"column":5,"offset":6115}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":181,"column":5,"offset":6115},"end":{"line":182,"column":14,"offset":6129}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":182,"column":14,"offset":6129},"end":{"line":182,"column":18,"offset":6133}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":182,"column":18,"offset":6133},"end":{"line":182,"column":37,"offset":6152}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":182,"column":37,"offset":6152},"end":{"line":182,"column":40,"offset":6155}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":182,"column":40,"offset":6155},"end":{"line":182,"column":77,"offset":6192}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":182,"column":77,"offset":6192},"end":{"line":182,"column":81,"offset":6196}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":182,"column":81,"offset":6196},"end":{"line":182,"column":99,"offset":6214}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":182,"column":99,"offset":6214},"end":{"line":182,"column":102,"offset":6217}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":182,"column":102,"offset":6217},"end":{"line":182,"column":133,"offset":6248}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":182,"column":133,"offset":6248},"end":{"line":182,"column":139,"offset":6254}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":182,"column":139,"offset":6254},"end":{"line":182,"column":167,"offset":6282}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":182,"column":167,"offset":6282},"end":{"line":182,"column":171,"offset":6286}}},{"type":"text","value":".\n","position":{"start":{"line":182,"column":171,"offset":6286},"end":{"line":183,"column":1,"offset":6288}}},{"type":"raw","value":"<br>","position":{"start":{"line":183,"column":1,"offset":6288},"end":{"line":183,"column":5,"offset":6292}}},{"type":"text","value":"\n","position":{"start":{"line":183,"column":5,"offset":6292},"end":{"line":184,"column":1,"offset":6293}}},{"type":"raw","value":"<br>","position":{"start":{"line":184,"column":1,"offset":6293},"end":{"line":184,"column":5,"offset":6297}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":184,"column":5,"offset":6297},"end":{"line":186,"column":1,"offset":6317}}},{"type":"raw","value":"<br>","position":{"start":{"line":186,"column":1,"offset":6317},"end":{"line":186,"column":5,"offset":6321}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":186,"column":5,"offset":6321},"end":{"line":187,"column":6,"offset":6327}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":187,"column":6,"offset":6327},"end":{"line":187,"column":12,"offset":6333}}},{"type":"text","value":" does not have an ","position":{"start":{"line":187,"column":12,"offset":6333},"end":{"line":187,"column":30,"offset":6351}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":187,"column":30,"offset":6351},"end":{"line":187,"column":36,"offset":6357}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":187,"column":36,"offset":6357},"end":{"line":187,"column":62,"offset":6383}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":187,"column":62,"offset":6383},"end":{"line":187,"column":75,"offset":6396}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":187,"column":75,"offset":6396},"end":{"line":187,"column":159,"offset":6480}}}],"position":{"start":{"line":172,"column":1,"offset":5755},"end":{"line":187,"column":159,"offset":6480}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":189,"column":8,"offset":6489},"end":{"line":189,"column":41,"offset":6522}}}],"position":{"start":{"line":189,"column":1,"offset":6482},"end":{"line":189,"column":41,"offset":6522}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":190,"column":1,"offset":6523},"end":{"line":195,"column":4,"offset":6598}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":196,"column":1,"offset":6599},"end":{"line":197,"column":1,"offset":6618}}},{"type":"raw","value":"<br>","position":{"start":{"line":197,"column":1,"offset":6618},"end":{"line":197,"column":5,"offset":6622}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":197,"column":5,"offset":6622},"end":{"line":199,"column":5,"offset":6760}}},{"type":"raw","value":"<br>","position":{"start":{"line":199,"column":5,"offset":6760},"end":{"line":199,"column":9,"offset":6764}}},{"type":"text","value":"\n","position":{"start":{"line":199,"column":9,"offset":6764},"end":{"line":200,"column":5,"offset":6769}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":200,"column":5,"offset":6769},"end":{"line":200,"column":27,"offset":6791}}},{"type":"text","value":"\n","position":{"start":{"line":200,"column":27,"offset":6791},"end":{"line":201,"column":5,"offset":6796}}},{"type":"raw","value":"<br>","position":{"start":{"line":201,"column":5,"offset":6796},"end":{"line":201,"column":9,"offset":6800}}},{"type":"text","value":"\n","position":{"start":{"line":201,"column":9,"offset":6800},"end":{"line":202,"column":5,"offset":6805}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":202,"column":5,"offset":6805},"end":{"line":202,"column":12,"offset":6812}}},{"type":"text","value":" and ","position":{"start":{"line":202,"column":12,"offset":6812},"end":{"line":202,"column":17,"offset":6817}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":202,"column":17,"offset":6817},"end":{"line":202,"column":25,"offset":6825}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":202,"column":25,"offset":6825},"end":{"line":202,"column":63,"offset":6863}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":202,"column":63,"offset":6863},"end":{"line":202,"column":66,"offset":6866}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":202,"column":66,"offset":6866},"end":{"line":202,"column":86,"offset":6886}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":202,"column":86,"offset":6886},"end":{"line":202,"column":89,"offset":6889}}},{"type":"text","value":" will be called with ","position":{"start":{"line":202,"column":89,"offset":6889},"end":{"line":202,"column":110,"offset":6910}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":202,"column":110,"offset":6910},"end":{"line":202,"column":119,"offset":6919}}},{"type":"text","value":".\n","position":{"start":{"line":202,"column":119,"offset":6919},"end":{"line":203,"column":1,"offset":6921}}},{"type":"raw","value":"<br>","position":{"start":{"line":203,"column":1,"offset":6921},"end":{"line":203,"column":5,"offset":6925}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":203,"column":5,"offset":6925},"end":{"line":205,"column":1,"offset":6941}}},{"type":"raw","value":"<br>","position":{"start":{"line":205,"column":1,"offset":6941},"end":{"line":205,"column":5,"offset":6945}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":205,"column":5,"offset":6945},"end":{"line":207,"column":5,"offset":7052}}},{"type":"raw","value":"<br>","position":{"start":{"line":207,"column":5,"offset":7052},"end":{"line":207,"column":9,"offset":7056}}},{"type":"text","value":"\n","position":{"start":{"line":207,"column":9,"offset":7056},"end":{"line":208,"column":1,"offset":7057}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":208,"column":1,"offset":7057},"end":{"line":208,"column":23,"offset":7079}}},{"type":"text","value":" turns into ","position":{"start":{"line":208,"column":23,"offset":7079},"end":{"line":208,"column":35,"offset":7091}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":208,"column":35,"offset":7091},"end":{"line":208,"column":61,"offset":7117}}},{"type":"text","value":"\n","position":{"start":{"line":208,"column":61,"offset":7117},"end":{"line":209,"column":1,"offset":7118}}},{"type":"raw","value":"<br>","position":{"start":{"line":209,"column":1,"offset":7118},"end":{"line":209,"column":5,"offset":7122}}},{"type":"text","value":"\nNow ","position":{"start":{"line":209,"column":5,"offset":7122},"end":{"line":210,"column":5,"offset":7127}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":210,"column":5,"offset":7127},"end":{"line":210,"column":8,"offset":7130}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":210,"column":8,"offset":7130},"end":{"line":210,"column":58,"offset":7180}}}],"position":{"start":{"line":196,"column":1,"offset":6599},"end":{"line":210,"column":58,"offset":7180}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":212,"column":1,"offset":7182},"end":{"line":213,"column":1,"offset":7200}}},{"type":"raw","value":"<br>","position":{"start":{"line":213,"column":1,"offset":7200},"end":{"line":213,"column":5,"offset":7204}}}],"position":{"start":{"line":212,"column":1,"offset":7182},"end":{"line":213,"column":5,"offset":7204}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":214,"column":1,"offset":7205},"end":{"line":216,"column":4,"offset":7235}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":217,"column":1,"offset":7236},"end":{"line":217,"column":13,"offset":7248}}}],"position":{"start":{"line":217,"column":1,"offset":7236},"end":{"line":217,"column":13,"offset":7248}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":218,"column":1,"offset":7249},"end":{"line":224,"column":4,"offset":7328}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":225,"column":1,"offset":7329},"end":{"line":225,"column":8,"offset":7336}}}],"position":{"start":{"line":225,"column":1,"offset":7329},"end":{"line":225,"column":8,"offset":7336}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":226,"column":1,"offset":7337},"end":{"line":233,"column":4,"offset":7461}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":234,"column":1,"offset":7462},"end":{"line":235,"column":5,"offset":7471}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":237,"column":1,"offset":7473},"end":{"line":237,"column":11,"offset":7483}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":237,"column":11,"offset":7483},"end":{"line":237,"column":24,"offset":7496}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":237,"column":24,"offset":7496},"end":{"line":237,"column":107,"offset":7579}}}],"position":{"start":{"line":237,"column":1,"offset":7473},"end":{"line":237,"column":107,"offset":7579}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":239,"column":7,"offset":7587},"end":{"line":239,"column":10,"offset":7590}}}],"position":{"start":{"line":239,"column":1,"offset":7581},"end":{"line":239,"column":10,"offset":7590}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":240,"column":7,"offset":7597},"end":{"line":240,"column":10,"offset":7600}}}],"position":{"start":{"line":240,"column":1,"offset":7591},"end":{"line":240,"column":10,"offset":7600}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":242,"column":6,"offset":7607},"end":{"line":242,"column":10,"offset":7611}}}],"position":{"start":{"line":242,"column":1,"offset":7602},"end":{"line":242,"column":10,"offset":7611}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":243,"column":7,"offset":7618},"end":{"line":243,"column":13,"offset":7624}}}],"position":{"start":{"line":243,"column":1,"offset":7612},"end":{"line":243,"column":13,"offset":7624}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":244,"column":1,"offset":7625},"end":{"line":244,"column":49,"offset":7673}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":244,"column":49,"offset":7673},"end":{"line":244,"column":57,"offset":7681}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":244,"column":57,"offset":7681},"end":{"line":244,"column":133,"offset":7757}}}],"position":{"start":{"line":244,"column":1,"offset":7625},"end":{"line":244,"column":133,"offset":7757}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":245,"column":1,"offset":7758},"end":{"line":255,"column":4,"offset":7953}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":256,"column":1,"offset":7954},"end":{"line":256,"column":5,"offset":7958}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":259,"column":1,"offset":7961},"end":{"line":260,"column":1,"offset":8043}}},{"type":"raw","value":"<br>","position":{"start":{"line":260,"column":1,"offset":8043},"end":{"line":260,"column":5,"offset":8047}}},{"type":"text","value":"\n","position":{"start":{"line":260,"column":5,"offset":8047},"end":{"line":261,"column":1,"offset":8048}}},{"type":"raw","value":"<br>","position":{"start":{"line":261,"column":1,"offset":8048},"end":{"line":261,"column":5,"offset":8052}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":261,"column":5,"offset":8052},"end":{"line":262,"column":26,"offset":8078}}}],"position":{"start":{"line":259,"column":1,"offset":7961},"end":{"line":262,"column":26,"offset":8078}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":263,"column":1,"offset":8079},"end":{"line":268,"column":4,"offset":8207}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":269,"column":1,"offset":8208},"end":{"line":269,"column":14,"offset":8221}}}],"position":{"start":{"line":269,"column":1,"offset":8208},"end":{"line":269,"column":14,"offset":8221}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":271,"column":1,"offset":8223},"end":{"line":284,"column":4,"offset":8505}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":286,"column":1,"offset":8507},"end":{"line":287,"column":5,"offset":8516}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":290,"column":7,"offset":8525},"end":{"line":290,"column":13,"offset":8531}}}],"position":{"start":{"line":290,"column":1,"offset":8519},"end":{"line":290,"column":13,"offset":8531}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":290,"column":13,"offset":8531}}}}