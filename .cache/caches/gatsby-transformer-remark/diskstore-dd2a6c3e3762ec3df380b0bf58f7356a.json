{"expireTime":9007200848858718000,"key":"transformer-remark-markdown-ast-6f4f4844898466532d14e2f001b5bae2-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":55,"offset":55},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":2,"column":56,"offset":56},"end":{"line":2,"column":71,"offset":71},"indent":[]}}],"position":{"start":{"line":2,"column":55,"offset":55},"end":{"line":2,"column":102,"offset":102},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":2,"column":102,"offset":102},"end":{"line":3,"column":51,"offset":154},"indent":[1]}},{"type":"link","title":null,"url":"https://bpp.dev/articles/teachyourselfcs/programming/00-getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":3,"column":52,"offset":155},"end":{"line":3,"column":56,"offset":159},"indent":[]}}],"position":{"start":{"line":3,"column":51,"offset":154},"end":{"line":3,"column":131,"offset":234},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":3,"column":131,"offset":234},"end":{"line":3,"column":132,"offset":235},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":3,"column":132,"offset":235},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":5,"column":6,"offset":242},"end":{"line":5,"column":11,"offset":247},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":237},"end":{"line":5,"column":11,"offset":247},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":7,"column":1,"offset":249},"end":{"line":7,"column":37,"offset":285},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":7,"column":38,"offset":286},"end":{"line":7,"column":46,"offset":294},"indent":[]}}],"position":{"start":{"line":7,"column":37,"offset":285},"end":{"line":7,"column":101,"offset":349},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":7,"column":101,"offset":349},"end":{"line":8,"column":52,"offset":401},"indent":[1]}}],"position":{"start":{"line":7,"column":1,"offset":249},"end":{"line":8,"column":52,"offset":401},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":10,"column":6,"offset":408},"end":{"line":10,"column":14,"offset":416},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":403},"end":{"line":10,"column":14,"offset":416},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":12,"column":7,"offset":424},"end":{"line":12,"column":10,"offset":427},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":418},"end":{"line":12,"column":10,"offset":427},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":14,"column":8,"offset":436},"end":{"line":14,"column":30,"offset":458},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":429},"end":{"line":14,"column":30,"offset":458},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":16,"column":1,"offset":460},"end":{"line":17,"column":1,"offset":604},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":17,"column":1,"offset":604},"end":{"line":17,"column":5,"offset":608},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":17,"column":5,"offset":608},"end":{"line":17,"column":16,"offset":619},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":17,"column":16,"offset":619},"end":{"line":17,"column":20,"offset":623},"indent":[]}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":17,"column":20,"offset":623},"end":{"line":19,"column":1,"offset":765},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":19,"column":1,"offset":765},"end":{"line":19,"column":5,"offset":769},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":19,"column":5,"offset":769},"end":{"line":19,"column":16,"offset":780},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":19,"column":16,"offset":780},"end":{"line":19,"column":20,"offset":784},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like: ","position":{"start":{"line":19,"column":20,"offset":784},"end":{"line":20,"column":44,"offset":828},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":20,"column":44,"offset":828},"end":{"line":20,"column":48,"offset":832},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3 - 4</code>","position":{"start":{"line":20,"column":48,"offset":832},"end":{"line":20,"column":63,"offset":847},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":20,"column":63,"offset":847},"end":{"line":20,"column":67,"offset":851},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":20,"column":67,"offset":851},"end":{"line":22,"column":1,"offset":893},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":1,"offset":893},"end":{"line":22,"column":5,"offset":897},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":22,"column":5,"offset":897},"end":{"line":22,"column":22,"offset":914},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":22,"offset":914},"end":{"line":22,"column":26,"offset":918},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":22,"column":26,"offset":918},"end":{"line":23,"column":1,"offset":919},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":23,"column":1,"offset":919},"end":{"line":23,"column":5,"offset":923},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":23,"column":5,"offset":923},"end":{"line":25,"column":1,"offset":1040},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":25,"column":1,"offset":1040},"end":{"line":25,"column":5,"offset":1044},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":25,"column":5,"offset":1044},"end":{"line":27,"column":1,"offset":1164},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":27,"column":1,"offset":1164},"end":{"line":27,"column":12,"offset":1175},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":27,"column":12,"offset":1175},"end":{"line":27,"column":68,"offset":1231},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":27,"column":68,"offset":1231},"end":{"line":27,"column":79,"offset":1242},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":27,"column":79,"offset":1242},"end":{"line":27,"column":106,"offset":1269},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":27,"column":106,"offset":1269},"end":{"line":27,"column":109,"offset":1272},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":27,"column":109,"offset":1272},"end":{"line":27,"column":189,"offset":1352},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":27,"column":189,"offset":1352},"end":{"line":27,"column":192,"offset":1355},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":27,"column":192,"offset":1355},"end":{"line":27,"column":202,"offset":1365},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":460},"end":{"line":27,"column":202,"offset":1365},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":29,"column":8,"offset":1374},"end":{"line":29,"column":14,"offset":1380},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1367},"end":{"line":29,"column":14,"offset":1380},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":31,"column":1,"offset":1382},"end":{"line":31,"column":9,"offset":1390},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions:","position":{"start":{"line":31,"column":9,"offset":1390},"end":{"line":31,"column":72,"offset":1453},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1382},"end":{"line":31,"column":72,"offset":1453},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":33,"column":1,"offset":1455},"end":{"line":36,"column":4,"offset":1494},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1496},"end":{"line":38,"column":5,"offset":1500},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":40,"column":1,"offset":1502},"end":{"line":40,"column":72,"offset":1573},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":40,"column":72,"offset":1573},"end":{"line":40,"column":80,"offset":1581},"indent":[]}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":40,"column":80,"offset":1581},"end":{"line":41,"column":1,"offset":1604},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":41,"column":1,"offset":1604},"end":{"line":41,"column":5,"offset":1608},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":41,"column":5,"offset":1608},"end":{"line":42,"column":1,"offset":1609},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":42,"column":1,"offset":1609},"end":{"line":42,"column":5,"offset":1613},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":42,"column":5,"offset":1613},"end":{"line":43,"column":184,"offset":1797},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":43,"column":184,"offset":1797},"end":{"line":43,"column":187,"offset":1800},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":43,"column":187,"offset":1800},"end":{"line":44,"column":1,"offset":1802},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1802},"end":{"line":44,"column":5,"offset":1806},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":44,"column":5,"offset":1806},"end":{"line":45,"column":1,"offset":1807},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":45,"column":1,"offset":1807},"end":{"line":45,"column":5,"offset":1811},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":45,"column":5,"offset":1811},"end":{"line":46,"column":27,"offset":1838},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":46,"column":27,"offset":1838},"end":{"line":46,"column":35,"offset":1846},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":46,"column":35,"offset":1846},"end":{"line":46,"column":86,"offset":1897},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":46,"column":86,"offset":1897},"end":{"line":46,"column":95,"offset":1906},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":46,"column":95,"offset":1906},"end":{"line":46,"column":96,"offset":1907},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1502},"end":{"line":46,"column":96,"offset":1907},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1909},"end":{"line":48,"column":5,"offset":1913},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":50,"column":1,"offset":1915},"end":{"line":51,"column":1,"offset":1959},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":51,"column":1,"offset":1959},"end":{"line":51,"column":5,"offset":1963},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":51,"column":5,"offset":1963},"end":{"line":52,"column":1,"offset":1964},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":52,"column":1,"offset":1964},"end":{"line":52,"column":22,"offset":1985},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":52,"column":22,"offset":1985},"end":{"line":53,"column":1,"offset":1986},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":53,"column":1,"offset":1986},"end":{"line":53,"column":5,"offset":1990},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1915},"end":{"line":53,"column":5,"offset":1990},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":55,"column":1,"offset":1992},"end":{"line":55,"column":152,"offset":2143},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":1992},"end":{"line":55,"column":152,"offset":2143},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":57,"column":8,"offset":2152},"end":{"line":57,"column":20,"offset":2164},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":2145},"end":{"line":57,"column":20,"offset":2164},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":59,"column":1,"offset":2166},"end":{"line":59,"column":56,"offset":2221},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":2166},"end":{"line":59,"column":56,"offset":2221},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":61,"column":1,"offset":2223},"end":{"line":66,"column":4,"offset":2314},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":68,"column":1,"offset":2316},"end":{"line":68,"column":5,"offset":2320},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":70,"column":1,"offset":2322},"end":{"line":70,"column":37,"offset":2358},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":70,"column":37,"offset":2358},"end":{"line":70,"column":41,"offset":2362},"indent":[]}},{"type":"text","value":" is a function.\n","position":{"start":{"line":70,"column":41,"offset":2362},"end":{"line":71,"column":1,"offset":2378},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":71,"column":1,"offset":2378},"end":{"line":71,"column":5,"offset":2382},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":71,"column":5,"offset":2382},"end":{"line":72,"column":1,"offset":2383},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":72,"column":1,"offset":2383},"end":{"line":72,"column":5,"offset":2387},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":72,"column":5,"offset":2387},"end":{"line":73,"column":66,"offset":2453},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":73,"column":66,"offset":2453},"end":{"line":73,"column":89,"offset":2476},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":73,"column":89,"offset":2476},"end":{"line":74,"column":1,"offset":2515},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":74,"column":1,"offset":2515},"end":{"line":74,"column":5,"offset":2519},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":74,"column":5,"offset":2519},"end":{"line":75,"column":1,"offset":2520},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2520},"end":{"line":75,"column":5,"offset":2524},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":75,"column":5,"offset":2524},"end":{"line":76,"column":21,"offset":2545},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":76,"column":21,"offset":2545},"end":{"line":76,"column":25,"offset":2549},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":76,"column":25,"offset":2549},"end":{"line":77,"column":1,"offset":2603},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":77,"column":1,"offset":2603},"end":{"line":77,"column":5,"offset":2607},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":77,"column":5,"offset":2607},"end":{"line":78,"column":1,"offset":2608},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2608},"end":{"line":78,"column":5,"offset":2612},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":78,"column":5,"offset":2612},"end":{"line":79,"column":21,"offset":2633},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":79,"column":21,"offset":2633},"end":{"line":79,"column":25,"offset":2637},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":79,"column":25,"offset":2637},"end":{"line":80,"column":1,"offset":2692},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":80,"column":1,"offset":2692},"end":{"line":80,"column":5,"offset":2696},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":80,"column":5,"offset":2696},"end":{"line":81,"column":1,"offset":2697},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":81,"column":1,"offset":2697},"end":{"line":81,"column":5,"offset":2701},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":81,"column":5,"offset":2701},"end":{"line":82,"column":58,"offset":2759},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":82,"column":58,"offset":2759},"end":{"line":82,"column":61,"offset":2762},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":82,"column":61,"offset":2762},"end":{"line":82,"column":145,"offset":2846},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":82,"column":145,"offset":2846},"end":{"line":82,"column":153,"offset":2854},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":82,"column":153,"offset":2854},"end":{"line":82,"column":178,"offset":2879},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":2322},"end":{"line":82,"column":178,"offset":2879},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":84,"column":7,"offset":2887},"end":{"line":84,"column":10,"offset":2890},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":2881},"end":{"line":84,"column":10,"offset":2890},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":86,"column":8,"offset":2899},"end":{"line":86,"column":17,"offset":2908},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":2892},"end":{"line":86,"column":17,"offset":2908},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":88,"column":1,"offset":2910},"end":{"line":99,"column":4,"offset":3109},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":101,"column":1,"offset":3111},"end":{"line":101,"column":5,"offset":3115},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":103,"column":1,"offset":3117},"end":{"line":104,"column":1,"offset":3333},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":104,"column":1,"offset":3333},"end":{"line":104,"column":5,"offset":3337},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":104,"column":5,"offset":3337},"end":{"line":105,"column":1,"offset":3338},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":105,"column":1,"offset":3338},"end":{"line":105,"column":5,"offset":3342},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":105,"column":5,"offset":3342},"end":{"line":106,"column":72,"offset":3414},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":106,"column":72,"offset":3414},"end":{"line":106,"column":81,"offset":3423},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":106,"column":81,"offset":3423},"end":{"line":107,"column":1,"offset":3442},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":107,"column":1,"offset":3442},"end":{"line":107,"column":5,"offset":3446},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":107,"column":5,"offset":3446},"end":{"line":108,"column":1,"offset":3447},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":108,"column":1,"offset":3447},"end":{"line":108,"column":5,"offset":3451},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":108,"column":5,"offset":3451},"end":{"line":109,"column":10,"offset":3461},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":109,"column":10,"offset":3461},"end":{"line":109,"column":16,"offset":3467},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":109,"column":16,"offset":3467},"end":{"line":109,"column":34,"offset":3485},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":109,"column":34,"offset":3485},"end":{"line":109,"column":42,"offset":3493},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":109,"column":42,"offset":3493},"end":{"line":110,"column":24,"offset":3518},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":110,"column":24,"offset":3518},"end":{"line":110,"column":33,"offset":3527},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":110,"column":33,"offset":3527},"end":{"line":110,"column":107,"offset":3601},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":110,"column":107,"offset":3601},"end":{"line":110,"column":116,"offset":3610},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":110,"column":116,"offset":3610},"end":{"line":110,"column":134,"offset":3628},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":110,"column":134,"offset":3628},"end":{"line":110,"column":137,"offset":3631},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":110,"column":137,"offset":3631},"end":{"line":110,"column":161,"offset":3655},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":110,"column":161,"offset":3655},"end":{"line":110,"column":167,"offset":3661},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":110,"column":167,"offset":3661},"end":{"line":110,"column":192,"offset":3686},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":110,"column":192,"offset":3686},"end":{"line":110,"column":200,"offset":3694},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":110,"column":200,"offset":3694},"end":{"line":110,"column":218,"offset":3712},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":110,"column":218,"offset":3712},"end":{"line":110,"column":224,"offset":3718},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":110,"column":224,"offset":3718},"end":{"line":110,"column":245,"offset":3739},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":110,"column":245,"offset":3739},"end":{"line":110,"column":252,"offset":3746},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":110,"column":252,"offset":3746},"end":{"line":110,"column":257,"offset":3751},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":110,"column":257,"offset":3751},"end":{"line":110,"column":260,"offset":3754},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":110,"column":260,"offset":3754},"end":{"line":110,"column":285,"offset":3779},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":110,"column":285,"offset":3779},"end":{"line":110,"column":291,"offset":3785},"indent":[]}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":110,"column":291,"offset":3785},"end":{"line":111,"column":96,"offset":3910},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":111,"column":96,"offset":3910},"end":{"line":111,"column":111,"offset":3925},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops.","position":{"start":{"line":111,"column":111,"offset":3925},"end":{"line":111,"column":181,"offset":3995},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":3117},"end":{"line":111,"column":181,"offset":3995},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":113,"column":8,"offset":4004},"end":{"line":113,"column":19,"offset":4015},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":3997},"end":{"line":113,"column":19,"offset":4015},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture:","position":{"start":{"line":115,"column":1,"offset":4017},"end":{"line":115,"column":13,"offset":4029},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":4017},"end":{"line":115,"column":13,"offset":4029},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":117,"column":1,"offset":4031},"end":{"line":132,"column":4,"offset":4446},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":134,"column":1,"offset":4448},"end":{"line":134,"column":5,"offset":4452},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":136,"column":1,"offset":4454},"end":{"line":136,"column":141,"offset":4594},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":4454},"end":{"line":136,"column":141,"offset":4594},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":138,"column":8,"offset":4603},"end":{"line":138,"column":30,"offset":4625},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":4596},"end":{"line":138,"column":30,"offset":4625},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":140,"column":1,"offset":4627},"end":{"line":140,"column":199,"offset":4825},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":4627},"end":{"line":140,"column":199,"offset":4825},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":142,"column":8,"offset":4834},"end":{"line":142,"column":30,"offset":4856},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":4827},"end":{"line":142,"column":30,"offset":4856},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":144,"column":1,"offset":4858},"end":{"line":145,"column":1,"offset":4933},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":145,"column":1,"offset":4933},"end":{"line":145,"column":5,"offset":4937},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":145,"column":5,"offset":4937},"end":{"line":146,"column":1,"offset":4938},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":146,"column":1,"offset":4938},"end":{"line":146,"column":5,"offset":4942},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":146,"column":5,"offset":4942},"end":{"line":148,"column":1,"offset":5004},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":148,"column":1,"offset":5004},"end":{"line":148,"column":5,"offset":5008},"indent":[]}},{"type":"break","position":{"start":{"line":148,"column":5,"offset":5008},"end":{"line":149,"column":1,"offset":5011},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":149,"column":1,"offset":5011},"end":{"line":149,"column":11,"offset":5021},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":149,"column":11,"offset":5021},"end":{"line":149,"column":19,"offset":5029},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":149,"column":19,"offset":5029},"end":{"line":149,"column":24,"offset":5034},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":149,"column":24,"offset":5034},"end":{"line":149,"column":34,"offset":5044},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":149,"column":34,"offset":5044},"end":{"line":150,"column":1,"offset":5093},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":150,"column":1,"offset":5093},"end":{"line":150,"column":5,"offset":5097},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":4858},"end":{"line":150,"column":5,"offset":5097},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":152,"column":8,"offset":5106},"end":{"line":152,"column":12,"offset":5110},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":5099},"end":{"line":152,"column":12,"offset":5110},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n)\n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":154,"column":1,"offset":5112},"end":{"line":159,"column":4,"offset":5222},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":161,"column":1,"offset":5224},"end":{"line":162,"column":5,"offset":5233},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":164,"column":1,"offset":5235},"end":{"line":164,"column":7,"offset":5241},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":164,"column":7,"offset":5241},"end":{"line":166,"column":1,"offset":5321},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":166,"column":1,"offset":5321},"end":{"line":166,"column":5,"offset":5325},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":166,"column":5,"offset":5325},"end":{"line":167,"column":1,"offset":5326},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":167,"column":1,"offset":5326},"end":{"line":167,"column":5,"offset":5330},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":167,"column":5,"offset":5330},"end":{"line":168,"column":10,"offset":5340},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":168,"column":10,"offset":5340},"end":{"line":168,"column":14,"offset":5344},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":168,"column":14,"offset":5344},"end":{"line":168,"column":22,"offset":5352},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":168,"column":22,"offset":5352},"end":{"line":168,"column":30,"offset":5360},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":168,"column":30,"offset":5360},"end":{"line":168,"column":50,"offset":5380},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":168,"column":50,"offset":5380},"end":{"line":168,"column":53,"offset":5383},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":168,"column":53,"offset":5383},"end":{"line":168,"column":90,"offset":5420},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":168,"column":90,"offset":5420},"end":{"line":168,"column":96,"offset":5426},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":168,"column":96,"offset":5426},"end":{"line":169,"column":1,"offset":5428},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":169,"column":1,"offset":5428},"end":{"line":169,"column":5,"offset":5432},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":169,"column":5,"offset":5432},"end":{"line":170,"column":1,"offset":5433},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":170,"column":1,"offset":5433},"end":{"line":170,"column":5,"offset":5437},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":170,"column":5,"offset":5437},"end":{"line":171,"column":14,"offset":5451},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":171,"column":14,"offset":5451},"end":{"line":171,"column":18,"offset":5455},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":171,"column":18,"offset":5455},"end":{"line":171,"column":90,"offset":5527},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":171,"column":90,"offset":5527},"end":{"line":171,"column":94,"offset":5531},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":171,"column":94,"offset":5531},"end":{"line":171,"column":125,"offset":5562},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":171,"column":125,"offset":5562},"end":{"line":171,"column":131,"offset":5568},"indent":[]}},{"type":"text","value":" is returned.\n","position":{"start":{"line":171,"column":131,"offset":5568},"end":{"line":172,"column":1,"offset":5582},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":172,"column":1,"offset":5582},"end":{"line":172,"column":5,"offset":5586},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":172,"column":5,"offset":5586},"end":{"line":173,"column":1,"offset":5587},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":173,"column":1,"offset":5587},"end":{"line":173,"column":5,"offset":5591},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":173,"column":5,"offset":5591},"end":{"line":174,"column":14,"offset":5605},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":174,"column":14,"offset":5605},"end":{"line":174,"column":18,"offset":5609},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":174,"column":18,"offset":5609},"end":{"line":174,"column":37,"offset":5628},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":174,"column":37,"offset":5628},"end":{"line":174,"column":40,"offset":5631},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":174,"column":40,"offset":5631},"end":{"line":174,"column":77,"offset":5668},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":174,"column":77,"offset":5668},"end":{"line":174,"column":81,"offset":5672},"indent":[]}},{"type":"text","value":" does not have a ","position":{"start":{"line":174,"column":81,"offset":5672},"end":{"line":174,"column":98,"offset":5689},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":174,"column":98,"offset":5689},"end":{"line":174,"column":101,"offset":5692},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":174,"column":101,"offset":5692},"end":{"line":174,"column":132,"offset":5723},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":174,"column":132,"offset":5723},"end":{"line":174,"column":138,"offset":5729},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":174,"column":138,"offset":5729},"end":{"line":174,"column":166,"offset":5757},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":174,"column":166,"offset":5757},"end":{"line":174,"column":170,"offset":5761},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":174,"column":170,"offset":5761},"end":{"line":175,"column":1,"offset":5763},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":175,"column":1,"offset":5763},"end":{"line":175,"column":5,"offset":5767},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":175,"column":5,"offset":5767},"end":{"line":176,"column":1,"offset":5768},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":176,"column":1,"offset":5768},"end":{"line":176,"column":5,"offset":5772},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":176,"column":5,"offset":5772},"end":{"line":178,"column":1,"offset":5792},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":178,"column":1,"offset":5792},"end":{"line":178,"column":5,"offset":5796},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":178,"column":5,"offset":5796},"end":{"line":179,"column":6,"offset":5802},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":179,"column":6,"offset":5802},"end":{"line":179,"column":12,"offset":5808},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":179,"column":12,"offset":5808},"end":{"line":179,"column":30,"offset":5826},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":179,"column":30,"offset":5826},"end":{"line":179,"column":36,"offset":5832},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":179,"column":36,"offset":5832},"end":{"line":179,"column":62,"offset":5858},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":179,"column":62,"offset":5858},"end":{"line":179,"column":75,"offset":5871},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":179,"column":75,"offset":5871},"end":{"line":179,"column":159,"offset":5955},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":5235},"end":{"line":179,"column":159,"offset":5955},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":181,"column":8,"offset":5964},"end":{"line":181,"column":41,"offset":5997},"indent":[]}}],"position":{"start":{"line":181,"column":1,"offset":5957},"end":{"line":181,"column":41,"offset":5997},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":183,"column":1,"offset":5999},"end":{"line":188,"column":4,"offset":6074},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":190,"column":1,"offset":6076},"end":{"line":191,"column":1,"offset":6095},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":191,"column":1,"offset":6095},"end":{"line":191,"column":5,"offset":6099},"indent":[]}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":191,"column":5,"offset":6099},"end":{"line":193,"column":1,"offset":6229},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":193,"column":1,"offset":6229},"end":{"line":193,"column":5,"offset":6233},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":193,"column":5,"offset":6233},"end":{"line":194,"column":1,"offset":6234},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":194,"column":1,"offset":6234},"end":{"line":194,"column":23,"offset":6256},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":194,"column":23,"offset":6256},"end":{"line":195,"column":1,"offset":6257},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":195,"column":1,"offset":6257},"end":{"line":195,"column":5,"offset":6261},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":195,"column":5,"offset":6261},"end":{"line":196,"column":1,"offset":6262},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":196,"column":1,"offset":6262},"end":{"line":196,"column":8,"offset":6269},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":196,"column":8,"offset":6269},"end":{"line":196,"column":13,"offset":6274},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":196,"column":13,"offset":6274},"end":{"line":196,"column":21,"offset":6282},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":196,"column":21,"offset":6282},"end":{"line":196,"column":59,"offset":6320},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":196,"column":59,"offset":6320},"end":{"line":196,"column":62,"offset":6323},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":196,"column":62,"offset":6323},"end":{"line":196,"column":82,"offset":6343},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":196,"column":82,"offset":6343},"end":{"line":196,"column":85,"offset":6346},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":196,"column":85,"offset":6346},"end":{"line":196,"column":106,"offset":6367},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":196,"column":106,"offset":6367},"end":{"line":196,"column":115,"offset":6376},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":196,"column":115,"offset":6376},"end":{"line":197,"column":1,"offset":6378},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":197,"column":1,"offset":6378},"end":{"line":197,"column":5,"offset":6382},"indent":[]}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":197,"column":5,"offset":6382},"end":{"line":199,"column":1,"offset":6397},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":199,"column":1,"offset":6397},"end":{"line":199,"column":5,"offset":6401},"indent":[]}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":199,"column":5,"offset":6401},"end":{"line":201,"column":1,"offset":6499},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":201,"column":1,"offset":6499},"end":{"line":201,"column":5,"offset":6503},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":201,"column":5,"offset":6503},"end":{"line":202,"column":1,"offset":6504},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":202,"column":1,"offset":6504},"end":{"line":202,"column":23,"offset":6526},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":202,"column":23,"offset":6526},"end":{"line":202,"column":35,"offset":6538},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":202,"column":35,"offset":6538},"end":{"line":202,"column":61,"offset":6564},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":202,"column":61,"offset":6564},"end":{"line":203,"column":1,"offset":6565},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":203,"column":1,"offset":6565},"end":{"line":203,"column":5,"offset":6569},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":203,"column":5,"offset":6569},"end":{"line":204,"column":5,"offset":6574},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":204,"column":5,"offset":6574},"end":{"line":204,"column":8,"offset":6577},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":204,"column":8,"offset":6577},"end":{"line":204,"column":58,"offset":6627},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":6076},"end":{"line":204,"column":58,"offset":6627},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":206,"column":1,"offset":6629},"end":{"line":207,"column":1,"offset":6647},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":207,"column":1,"offset":6647},"end":{"line":207,"column":5,"offset":6651},"indent":[]}}],"position":{"start":{"line":206,"column":1,"offset":6629},"end":{"line":207,"column":5,"offset":6651},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":209,"column":1,"offset":6653},"end":{"line":211,"column":4,"offset":6683},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative","position":{"start":{"line":213,"column":1,"offset":6685},"end":{"line":213,"column":12,"offset":6696},"indent":[]}}],"position":{"start":{"line":213,"column":1,"offset":6685},"end":{"line":213,"column":12,"offset":6696},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":215,"column":1,"offset":6698},"end":{"line":221,"column":4,"offset":6777},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal","position":{"start":{"line":223,"column":1,"offset":6779},"end":{"line":223,"column":7,"offset":6785},"indent":[]}}],"position":{"start":{"line":223,"column":1,"offset":6779},"end":{"line":223,"column":7,"offset":6785},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt;\n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":225,"column":1,"offset":6787},"end":{"line":232,"column":4,"offset":6910},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":234,"column":1,"offset":6912},"end":{"line":235,"column":5,"offset":6921},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":237,"column":1,"offset":6923},"end":{"line":237,"column":11,"offset":6933},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":237,"column":11,"offset":6933},"end":{"line":237,"column":24,"offset":6946},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":237,"column":24,"offset":6946},"end":{"line":237,"column":107,"offset":7029},"indent":[]}}],"position":{"start":{"line":237,"column":1,"offset":6923},"end":{"line":237,"column":107,"offset":7029},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":239,"column":7,"offset":7037},"end":{"line":239,"column":10,"offset":7040},"indent":[]}}],"position":{"start":{"line":239,"column":1,"offset":7031},"end":{"line":239,"column":10,"offset":7040},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Data vs Procedures","position":{"start":{"line":241,"column":8,"offset":7049},"end":{"line":241,"column":26,"offset":7067},"indent":[]}}],"position":{"start":{"line":241,"column":1,"offset":7042},"end":{"line":241,"column":26,"offset":7067},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Data is like a noun. Procedures are like verbs.\n","position":{"start":{"line":243,"column":1,"offset":7069},"end":{"line":244,"column":1,"offset":7117},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":244,"column":1,"offset":7117},"end":{"line":244,"column":5,"offset":7121},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":244,"column":5,"offset":7121},"end":{"line":245,"column":1,"offset":7122},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":245,"column":1,"offset":7122},"end":{"line":245,"column":5,"offset":7126},"indent":[]}},{"type":"text","value":"\nCapitalization does not matter in scheme.\nAble to take in functions as arguments.\n","position":{"start":{"line":245,"column":5,"offset":7126},"end":{"line":248,"column":1,"offset":7209},"indent":[1,1,1]}},{"type":"html","value":"<code class=\"language-text\">se</code>","position":{"start":{"line":248,"column":1,"offset":7209},"end":{"line":248,"column":5,"offset":7213},"indent":[]}},{"type":"text","value":" is the function for creating sentences.","position":{"start":{"line":248,"column":5,"offset":7213},"end":{"line":248,"column":45,"offset":7253},"indent":[]}}],"position":{"start":{"line":243,"column":1,"offset":7069},"end":{"line":248,"column":45,"offset":7253},"indent":[1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Lambda","position":{"start":{"line":250,"column":8,"offset":7262},"end":{"line":250,"column":14,"offset":7268},"indent":[]}}],"position":{"start":{"line":250,"column":1,"offset":7255},"end":{"line":250,"column":14,"offset":7268},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The thing that makes a function.\nA thing that creates and can call a function without having to be named.\n","position":{"start":{"line":252,"column":1,"offset":7270},"end":{"line":254,"column":1,"offset":7376},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":254,"column":1,"offset":7376},"end":{"line":254,"column":5,"offset":7380},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":254,"column":5,"offset":7380},"end":{"line":255,"column":1,"offset":7381},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":255,"column":1,"offset":7381},"end":{"line":255,"column":5,"offset":7385},"indent":[]}},{"type":"text","value":"\nPRED: short for predicate, predicate is a function whose range is a boolean (true or false).\nEvery procedure has a lambda hidden inside of it.","position":{"start":{"line":255,"column":5,"offset":7385},"end":{"line":257,"column":50,"offset":7528},"indent":[1,1]}}],"position":{"start":{"line":252,"column":1,"offset":7270},"end":{"line":257,"column":50,"offset":7528},"indent":[1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":259,"column":7,"offset":7536},"end":{"line":259,"column":10,"offset":7539},"indent":[]}}],"position":{"start":{"line":259,"column":1,"offset":7530},"end":{"line":259,"column":10,"offset":7539},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using lambdas for control using procedures as data.\nKeep decides whether to keep data or not.","position":{"start":{"line":261,"column":1,"offset":7541},"end":{"line":262,"column":42,"offset":7634},"indent":[1]}}],"position":{"start":{"line":261,"column":1,"offset":7541},"end":{"line":262,"column":42,"offset":7634},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"first class datatype","position":{"start":{"line":264,"column":7,"offset":7642},"end":{"line":264,"column":27,"offset":7662},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":7636},"end":{"line":264,"column":27,"offset":7662},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Rule of Thumb:\n","position":{"start":{"line":266,"column":1,"offset":7664},"end":{"line":267,"column":1,"offset":7679},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":267,"column":1,"offset":7679},"end":{"line":267,"column":5,"offset":7683},"indent":[]}},{"type":"text","value":"\nThey can be stored as a variable.\n","position":{"start":{"line":267,"column":5,"offset":7683},"end":{"line":269,"column":1,"offset":7718},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":269,"column":1,"offset":7718},"end":{"line":269,"column":5,"offset":7722},"indent":[]}},{"type":"text","value":"\nThey can be stored inside a data type like a list.\n","position":{"start":{"line":269,"column":5,"offset":7722},"end":{"line":271,"column":1,"offset":7774},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":271,"column":1,"offset":7774},"end":{"line":271,"column":5,"offset":7778},"indent":[]}},{"type":"text","value":"\nYou can return function to make other functions.\n","position":{"start":{"line":271,"column":5,"offset":7778},"end":{"line":273,"column":1,"offset":7828},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":273,"column":1,"offset":7828},"end":{"line":273,"column":5,"offset":7832},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":273,"column":5,"offset":7832},"end":{"line":274,"column":1,"offset":7833},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(let bindings body)</code>","position":{"start":{"line":274,"column":1,"offset":7833},"end":{"line":274,"column":22,"offset":7854},"indent":[]}},{"type":"text","value":"\nBinding is a name: value expression.","position":{"start":{"line":274,"column":22,"offset":7854},"end":{"line":275,"column":37,"offset":7891},"indent":[1]}},{"type":"break","position":{"start":{"line":275,"column":37,"offset":7891},"end":{"line":276,"column":1,"offset":7894},"indent":[1]}},{"type":"text","value":"Bindings can’t reference eachother during declaration because of applicative order.\n","position":{"start":{"line":276,"column":1,"offset":7894},"end":{"line":277,"column":1,"offset":7978},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":277,"column":1,"offset":7978},"end":{"line":277,"column":5,"offset":7982},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":277,"column":5,"offset":7982},"end":{"line":278,"column":1,"offset":7983},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">let*</code>","position":{"start":{"line":278,"column":1,"offset":7983},"end":{"line":278,"column":7,"offset":7989},"indent":[]}},{"type":"text","value":" allows you to reference other bindings during declaration by nesting the ","position":{"start":{"line":278,"column":7,"offset":7989},"end":{"line":278,"column":81,"offset":8063},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">let</code>","position":{"start":{"line":278,"column":81,"offset":8063},"end":{"line":278,"column":86,"offset":8068},"indent":[]}},{"type":"text","value":"s.\n","position":{"start":{"line":278,"column":86,"offset":8068},"end":{"line":279,"column":1,"offset":8071},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":279,"column":1,"offset":8071},"end":{"line":279,"column":5,"offset":8075},"indent":[]}},{"type":"text","value":"\nWant to keep as many variables local as possible.","position":{"start":{"line":279,"column":5,"offset":8075},"end":{"line":280,"column":50,"offset":8125},"indent":[1]}}],"position":{"start":{"line":266,"column":1,"offset":7664},"end":{"line":280,"column":50,"offset":8125},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":282,"column":6,"offset":8132},"end":{"line":282,"column":10,"offset":8136},"indent":[]}}],"position":{"start":{"line":282,"column":1,"offset":8127},"end":{"line":282,"column":10,"offset":8136},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":284,"column":7,"offset":8144},"end":{"line":284,"column":13,"offset":8150},"indent":[]}}],"position":{"start":{"line":284,"column":1,"offset":8138},"end":{"line":284,"column":13,"offset":8150},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":286,"column":1,"offset":8152},"end":{"line":286,"column":49,"offset":8200},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":286,"column":49,"offset":8200},"end":{"line":286,"column":57,"offset":8208},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":286,"column":57,"offset":8208},"end":{"line":286,"column":133,"offset":8284},"indent":[]}}],"position":{"start":{"line":286,"column":1,"offset":8152},"end":{"line":286,"column":133,"offset":8284},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":288,"column":1,"offset":8286},"end":{"line":298,"column":4,"offset":8481},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":300,"column":1,"offset":8483},"end":{"line":300,"column":5,"offset":8487},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":302,"column":1,"offset":8489},"end":{"line":303,"column":1,"offset":8571},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":303,"column":1,"offset":8571},"end":{"line":303,"column":5,"offset":8575},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":303,"column":5,"offset":8575},"end":{"line":304,"column":1,"offset":8576},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":304,"column":1,"offset":8576},"end":{"line":304,"column":5,"offset":8580},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":304,"column":5,"offset":8580},"end":{"line":305,"column":26,"offset":8606},"indent":[1]}}],"position":{"start":{"line":302,"column":1,"offset":8489},"end":{"line":305,"column":26,"offset":8606},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":307,"column":1,"offset":8608},"end":{"line":310,"column":4,"offset":8734},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution:","position":{"start":{"line":312,"column":1,"offset":8736},"end":{"line":312,"column":13,"offset":8748},"indent":[]}}],"position":{"start":{"line":312,"column":1,"offset":8736},"end":{"line":312,"column":13,"offset":8748},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":314,"column":1,"offset":8750},"end":{"line":327,"column":4,"offset":9032},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":329,"column":1,"offset":9034},"end":{"line":330,"column":5,"offset":9043},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":332,"column":7,"offset":9051},"end":{"line":332,"column":13,"offset":9057},"indent":[]}}],"position":{"start":{"line":332,"column":1,"offset":9045},"end":{"line":332,"column":13,"offset":9057},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Solution for #3 on lab:\n","position":{"start":{"line":334,"column":1,"offset":9059},"end":{"line":335,"column":1,"offset":9083},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":335,"column":1,"offset":9083},"end":{"line":335,"column":5,"offset":9087},"indent":[]}}],"position":{"start":{"line":334,"column":1,"offset":9059},"end":{"line":335,"column":5,"offset":9087},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (substitute sent old new)\n    (if (equal? sent &#39;())\n        &#39;()\n        (se (replace (first sent) old new) (substitute (bf sent) old new))))\n\n(define (replace wd old new)\n    (if (equal? wd old)\n        new\n        wd)\n)</code></pre></div>","position":{"start":{"line":337,"column":1,"offset":9089},"end":{"line":348,"column":4,"offset":9325},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":350,"column":1,"offset":9327},"end":{"line":351,"column":5,"offset":9336},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Note to self, don’t copy and paste function calls to check if your code is right because there might be special characters in there :P.\n","position":{"start":{"line":353,"column":1,"offset":9338},"end":{"line":354,"column":1,"offset":9474},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":354,"column":1,"offset":9474},"end":{"line":354,"column":5,"offset":9478},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":354,"column":5,"offset":9478},"end":{"line":355,"column":1,"offset":9479},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":355,"column":1,"offset":9479},"end":{"line":355,"column":5,"offset":9483},"indent":[]}},{"type":"text","value":"\nThe replace function here takes in the current word and checks to see if the word should be replaced, then it returns what the word should be.\nSubstitute is a recursive function that iterates the sentence and returns the sentence with the replacements.","position":{"start":{"line":355,"column":5,"offset":9483},"end":{"line":357,"column":110,"offset":9736},"indent":[1,1]}}],"position":{"start":{"line":353,"column":1,"offset":9338},"end":{"line":357,"column":110,"offset":9736},"indent":[1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":359,"column":6,"offset":9743},"end":{"line":359,"column":14,"offset":9751},"indent":[]}}],"position":{"start":{"line":359,"column":1,"offset":9738},"end":{"line":359,"column":14,"offset":9751},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":361,"column":7,"offset":9759},"end":{"line":361,"column":38,"offset":9790},"indent":[]}}],"position":{"start":{"line":361,"column":1,"offset":9753},"end":{"line":361,"column":38,"offset":9790},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":363,"column":1,"offset":9792},"end":{"line":364,"column":1,"offset":9900},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":364,"column":1,"offset":9900},"end":{"line":364,"column":5,"offset":9904},"indent":[]}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":364,"column":5,"offset":9904},"end":{"line":366,"column":1,"offset":9965},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":366,"column":1,"offset":9965},"end":{"line":366,"column":5,"offset":9969},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":366,"column":5,"offset":9969},"end":{"line":367,"column":1,"offset":9970},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":367,"column":1,"offset":9970},"end":{"line":367,"column":5,"offset":9974},"indent":[]}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":367,"column":5,"offset":9974},"end":{"line":369,"column":1,"offset":10037},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":369,"column":1,"offset":10037},"end":{"line":369,"column":5,"offset":10041},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":369,"column":5,"offset":10041},"end":{"line":370,"column":1,"offset":10042},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":370,"column":1,"offset":10042},"end":{"line":370,"column":5,"offset":10046},"indent":[]}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":370,"column":5,"offset":10046},"end":{"line":372,"column":1,"offset":10123},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":372,"column":1,"offset":10123},"end":{"line":372,"column":5,"offset":10127},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":372,"column":5,"offset":10127},"end":{"line":373,"column":1,"offset":10128},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":373,"column":1,"offset":10128},"end":{"line":373,"column":5,"offset":10132},"indent":[]}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":373,"column":5,"offset":10132},"end":{"line":375,"column":1,"offset":10170},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":375,"column":1,"offset":10170},"end":{"line":375,"column":5,"offset":10174},"indent":[]}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":375,"column":5,"offset":10174},"end":{"line":376,"column":14,"offset":10188},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":376,"column":14,"offset":10188},"end":{"line":376,"column":27,"offset":10201},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":376,"column":27,"offset":10201},"end":{"line":377,"column":1,"offset":10202},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":377,"column":1,"offset":10202},"end":{"line":377,"column":5,"offset":10206},"indent":[]}},{"type":"text","value":"\noperator: ","position":{"start":{"line":377,"column":5,"offset":10206},"end":{"line":378,"column":11,"offset":10217},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":378,"column":11,"offset":10217},"end":{"line":378,"column":14,"offset":10220},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":378,"column":14,"offset":10220},"end":{"line":379,"column":1,"offset":10221},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":379,"column":1,"offset":10221},"end":{"line":379,"column":5,"offset":10225},"indent":[]}},{"type":"text","value":"\noperands: ","position":{"start":{"line":379,"column":5,"offset":10225},"end":{"line":380,"column":11,"offset":10236},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":380,"column":11,"offset":10236},"end":{"line":380,"column":16,"offset":10241},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":380,"column":16,"offset":10241},"end":{"line":380,"column":17,"offset":10242},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":380,"column":17,"offset":10242},"end":{"line":380,"column":22,"offset":10247},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":380,"column":22,"offset":10247},"end":{"line":381,"column":1,"offset":10248},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":381,"column":1,"offset":10248},"end":{"line":381,"column":5,"offset":10252},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":381,"column":5,"offset":10252},"end":{"line":382,"column":1,"offset":10253},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":382,"column":1,"offset":10253},"end":{"line":382,"column":5,"offset":10257},"indent":[]}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":382,"column":5,"offset":10257},"end":{"line":384,"column":1,"offset":10384},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":384,"column":1,"offset":10384},"end":{"line":384,"column":5,"offset":10388},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":384,"column":5,"offset":10388},"end":{"line":385,"column":1,"offset":10389},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":385,"column":1,"offset":10389},"end":{"line":385,"column":5,"offset":10393},"indent":[]}},{"type":"text","value":"\nEnvironment: The name-object pairs the interpreter keeps in memory.\n","position":{"start":{"line":385,"column":5,"offset":10393},"end":{"line":387,"column":1,"offset":10462},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":387,"column":1,"offset":10462},"end":{"line":387,"column":5,"offset":10466},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":387,"column":5,"offset":10466},"end":{"line":388,"column":1,"offset":10467},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":388,"column":1,"offset":10467},"end":{"line":388,"column":5,"offset":10471},"indent":[]}}],"position":{"start":{"line":363,"column":1,"offset":9792},"end":{"line":388,"column":5,"offset":10471},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Compound Procedures can be used to build on top of other Compound Procedures:\n","position":{"start":{"line":390,"column":1,"offset":10473},"end":{"line":391,"column":1,"offset":10551},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":391,"column":1,"offset":10551},"end":{"line":391,"column":5,"offset":10555},"indent":[]}}],"position":{"start":{"line":390,"column":1,"offset":10473},"end":{"line":391,"column":5,"offset":10555},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (sum-of-squares x y)\n(+ (square x) (square y))</code></pre></div>","position":{"start":{"line":393,"column":1,"offset":10557},"end":{"line":396,"column":4,"offset":10619},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":398,"column":1,"offset":10621},"end":{"line":398,"column":5,"offset":10625},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Compound Procedure: procedure that you make out of other procedures.","position":{"start":{"line":400,"column":1,"offset":10627},"end":{"line":400,"column":69,"offset":10695},"indent":[]}}],"position":{"start":{"line":400,"column":1,"offset":10627},"end":{"line":400,"column":69,"offset":10695},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Primitive Procedure: procedure built into the language ex: ","position":{"start":{"line":402,"column":1,"offset":10697},"end":{"line":402,"column":60,"offset":10756},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":402,"column":60,"offset":10756},"end":{"line":402,"column":63,"offset":10759},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":402,"column":63,"offset":10759},"end":{"line":403,"column":1,"offset":10760},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":403,"column":1,"offset":10760},"end":{"line":403,"column":5,"offset":10764},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":403,"column":5,"offset":10764},"end":{"line":404,"column":1,"offset":10765},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":404,"column":1,"offset":10765},"end":{"line":404,"column":5,"offset":10769},"indent":[]}},{"type":"text","value":"\nBoth are used exactly the same.\n","position":{"start":{"line":404,"column":5,"offset":10769},"end":{"line":406,"column":1,"offset":10802},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":406,"column":1,"offset":10802},"end":{"line":406,"column":5,"offset":10806},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":406,"column":5,"offset":10806},"end":{"line":407,"column":1,"offset":10807},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":407,"column":1,"offset":10807},"end":{"line":407,"column":5,"offset":10811},"indent":[]}},{"type":"text","value":"\nWhen writing programs it is important to write modular code that doesn’t care how the other things are computed, only what is computed. This is known as a Black-Box abstraction.\n","position":{"start":{"line":407,"column":5,"offset":10811},"end":{"line":409,"column":1,"offset":10990},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":409,"column":1,"offset":10990},"end":{"line":409,"column":5,"offset":10994},"indent":[]}}],"position":{"start":{"line":402,"column":1,"offset":10697},"end":{"line":409,"column":5,"offset":10994},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Lisp allows for block structure so you can nest a define in another define, and only the parent will have access to the nested define.\n","position":{"start":{"line":411,"column":1,"offset":10996},"end":{"line":412,"column":1,"offset":11131},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":412,"column":1,"offset":11131},"end":{"line":412,"column":5,"offset":11135},"indent":[]}},{"type":"text","value":"\nLisp also allows the sub define functions to have access to parameters in the parents scope. This is called lexical scoping.\n","position":{"start":{"line":412,"column":5,"offset":11135},"end":{"line":414,"column":1,"offset":11261},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":414,"column":1,"offset":11261},"end":{"line":414,"column":5,"offset":11265},"indent":[]}}],"position":{"start":{"line":411,"column":1,"offset":10996},"end":{"line":414,"column":5,"offset":11265},"indent":[1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2 Procedures and the processes they generate","position":{"start":{"line":416,"column":7,"offset":11273},"end":{"line":416,"column":53,"offset":11319},"indent":[]}}],"position":{"start":{"line":416,"column":1,"offset":11267},"end":{"line":416,"column":53,"offset":11319},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Linear Recursion vs linear interative","position":{"start":{"line":418,"column":8,"offset":11328},"end":{"line":418,"column":45,"offset":11365},"indent":[]}}],"position":{"start":{"line":418,"column":1,"offset":11321},"end":{"line":418,"column":45,"offset":11365},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursive calls itself, interative uses a helper iterator function to loop through the possibilities.\n","position":{"start":{"line":420,"column":1,"offset":11367},"end":{"line":421,"column":1,"offset":11469},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":421,"column":1,"offset":11469},"end":{"line":421,"column":5,"offset":11473},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":421,"column":5,"offset":11473},"end":{"line":422,"column":1,"offset":11474},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":422,"column":1,"offset":11474},"end":{"line":422,"column":5,"offset":11478},"indent":[]}},{"type":"text","value":"\nTail-recursive: an iterative process in constant space.\n","position":{"start":{"line":422,"column":5,"offset":11478},"end":{"line":424,"column":1,"offset":11535},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":424,"column":1,"offset":11535},"end":{"line":424,"column":5,"offset":11539},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":424,"column":5,"offset":11539},"end":{"line":425,"column":1,"offset":11540},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":425,"column":1,"offset":11540},"end":{"line":425,"column":5,"offset":11544},"indent":[]}},{"type":"text","value":"\nTree-recursive: think fibonacci where it uses recursion multiple times.\nTree recursive procedures are easy to identify, but not very efficient. It is possible one day a “smart compiler” could find these procedures and make them efficient.","position":{"start":{"line":425,"column":5,"offset":11544},"end":{"line":427,"column":167,"offset":11783},"indent":[1,1]}}],"position":{"start":{"line":420,"column":1,"offset":11367},"end":{"line":427,"column":167,"offset":11783},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3 Formulating Abstractions with Higher Order Procedures","position":{"start":{"line":429,"column":7,"offset":11791},"end":{"line":429,"column":64,"offset":11848},"indent":[]}}],"position":{"start":{"line":429,"column":1,"offset":11785},"end":{"line":429,"column":64,"offset":11848},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Sigma Notation: The sum of numbers between A and B.\nThis can be abstracted to create a procedure that handles all needs for doing a procedure to calculate a sum.\n","position":{"start":{"line":431,"column":1,"offset":11850},"end":{"line":433,"column":1,"offset":12012},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":433,"column":1,"offset":12012},"end":{"line":433,"column":5,"offset":12016},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":433,"column":5,"offset":12016},"end":{"line":434,"column":1,"offset":12017},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":434,"column":1,"offset":12017},"end":{"line":434,"column":5,"offset":12021},"indent":[]}},{"type":"text","value":"\nArguments for a Summation function:\n","position":{"start":{"line":434,"column":5,"offset":12021},"end":{"line":436,"column":1,"offset":12058},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":436,"column":1,"offset":12058},"end":{"line":436,"column":5,"offset":12062},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":436,"column":5,"offset":12062},"end":{"line":437,"column":1,"offset":12063},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":437,"column":1,"offset":12063},"end":{"line":437,"column":5,"offset":12067},"indent":[]}},{"type":"text","value":"\nTerm: Procedure for the sum.\n","position":{"start":{"line":437,"column":5,"offset":12067},"end":{"line":439,"column":1,"offset":12097},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":439,"column":1,"offset":12097},"end":{"line":439,"column":5,"offset":12101},"indent":[]}},{"type":"text","value":"\na: start point\n","position":{"start":{"line":439,"column":5,"offset":12101},"end":{"line":441,"column":1,"offset":12117},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":441,"column":1,"offset":12117},"end":{"line":441,"column":5,"offset":12121},"indent":[]}},{"type":"text","value":"\nb: end point\n","position":{"start":{"line":441,"column":5,"offset":12121},"end":{"line":443,"column":1,"offset":12135},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":443,"column":1,"offset":12135},"end":{"line":443,"column":5,"offset":12139},"indent":[]}},{"type":"text","value":"\nnext: The increment function ex: + 1 + 2 + 3\n","position":{"start":{"line":443,"column":5,"offset":12139},"end":{"line":445,"column":1,"offset":12185},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":445,"column":1,"offset":12185},"end":{"line":445,"column":5,"offset":12189},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":445,"column":5,"offset":12189},"end":{"line":446,"column":1,"offset":12190},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":446,"column":1,"offset":12190},"end":{"line":446,"column":5,"offset":12194},"indent":[]}}],"position":{"start":{"line":431,"column":1,"offset":11850},"end":{"line":446,"column":5,"offset":12194},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can use binary search like logic to find points within a function. By splitting the length repeatedly then checking accuracy you can continually get closer to the point you are looking for in the function. The calculated runtime for these functions are:\n","position":{"start":{"line":448,"column":1,"offset":12196},"end":{"line":449,"column":1,"offset":12454},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":449,"column":1,"offset":12454},"end":{"line":449,"column":5,"offset":12458},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":449,"column":5,"offset":12458},"end":{"line":450,"column":1,"offset":12459},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":450,"column":1,"offset":12459},"end":{"line":450,"column":5,"offset":12463},"indent":[]}}],"position":{"start":{"line":448,"column":1,"offset":12196},"end":{"line":450,"column":5,"offset":12463},"indent":[1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">L = length of the functions start to end points\nT = tolerance, the distance from the given point that will return a result\nruntime:\nlog(L/T)</code></pre></div>","position":{"start":{"line":452,"column":1,"offset":12465},"end":{"line":457,"column":4,"offset":12613},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Think of L/T as the possibilties between the two points.","position":{"start":{"line":459,"column":1,"offset":12615},"end":{"line":459,"column":57,"offset":12671},"indent":[]}}],"position":{"start":{"line":459,"column":1,"offset":12615},"end":{"line":459,"column":57,"offset":12671},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":460,"column":1,"offset":12672}}}}