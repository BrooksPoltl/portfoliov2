{"expireTime":9007200842251387000,"key":"transformer-remark-markdown-html-ast-e7af7be527398933ed597b41d0d25eac-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833}}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847}}},{"type":"raw","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860}}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865}}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879}}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884}}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895}}},{"type":"raw","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900}}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901}}},{"type":"raw","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906}}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911}}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912}}},{"type":"raw","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916}}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043}}},{"type":"raw","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047}}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048}}},{"type":"raw","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052}}},{"type":"text","value":"\nEnvironment: The name-object pairs the interpreter keeps in memory.\n","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":34,"column":1,"offset":1121}}},{"type":"raw","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1121},"end":{"line":34,"column":5,"offset":1125}}},{"type":"text","value":"\n","position":{"start":{"line":34,"column":5,"offset":1125},"end":{"line":35,"column":1,"offset":1126}}},{"type":"raw","value":"<br>","position":{"start":{"line":35,"column":1,"offset":1126},"end":{"line":35,"column":5,"offset":1130}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":35,"column":5,"offset":1130}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Compound Procedures can be used to build on top of other Compound Procedures:\n","position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":1,"offset":1210}}},{"type":"raw","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1210},"end":{"line":38,"column":5,"offset":1214}}}],"position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":5,"offset":1214}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (sum-of-squares x y)\n(+ (square x) (square y))</code></pre></div>","position":{"start":{"line":39,"column":1,"offset":1215},"end":{"line":42,"column":4,"offset":1277}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":43,"column":1,"offset":1278},"end":{"line":43,"column":5,"offset":1282}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Compound Procedure: procedure that you make out of other procedures.","position":{"start":{"line":45,"column":1,"offset":1284},"end":{"line":45,"column":69,"offset":1352}}}],"position":{"start":{"line":45,"column":1,"offset":1284},"end":{"line":45,"column":69,"offset":1352}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Primitive Procedure: procedure built into the language ex: ","position":{"start":{"line":47,"column":1,"offset":1354},"end":{"line":47,"column":60,"offset":1413}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":47,"column":60,"offset":1413},"end":{"line":47,"column":63,"offset":1416}}}],"position":{"start":{"line":47,"column":1,"offset":1354},"end":{"line":47,"column":63,"offset":1416}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":49,"column":1,"offset":1418},"end":{"line":49,"column":5,"offset":1422}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":51,"column":7,"offset":1430},"end":{"line":51,"column":10,"offset":1433}}}],"position":{"start":{"line":51,"column":1,"offset":1424},"end":{"line":51,"column":10,"offset":1433}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":52,"column":7,"offset":1440},"end":{"line":52,"column":10,"offset":1443}}}],"position":{"start":{"line":52,"column":1,"offset":1434},"end":{"line":52,"column":10,"offset":1443}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":54,"column":6,"offset":1450},"end":{"line":54,"column":14,"offset":1458}}}],"position":{"start":{"line":54,"column":1,"offset":1445},"end":{"line":54,"column":14,"offset":1458}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":55,"column":7,"offset":1465},"end":{"line":55,"column":10,"offset":1468}}}],"position":{"start":{"line":55,"column":1,"offset":1459},"end":{"line":55,"column":10,"offset":1468}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":57,"column":8,"offset":1477},"end":{"line":57,"column":30,"offset":1499}}}],"position":{"start":{"line":57,"column":1,"offset":1470},"end":{"line":57,"column":30,"offset":1499}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":59,"column":1,"offset":1501},"end":{"line":60,"column":1,"offset":1645}}},{"type":"raw","value":"<br>","position":{"start":{"line":60,"column":1,"offset":1645},"end":{"line":60,"column":5,"offset":1649}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":60,"column":5,"offset":1649},"end":{"line":60,"column":16,"offset":1660}}},{"type":"raw","value":"<br>","position":{"start":{"line":60,"column":16,"offset":1660},"end":{"line":60,"column":20,"offset":1664}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":60,"column":20,"offset":1664},"end":{"line":62,"column":1,"offset":1808}}},{"type":"raw","value":"<br>","position":{"start":{"line":62,"column":1,"offset":1808},"end":{"line":62,"column":5,"offset":1812}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":62,"column":5,"offset":1812},"end":{"line":62,"column":16,"offset":1823}}},{"type":"raw","value":"<br>","position":{"start":{"line":62,"column":16,"offset":1823},"end":{"line":62,"column":20,"offset":1827}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":62,"column":20,"offset":1827},"end":{"line":63,"column":45,"offset":1872}}},{"type":"raw","value":"<br>","position":{"start":{"line":63,"column":45,"offset":1872},"end":{"line":63,"column":49,"offset":1876}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":63,"column":49,"offset":1876},"end":{"line":63,"column":65,"offset":1892}}},{"type":"raw","value":"<br>","position":{"start":{"line":63,"column":65,"offset":1892},"end":{"line":63,"column":69,"offset":1896}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":63,"column":69,"offset":1896},"end":{"line":65,"column":1,"offset":1939}}},{"type":"raw","value":"<br>","position":{"start":{"line":65,"column":1,"offset":1939},"end":{"line":65,"column":5,"offset":1943}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":65,"column":5,"offset":1943},"end":{"line":65,"column":22,"offset":1960}}},{"type":"raw","value":"<br>","position":{"start":{"line":65,"column":22,"offset":1960},"end":{"line":65,"column":26,"offset":1964}}},{"type":"text","value":"\n","position":{"start":{"line":65,"column":26,"offset":1964},"end":{"line":66,"column":1,"offset":1965}}},{"type":"raw","value":"<br>","position":{"start":{"line":66,"column":1,"offset":1965},"end":{"line":66,"column":5,"offset":1969}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":66,"column":5,"offset":1969},"end":{"line":68,"column":1,"offset":2087}}},{"type":"raw","value":"<br>","position":{"start":{"line":68,"column":1,"offset":2087},"end":{"line":68,"column":5,"offset":2091}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":68,"column":5,"offset":2091},"end":{"line":70,"column":1,"offset":2212}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":70,"column":1,"offset":2212},"end":{"line":70,"column":12,"offset":2223}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":70,"column":12,"offset":2223},"end":{"line":70,"column":68,"offset":2279}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":70,"column":68,"offset":2279},"end":{"line":70,"column":79,"offset":2290}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":70,"column":79,"offset":2290},"end":{"line":70,"column":106,"offset":2317}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":70,"column":106,"offset":2317},"end":{"line":70,"column":109,"offset":2320}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":70,"column":109,"offset":2320},"end":{"line":70,"column":189,"offset":2400}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":70,"column":189,"offset":2400},"end":{"line":70,"column":192,"offset":2403}}},{"type":"text","value":" to get 3.","position":{"start":{"line":70,"column":192,"offset":2403},"end":{"line":70,"column":202,"offset":2413}}}],"position":{"start":{"line":59,"column":1,"offset":1501},"end":{"line":70,"column":202,"offset":2413}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":72,"column":8,"offset":2422},"end":{"line":72,"column":14,"offset":2428}}}],"position":{"start":{"line":72,"column":1,"offset":2415},"end":{"line":72,"column":14,"offset":2428}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":73,"column":1,"offset":2429},"end":{"line":73,"column":9,"offset":2437}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":73,"column":9,"offset":2437},"end":{"line":73,"column":73,"offset":2501}}}],"position":{"start":{"line":73,"column":1,"offset":2429},"end":{"line":73,"column":73,"offset":2501}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":74,"column":1,"offset":2502},"end":{"line":77,"column":4,"offset":2541}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2542},"end":{"line":78,"column":5,"offset":2546}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":80,"column":1,"offset":2548},"end":{"line":80,"column":72,"offset":2619}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":80,"column":72,"offset":2619},"end":{"line":80,"column":80,"offset":2627}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":80,"column":80,"offset":2627},"end":{"line":81,"column":1,"offset":2651}}},{"type":"raw","value":"<br>","position":{"start":{"line":81,"column":1,"offset":2651},"end":{"line":81,"column":5,"offset":2655}}},{"type":"text","value":"\n","position":{"start":{"line":81,"column":5,"offset":2655},"end":{"line":82,"column":1,"offset":2656}}},{"type":"raw","value":"<br>","position":{"start":{"line":82,"column":1,"offset":2656},"end":{"line":82,"column":5,"offset":2660}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":82,"column":5,"offset":2660},"end":{"line":83,"column":184,"offset":2844}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":83,"column":184,"offset":2844},"end":{"line":83,"column":187,"offset":2847}}},{"type":"text","value":".\n","position":{"start":{"line":83,"column":187,"offset":2847},"end":{"line":84,"column":1,"offset":2850}}},{"type":"raw","value":"<br>","position":{"start":{"line":84,"column":1,"offset":2850},"end":{"line":84,"column":5,"offset":2854}}},{"type":"text","value":"\n","position":{"start":{"line":84,"column":5,"offset":2854},"end":{"line":85,"column":1,"offset":2855}}},{"type":"raw","value":"<br>","position":{"start":{"line":85,"column":1,"offset":2855},"end":{"line":85,"column":5,"offset":2859}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":85,"column":5,"offset":2859},"end":{"line":86,"column":27,"offset":2886}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":86,"column":27,"offset":2886},"end":{"line":86,"column":35,"offset":2894}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":86,"column":35,"offset":2894},"end":{"line":86,"column":86,"offset":2945}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":86,"column":86,"offset":2945},"end":{"line":86,"column":95,"offset":2954}}},{"type":"text","value":". ","position":{"start":{"line":86,"column":95,"offset":2954},"end":{"line":86,"column":97,"offset":2956}}}],"position":{"start":{"line":80,"column":1,"offset":2548},"end":{"line":86,"column":97,"offset":2956}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":88,"column":1,"offset":2958},"end":{"line":88,"column":6,"offset":2963}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":90,"column":1,"offset":2965},"end":{"line":91,"column":1,"offset":3009}}},{"type":"raw","value":"<br>","position":{"start":{"line":91,"column":1,"offset":3009},"end":{"line":91,"column":5,"offset":3013}}},{"type":"text","value":"\n","position":{"start":{"line":91,"column":5,"offset":3013},"end":{"line":92,"column":1,"offset":3014}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":92,"column":1,"offset":3014},"end":{"line":92,"column":22,"offset":3035}}},{"type":"text","value":"\n","position":{"start":{"line":92,"column":22,"offset":3035},"end":{"line":93,"column":1,"offset":3036}}},{"type":"raw","value":"<br>","position":{"start":{"line":93,"column":1,"offset":3036},"end":{"line":93,"column":5,"offset":3040}}}],"position":{"start":{"line":90,"column":1,"offset":2965},"end":{"line":93,"column":5,"offset":3040}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":95,"column":1,"offset":3042},"end":{"line":95,"column":152,"offset":3193}}}],"position":{"start":{"line":95,"column":1,"offset":3042},"end":{"line":95,"column":152,"offset":3193}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":97,"column":8,"offset":3202},"end":{"line":97,"column":20,"offset":3214}}}],"position":{"start":{"line":97,"column":1,"offset":3195},"end":{"line":97,"column":20,"offset":3214}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":99,"column":1,"offset":3216},"end":{"line":99,"column":56,"offset":3271}}}],"position":{"start":{"line":99,"column":1,"offset":3216},"end":{"line":99,"column":56,"offset":3271}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":100,"column":1,"offset":3272},"end":{"line":105,"column":4,"offset":3363}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":106,"column":1,"offset":3364},"end":{"line":106,"column":5,"offset":3368}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":108,"column":1,"offset":3370},"end":{"line":108,"column":37,"offset":3406}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":108,"column":37,"offset":3406},"end":{"line":108,"column":41,"offset":3410}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":108,"column":41,"offset":3410},"end":{"line":109,"column":1,"offset":3427}}},{"type":"raw","value":"<br>","position":{"start":{"line":109,"column":1,"offset":3427},"end":{"line":109,"column":5,"offset":3431}}},{"type":"text","value":"\n","position":{"start":{"line":109,"column":5,"offset":3431},"end":{"line":110,"column":1,"offset":3432}}},{"type":"raw","value":"<br>","position":{"start":{"line":110,"column":1,"offset":3432},"end":{"line":110,"column":5,"offset":3436}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":110,"column":5,"offset":3436},"end":{"line":111,"column":66,"offset":3502}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":111,"column":66,"offset":3502},"end":{"line":111,"column":89,"offset":3525}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":111,"column":89,"offset":3525},"end":{"line":112,"column":1,"offset":3565}}},{"type":"raw","value":"<br>","position":{"start":{"line":112,"column":1,"offset":3565},"end":{"line":112,"column":5,"offset":3569}}},{"type":"text","value":"\n","position":{"start":{"line":112,"column":5,"offset":3569},"end":{"line":113,"column":1,"offset":3570}}},{"type":"raw","value":"<br>","position":{"start":{"line":113,"column":1,"offset":3570},"end":{"line":113,"column":5,"offset":3574}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":113,"column":5,"offset":3574},"end":{"line":114,"column":21,"offset":3595}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":114,"column":21,"offset":3595},"end":{"line":114,"column":25,"offset":3599}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":114,"column":25,"offset":3599},"end":{"line":115,"column":1,"offset":3653}}},{"type":"raw","value":"<br>","position":{"start":{"line":115,"column":1,"offset":3653},"end":{"line":115,"column":5,"offset":3657}}},{"type":"text","value":"\n","position":{"start":{"line":115,"column":5,"offset":3657},"end":{"line":116,"column":1,"offset":3658}}},{"type":"raw","value":"<br>","position":{"start":{"line":116,"column":1,"offset":3658},"end":{"line":116,"column":5,"offset":3662}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":116,"column":5,"offset":3662},"end":{"line":117,"column":21,"offset":3683}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":117,"column":21,"offset":3683},"end":{"line":117,"column":25,"offset":3687}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":117,"column":25,"offset":3687},"end":{"line":118,"column":1,"offset":3742}}},{"type":"raw","value":"<br>","position":{"start":{"line":118,"column":1,"offset":3742},"end":{"line":118,"column":5,"offset":3746}}},{"type":"text","value":"\n","position":{"start":{"line":118,"column":5,"offset":3746},"end":{"line":119,"column":1,"offset":3747}}},{"type":"raw","value":"<br>","position":{"start":{"line":119,"column":1,"offset":3747},"end":{"line":119,"column":5,"offset":3751}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":119,"column":5,"offset":3751},"end":{"line":120,"column":58,"offset":3809}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":120,"column":58,"offset":3809},"end":{"line":120,"column":61,"offset":3812}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":120,"column":61,"offset":3812},"end":{"line":120,"column":145,"offset":3896}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":120,"column":145,"offset":3896},"end":{"line":120,"column":153,"offset":3904}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":120,"column":153,"offset":3904},"end":{"line":120,"column":178,"offset":3929}}}],"position":{"start":{"line":108,"column":1,"offset":3370},"end":{"line":120,"column":178,"offset":3929}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":122,"column":7,"offset":3937},"end":{"line":122,"column":10,"offset":3940}}}],"position":{"start":{"line":122,"column":1,"offset":3931},"end":{"line":122,"column":10,"offset":3940}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":124,"column":8,"offset":3949},"end":{"line":124,"column":17,"offset":3958}}}],"position":{"start":{"line":124,"column":1,"offset":3942},"end":{"line":124,"column":17,"offset":3958}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":125,"column":1,"offset":3959},"end":{"line":136,"column":4,"offset":4158}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":137,"column":1,"offset":4159},"end":{"line":137,"column":5,"offset":4163}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":139,"column":1,"offset":4165},"end":{"line":140,"column":1,"offset":4381}}},{"type":"raw","value":"<br>","position":{"start":{"line":140,"column":1,"offset":4381},"end":{"line":140,"column":5,"offset":4385}}},{"type":"text","value":"\n","position":{"start":{"line":140,"column":5,"offset":4385},"end":{"line":141,"column":1,"offset":4386}}},{"type":"raw","value":"<br>","position":{"start":{"line":141,"column":1,"offset":4386},"end":{"line":141,"column":5,"offset":4390}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":141,"column":5,"offset":4390},"end":{"line":142,"column":72,"offset":4462}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":142,"column":72,"offset":4462},"end":{"line":142,"column":81,"offset":4471}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":142,"column":81,"offset":4471},"end":{"line":143,"column":1,"offset":4490}}},{"type":"raw","value":"<br>","position":{"start":{"line":143,"column":1,"offset":4490},"end":{"line":143,"column":5,"offset":4494}}},{"type":"text","value":"\n","position":{"start":{"line":143,"column":5,"offset":4494},"end":{"line":144,"column":1,"offset":4495}}},{"type":"raw","value":"<br>","position":{"start":{"line":144,"column":1,"offset":4495},"end":{"line":144,"column":5,"offset":4499}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":144,"column":5,"offset":4499},"end":{"line":145,"column":10,"offset":4509}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":145,"column":10,"offset":4509},"end":{"line":145,"column":16,"offset":4515}}},{"type":"text","value":" gets called with ","position":{"start":{"line":145,"column":16,"offset":4515},"end":{"line":145,"column":34,"offset":4533}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":145,"column":34,"offset":4533},"end":{"line":145,"column":42,"offset":4541}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":145,"column":42,"offset":4541},"end":{"line":146,"column":24,"offset":4566}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":146,"column":24,"offset":4566},"end":{"line":146,"column":33,"offset":4575}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":146,"column":33,"offset":4575},"end":{"line":146,"column":107,"offset":4649}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":146,"column":107,"offset":4649},"end":{"line":146,"column":116,"offset":4658}}},{"type":"text","value":" is false because ","position":{"start":{"line":146,"column":116,"offset":4658},"end":{"line":146,"column":134,"offset":4676}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":146,"column":134,"offset":4676},"end":{"line":146,"column":137,"offset":4679}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":146,"column":137,"offset":4679},"end":{"line":146,"column":161,"offset":4703}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":146,"column":161,"offset":4703},"end":{"line":146,"column":167,"offset":4709}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":146,"column":167,"offset":4709},"end":{"line":146,"column":192,"offset":4734}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":146,"column":192,"offset":4734},"end":{"line":146,"column":200,"offset":4742}}},{"type":"text","value":". This is because ","position":{"start":{"line":146,"column":200,"offset":4742},"end":{"line":146,"column":218,"offset":4760}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":146,"column":218,"offset":4760},"end":{"line":146,"column":224,"offset":4766}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":146,"column":224,"offset":4766},"end":{"line":146,"column":245,"offset":4787}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":146,"column":245,"offset":4787},"end":{"line":146,"column":252,"offset":4794}}},{"type":"text","value":" and ","position":{"start":{"line":146,"column":252,"offset":4794},"end":{"line":146,"column":257,"offset":4799}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":146,"column":257,"offset":4799},"end":{"line":146,"column":260,"offset":4802}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":146,"column":260,"offset":4802},"end":{"line":146,"column":285,"offset":4827}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":146,"column":285,"offset":4827},"end":{"line":146,"column":291,"offset":4833}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":146,"column":291,"offset":4833},"end":{"line":147,"column":96,"offset":4959}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":147,"column":96,"offset":4959},"end":{"line":147,"column":111,"offset":4974}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":147,"column":111,"offset":4974},"end":{"line":147,"column":182,"offset":5045}}}],"position":{"start":{"line":139,"column":1,"offset":4165},"end":{"line":147,"column":182,"offset":5045}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":149,"column":8,"offset":5054},"end":{"line":149,"column":19,"offset":5065}}}],"position":{"start":{"line":149,"column":1,"offset":5047},"end":{"line":149,"column":19,"offset":5065}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":150,"column":1,"offset":5066},"end":{"line":150,"column":14,"offset":5079}}}],"position":{"start":{"line":150,"column":1,"offset":5066},"end":{"line":150,"column":14,"offset":5079}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":151,"column":1,"offset":5080},"end":{"line":166,"column":4,"offset":5495}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":167,"column":1,"offset":5496},"end":{"line":167,"column":5,"offset":5500}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":169,"column":1,"offset":5502},"end":{"line":169,"column":141,"offset":5642}}}],"position":{"start":{"line":169,"column":1,"offset":5502},"end":{"line":169,"column":141,"offset":5642}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":171,"column":8,"offset":5651},"end":{"line":171,"column":30,"offset":5673}}}],"position":{"start":{"line":171,"column":1,"offset":5644},"end":{"line":171,"column":30,"offset":5673}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":172,"column":1,"offset":5674},"end":{"line":172,"column":199,"offset":5872}}}],"position":{"start":{"line":172,"column":1,"offset":5674},"end":{"line":172,"column":199,"offset":5872}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":174,"column":8,"offset":5881},"end":{"line":174,"column":30,"offset":5903}}}],"position":{"start":{"line":174,"column":1,"offset":5874},"end":{"line":174,"column":30,"offset":5903}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":176,"column":1,"offset":5905},"end":{"line":177,"column":1,"offset":5980}}},{"type":"raw","value":"<br>","position":{"start":{"line":177,"column":1,"offset":5980},"end":{"line":177,"column":5,"offset":5984}}},{"type":"text","value":"\n","position":{"start":{"line":177,"column":5,"offset":5984},"end":{"line":178,"column":1,"offset":5985}}},{"type":"raw","value":"<br>","position":{"start":{"line":178,"column":1,"offset":5985},"end":{"line":178,"column":5,"offset":5989}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":178,"column":5,"offset":5989},"end":{"line":180,"column":1,"offset":6051}}},{"type":"raw","value":"<br>","position":{"start":{"line":180,"column":1,"offset":6051},"end":{"line":180,"column":5,"offset":6055}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":180,"column":5,"offset":6055},"end":{"line":181,"column":1,"offset":6058}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":181,"column":1,"offset":6058},"end":{"line":181,"column":11,"offset":6068}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":181,"column":11,"offset":6068},"end":{"line":181,"column":19,"offset":6076}}},{"type":"text","value":" and ","position":{"start":{"line":181,"column":19,"offset":6076},"end":{"line":181,"column":24,"offset":6081}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":181,"column":24,"offset":6081},"end":{"line":181,"column":34,"offset":6091}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":181,"column":34,"offset":6091},"end":{"line":182,"column":1,"offset":6140}}},{"type":"raw","value":"<br>","position":{"start":{"line":182,"column":1,"offset":6140},"end":{"line":182,"column":5,"offset":6144}}}],"position":{"start":{"line":176,"column":1,"offset":5905},"end":{"line":182,"column":5,"offset":6144}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":184,"column":8,"offset":6153},"end":{"line":184,"column":12,"offset":6157}}}],"position":{"start":{"line":184,"column":1,"offset":6146},"end":{"line":184,"column":12,"offset":6157}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":185,"column":1,"offset":6158},"end":{"line":190,"column":4,"offset":6269}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":191,"column":1,"offset":6270},"end":{"line":192,"column":5,"offset":6279}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":194,"column":1,"offset":6281},"end":{"line":194,"column":7,"offset":6287}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":194,"column":7,"offset":6287},"end":{"line":196,"column":1,"offset":6369}}},{"type":"raw","value":"<br>","position":{"start":{"line":196,"column":1,"offset":6369},"end":{"line":196,"column":5,"offset":6373}}},{"type":"text","value":"\n","position":{"start":{"line":196,"column":5,"offset":6373},"end":{"line":197,"column":1,"offset":6374}}},{"type":"raw","value":"<br>","position":{"start":{"line":197,"column":1,"offset":6374},"end":{"line":197,"column":5,"offset":6378}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":197,"column":5,"offset":6378},"end":{"line":198,"column":10,"offset":6388}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":198,"column":10,"offset":6388},"end":{"line":198,"column":14,"offset":6392}}},{"type":"text","value":". Since ","position":{"start":{"line":198,"column":14,"offset":6392},"end":{"line":198,"column":22,"offset":6400}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":198,"column":22,"offset":6400},"end":{"line":198,"column":30,"offset":6408}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":198,"column":30,"offset":6408},"end":{"line":198,"column":50,"offset":6428}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":198,"column":50,"offset":6428},"end":{"line":198,"column":53,"offset":6431}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":198,"column":53,"offset":6431},"end":{"line":198,"column":90,"offset":6468}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":198,"column":90,"offset":6468},"end":{"line":198,"column":96,"offset":6474}}},{"type":"text","value":".\n","position":{"start":{"line":198,"column":96,"offset":6474},"end":{"line":199,"column":1,"offset":6477}}},{"type":"raw","value":"<br>","position":{"start":{"line":199,"column":1,"offset":6477},"end":{"line":199,"column":5,"offset":6481}}},{"type":"text","value":"\n","position":{"start":{"line":199,"column":5,"offset":6481},"end":{"line":200,"column":1,"offset":6482}}},{"type":"raw","value":"<br>","position":{"start":{"line":200,"column":1,"offset":6482},"end":{"line":200,"column":5,"offset":6486}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":200,"column":5,"offset":6486},"end":{"line":201,"column":14,"offset":6500}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":201,"column":14,"offset":6500},"end":{"line":201,"column":18,"offset":6504}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":201,"column":18,"offset":6504},"end":{"line":201,"column":90,"offset":6576}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":201,"column":90,"offset":6576},"end":{"line":201,"column":94,"offset":6580}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":201,"column":94,"offset":6580},"end":{"line":201,"column":125,"offset":6611}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":201,"column":125,"offset":6611},"end":{"line":201,"column":131,"offset":6617}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":201,"column":131,"offset":6617},"end":{"line":202,"column":1,"offset":6632}}},{"type":"raw","value":"<br>","position":{"start":{"line":202,"column":1,"offset":6632},"end":{"line":202,"column":5,"offset":6636}}},{"type":"text","value":"\n","position":{"start":{"line":202,"column":5,"offset":6636},"end":{"line":203,"column":1,"offset":6637}}},{"type":"raw","value":"<br>","position":{"start":{"line":203,"column":1,"offset":6637},"end":{"line":203,"column":5,"offset":6641}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":203,"column":5,"offset":6641},"end":{"line":204,"column":14,"offset":6655}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":204,"column":14,"offset":6655},"end":{"line":204,"column":18,"offset":6659}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":204,"column":18,"offset":6659},"end":{"line":204,"column":37,"offset":6678}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":204,"column":37,"offset":6678},"end":{"line":204,"column":40,"offset":6681}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":204,"column":40,"offset":6681},"end":{"line":204,"column":77,"offset":6718}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":204,"column":77,"offset":6718},"end":{"line":204,"column":81,"offset":6722}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":204,"column":81,"offset":6722},"end":{"line":204,"column":99,"offset":6740}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":204,"column":99,"offset":6740},"end":{"line":204,"column":102,"offset":6743}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":204,"column":102,"offset":6743},"end":{"line":204,"column":133,"offset":6774}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":204,"column":133,"offset":6774},"end":{"line":204,"column":139,"offset":6780}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":204,"column":139,"offset":6780},"end":{"line":204,"column":167,"offset":6808}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":204,"column":167,"offset":6808},"end":{"line":204,"column":171,"offset":6812}}},{"type":"text","value":".\n","position":{"start":{"line":204,"column":171,"offset":6812},"end":{"line":205,"column":1,"offset":6814}}},{"type":"raw","value":"<br>","position":{"start":{"line":205,"column":1,"offset":6814},"end":{"line":205,"column":5,"offset":6818}}},{"type":"text","value":"\n","position":{"start":{"line":205,"column":5,"offset":6818},"end":{"line":206,"column":1,"offset":6819}}},{"type":"raw","value":"<br>","position":{"start":{"line":206,"column":1,"offset":6819},"end":{"line":206,"column":5,"offset":6823}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":206,"column":5,"offset":6823},"end":{"line":208,"column":1,"offset":6843}}},{"type":"raw","value":"<br>","position":{"start":{"line":208,"column":1,"offset":6843},"end":{"line":208,"column":5,"offset":6847}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":208,"column":5,"offset":6847},"end":{"line":209,"column":6,"offset":6853}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":209,"column":6,"offset":6853},"end":{"line":209,"column":12,"offset":6859}}},{"type":"text","value":" does not have an ","position":{"start":{"line":209,"column":12,"offset":6859},"end":{"line":209,"column":30,"offset":6877}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":209,"column":30,"offset":6877},"end":{"line":209,"column":36,"offset":6883}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":209,"column":36,"offset":6883},"end":{"line":209,"column":62,"offset":6909}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":209,"column":62,"offset":6909},"end":{"line":209,"column":75,"offset":6922}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":209,"column":75,"offset":6922},"end":{"line":209,"column":159,"offset":7006}}}],"position":{"start":{"line":194,"column":1,"offset":6281},"end":{"line":209,"column":159,"offset":7006}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":211,"column":8,"offset":7015},"end":{"line":211,"column":41,"offset":7048}}}],"position":{"start":{"line":211,"column":1,"offset":7008},"end":{"line":211,"column":41,"offset":7048}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":212,"column":1,"offset":7049},"end":{"line":217,"column":4,"offset":7124}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":218,"column":1,"offset":7125},"end":{"line":219,"column":1,"offset":7144}}},{"type":"raw","value":"<br>","position":{"start":{"line":219,"column":1,"offset":7144},"end":{"line":219,"column":5,"offset":7148}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":219,"column":5,"offset":7148},"end":{"line":221,"column":5,"offset":7286}}},{"type":"raw","value":"<br>","position":{"start":{"line":221,"column":5,"offset":7286},"end":{"line":221,"column":9,"offset":7290}}},{"type":"text","value":"\n","position":{"start":{"line":221,"column":9,"offset":7290},"end":{"line":222,"column":5,"offset":7295}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":222,"column":5,"offset":7295},"end":{"line":222,"column":27,"offset":7317}}},{"type":"text","value":"\n","position":{"start":{"line":222,"column":27,"offset":7317},"end":{"line":223,"column":5,"offset":7322}}},{"type":"raw","value":"<br>","position":{"start":{"line":223,"column":5,"offset":7322},"end":{"line":223,"column":9,"offset":7326}}},{"type":"text","value":"\n","position":{"start":{"line":223,"column":9,"offset":7326},"end":{"line":224,"column":5,"offset":7331}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":224,"column":5,"offset":7331},"end":{"line":224,"column":12,"offset":7338}}},{"type":"text","value":" and ","position":{"start":{"line":224,"column":12,"offset":7338},"end":{"line":224,"column":17,"offset":7343}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":224,"column":17,"offset":7343},"end":{"line":224,"column":25,"offset":7351}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":224,"column":25,"offset":7351},"end":{"line":224,"column":63,"offset":7389}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":224,"column":63,"offset":7389},"end":{"line":224,"column":66,"offset":7392}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":224,"column":66,"offset":7392},"end":{"line":224,"column":86,"offset":7412}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":224,"column":86,"offset":7412},"end":{"line":224,"column":89,"offset":7415}}},{"type":"text","value":" will be called with ","position":{"start":{"line":224,"column":89,"offset":7415},"end":{"line":224,"column":110,"offset":7436}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":224,"column":110,"offset":7436},"end":{"line":224,"column":119,"offset":7445}}},{"type":"text","value":".\n","position":{"start":{"line":224,"column":119,"offset":7445},"end":{"line":225,"column":1,"offset":7447}}},{"type":"raw","value":"<br>","position":{"start":{"line":225,"column":1,"offset":7447},"end":{"line":225,"column":5,"offset":7451}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":225,"column":5,"offset":7451},"end":{"line":227,"column":1,"offset":7467}}},{"type":"raw","value":"<br>","position":{"start":{"line":227,"column":1,"offset":7467},"end":{"line":227,"column":5,"offset":7471}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":227,"column":5,"offset":7471},"end":{"line":229,"column":5,"offset":7578}}},{"type":"raw","value":"<br>","position":{"start":{"line":229,"column":5,"offset":7578},"end":{"line":229,"column":9,"offset":7582}}},{"type":"text","value":"\n","position":{"start":{"line":229,"column":9,"offset":7582},"end":{"line":230,"column":1,"offset":7583}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":230,"column":1,"offset":7583},"end":{"line":230,"column":23,"offset":7605}}},{"type":"text","value":" turns into ","position":{"start":{"line":230,"column":23,"offset":7605},"end":{"line":230,"column":35,"offset":7617}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":230,"column":35,"offset":7617},"end":{"line":230,"column":61,"offset":7643}}},{"type":"text","value":"\n","position":{"start":{"line":230,"column":61,"offset":7643},"end":{"line":231,"column":1,"offset":7644}}},{"type":"raw","value":"<br>","position":{"start":{"line":231,"column":1,"offset":7644},"end":{"line":231,"column":5,"offset":7648}}},{"type":"text","value":"\nNow ","position":{"start":{"line":231,"column":5,"offset":7648},"end":{"line":232,"column":5,"offset":7653}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":232,"column":5,"offset":7653},"end":{"line":232,"column":8,"offset":7656}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":232,"column":8,"offset":7656},"end":{"line":232,"column":58,"offset":7706}}}],"position":{"start":{"line":218,"column":1,"offset":7125},"end":{"line":232,"column":58,"offset":7706}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":234,"column":1,"offset":7708},"end":{"line":235,"column":1,"offset":7726}}},{"type":"raw","value":"<br>","position":{"start":{"line":235,"column":1,"offset":7726},"end":{"line":235,"column":5,"offset":7730}}}],"position":{"start":{"line":234,"column":1,"offset":7708},"end":{"line":235,"column":5,"offset":7730}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":236,"column":1,"offset":7731},"end":{"line":238,"column":4,"offset":7761}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":239,"column":1,"offset":7762},"end":{"line":239,"column":13,"offset":7774}}}],"position":{"start":{"line":239,"column":1,"offset":7762},"end":{"line":239,"column":13,"offset":7774}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":240,"column":1,"offset":7775},"end":{"line":246,"column":4,"offset":7854}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":247,"column":1,"offset":7855},"end":{"line":247,"column":8,"offset":7862}}}],"position":{"start":{"line":247,"column":1,"offset":7855},"end":{"line":247,"column":8,"offset":7862}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":248,"column":1,"offset":7863},"end":{"line":255,"column":4,"offset":7987}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":256,"column":1,"offset":7988},"end":{"line":257,"column":5,"offset":7997}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":259,"column":1,"offset":7999},"end":{"line":259,"column":11,"offset":8009}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":259,"column":11,"offset":8009},"end":{"line":259,"column":24,"offset":8022}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":259,"column":24,"offset":8022},"end":{"line":259,"column":107,"offset":8105}}}],"position":{"start":{"line":259,"column":1,"offset":7999},"end":{"line":259,"column":107,"offset":8105}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":261,"column":7,"offset":8113},"end":{"line":261,"column":10,"offset":8116}}}],"position":{"start":{"line":261,"column":1,"offset":8107},"end":{"line":261,"column":10,"offset":8116}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":262,"column":7,"offset":8123},"end":{"line":262,"column":10,"offset":8126}}}],"position":{"start":{"line":262,"column":1,"offset":8117},"end":{"line":262,"column":10,"offset":8126}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":264,"column":6,"offset":8133},"end":{"line":264,"column":10,"offset":8137}}}],"position":{"start":{"line":264,"column":1,"offset":8128},"end":{"line":264,"column":10,"offset":8137}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":265,"column":7,"offset":8144},"end":{"line":265,"column":13,"offset":8150}}}],"position":{"start":{"line":265,"column":1,"offset":8138},"end":{"line":265,"column":13,"offset":8150}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":266,"column":1,"offset":8151},"end":{"line":266,"column":49,"offset":8199}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":266,"column":49,"offset":8199},"end":{"line":266,"column":57,"offset":8207}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":266,"column":57,"offset":8207},"end":{"line":266,"column":133,"offset":8283}}}],"position":{"start":{"line":266,"column":1,"offset":8151},"end":{"line":266,"column":133,"offset":8283}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":267,"column":1,"offset":8284},"end":{"line":277,"column":4,"offset":8479}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":278,"column":1,"offset":8480},"end":{"line":278,"column":5,"offset":8484}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":281,"column":1,"offset":8487},"end":{"line":282,"column":1,"offset":8569}}},{"type":"raw","value":"<br>","position":{"start":{"line":282,"column":1,"offset":8569},"end":{"line":282,"column":5,"offset":8573}}},{"type":"text","value":"\n","position":{"start":{"line":282,"column":5,"offset":8573},"end":{"line":283,"column":1,"offset":8574}}},{"type":"raw","value":"<br>","position":{"start":{"line":283,"column":1,"offset":8574},"end":{"line":283,"column":5,"offset":8578}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":283,"column":5,"offset":8578},"end":{"line":284,"column":26,"offset":8604}}}],"position":{"start":{"line":281,"column":1,"offset":8487},"end":{"line":284,"column":26,"offset":8604}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":285,"column":1,"offset":8605},"end":{"line":290,"column":4,"offset":8733}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":291,"column":1,"offset":8734},"end":{"line":291,"column":14,"offset":8747}}}],"position":{"start":{"line":291,"column":1,"offset":8734},"end":{"line":291,"column":14,"offset":8747}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":293,"column":1,"offset":8749},"end":{"line":306,"column":4,"offset":9031}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":308,"column":1,"offset":9033},"end":{"line":309,"column":5,"offset":9042}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":312,"column":7,"offset":9051},"end":{"line":312,"column":13,"offset":9057}}}],"position":{"start":{"line":312,"column":1,"offset":9045},"end":{"line":312,"column":13,"offset":9057}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":312,"column":13,"offset":9057}}}}