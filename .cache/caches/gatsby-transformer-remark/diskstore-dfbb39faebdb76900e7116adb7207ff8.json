{"expireTime":9007200842248527000,"key":"transformer-remark-markdown-ast-3e765f88a91a2171c24156c6c468c2c6-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":14,"column":5,"offset":632},"indent":[1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"means of combination: The ability to combine simplest entities. ","position":{"start":{"line":15,"column":3,"offset":635},"end":{"line":15,"column":67,"offset":699},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":635},"end":{"line":15,"column":67,"offset":699},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":633},"end":{"line":16,"column":3,"offset":702},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"means of abstraction","position":{"start":{"line":17,"column":3,"offset":705},"end":{"line":17,"column":23,"offset":725},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":705},"end":{"line":17,"column":23,"offset":725},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":18,"column":7,"offset":732},"end":{"line":18,"column":10,"offset":735},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":726},"end":{"line":18,"column":10,"offset":735},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":19,"column":7,"offset":742},"end":{"line":19,"column":10,"offset":745},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":736},"end":{"line":19,"column":10,"offset":745},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":703},"end":{"line":19,"column":10,"offset":745},"indent":[1,1]}}],"position":{"start":{"line":15,"column":1,"offset":633},"end":{"line":19,"column":10,"offset":745},"indent":[1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":21,"column":6,"offset":752},"end":{"line":21,"column":14,"offset":760},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":747},"end":{"line":21,"column":14,"offset":760},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":22,"column":7,"offset":767},"end":{"line":22,"column":10,"offset":770},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":761},"end":{"line":22,"column":10,"offset":770},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":24,"column":8,"offset":779},"end":{"line":24,"column":30,"offset":801},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":772},"end":{"line":24,"column":30,"offset":801},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":26,"column":1,"offset":803},"end":{"line":27,"column":1,"offset":947},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":27,"column":1,"offset":947},"end":{"line":27,"column":5,"offset":951},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":27,"column":5,"offset":951},"end":{"line":27,"column":16,"offset":962},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":27,"column":16,"offset":962},"end":{"line":27,"column":20,"offset":966},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":27,"column":20,"offset":966},"end":{"line":29,"column":1,"offset":1110},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":29,"column":1,"offset":1110},"end":{"line":29,"column":5,"offset":1114},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":29,"column":5,"offset":1114},"end":{"line":29,"column":16,"offset":1125},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":29,"column":16,"offset":1125},"end":{"line":29,"column":20,"offset":1129},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":29,"column":20,"offset":1129},"end":{"line":30,"column":45,"offset":1174},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":30,"column":45,"offset":1174},"end":{"line":30,"column":49,"offset":1178},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":30,"column":49,"offset":1178},"end":{"line":30,"column":65,"offset":1194},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":30,"column":65,"offset":1194},"end":{"line":30,"column":69,"offset":1198},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":30,"column":69,"offset":1198},"end":{"line":32,"column":1,"offset":1241},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1241},"end":{"line":32,"column":5,"offset":1245},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":32,"column":5,"offset":1245},"end":{"line":32,"column":22,"offset":1262},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":32,"column":22,"offset":1262},"end":{"line":32,"column":26,"offset":1266},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":32,"column":26,"offset":1266},"end":{"line":33,"column":1,"offset":1267},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":33,"column":1,"offset":1267},"end":{"line":33,"column":5,"offset":1271},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":33,"column":5,"offset":1271},"end":{"line":35,"column":1,"offset":1389},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":35,"column":1,"offset":1389},"end":{"line":35,"column":5,"offset":1393},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":35,"column":5,"offset":1393},"end":{"line":37,"column":1,"offset":1514},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":37,"column":1,"offset":1514},"end":{"line":37,"column":12,"offset":1525},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":37,"column":12,"offset":1525},"end":{"line":37,"column":68,"offset":1581},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":37,"column":68,"offset":1581},"end":{"line":37,"column":79,"offset":1592},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":37,"column":79,"offset":1592},"end":{"line":37,"column":106,"offset":1619},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":37,"column":106,"offset":1619},"end":{"line":37,"column":109,"offset":1622},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":37,"column":109,"offset":1622},"end":{"line":37,"column":189,"offset":1702},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":37,"column":189,"offset":1702},"end":{"line":37,"column":192,"offset":1705},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":37,"column":192,"offset":1705},"end":{"line":37,"column":202,"offset":1715},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":803},"end":{"line":37,"column":202,"offset":1715},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":39,"column":8,"offset":1724},"end":{"line":39,"column":14,"offset":1730},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1717},"end":{"line":39,"column":14,"offset":1730},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":40,"column":1,"offset":1731},"end":{"line":40,"column":9,"offset":1739},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":40,"column":9,"offset":1739},"end":{"line":40,"column":73,"offset":1803},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1731},"end":{"line":40,"column":73,"offset":1803},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":41,"column":1,"offset":1804},"end":{"line":44,"column":4,"offset":1843},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":45,"column":1,"offset":1844},"end":{"line":45,"column":5,"offset":1848},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":47,"column":1,"offset":1850},"end":{"line":47,"column":72,"offset":1921},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":47,"column":72,"offset":1921},"end":{"line":47,"column":80,"offset":1929},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":47,"column":80,"offset":1929},"end":{"line":48,"column":1,"offset":1953},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1953},"end":{"line":48,"column":5,"offset":1957},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":48,"column":5,"offset":1957},"end":{"line":49,"column":1,"offset":1958},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":49,"column":1,"offset":1958},"end":{"line":49,"column":5,"offset":1962},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":49,"column":5,"offset":1962},"end":{"line":50,"column":184,"offset":2146},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":50,"column":184,"offset":2146},"end":{"line":50,"column":187,"offset":2149},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":50,"column":187,"offset":2149},"end":{"line":51,"column":1,"offset":2152},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":51,"column":1,"offset":2152},"end":{"line":51,"column":5,"offset":2156},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":51,"column":5,"offset":2156},"end":{"line":52,"column":1,"offset":2157},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":52,"column":1,"offset":2157},"end":{"line":52,"column":5,"offset":2161},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":52,"column":5,"offset":2161},"end":{"line":53,"column":27,"offset":2188},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":53,"column":27,"offset":2188},"end":{"line":53,"column":35,"offset":2196},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":53,"column":35,"offset":2196},"end":{"line":53,"column":86,"offset":2247},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":53,"column":86,"offset":2247},"end":{"line":53,"column":95,"offset":2256},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":53,"column":95,"offset":2256},"end":{"line":53,"column":97,"offset":2258},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1850},"end":{"line":53,"column":97,"offset":2258},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":55,"column":1,"offset":2260},"end":{"line":55,"column":6,"offset":2265},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":57,"column":1,"offset":2267},"end":{"line":58,"column":1,"offset":2311},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":58,"column":1,"offset":2311},"end":{"line":58,"column":5,"offset":2315},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":58,"column":5,"offset":2315},"end":{"line":59,"column":1,"offset":2316},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":59,"column":1,"offset":2316},"end":{"line":59,"column":22,"offset":2337},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":59,"column":22,"offset":2337},"end":{"line":60,"column":1,"offset":2338},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":60,"column":1,"offset":2338},"end":{"line":60,"column":5,"offset":2342},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":2267},"end":{"line":60,"column":5,"offset":2342},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":62,"column":1,"offset":2344},"end":{"line":62,"column":152,"offset":2495},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":2344},"end":{"line":62,"column":152,"offset":2495},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":64,"column":8,"offset":2504},"end":{"line":64,"column":20,"offset":2516},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":2497},"end":{"line":64,"column":20,"offset":2516},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":66,"column":1,"offset":2518},"end":{"line":66,"column":56,"offset":2573},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":2518},"end":{"line":66,"column":56,"offset":2573},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":67,"column":1,"offset":2574},"end":{"line":72,"column":4,"offset":2665},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":73,"column":1,"offset":2666},"end":{"line":73,"column":5,"offset":2670},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":75,"column":1,"offset":2672},"end":{"line":75,"column":37,"offset":2708},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":75,"column":37,"offset":2708},"end":{"line":75,"column":41,"offset":2712},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":75,"column":41,"offset":2712},"end":{"line":76,"column":1,"offset":2729},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":76,"column":1,"offset":2729},"end":{"line":76,"column":5,"offset":2733},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":76,"column":5,"offset":2733},"end":{"line":77,"column":1,"offset":2734},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":77,"column":1,"offset":2734},"end":{"line":77,"column":5,"offset":2738},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":77,"column":5,"offset":2738},"end":{"line":78,"column":66,"offset":2804},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":78,"column":66,"offset":2804},"end":{"line":78,"column":89,"offset":2827},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":78,"column":89,"offset":2827},"end":{"line":79,"column":1,"offset":2867},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":79,"column":1,"offset":2867},"end":{"line":79,"column":5,"offset":2871},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":79,"column":5,"offset":2871},"end":{"line":80,"column":1,"offset":2872},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":80,"column":1,"offset":2872},"end":{"line":80,"column":5,"offset":2876},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":80,"column":5,"offset":2876},"end":{"line":81,"column":21,"offset":2897},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":81,"column":21,"offset":2897},"end":{"line":81,"column":25,"offset":2901},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":81,"column":25,"offset":2901},"end":{"line":82,"column":1,"offset":2955},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":82,"column":1,"offset":2955},"end":{"line":82,"column":5,"offset":2959},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":82,"column":5,"offset":2959},"end":{"line":83,"column":1,"offset":2960},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":83,"column":1,"offset":2960},"end":{"line":83,"column":5,"offset":2964},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":83,"column":5,"offset":2964},"end":{"line":84,"column":21,"offset":2985},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":84,"column":21,"offset":2985},"end":{"line":84,"column":25,"offset":2989},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":84,"column":25,"offset":2989},"end":{"line":85,"column":1,"offset":3044},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":85,"column":1,"offset":3044},"end":{"line":85,"column":5,"offset":3048},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":85,"column":5,"offset":3048},"end":{"line":86,"column":1,"offset":3049},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":86,"column":1,"offset":3049},"end":{"line":86,"column":5,"offset":3053},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":86,"column":5,"offset":3053},"end":{"line":87,"column":58,"offset":3111},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":87,"column":58,"offset":3111},"end":{"line":87,"column":61,"offset":3114},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":87,"column":61,"offset":3114},"end":{"line":87,"column":145,"offset":3198},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":87,"column":145,"offset":3198},"end":{"line":87,"column":153,"offset":3206},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":87,"column":153,"offset":3206},"end":{"line":87,"column":178,"offset":3231},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":2672},"end":{"line":87,"column":178,"offset":3231},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":89,"column":7,"offset":3239},"end":{"line":89,"column":10,"offset":3242},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":3233},"end":{"line":89,"column":10,"offset":3242},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":91,"column":8,"offset":3251},"end":{"line":91,"column":17,"offset":3260},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":3244},"end":{"line":91,"column":17,"offset":3260},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":92,"column":1,"offset":3261},"end":{"line":103,"column":4,"offset":3460},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":104,"column":1,"offset":3461},"end":{"line":104,"column":5,"offset":3465},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":106,"column":1,"offset":3467},"end":{"line":107,"column":1,"offset":3683},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":107,"column":1,"offset":3683},"end":{"line":107,"column":5,"offset":3687},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":107,"column":5,"offset":3687},"end":{"line":108,"column":1,"offset":3688},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":108,"column":1,"offset":3688},"end":{"line":108,"column":5,"offset":3692},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":108,"column":5,"offset":3692},"end":{"line":109,"column":72,"offset":3764},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":109,"column":72,"offset":3764},"end":{"line":109,"column":81,"offset":3773},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":109,"column":81,"offset":3773},"end":{"line":110,"column":1,"offset":3792},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":110,"column":1,"offset":3792},"end":{"line":110,"column":5,"offset":3796},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":110,"column":5,"offset":3796},"end":{"line":111,"column":1,"offset":3797},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":111,"column":1,"offset":3797},"end":{"line":111,"column":5,"offset":3801},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":111,"column":5,"offset":3801},"end":{"line":112,"column":10,"offset":3811},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":112,"column":10,"offset":3811},"end":{"line":112,"column":16,"offset":3817},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":112,"column":16,"offset":3817},"end":{"line":112,"column":34,"offset":3835},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":112,"column":34,"offset":3835},"end":{"line":112,"column":42,"offset":3843},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":112,"column":42,"offset":3843},"end":{"line":113,"column":24,"offset":3868},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":113,"column":24,"offset":3868},"end":{"line":113,"column":33,"offset":3877},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":113,"column":33,"offset":3877},"end":{"line":113,"column":107,"offset":3951},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":113,"column":107,"offset":3951},"end":{"line":113,"column":116,"offset":3960},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":113,"column":116,"offset":3960},"end":{"line":113,"column":134,"offset":3978},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":113,"column":134,"offset":3978},"end":{"line":113,"column":137,"offset":3981},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":113,"column":137,"offset":3981},"end":{"line":113,"column":161,"offset":4005},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":113,"column":161,"offset":4005},"end":{"line":113,"column":167,"offset":4011},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":113,"column":167,"offset":4011},"end":{"line":113,"column":192,"offset":4036},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":113,"column":192,"offset":4036},"end":{"line":113,"column":200,"offset":4044},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":113,"column":200,"offset":4044},"end":{"line":113,"column":218,"offset":4062},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":113,"column":218,"offset":4062},"end":{"line":113,"column":224,"offset":4068},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":113,"column":224,"offset":4068},"end":{"line":113,"column":245,"offset":4089},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":113,"column":245,"offset":4089},"end":{"line":113,"column":252,"offset":4096},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":113,"column":252,"offset":4096},"end":{"line":113,"column":257,"offset":4101},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":113,"column":257,"offset":4101},"end":{"line":113,"column":260,"offset":4104},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":113,"column":260,"offset":4104},"end":{"line":113,"column":285,"offset":4129},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":113,"column":285,"offset":4129},"end":{"line":113,"column":291,"offset":4135},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":113,"column":291,"offset":4135},"end":{"line":114,"column":96,"offset":4261},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":114,"column":96,"offset":4261},"end":{"line":114,"column":111,"offset":4276},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":114,"column":111,"offset":4276},"end":{"line":114,"column":182,"offset":4347},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":3467},"end":{"line":114,"column":182,"offset":4347},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":116,"column":8,"offset":4356},"end":{"line":116,"column":19,"offset":4367},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":4349},"end":{"line":116,"column":19,"offset":4367},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":117,"column":1,"offset":4368},"end":{"line":117,"column":14,"offset":4381},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":4368},"end":{"line":117,"column":14,"offset":4381},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":118,"column":1,"offset":4382},"end":{"line":133,"column":4,"offset":4797},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":134,"column":1,"offset":4798},"end":{"line":134,"column":5,"offset":4802},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":136,"column":1,"offset":4804},"end":{"line":136,"column":141,"offset":4944},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":4804},"end":{"line":136,"column":141,"offset":4944},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":138,"column":8,"offset":4953},"end":{"line":138,"column":30,"offset":4975},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":4946},"end":{"line":138,"column":30,"offset":4975},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":139,"column":1,"offset":4976},"end":{"line":139,"column":199,"offset":5174},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":4976},"end":{"line":139,"column":199,"offset":5174},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":141,"column":8,"offset":5183},"end":{"line":141,"column":30,"offset":5205},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":5176},"end":{"line":141,"column":30,"offset":5205},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":143,"column":1,"offset":5207},"end":{"line":144,"column":1,"offset":5282},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":144,"column":1,"offset":5282},"end":{"line":144,"column":5,"offset":5286},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":144,"column":5,"offset":5286},"end":{"line":145,"column":1,"offset":5287},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":145,"column":1,"offset":5287},"end":{"line":145,"column":5,"offset":5291},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":145,"column":5,"offset":5291},"end":{"line":147,"column":1,"offset":5353},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":147,"column":1,"offset":5353},"end":{"line":147,"column":5,"offset":5357},"indent":[]}},{"type":"break","position":{"start":{"line":147,"column":5,"offset":5357},"end":{"line":148,"column":1,"offset":5360},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":148,"column":1,"offset":5360},"end":{"line":148,"column":11,"offset":5370},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":148,"column":11,"offset":5370},"end":{"line":148,"column":19,"offset":5378},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":148,"column":19,"offset":5378},"end":{"line":148,"column":24,"offset":5383},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":148,"column":24,"offset":5383},"end":{"line":148,"column":34,"offset":5393},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":148,"column":34,"offset":5393},"end":{"line":149,"column":1,"offset":5442},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":149,"column":1,"offset":5442},"end":{"line":149,"column":5,"offset":5446},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":5207},"end":{"line":149,"column":5,"offset":5446},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":151,"column":8,"offset":5455},"end":{"line":151,"column":12,"offset":5459},"indent":[]}}],"position":{"start":{"line":151,"column":1,"offset":5448},"end":{"line":151,"column":12,"offset":5459},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":152,"column":1,"offset":5460},"end":{"line":157,"column":4,"offset":5571},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":158,"column":1,"offset":5572},"end":{"line":159,"column":5,"offset":5581},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":161,"column":1,"offset":5583},"end":{"line":161,"column":7,"offset":5589},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":161,"column":7,"offset":5589},"end":{"line":163,"column":1,"offset":5671},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":163,"column":1,"offset":5671},"end":{"line":163,"column":5,"offset":5675},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":163,"column":5,"offset":5675},"end":{"line":164,"column":1,"offset":5676},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":164,"column":1,"offset":5676},"end":{"line":164,"column":5,"offset":5680},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":164,"column":5,"offset":5680},"end":{"line":165,"column":10,"offset":5690},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":165,"column":10,"offset":5690},"end":{"line":165,"column":14,"offset":5694},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":165,"column":14,"offset":5694},"end":{"line":165,"column":22,"offset":5702},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":165,"column":22,"offset":5702},"end":{"line":165,"column":30,"offset":5710},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":165,"column":30,"offset":5710},"end":{"line":165,"column":50,"offset":5730},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":165,"column":50,"offset":5730},"end":{"line":165,"column":53,"offset":5733},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":165,"column":53,"offset":5733},"end":{"line":165,"column":90,"offset":5770},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":165,"column":90,"offset":5770},"end":{"line":165,"column":96,"offset":5776},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":165,"column":96,"offset":5776},"end":{"line":166,"column":1,"offset":5779},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":166,"column":1,"offset":5779},"end":{"line":166,"column":5,"offset":5783},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":166,"column":5,"offset":5783},"end":{"line":167,"column":1,"offset":5784},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":167,"column":1,"offset":5784},"end":{"line":167,"column":5,"offset":5788},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":167,"column":5,"offset":5788},"end":{"line":168,"column":14,"offset":5802},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":168,"column":14,"offset":5802},"end":{"line":168,"column":18,"offset":5806},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":168,"column":18,"offset":5806},"end":{"line":168,"column":90,"offset":5878},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":168,"column":90,"offset":5878},"end":{"line":168,"column":94,"offset":5882},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":168,"column":94,"offset":5882},"end":{"line":168,"column":125,"offset":5913},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":168,"column":125,"offset":5913},"end":{"line":168,"column":131,"offset":5919},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":168,"column":131,"offset":5919},"end":{"line":169,"column":1,"offset":5934},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":169,"column":1,"offset":5934},"end":{"line":169,"column":5,"offset":5938},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":169,"column":5,"offset":5938},"end":{"line":170,"column":1,"offset":5939},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":170,"column":1,"offset":5939},"end":{"line":170,"column":5,"offset":5943},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":170,"column":5,"offset":5943},"end":{"line":171,"column":14,"offset":5957},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":171,"column":14,"offset":5957},"end":{"line":171,"column":18,"offset":5961},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":171,"column":18,"offset":5961},"end":{"line":171,"column":37,"offset":5980},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":171,"column":37,"offset":5980},"end":{"line":171,"column":40,"offset":5983},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":171,"column":40,"offset":5983},"end":{"line":171,"column":77,"offset":6020},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":171,"column":77,"offset":6020},"end":{"line":171,"column":81,"offset":6024},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":171,"column":81,"offset":6024},"end":{"line":171,"column":99,"offset":6042},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":171,"column":99,"offset":6042},"end":{"line":171,"column":102,"offset":6045},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":171,"column":102,"offset":6045},"end":{"line":171,"column":133,"offset":6076},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":171,"column":133,"offset":6076},"end":{"line":171,"column":139,"offset":6082},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":171,"column":139,"offset":6082},"end":{"line":171,"column":167,"offset":6110},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":171,"column":167,"offset":6110},"end":{"line":171,"column":171,"offset":6114},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":171,"column":171,"offset":6114},"end":{"line":172,"column":1,"offset":6116},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":172,"column":1,"offset":6116},"end":{"line":172,"column":5,"offset":6120},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":172,"column":5,"offset":6120},"end":{"line":173,"column":1,"offset":6121},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":173,"column":1,"offset":6121},"end":{"line":173,"column":5,"offset":6125},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":173,"column":5,"offset":6125},"end":{"line":175,"column":1,"offset":6145},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":175,"column":1,"offset":6145},"end":{"line":175,"column":5,"offset":6149},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":175,"column":5,"offset":6149},"end":{"line":176,"column":6,"offset":6155},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":176,"column":6,"offset":6155},"end":{"line":176,"column":12,"offset":6161},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":176,"column":12,"offset":6161},"end":{"line":176,"column":30,"offset":6179},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":176,"column":30,"offset":6179},"end":{"line":176,"column":36,"offset":6185},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":176,"column":36,"offset":6185},"end":{"line":176,"column":62,"offset":6211},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":176,"column":62,"offset":6211},"end":{"line":176,"column":75,"offset":6224},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":176,"column":75,"offset":6224},"end":{"line":176,"column":159,"offset":6308},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":5583},"end":{"line":176,"column":159,"offset":6308},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":178,"column":8,"offset":6317},"end":{"line":178,"column":41,"offset":6350},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":6310},"end":{"line":178,"column":41,"offset":6350},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":179,"column":1,"offset":6351},"end":{"line":184,"column":4,"offset":6426},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":185,"column":1,"offset":6427},"end":{"line":186,"column":1,"offset":6446},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":186,"column":1,"offset":6446},"end":{"line":186,"column":5,"offset":6450},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":186,"column":5,"offset":6450},"end":{"line":188,"column":5,"offset":6588},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":188,"column":5,"offset":6588},"end":{"line":188,"column":9,"offset":6592},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":188,"column":9,"offset":6592},"end":{"line":189,"column":5,"offset":6597},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":189,"column":5,"offset":6597},"end":{"line":189,"column":27,"offset":6619},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":189,"column":27,"offset":6619},"end":{"line":190,"column":5,"offset":6624},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":190,"column":5,"offset":6624},"end":{"line":190,"column":9,"offset":6628},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":190,"column":9,"offset":6628},"end":{"line":191,"column":5,"offset":6633},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":191,"column":5,"offset":6633},"end":{"line":191,"column":12,"offset":6640},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":191,"column":12,"offset":6640},"end":{"line":191,"column":17,"offset":6645},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":191,"column":17,"offset":6645},"end":{"line":191,"column":25,"offset":6653},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":191,"column":25,"offset":6653},"end":{"line":191,"column":63,"offset":6691},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":191,"column":63,"offset":6691},"end":{"line":191,"column":66,"offset":6694},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":191,"column":66,"offset":6694},"end":{"line":191,"column":86,"offset":6714},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":191,"column":86,"offset":6714},"end":{"line":191,"column":89,"offset":6717},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":191,"column":89,"offset":6717},"end":{"line":191,"column":110,"offset":6738},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":191,"column":110,"offset":6738},"end":{"line":191,"column":119,"offset":6747},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":191,"column":119,"offset":6747},"end":{"line":192,"column":1,"offset":6749},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":192,"column":1,"offset":6749},"end":{"line":192,"column":5,"offset":6753},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":192,"column":5,"offset":6753},"end":{"line":194,"column":1,"offset":6769},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":194,"column":1,"offset":6769},"end":{"line":194,"column":5,"offset":6773},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":194,"column":5,"offset":6773},"end":{"line":196,"column":5,"offset":6880},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":196,"column":5,"offset":6880},"end":{"line":196,"column":9,"offset":6884},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":196,"column":9,"offset":6884},"end":{"line":197,"column":1,"offset":6885},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":197,"column":1,"offset":6885},"end":{"line":197,"column":23,"offset":6907},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":197,"column":23,"offset":6907},"end":{"line":197,"column":35,"offset":6919},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":197,"column":35,"offset":6919},"end":{"line":197,"column":61,"offset":6945},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":197,"column":61,"offset":6945},"end":{"line":198,"column":1,"offset":6946},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":198,"column":1,"offset":6946},"end":{"line":198,"column":5,"offset":6950},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":198,"column":5,"offset":6950},"end":{"line":199,"column":5,"offset":6955},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":199,"column":5,"offset":6955},"end":{"line":199,"column":8,"offset":6958},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":199,"column":8,"offset":6958},"end":{"line":199,"column":58,"offset":7008},"indent":[]}}],"position":{"start":{"line":185,"column":1,"offset":6427},"end":{"line":199,"column":58,"offset":7008},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":201,"column":1,"offset":7010},"end":{"line":202,"column":1,"offset":7028},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":202,"column":1,"offset":7028},"end":{"line":202,"column":5,"offset":7032},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":7010},"end":{"line":202,"column":5,"offset":7032},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":203,"column":1,"offset":7033},"end":{"line":205,"column":4,"offset":7063},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":206,"column":1,"offset":7064},"end":{"line":206,"column":13,"offset":7076},"indent":[]}}],"position":{"start":{"line":206,"column":1,"offset":7064},"end":{"line":206,"column":13,"offset":7076},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":207,"column":1,"offset":7077},"end":{"line":213,"column":4,"offset":7156},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":214,"column":1,"offset":7157},"end":{"line":214,"column":8,"offset":7164},"indent":[]}}],"position":{"start":{"line":214,"column":1,"offset":7157},"end":{"line":214,"column":8,"offset":7164},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":215,"column":1,"offset":7165},"end":{"line":222,"column":4,"offset":7289},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":223,"column":1,"offset":7290},"end":{"line":224,"column":5,"offset":7299},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":226,"column":1,"offset":7301},"end":{"line":226,"column":11,"offset":7311},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":226,"column":11,"offset":7311},"end":{"line":226,"column":24,"offset":7324},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":226,"column":24,"offset":7324},"end":{"line":226,"column":107,"offset":7407},"indent":[]}}],"position":{"start":{"line":226,"column":1,"offset":7301},"end":{"line":226,"column":107,"offset":7407},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":228,"column":7,"offset":7415},"end":{"line":228,"column":10,"offset":7418},"indent":[]}}],"position":{"start":{"line":228,"column":1,"offset":7409},"end":{"line":228,"column":10,"offset":7418},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":229,"column":7,"offset":7425},"end":{"line":229,"column":10,"offset":7428},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":7419},"end":{"line":229,"column":10,"offset":7428},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":231,"column":6,"offset":7435},"end":{"line":231,"column":10,"offset":7439},"indent":[]}}],"position":{"start":{"line":231,"column":1,"offset":7430},"end":{"line":231,"column":10,"offset":7439},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":232,"column":7,"offset":7446},"end":{"line":232,"column":13,"offset":7452},"indent":[]}}],"position":{"start":{"line":232,"column":1,"offset":7440},"end":{"line":232,"column":13,"offset":7452},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":233,"column":1,"offset":7453},"end":{"line":233,"column":49,"offset":7501},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":233,"column":49,"offset":7501},"end":{"line":233,"column":57,"offset":7509},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":233,"column":57,"offset":7509},"end":{"line":233,"column":133,"offset":7585},"indent":[]}}],"position":{"start":{"line":233,"column":1,"offset":7453},"end":{"line":233,"column":133,"offset":7585},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":234,"column":1,"offset":7586},"end":{"line":244,"column":4,"offset":7781},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":245,"column":1,"offset":7782},"end":{"line":245,"column":5,"offset":7786},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":248,"column":1,"offset":7789},"end":{"line":249,"column":1,"offset":7871},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":249,"column":1,"offset":7871},"end":{"line":249,"column":5,"offset":7875},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":249,"column":5,"offset":7875},"end":{"line":250,"column":1,"offset":7876},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":250,"column":1,"offset":7876},"end":{"line":250,"column":5,"offset":7880},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":250,"column":5,"offset":7880},"end":{"line":251,"column":26,"offset":7906},"indent":[1]}}],"position":{"start":{"line":248,"column":1,"offset":7789},"end":{"line":251,"column":26,"offset":7906},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":252,"column":1,"offset":7907},"end":{"line":257,"column":4,"offset":8035},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":258,"column":1,"offset":8036},"end":{"line":258,"column":14,"offset":8049},"indent":[]}}],"position":{"start":{"line":258,"column":1,"offset":8036},"end":{"line":258,"column":14,"offset":8049},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":260,"column":1,"offset":8051},"end":{"line":273,"column":4,"offset":8333},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":275,"column":1,"offset":8335},"end":{"line":276,"column":5,"offset":8344},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":279,"column":7,"offset":8353},"end":{"line":279,"column":13,"offset":8359},"indent":[]}}],"position":{"start":{"line":279,"column":1,"offset":8347},"end":{"line":279,"column":13,"offset":8359},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":279,"column":13,"offset":8359}}}}