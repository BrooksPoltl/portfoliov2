{"expireTime":9007200842248824000,"key":"transformer-remark-markdown-html-ast-86f75522ac74367187b8508a81598724-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":820}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":820},"end":{"line":22,"column":5,"offset":824}}},{"type":"text","value":"\n`","position":{"start":{"line":22,"column":5,"offset":824},"end":{"line":23,"column":2,"offset":826}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":23,"column":2,"offset":826}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":24,"column":7,"offset":833},"end":{"line":24,"column":10,"offset":836}}}],"position":{"start":{"line":24,"column":1,"offset":827},"end":{"line":24,"column":10,"offset":836}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":25,"column":7,"offset":843},"end":{"line":25,"column":10,"offset":846}}}],"position":{"start":{"line":25,"column":1,"offset":837},"end":{"line":25,"column":10,"offset":846}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":27,"column":6,"offset":853},"end":{"line":27,"column":14,"offset":861}}}],"position":{"start":{"line":27,"column":1,"offset":848},"end":{"line":27,"column":14,"offset":861}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":28,"column":7,"offset":868},"end":{"line":28,"column":10,"offset":871}}}],"position":{"start":{"line":28,"column":1,"offset":862},"end":{"line":28,"column":10,"offset":871}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":30,"column":8,"offset":880},"end":{"line":30,"column":30,"offset":902}}}],"position":{"start":{"line":30,"column":1,"offset":873},"end":{"line":30,"column":30,"offset":902}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":32,"column":1,"offset":904},"end":{"line":33,"column":1,"offset":1048}}},{"type":"raw","value":"<br>","position":{"start":{"line":33,"column":1,"offset":1048},"end":{"line":33,"column":5,"offset":1052}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":33,"column":5,"offset":1052},"end":{"line":33,"column":16,"offset":1063}}},{"type":"raw","value":"<br>","position":{"start":{"line":33,"column":16,"offset":1063},"end":{"line":33,"column":20,"offset":1067}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":33,"column":20,"offset":1067},"end":{"line":35,"column":1,"offset":1211}}},{"type":"raw","value":"<br>","position":{"start":{"line":35,"column":1,"offset":1211},"end":{"line":35,"column":5,"offset":1215}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":35,"column":5,"offset":1215},"end":{"line":35,"column":16,"offset":1226}}},{"type":"raw","value":"<br>","position":{"start":{"line":35,"column":16,"offset":1226},"end":{"line":35,"column":20,"offset":1230}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":35,"column":20,"offset":1230},"end":{"line":36,"column":45,"offset":1275}}},{"type":"raw","value":"<br>","position":{"start":{"line":36,"column":45,"offset":1275},"end":{"line":36,"column":49,"offset":1279}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":36,"column":49,"offset":1279},"end":{"line":36,"column":65,"offset":1295}}},{"type":"raw","value":"<br>","position":{"start":{"line":36,"column":65,"offset":1295},"end":{"line":36,"column":69,"offset":1299}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":36,"column":69,"offset":1299},"end":{"line":38,"column":1,"offset":1342}}},{"type":"raw","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1342},"end":{"line":38,"column":5,"offset":1346}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":38,"column":5,"offset":1346},"end":{"line":38,"column":22,"offset":1363}}},{"type":"raw","value":"<br>","position":{"start":{"line":38,"column":22,"offset":1363},"end":{"line":38,"column":26,"offset":1367}}},{"type":"text","value":"\n","position":{"start":{"line":38,"column":26,"offset":1367},"end":{"line":39,"column":1,"offset":1368}}},{"type":"raw","value":"<br>","position":{"start":{"line":39,"column":1,"offset":1368},"end":{"line":39,"column":5,"offset":1372}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":39,"column":5,"offset":1372},"end":{"line":41,"column":1,"offset":1490}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":1,"offset":1490},"end":{"line":41,"column":5,"offset":1494}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":41,"column":5,"offset":1494},"end":{"line":43,"column":1,"offset":1615}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":43,"column":1,"offset":1615},"end":{"line":43,"column":12,"offset":1626}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":43,"column":12,"offset":1626},"end":{"line":43,"column":68,"offset":1682}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":43,"column":68,"offset":1682},"end":{"line":43,"column":79,"offset":1693}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":43,"column":79,"offset":1693},"end":{"line":43,"column":106,"offset":1720}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":43,"column":106,"offset":1720},"end":{"line":43,"column":109,"offset":1723}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":43,"column":109,"offset":1723},"end":{"line":43,"column":189,"offset":1803}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":43,"column":189,"offset":1803},"end":{"line":43,"column":192,"offset":1806}}},{"type":"text","value":" to get 3.","position":{"start":{"line":43,"column":192,"offset":1806},"end":{"line":43,"column":202,"offset":1816}}}],"position":{"start":{"line":32,"column":1,"offset":904},"end":{"line":43,"column":202,"offset":1816}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":45,"column":8,"offset":1825},"end":{"line":45,"column":14,"offset":1831}}}],"position":{"start":{"line":45,"column":1,"offset":1818},"end":{"line":45,"column":14,"offset":1831}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":46,"column":1,"offset":1832},"end":{"line":46,"column":9,"offset":1840}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":46,"column":9,"offset":1840},"end":{"line":46,"column":73,"offset":1904}}}],"position":{"start":{"line":46,"column":1,"offset":1832},"end":{"line":46,"column":73,"offset":1904}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":47,"column":1,"offset":1905},"end":{"line":50,"column":4,"offset":1944}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":51,"column":1,"offset":1945},"end":{"line":51,"column":5,"offset":1949}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":53,"column":1,"offset":1951},"end":{"line":53,"column":72,"offset":2022}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":53,"column":72,"offset":2022},"end":{"line":53,"column":80,"offset":2030}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":53,"column":80,"offset":2030},"end":{"line":54,"column":1,"offset":2054}}},{"type":"raw","value":"<br>","position":{"start":{"line":54,"column":1,"offset":2054},"end":{"line":54,"column":5,"offset":2058}}},{"type":"text","value":"\n","position":{"start":{"line":54,"column":5,"offset":2058},"end":{"line":55,"column":1,"offset":2059}}},{"type":"raw","value":"<br>","position":{"start":{"line":55,"column":1,"offset":2059},"end":{"line":55,"column":5,"offset":2063}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":55,"column":5,"offset":2063},"end":{"line":56,"column":184,"offset":2247}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":56,"column":184,"offset":2247},"end":{"line":56,"column":187,"offset":2250}}},{"type":"text","value":".\n","position":{"start":{"line":56,"column":187,"offset":2250},"end":{"line":57,"column":1,"offset":2253}}},{"type":"raw","value":"<br>","position":{"start":{"line":57,"column":1,"offset":2253},"end":{"line":57,"column":5,"offset":2257}}},{"type":"text","value":"\n","position":{"start":{"line":57,"column":5,"offset":2257},"end":{"line":58,"column":1,"offset":2258}}},{"type":"raw","value":"<br>","position":{"start":{"line":58,"column":1,"offset":2258},"end":{"line":58,"column":5,"offset":2262}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":58,"column":5,"offset":2262},"end":{"line":59,"column":27,"offset":2289}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":59,"column":27,"offset":2289},"end":{"line":59,"column":35,"offset":2297}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":59,"column":35,"offset":2297},"end":{"line":59,"column":86,"offset":2348}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":59,"column":86,"offset":2348},"end":{"line":59,"column":95,"offset":2357}}},{"type":"text","value":". ","position":{"start":{"line":59,"column":95,"offset":2357},"end":{"line":59,"column":97,"offset":2359}}}],"position":{"start":{"line":53,"column":1,"offset":1951},"end":{"line":59,"column":97,"offset":2359}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":61,"column":1,"offset":2361},"end":{"line":61,"column":6,"offset":2366}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":63,"column":1,"offset":2368},"end":{"line":64,"column":1,"offset":2412}}},{"type":"raw","value":"<br>","position":{"start":{"line":64,"column":1,"offset":2412},"end":{"line":64,"column":5,"offset":2416}}},{"type":"text","value":"\n","position":{"start":{"line":64,"column":5,"offset":2416},"end":{"line":65,"column":1,"offset":2417}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":65,"column":1,"offset":2417},"end":{"line":65,"column":22,"offset":2438}}},{"type":"text","value":"\n","position":{"start":{"line":65,"column":22,"offset":2438},"end":{"line":66,"column":1,"offset":2439}}},{"type":"raw","value":"<br>","position":{"start":{"line":66,"column":1,"offset":2439},"end":{"line":66,"column":5,"offset":2443}}}],"position":{"start":{"line":63,"column":1,"offset":2368},"end":{"line":66,"column":5,"offset":2443}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":68,"column":1,"offset":2445},"end":{"line":68,"column":152,"offset":2596}}}],"position":{"start":{"line":68,"column":1,"offset":2445},"end":{"line":68,"column":152,"offset":2596}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":70,"column":8,"offset":2605},"end":{"line":70,"column":20,"offset":2617}}}],"position":{"start":{"line":70,"column":1,"offset":2598},"end":{"line":70,"column":20,"offset":2617}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":72,"column":1,"offset":2619},"end":{"line":72,"column":56,"offset":2674}}}],"position":{"start":{"line":72,"column":1,"offset":2619},"end":{"line":72,"column":56,"offset":2674}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":73,"column":1,"offset":2675},"end":{"line":78,"column":4,"offset":2766}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":79,"column":1,"offset":2767},"end":{"line":79,"column":5,"offset":2771}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":81,"column":1,"offset":2773},"end":{"line":81,"column":37,"offset":2809}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":81,"column":37,"offset":2809},"end":{"line":81,"column":41,"offset":2813}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":81,"column":41,"offset":2813},"end":{"line":82,"column":1,"offset":2830}}},{"type":"raw","value":"<br>","position":{"start":{"line":82,"column":1,"offset":2830},"end":{"line":82,"column":5,"offset":2834}}},{"type":"text","value":"\n","position":{"start":{"line":82,"column":5,"offset":2834},"end":{"line":83,"column":1,"offset":2835}}},{"type":"raw","value":"<br>","position":{"start":{"line":83,"column":1,"offset":2835},"end":{"line":83,"column":5,"offset":2839}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":83,"column":5,"offset":2839},"end":{"line":84,"column":66,"offset":2905}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":84,"column":66,"offset":2905},"end":{"line":84,"column":89,"offset":2928}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":84,"column":89,"offset":2928},"end":{"line":85,"column":1,"offset":2968}}},{"type":"raw","value":"<br>","position":{"start":{"line":85,"column":1,"offset":2968},"end":{"line":85,"column":5,"offset":2972}}},{"type":"text","value":"\n","position":{"start":{"line":85,"column":5,"offset":2972},"end":{"line":86,"column":1,"offset":2973}}},{"type":"raw","value":"<br>","position":{"start":{"line":86,"column":1,"offset":2973},"end":{"line":86,"column":5,"offset":2977}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":86,"column":5,"offset":2977},"end":{"line":87,"column":21,"offset":2998}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":87,"column":21,"offset":2998},"end":{"line":87,"column":25,"offset":3002}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":87,"column":25,"offset":3002},"end":{"line":88,"column":1,"offset":3056}}},{"type":"raw","value":"<br>","position":{"start":{"line":88,"column":1,"offset":3056},"end":{"line":88,"column":5,"offset":3060}}},{"type":"text","value":"\n","position":{"start":{"line":88,"column":5,"offset":3060},"end":{"line":89,"column":1,"offset":3061}}},{"type":"raw","value":"<br>","position":{"start":{"line":89,"column":1,"offset":3061},"end":{"line":89,"column":5,"offset":3065}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":89,"column":5,"offset":3065},"end":{"line":90,"column":21,"offset":3086}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":90,"column":21,"offset":3086},"end":{"line":90,"column":25,"offset":3090}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":90,"column":25,"offset":3090},"end":{"line":91,"column":1,"offset":3145}}},{"type":"raw","value":"<br>","position":{"start":{"line":91,"column":1,"offset":3145},"end":{"line":91,"column":5,"offset":3149}}},{"type":"text","value":"\n","position":{"start":{"line":91,"column":5,"offset":3149},"end":{"line":92,"column":1,"offset":3150}}},{"type":"raw","value":"<br>","position":{"start":{"line":92,"column":1,"offset":3150},"end":{"line":92,"column":5,"offset":3154}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":92,"column":5,"offset":3154},"end":{"line":93,"column":58,"offset":3212}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":93,"column":58,"offset":3212},"end":{"line":93,"column":61,"offset":3215}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":93,"column":61,"offset":3215},"end":{"line":93,"column":145,"offset":3299}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":93,"column":145,"offset":3299},"end":{"line":93,"column":153,"offset":3307}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":93,"column":153,"offset":3307},"end":{"line":93,"column":178,"offset":3332}}}],"position":{"start":{"line":81,"column":1,"offset":2773},"end":{"line":93,"column":178,"offset":3332}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":95,"column":7,"offset":3340},"end":{"line":95,"column":10,"offset":3343}}}],"position":{"start":{"line":95,"column":1,"offset":3334},"end":{"line":95,"column":10,"offset":3343}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":97,"column":8,"offset":3352},"end":{"line":97,"column":17,"offset":3361}}}],"position":{"start":{"line":97,"column":1,"offset":3345},"end":{"line":97,"column":17,"offset":3361}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":98,"column":1,"offset":3362},"end":{"line":109,"column":4,"offset":3561}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":110,"column":1,"offset":3562},"end":{"line":110,"column":5,"offset":3566}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":112,"column":1,"offset":3568},"end":{"line":113,"column":1,"offset":3784}}},{"type":"raw","value":"<br>","position":{"start":{"line":113,"column":1,"offset":3784},"end":{"line":113,"column":5,"offset":3788}}},{"type":"text","value":"\n","position":{"start":{"line":113,"column":5,"offset":3788},"end":{"line":114,"column":1,"offset":3789}}},{"type":"raw","value":"<br>","position":{"start":{"line":114,"column":1,"offset":3789},"end":{"line":114,"column":5,"offset":3793}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":114,"column":5,"offset":3793},"end":{"line":115,"column":72,"offset":3865}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":115,"column":72,"offset":3865},"end":{"line":115,"column":81,"offset":3874}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":115,"column":81,"offset":3874},"end":{"line":116,"column":1,"offset":3893}}},{"type":"raw","value":"<br>","position":{"start":{"line":116,"column":1,"offset":3893},"end":{"line":116,"column":5,"offset":3897}}},{"type":"text","value":"\n","position":{"start":{"line":116,"column":5,"offset":3897},"end":{"line":117,"column":1,"offset":3898}}},{"type":"raw","value":"<br>","position":{"start":{"line":117,"column":1,"offset":3898},"end":{"line":117,"column":5,"offset":3902}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":117,"column":5,"offset":3902},"end":{"line":118,"column":10,"offset":3912}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":118,"column":10,"offset":3912},"end":{"line":118,"column":16,"offset":3918}}},{"type":"text","value":" gets called with ","position":{"start":{"line":118,"column":16,"offset":3918},"end":{"line":118,"column":34,"offset":3936}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":118,"column":34,"offset":3936},"end":{"line":118,"column":42,"offset":3944}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":118,"column":42,"offset":3944},"end":{"line":119,"column":24,"offset":3969}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":119,"column":24,"offset":3969},"end":{"line":119,"column":33,"offset":3978}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":119,"column":33,"offset":3978},"end":{"line":119,"column":107,"offset":4052}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":119,"column":107,"offset":4052},"end":{"line":119,"column":116,"offset":4061}}},{"type":"text","value":" is false because ","position":{"start":{"line":119,"column":116,"offset":4061},"end":{"line":119,"column":134,"offset":4079}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":119,"column":134,"offset":4079},"end":{"line":119,"column":137,"offset":4082}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":119,"column":137,"offset":4082},"end":{"line":119,"column":161,"offset":4106}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":119,"column":161,"offset":4106},"end":{"line":119,"column":167,"offset":4112}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":119,"column":167,"offset":4112},"end":{"line":119,"column":192,"offset":4137}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":119,"column":192,"offset":4137},"end":{"line":119,"column":200,"offset":4145}}},{"type":"text","value":". This is because ","position":{"start":{"line":119,"column":200,"offset":4145},"end":{"line":119,"column":218,"offset":4163}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":119,"column":218,"offset":4163},"end":{"line":119,"column":224,"offset":4169}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":119,"column":224,"offset":4169},"end":{"line":119,"column":245,"offset":4190}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":119,"column":245,"offset":4190},"end":{"line":119,"column":252,"offset":4197}}},{"type":"text","value":" and ","position":{"start":{"line":119,"column":252,"offset":4197},"end":{"line":119,"column":257,"offset":4202}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":119,"column":257,"offset":4202},"end":{"line":119,"column":260,"offset":4205}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":119,"column":260,"offset":4205},"end":{"line":119,"column":285,"offset":4230}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":119,"column":285,"offset":4230},"end":{"line":119,"column":291,"offset":4236}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":119,"column":291,"offset":4236},"end":{"line":120,"column":96,"offset":4362}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":120,"column":96,"offset":4362},"end":{"line":120,"column":111,"offset":4377}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":120,"column":111,"offset":4377},"end":{"line":120,"column":182,"offset":4448}}}],"position":{"start":{"line":112,"column":1,"offset":3568},"end":{"line":120,"column":182,"offset":4448}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":122,"column":8,"offset":4457},"end":{"line":122,"column":19,"offset":4468}}}],"position":{"start":{"line":122,"column":1,"offset":4450},"end":{"line":122,"column":19,"offset":4468}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":123,"column":1,"offset":4469},"end":{"line":123,"column":14,"offset":4482}}}],"position":{"start":{"line":123,"column":1,"offset":4469},"end":{"line":123,"column":14,"offset":4482}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":124,"column":1,"offset":4483},"end":{"line":139,"column":4,"offset":4898}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":140,"column":1,"offset":4899},"end":{"line":140,"column":5,"offset":4903}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":142,"column":1,"offset":4905},"end":{"line":142,"column":141,"offset":5045}}}],"position":{"start":{"line":142,"column":1,"offset":4905},"end":{"line":142,"column":141,"offset":5045}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":144,"column":8,"offset":5054},"end":{"line":144,"column":30,"offset":5076}}}],"position":{"start":{"line":144,"column":1,"offset":5047},"end":{"line":144,"column":30,"offset":5076}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":145,"column":1,"offset":5077},"end":{"line":145,"column":199,"offset":5275}}}],"position":{"start":{"line":145,"column":1,"offset":5077},"end":{"line":145,"column":199,"offset":5275}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":147,"column":8,"offset":5284},"end":{"line":147,"column":30,"offset":5306}}}],"position":{"start":{"line":147,"column":1,"offset":5277},"end":{"line":147,"column":30,"offset":5306}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":149,"column":1,"offset":5308},"end":{"line":150,"column":1,"offset":5383}}},{"type":"raw","value":"<br>","position":{"start":{"line":150,"column":1,"offset":5383},"end":{"line":150,"column":5,"offset":5387}}},{"type":"text","value":"\n","position":{"start":{"line":150,"column":5,"offset":5387},"end":{"line":151,"column":1,"offset":5388}}},{"type":"raw","value":"<br>","position":{"start":{"line":151,"column":1,"offset":5388},"end":{"line":151,"column":5,"offset":5392}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":151,"column":5,"offset":5392},"end":{"line":153,"column":1,"offset":5454}}},{"type":"raw","value":"<br>","position":{"start":{"line":153,"column":1,"offset":5454},"end":{"line":153,"column":5,"offset":5458}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":153,"column":5,"offset":5458},"end":{"line":154,"column":1,"offset":5461}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":154,"column":1,"offset":5461},"end":{"line":154,"column":11,"offset":5471}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":154,"column":11,"offset":5471},"end":{"line":154,"column":19,"offset":5479}}},{"type":"text","value":" and ","position":{"start":{"line":154,"column":19,"offset":5479},"end":{"line":154,"column":24,"offset":5484}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":154,"column":24,"offset":5484},"end":{"line":154,"column":34,"offset":5494}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":154,"column":34,"offset":5494},"end":{"line":155,"column":1,"offset":5543}}},{"type":"raw","value":"<br>","position":{"start":{"line":155,"column":1,"offset":5543},"end":{"line":155,"column":5,"offset":5547}}}],"position":{"start":{"line":149,"column":1,"offset":5308},"end":{"line":155,"column":5,"offset":5547}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":157,"column":8,"offset":5556},"end":{"line":157,"column":12,"offset":5560}}}],"position":{"start":{"line":157,"column":1,"offset":5549},"end":{"line":157,"column":12,"offset":5560}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":158,"column":1,"offset":5561},"end":{"line":163,"column":4,"offset":5672}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":164,"column":1,"offset":5673},"end":{"line":165,"column":5,"offset":5682}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":167,"column":1,"offset":5684},"end":{"line":167,"column":7,"offset":5690}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":167,"column":7,"offset":5690},"end":{"line":169,"column":1,"offset":5772}}},{"type":"raw","value":"<br>","position":{"start":{"line":169,"column":1,"offset":5772},"end":{"line":169,"column":5,"offset":5776}}},{"type":"text","value":"\n","position":{"start":{"line":169,"column":5,"offset":5776},"end":{"line":170,"column":1,"offset":5777}}},{"type":"raw","value":"<br>","position":{"start":{"line":170,"column":1,"offset":5777},"end":{"line":170,"column":5,"offset":5781}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":170,"column":5,"offset":5781},"end":{"line":171,"column":10,"offset":5791}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":171,"column":10,"offset":5791},"end":{"line":171,"column":14,"offset":5795}}},{"type":"text","value":". Since ","position":{"start":{"line":171,"column":14,"offset":5795},"end":{"line":171,"column":22,"offset":5803}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":171,"column":22,"offset":5803},"end":{"line":171,"column":30,"offset":5811}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":171,"column":30,"offset":5811},"end":{"line":171,"column":50,"offset":5831}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":171,"column":50,"offset":5831},"end":{"line":171,"column":53,"offset":5834}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":171,"column":53,"offset":5834},"end":{"line":171,"column":90,"offset":5871}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":171,"column":90,"offset":5871},"end":{"line":171,"column":96,"offset":5877}}},{"type":"text","value":".\n","position":{"start":{"line":171,"column":96,"offset":5877},"end":{"line":172,"column":1,"offset":5880}}},{"type":"raw","value":"<br>","position":{"start":{"line":172,"column":1,"offset":5880},"end":{"line":172,"column":5,"offset":5884}}},{"type":"text","value":"\n","position":{"start":{"line":172,"column":5,"offset":5884},"end":{"line":173,"column":1,"offset":5885}}},{"type":"raw","value":"<br>","position":{"start":{"line":173,"column":1,"offset":5885},"end":{"line":173,"column":5,"offset":5889}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":173,"column":5,"offset":5889},"end":{"line":174,"column":14,"offset":5903}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":174,"column":14,"offset":5903},"end":{"line":174,"column":18,"offset":5907}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":174,"column":18,"offset":5907},"end":{"line":174,"column":90,"offset":5979}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":174,"column":90,"offset":5979},"end":{"line":174,"column":94,"offset":5983}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":174,"column":94,"offset":5983},"end":{"line":174,"column":125,"offset":6014}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":174,"column":125,"offset":6014},"end":{"line":174,"column":131,"offset":6020}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":174,"column":131,"offset":6020},"end":{"line":175,"column":1,"offset":6035}}},{"type":"raw","value":"<br>","position":{"start":{"line":175,"column":1,"offset":6035},"end":{"line":175,"column":5,"offset":6039}}},{"type":"text","value":"\n","position":{"start":{"line":175,"column":5,"offset":6039},"end":{"line":176,"column":1,"offset":6040}}},{"type":"raw","value":"<br>","position":{"start":{"line":176,"column":1,"offset":6040},"end":{"line":176,"column":5,"offset":6044}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":176,"column":5,"offset":6044},"end":{"line":177,"column":14,"offset":6058}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":177,"column":14,"offset":6058},"end":{"line":177,"column":18,"offset":6062}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":177,"column":18,"offset":6062},"end":{"line":177,"column":37,"offset":6081}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":177,"column":37,"offset":6081},"end":{"line":177,"column":40,"offset":6084}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":177,"column":40,"offset":6084},"end":{"line":177,"column":77,"offset":6121}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":177,"column":77,"offset":6121},"end":{"line":177,"column":81,"offset":6125}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":177,"column":81,"offset":6125},"end":{"line":177,"column":99,"offset":6143}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":177,"column":99,"offset":6143},"end":{"line":177,"column":102,"offset":6146}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":177,"column":102,"offset":6146},"end":{"line":177,"column":133,"offset":6177}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":177,"column":133,"offset":6177},"end":{"line":177,"column":139,"offset":6183}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":177,"column":139,"offset":6183},"end":{"line":177,"column":167,"offset":6211}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":177,"column":167,"offset":6211},"end":{"line":177,"column":171,"offset":6215}}},{"type":"text","value":".\n","position":{"start":{"line":177,"column":171,"offset":6215},"end":{"line":178,"column":1,"offset":6217}}},{"type":"raw","value":"<br>","position":{"start":{"line":178,"column":1,"offset":6217},"end":{"line":178,"column":5,"offset":6221}}},{"type":"text","value":"\n","position":{"start":{"line":178,"column":5,"offset":6221},"end":{"line":179,"column":1,"offset":6222}}},{"type":"raw","value":"<br>","position":{"start":{"line":179,"column":1,"offset":6222},"end":{"line":179,"column":5,"offset":6226}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":179,"column":5,"offset":6226},"end":{"line":181,"column":1,"offset":6246}}},{"type":"raw","value":"<br>","position":{"start":{"line":181,"column":1,"offset":6246},"end":{"line":181,"column":5,"offset":6250}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":181,"column":5,"offset":6250},"end":{"line":182,"column":6,"offset":6256}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":182,"column":6,"offset":6256},"end":{"line":182,"column":12,"offset":6262}}},{"type":"text","value":" does not have an ","position":{"start":{"line":182,"column":12,"offset":6262},"end":{"line":182,"column":30,"offset":6280}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":182,"column":30,"offset":6280},"end":{"line":182,"column":36,"offset":6286}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":182,"column":36,"offset":6286},"end":{"line":182,"column":62,"offset":6312}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":182,"column":62,"offset":6312},"end":{"line":182,"column":75,"offset":6325}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":182,"column":75,"offset":6325},"end":{"line":182,"column":159,"offset":6409}}}],"position":{"start":{"line":167,"column":1,"offset":5684},"end":{"line":182,"column":159,"offset":6409}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":184,"column":8,"offset":6418},"end":{"line":184,"column":41,"offset":6451}}}],"position":{"start":{"line":184,"column":1,"offset":6411},"end":{"line":184,"column":41,"offset":6451}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":185,"column":1,"offset":6452},"end":{"line":190,"column":4,"offset":6527}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":191,"column":1,"offset":6528},"end":{"line":192,"column":1,"offset":6547}}},{"type":"raw","value":"<br>","position":{"start":{"line":192,"column":1,"offset":6547},"end":{"line":192,"column":5,"offset":6551}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":192,"column":5,"offset":6551},"end":{"line":194,"column":5,"offset":6689}}},{"type":"raw","value":"<br>","position":{"start":{"line":194,"column":5,"offset":6689},"end":{"line":194,"column":9,"offset":6693}}},{"type":"text","value":"\n","position":{"start":{"line":194,"column":9,"offset":6693},"end":{"line":195,"column":5,"offset":6698}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":195,"column":5,"offset":6698},"end":{"line":195,"column":27,"offset":6720}}},{"type":"text","value":"\n","position":{"start":{"line":195,"column":27,"offset":6720},"end":{"line":196,"column":5,"offset":6725}}},{"type":"raw","value":"<br>","position":{"start":{"line":196,"column":5,"offset":6725},"end":{"line":196,"column":9,"offset":6729}}},{"type":"text","value":"\n","position":{"start":{"line":196,"column":9,"offset":6729},"end":{"line":197,"column":5,"offset":6734}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":197,"column":5,"offset":6734},"end":{"line":197,"column":12,"offset":6741}}},{"type":"text","value":" and ","position":{"start":{"line":197,"column":12,"offset":6741},"end":{"line":197,"column":17,"offset":6746}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":197,"column":17,"offset":6746},"end":{"line":197,"column":25,"offset":6754}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":197,"column":25,"offset":6754},"end":{"line":197,"column":63,"offset":6792}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":197,"column":63,"offset":6792},"end":{"line":197,"column":66,"offset":6795}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":197,"column":66,"offset":6795},"end":{"line":197,"column":86,"offset":6815}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":197,"column":86,"offset":6815},"end":{"line":197,"column":89,"offset":6818}}},{"type":"text","value":" will be called with ","position":{"start":{"line":197,"column":89,"offset":6818},"end":{"line":197,"column":110,"offset":6839}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":197,"column":110,"offset":6839},"end":{"line":197,"column":119,"offset":6848}}},{"type":"text","value":".\n","position":{"start":{"line":197,"column":119,"offset":6848},"end":{"line":198,"column":1,"offset":6850}}},{"type":"raw","value":"<br>","position":{"start":{"line":198,"column":1,"offset":6850},"end":{"line":198,"column":5,"offset":6854}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":198,"column":5,"offset":6854},"end":{"line":200,"column":1,"offset":6870}}},{"type":"raw","value":"<br>","position":{"start":{"line":200,"column":1,"offset":6870},"end":{"line":200,"column":5,"offset":6874}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":200,"column":5,"offset":6874},"end":{"line":202,"column":5,"offset":6981}}},{"type":"raw","value":"<br>","position":{"start":{"line":202,"column":5,"offset":6981},"end":{"line":202,"column":9,"offset":6985}}},{"type":"text","value":"\n","position":{"start":{"line":202,"column":9,"offset":6985},"end":{"line":203,"column":1,"offset":6986}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":203,"column":1,"offset":6986},"end":{"line":203,"column":23,"offset":7008}}},{"type":"text","value":" turns into ","position":{"start":{"line":203,"column":23,"offset":7008},"end":{"line":203,"column":35,"offset":7020}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":203,"column":35,"offset":7020},"end":{"line":203,"column":61,"offset":7046}}},{"type":"text","value":"\n","position":{"start":{"line":203,"column":61,"offset":7046},"end":{"line":204,"column":1,"offset":7047}}},{"type":"raw","value":"<br>","position":{"start":{"line":204,"column":1,"offset":7047},"end":{"line":204,"column":5,"offset":7051}}},{"type":"text","value":"\nNow ","position":{"start":{"line":204,"column":5,"offset":7051},"end":{"line":205,"column":5,"offset":7056}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":205,"column":5,"offset":7056},"end":{"line":205,"column":8,"offset":7059}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":205,"column":8,"offset":7059},"end":{"line":205,"column":58,"offset":7109}}}],"position":{"start":{"line":191,"column":1,"offset":6528},"end":{"line":205,"column":58,"offset":7109}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":207,"column":1,"offset":7111},"end":{"line":208,"column":1,"offset":7129}}},{"type":"raw","value":"<br>","position":{"start":{"line":208,"column":1,"offset":7129},"end":{"line":208,"column":5,"offset":7133}}}],"position":{"start":{"line":207,"column":1,"offset":7111},"end":{"line":208,"column":5,"offset":7133}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":209,"column":1,"offset":7134},"end":{"line":211,"column":4,"offset":7164}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":212,"column":1,"offset":7165},"end":{"line":212,"column":13,"offset":7177}}}],"position":{"start":{"line":212,"column":1,"offset":7165},"end":{"line":212,"column":13,"offset":7177}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":213,"column":1,"offset":7178},"end":{"line":219,"column":4,"offset":7257}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":220,"column":1,"offset":7258},"end":{"line":220,"column":8,"offset":7265}}}],"position":{"start":{"line":220,"column":1,"offset":7258},"end":{"line":220,"column":8,"offset":7265}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":221,"column":1,"offset":7266},"end":{"line":228,"column":4,"offset":7390}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":229,"column":1,"offset":7391},"end":{"line":230,"column":5,"offset":7400}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":232,"column":1,"offset":7402},"end":{"line":232,"column":11,"offset":7412}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":232,"column":11,"offset":7412},"end":{"line":232,"column":24,"offset":7425}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":232,"column":24,"offset":7425},"end":{"line":232,"column":107,"offset":7508}}}],"position":{"start":{"line":232,"column":1,"offset":7402},"end":{"line":232,"column":107,"offset":7508}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":234,"column":7,"offset":7516},"end":{"line":234,"column":10,"offset":7519}}}],"position":{"start":{"line":234,"column":1,"offset":7510},"end":{"line":234,"column":10,"offset":7519}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":235,"column":7,"offset":7526},"end":{"line":235,"column":10,"offset":7529}}}],"position":{"start":{"line":235,"column":1,"offset":7520},"end":{"line":235,"column":10,"offset":7529}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":237,"column":6,"offset":7536},"end":{"line":237,"column":10,"offset":7540}}}],"position":{"start":{"line":237,"column":1,"offset":7531},"end":{"line":237,"column":10,"offset":7540}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":238,"column":7,"offset":7547},"end":{"line":238,"column":13,"offset":7553}}}],"position":{"start":{"line":238,"column":1,"offset":7541},"end":{"line":238,"column":13,"offset":7553}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":239,"column":1,"offset":7554},"end":{"line":239,"column":49,"offset":7602}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":239,"column":49,"offset":7602},"end":{"line":239,"column":57,"offset":7610}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":239,"column":57,"offset":7610},"end":{"line":239,"column":133,"offset":7686}}}],"position":{"start":{"line":239,"column":1,"offset":7554},"end":{"line":239,"column":133,"offset":7686}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":240,"column":1,"offset":7687},"end":{"line":250,"column":4,"offset":7882}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":251,"column":1,"offset":7883},"end":{"line":251,"column":5,"offset":7887}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":254,"column":1,"offset":7890},"end":{"line":255,"column":1,"offset":7972}}},{"type":"raw","value":"<br>","position":{"start":{"line":255,"column":1,"offset":7972},"end":{"line":255,"column":5,"offset":7976}}},{"type":"text","value":"\n","position":{"start":{"line":255,"column":5,"offset":7976},"end":{"line":256,"column":1,"offset":7977}}},{"type":"raw","value":"<br>","position":{"start":{"line":256,"column":1,"offset":7977},"end":{"line":256,"column":5,"offset":7981}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":256,"column":5,"offset":7981},"end":{"line":257,"column":26,"offset":8007}}}],"position":{"start":{"line":254,"column":1,"offset":7890},"end":{"line":257,"column":26,"offset":8007}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":258,"column":1,"offset":8008},"end":{"line":263,"column":4,"offset":8136}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":264,"column":1,"offset":8137},"end":{"line":264,"column":14,"offset":8150}}}],"position":{"start":{"line":264,"column":1,"offset":8137},"end":{"line":264,"column":14,"offset":8150}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":266,"column":1,"offset":8152},"end":{"line":279,"column":4,"offset":8434}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":281,"column":1,"offset":8436},"end":{"line":282,"column":5,"offset":8445}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":285,"column":7,"offset":8454},"end":{"line":285,"column":13,"offset":8460}}}],"position":{"start":{"line":285,"column":1,"offset":8448},"end":{"line":285,"column":13,"offset":8460}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":285,"column":13,"offset":8460}}}}