{"expireTime":9007200842251345000,"key":"transformer-remark-markdown-ast-74fb9b75b4448086bd5ee726b16caaaa-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632},"indent":[]}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities. \n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705},"indent":[]}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791},"indent":[]}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833},"indent":[]}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865},"indent":[]}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884},"indent":[]}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916},"indent":[]}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052},"indent":[]}},{"type":"text","value":"\nEnvironment: The name-object pairs the interpreter keeps in memory.\n","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":34,"column":1,"offset":1121},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1121},"end":{"line":34,"column":5,"offset":1125},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":34,"column":5,"offset":1125},"end":{"line":35,"column":1,"offset":1126},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":35,"column":1,"offset":1126},"end":{"line":35,"column":5,"offset":1130},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":35,"column":5,"offset":1130},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Procedures can be used to build on top of other procedures:\n","position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":1,"offset":1192},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1192},"end":{"line":38,"column":5,"offset":1196},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":5,"offset":1196},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (sum-of-squares x y)\n(+ (square x) (square y))</code></pre></div>","position":{"start":{"line":39,"column":1,"offset":1197},"end":{"line":42,"column":4,"offset":1259},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":43,"column":1,"offset":1260},"end":{"line":43,"column":5,"offset":1264},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Compound Procedure: procedure that you make out of primitives ex: ","position":{"start":{"line":45,"column":1,"offset":1266},"end":{"line":45,"column":67,"offset":1332},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">square</code>","position":{"start":{"line":45,"column":67,"offset":1332},"end":{"line":45,"column":75,"offset":1340},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1266},"end":{"line":45,"column":75,"offset":1340},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Primitive Procedure: procedure built into the language ex: ","position":{"start":{"line":47,"column":1,"offset":1342},"end":{"line":47,"column":60,"offset":1401},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":47,"column":60,"offset":1401},"end":{"line":47,"column":63,"offset":1404},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":47,"column":63,"offset":1404},"end":{"line":48,"column":1,"offset":1405},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1405},"end":{"line":48,"column":5,"offset":1409},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1342},"end":{"line":48,"column":5,"offset":1409},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":50,"column":7,"offset":1417},"end":{"line":50,"column":10,"offset":1420},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1411},"end":{"line":50,"column":10,"offset":1420},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":51,"column":7,"offset":1427},"end":{"line":51,"column":10,"offset":1430},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1421},"end":{"line":51,"column":10,"offset":1430},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":53,"column":6,"offset":1437},"end":{"line":53,"column":14,"offset":1445},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1432},"end":{"line":53,"column":14,"offset":1445},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":54,"column":7,"offset":1452},"end":{"line":54,"column":10,"offset":1455},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1446},"end":{"line":54,"column":10,"offset":1455},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":56,"column":8,"offset":1464},"end":{"line":56,"column":30,"offset":1486},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1457},"end":{"line":56,"column":30,"offset":1486},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":58,"column":1,"offset":1488},"end":{"line":59,"column":1,"offset":1632},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":59,"column":1,"offset":1632},"end":{"line":59,"column":5,"offset":1636},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":59,"column":5,"offset":1636},"end":{"line":59,"column":16,"offset":1647},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":59,"column":16,"offset":1647},"end":{"line":59,"column":20,"offset":1651},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":59,"column":20,"offset":1651},"end":{"line":61,"column":1,"offset":1795},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":61,"column":1,"offset":1795},"end":{"line":61,"column":5,"offset":1799},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":61,"column":5,"offset":1799},"end":{"line":61,"column":16,"offset":1810},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":61,"column":16,"offset":1810},"end":{"line":61,"column":20,"offset":1814},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":61,"column":20,"offset":1814},"end":{"line":62,"column":45,"offset":1859},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":62,"column":45,"offset":1859},"end":{"line":62,"column":49,"offset":1863},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":62,"column":49,"offset":1863},"end":{"line":62,"column":65,"offset":1879},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":62,"column":65,"offset":1879},"end":{"line":62,"column":69,"offset":1883},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":62,"column":69,"offset":1883},"end":{"line":64,"column":1,"offset":1926},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":64,"column":1,"offset":1926},"end":{"line":64,"column":5,"offset":1930},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":64,"column":5,"offset":1930},"end":{"line":64,"column":22,"offset":1947},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":64,"column":22,"offset":1947},"end":{"line":64,"column":26,"offset":1951},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":64,"column":26,"offset":1951},"end":{"line":65,"column":1,"offset":1952},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":65,"column":1,"offset":1952},"end":{"line":65,"column":5,"offset":1956},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":65,"column":5,"offset":1956},"end":{"line":67,"column":1,"offset":2074},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":67,"column":1,"offset":2074},"end":{"line":67,"column":5,"offset":2078},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":67,"column":5,"offset":2078},"end":{"line":69,"column":1,"offset":2199},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":69,"column":1,"offset":2199},"end":{"line":69,"column":12,"offset":2210},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":69,"column":12,"offset":2210},"end":{"line":69,"column":68,"offset":2266},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":69,"column":68,"offset":2266},"end":{"line":69,"column":79,"offset":2277},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":69,"column":79,"offset":2277},"end":{"line":69,"column":106,"offset":2304},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":69,"column":106,"offset":2304},"end":{"line":69,"column":109,"offset":2307},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":69,"column":109,"offset":2307},"end":{"line":69,"column":189,"offset":2387},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":69,"column":189,"offset":2387},"end":{"line":69,"column":192,"offset":2390},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":69,"column":192,"offset":2390},"end":{"line":69,"column":202,"offset":2400},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1488},"end":{"line":69,"column":202,"offset":2400},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":71,"column":8,"offset":2409},"end":{"line":71,"column":14,"offset":2415},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":2402},"end":{"line":71,"column":14,"offset":2415},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":72,"column":1,"offset":2416},"end":{"line":72,"column":9,"offset":2424},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":72,"column":9,"offset":2424},"end":{"line":72,"column":73,"offset":2488},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":2416},"end":{"line":72,"column":73,"offset":2488},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":73,"column":1,"offset":2489},"end":{"line":76,"column":4,"offset":2528},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":77,"column":1,"offset":2529},"end":{"line":77,"column":5,"offset":2533},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":79,"column":1,"offset":2535},"end":{"line":79,"column":72,"offset":2606},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":79,"column":72,"offset":2606},"end":{"line":79,"column":80,"offset":2614},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":79,"column":80,"offset":2614},"end":{"line":80,"column":1,"offset":2638},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":80,"column":1,"offset":2638},"end":{"line":80,"column":5,"offset":2642},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":80,"column":5,"offset":2642},"end":{"line":81,"column":1,"offset":2643},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":81,"column":1,"offset":2643},"end":{"line":81,"column":5,"offset":2647},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":81,"column":5,"offset":2647},"end":{"line":82,"column":184,"offset":2831},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":82,"column":184,"offset":2831},"end":{"line":82,"column":187,"offset":2834},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":82,"column":187,"offset":2834},"end":{"line":83,"column":1,"offset":2837},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":83,"column":1,"offset":2837},"end":{"line":83,"column":5,"offset":2841},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":83,"column":5,"offset":2841},"end":{"line":84,"column":1,"offset":2842},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":84,"column":1,"offset":2842},"end":{"line":84,"column":5,"offset":2846},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":84,"column":5,"offset":2846},"end":{"line":85,"column":27,"offset":2873},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":85,"column":27,"offset":2873},"end":{"line":85,"column":35,"offset":2881},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":85,"column":35,"offset":2881},"end":{"line":85,"column":86,"offset":2932},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":85,"column":86,"offset":2932},"end":{"line":85,"column":95,"offset":2941},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":85,"column":95,"offset":2941},"end":{"line":85,"column":97,"offset":2943},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":2535},"end":{"line":85,"column":97,"offset":2943},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":87,"column":1,"offset":2945},"end":{"line":87,"column":6,"offset":2950},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":89,"column":1,"offset":2952},"end":{"line":90,"column":1,"offset":2996},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":90,"column":1,"offset":2996},"end":{"line":90,"column":5,"offset":3000},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":90,"column":5,"offset":3000},"end":{"line":91,"column":1,"offset":3001},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":91,"column":1,"offset":3001},"end":{"line":91,"column":22,"offset":3022},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":91,"column":22,"offset":3022},"end":{"line":92,"column":1,"offset":3023},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":92,"column":1,"offset":3023},"end":{"line":92,"column":5,"offset":3027},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":2952},"end":{"line":92,"column":5,"offset":3027},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":94,"column":1,"offset":3029},"end":{"line":94,"column":152,"offset":3180},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":3029},"end":{"line":94,"column":152,"offset":3180},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":96,"column":8,"offset":3189},"end":{"line":96,"column":20,"offset":3201},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":3182},"end":{"line":96,"column":20,"offset":3201},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":98,"column":1,"offset":3203},"end":{"line":98,"column":56,"offset":3258},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":3203},"end":{"line":98,"column":56,"offset":3258},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":99,"column":1,"offset":3259},"end":{"line":104,"column":4,"offset":3350},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":105,"column":1,"offset":3351},"end":{"line":105,"column":5,"offset":3355},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":107,"column":1,"offset":3357},"end":{"line":107,"column":37,"offset":3393},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":107,"column":37,"offset":3393},"end":{"line":107,"column":41,"offset":3397},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":107,"column":41,"offset":3397},"end":{"line":108,"column":1,"offset":3414},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":108,"column":1,"offset":3414},"end":{"line":108,"column":5,"offset":3418},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":108,"column":5,"offset":3418},"end":{"line":109,"column":1,"offset":3419},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":109,"column":1,"offset":3419},"end":{"line":109,"column":5,"offset":3423},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":109,"column":5,"offset":3423},"end":{"line":110,"column":66,"offset":3489},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":110,"column":66,"offset":3489},"end":{"line":110,"column":89,"offset":3512},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":110,"column":89,"offset":3512},"end":{"line":111,"column":1,"offset":3552},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":111,"column":1,"offset":3552},"end":{"line":111,"column":5,"offset":3556},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":111,"column":5,"offset":3556},"end":{"line":112,"column":1,"offset":3557},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":112,"column":1,"offset":3557},"end":{"line":112,"column":5,"offset":3561},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":112,"column":5,"offset":3561},"end":{"line":113,"column":21,"offset":3582},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":113,"column":21,"offset":3582},"end":{"line":113,"column":25,"offset":3586},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":113,"column":25,"offset":3586},"end":{"line":114,"column":1,"offset":3640},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":114,"column":1,"offset":3640},"end":{"line":114,"column":5,"offset":3644},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":114,"column":5,"offset":3644},"end":{"line":115,"column":1,"offset":3645},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":115,"column":1,"offset":3645},"end":{"line":115,"column":5,"offset":3649},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":115,"column":5,"offset":3649},"end":{"line":116,"column":21,"offset":3670},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":116,"column":21,"offset":3670},"end":{"line":116,"column":25,"offset":3674},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":116,"column":25,"offset":3674},"end":{"line":117,"column":1,"offset":3729},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":117,"column":1,"offset":3729},"end":{"line":117,"column":5,"offset":3733},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":117,"column":5,"offset":3733},"end":{"line":118,"column":1,"offset":3734},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":118,"column":1,"offset":3734},"end":{"line":118,"column":5,"offset":3738},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":118,"column":5,"offset":3738},"end":{"line":119,"column":58,"offset":3796},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":119,"column":58,"offset":3796},"end":{"line":119,"column":61,"offset":3799},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":119,"column":61,"offset":3799},"end":{"line":119,"column":145,"offset":3883},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":119,"column":145,"offset":3883},"end":{"line":119,"column":153,"offset":3891},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":119,"column":153,"offset":3891},"end":{"line":119,"column":178,"offset":3916},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":3357},"end":{"line":119,"column":178,"offset":3916},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":121,"column":7,"offset":3924},"end":{"line":121,"column":10,"offset":3927},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":3918},"end":{"line":121,"column":10,"offset":3927},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":123,"column":8,"offset":3936},"end":{"line":123,"column":17,"offset":3945},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":3929},"end":{"line":123,"column":17,"offset":3945},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":124,"column":1,"offset":3946},"end":{"line":135,"column":4,"offset":4145},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":136,"column":1,"offset":4146},"end":{"line":136,"column":5,"offset":4150},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":138,"column":1,"offset":4152},"end":{"line":139,"column":1,"offset":4368},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":139,"column":1,"offset":4368},"end":{"line":139,"column":5,"offset":4372},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":139,"column":5,"offset":4372},"end":{"line":140,"column":1,"offset":4373},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":140,"column":1,"offset":4373},"end":{"line":140,"column":5,"offset":4377},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":140,"column":5,"offset":4377},"end":{"line":141,"column":72,"offset":4449},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":141,"column":72,"offset":4449},"end":{"line":141,"column":81,"offset":4458},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":141,"column":81,"offset":4458},"end":{"line":142,"column":1,"offset":4477},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":142,"column":1,"offset":4477},"end":{"line":142,"column":5,"offset":4481},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":142,"column":5,"offset":4481},"end":{"line":143,"column":1,"offset":4482},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":143,"column":1,"offset":4482},"end":{"line":143,"column":5,"offset":4486},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":143,"column":5,"offset":4486},"end":{"line":144,"column":10,"offset":4496},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":144,"column":10,"offset":4496},"end":{"line":144,"column":16,"offset":4502},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":144,"column":16,"offset":4502},"end":{"line":144,"column":34,"offset":4520},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":144,"column":34,"offset":4520},"end":{"line":144,"column":42,"offset":4528},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":144,"column":42,"offset":4528},"end":{"line":145,"column":24,"offset":4553},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":145,"column":24,"offset":4553},"end":{"line":145,"column":33,"offset":4562},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":145,"column":33,"offset":4562},"end":{"line":145,"column":107,"offset":4636},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":145,"column":107,"offset":4636},"end":{"line":145,"column":116,"offset":4645},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":145,"column":116,"offset":4645},"end":{"line":145,"column":134,"offset":4663},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":145,"column":134,"offset":4663},"end":{"line":145,"column":137,"offset":4666},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":145,"column":137,"offset":4666},"end":{"line":145,"column":161,"offset":4690},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":145,"column":161,"offset":4690},"end":{"line":145,"column":167,"offset":4696},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":145,"column":167,"offset":4696},"end":{"line":145,"column":192,"offset":4721},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":145,"column":192,"offset":4721},"end":{"line":145,"column":200,"offset":4729},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":145,"column":200,"offset":4729},"end":{"line":145,"column":218,"offset":4747},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":145,"column":218,"offset":4747},"end":{"line":145,"column":224,"offset":4753},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":145,"column":224,"offset":4753},"end":{"line":145,"column":245,"offset":4774},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":145,"column":245,"offset":4774},"end":{"line":145,"column":252,"offset":4781},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":145,"column":252,"offset":4781},"end":{"line":145,"column":257,"offset":4786},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":145,"column":257,"offset":4786},"end":{"line":145,"column":260,"offset":4789},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":145,"column":260,"offset":4789},"end":{"line":145,"column":285,"offset":4814},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":145,"column":285,"offset":4814},"end":{"line":145,"column":291,"offset":4820},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":145,"column":291,"offset":4820},"end":{"line":146,"column":96,"offset":4946},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":146,"column":96,"offset":4946},"end":{"line":146,"column":111,"offset":4961},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":146,"column":111,"offset":4961},"end":{"line":146,"column":182,"offset":5032},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":4152},"end":{"line":146,"column":182,"offset":5032},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":148,"column":8,"offset":5041},"end":{"line":148,"column":19,"offset":5052},"indent":[]}}],"position":{"start":{"line":148,"column":1,"offset":5034},"end":{"line":148,"column":19,"offset":5052},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":149,"column":1,"offset":5053},"end":{"line":149,"column":14,"offset":5066},"indent":[]}}],"position":{"start":{"line":149,"column":1,"offset":5053},"end":{"line":149,"column":14,"offset":5066},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":150,"column":1,"offset":5067},"end":{"line":165,"column":4,"offset":5482},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":166,"column":1,"offset":5483},"end":{"line":166,"column":5,"offset":5487},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":168,"column":1,"offset":5489},"end":{"line":168,"column":141,"offset":5629},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":5489},"end":{"line":168,"column":141,"offset":5629},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":170,"column":8,"offset":5638},"end":{"line":170,"column":30,"offset":5660},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":5631},"end":{"line":170,"column":30,"offset":5660},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":171,"column":1,"offset":5661},"end":{"line":171,"column":199,"offset":5859},"indent":[]}}],"position":{"start":{"line":171,"column":1,"offset":5661},"end":{"line":171,"column":199,"offset":5859},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":173,"column":8,"offset":5868},"end":{"line":173,"column":30,"offset":5890},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":5861},"end":{"line":173,"column":30,"offset":5890},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":175,"column":1,"offset":5892},"end":{"line":176,"column":1,"offset":5967},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":176,"column":1,"offset":5967},"end":{"line":176,"column":5,"offset":5971},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":176,"column":5,"offset":5971},"end":{"line":177,"column":1,"offset":5972},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":177,"column":1,"offset":5972},"end":{"line":177,"column":5,"offset":5976},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":177,"column":5,"offset":5976},"end":{"line":179,"column":1,"offset":6038},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":179,"column":1,"offset":6038},"end":{"line":179,"column":5,"offset":6042},"indent":[]}},{"type":"break","position":{"start":{"line":179,"column":5,"offset":6042},"end":{"line":180,"column":1,"offset":6045},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":180,"column":1,"offset":6045},"end":{"line":180,"column":11,"offset":6055},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":180,"column":11,"offset":6055},"end":{"line":180,"column":19,"offset":6063},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":180,"column":19,"offset":6063},"end":{"line":180,"column":24,"offset":6068},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":180,"column":24,"offset":6068},"end":{"line":180,"column":34,"offset":6078},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":180,"column":34,"offset":6078},"end":{"line":181,"column":1,"offset":6127},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":181,"column":1,"offset":6127},"end":{"line":181,"column":5,"offset":6131},"indent":[]}}],"position":{"start":{"line":175,"column":1,"offset":5892},"end":{"line":181,"column":5,"offset":6131},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":183,"column":8,"offset":6140},"end":{"line":183,"column":12,"offset":6144},"indent":[]}}],"position":{"start":{"line":183,"column":1,"offset":6133},"end":{"line":183,"column":12,"offset":6144},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":184,"column":1,"offset":6145},"end":{"line":189,"column":4,"offset":6256},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":190,"column":1,"offset":6257},"end":{"line":191,"column":5,"offset":6266},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":193,"column":1,"offset":6268},"end":{"line":193,"column":7,"offset":6274},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":193,"column":7,"offset":6274},"end":{"line":195,"column":1,"offset":6356},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":195,"column":1,"offset":6356},"end":{"line":195,"column":5,"offset":6360},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":195,"column":5,"offset":6360},"end":{"line":196,"column":1,"offset":6361},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":196,"column":1,"offset":6361},"end":{"line":196,"column":5,"offset":6365},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":196,"column":5,"offset":6365},"end":{"line":197,"column":10,"offset":6375},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":197,"column":10,"offset":6375},"end":{"line":197,"column":14,"offset":6379},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":197,"column":14,"offset":6379},"end":{"line":197,"column":22,"offset":6387},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":197,"column":22,"offset":6387},"end":{"line":197,"column":30,"offset":6395},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":197,"column":30,"offset":6395},"end":{"line":197,"column":50,"offset":6415},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":197,"column":50,"offset":6415},"end":{"line":197,"column":53,"offset":6418},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":197,"column":53,"offset":6418},"end":{"line":197,"column":90,"offset":6455},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":197,"column":90,"offset":6455},"end":{"line":197,"column":96,"offset":6461},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":197,"column":96,"offset":6461},"end":{"line":198,"column":1,"offset":6464},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":198,"column":1,"offset":6464},"end":{"line":198,"column":5,"offset":6468},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":198,"column":5,"offset":6468},"end":{"line":199,"column":1,"offset":6469},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":199,"column":1,"offset":6469},"end":{"line":199,"column":5,"offset":6473},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":199,"column":5,"offset":6473},"end":{"line":200,"column":14,"offset":6487},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":200,"column":14,"offset":6487},"end":{"line":200,"column":18,"offset":6491},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":200,"column":18,"offset":6491},"end":{"line":200,"column":90,"offset":6563},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":200,"column":90,"offset":6563},"end":{"line":200,"column":94,"offset":6567},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":200,"column":94,"offset":6567},"end":{"line":200,"column":125,"offset":6598},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":200,"column":125,"offset":6598},"end":{"line":200,"column":131,"offset":6604},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":200,"column":131,"offset":6604},"end":{"line":201,"column":1,"offset":6619},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":201,"column":1,"offset":6619},"end":{"line":201,"column":5,"offset":6623},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":201,"column":5,"offset":6623},"end":{"line":202,"column":1,"offset":6624},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":202,"column":1,"offset":6624},"end":{"line":202,"column":5,"offset":6628},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":202,"column":5,"offset":6628},"end":{"line":203,"column":14,"offset":6642},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":203,"column":14,"offset":6642},"end":{"line":203,"column":18,"offset":6646},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":203,"column":18,"offset":6646},"end":{"line":203,"column":37,"offset":6665},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":203,"column":37,"offset":6665},"end":{"line":203,"column":40,"offset":6668},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":203,"column":40,"offset":6668},"end":{"line":203,"column":77,"offset":6705},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":203,"column":77,"offset":6705},"end":{"line":203,"column":81,"offset":6709},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":203,"column":81,"offset":6709},"end":{"line":203,"column":99,"offset":6727},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":203,"column":99,"offset":6727},"end":{"line":203,"column":102,"offset":6730},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":203,"column":102,"offset":6730},"end":{"line":203,"column":133,"offset":6761},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":203,"column":133,"offset":6761},"end":{"line":203,"column":139,"offset":6767},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":203,"column":139,"offset":6767},"end":{"line":203,"column":167,"offset":6795},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":203,"column":167,"offset":6795},"end":{"line":203,"column":171,"offset":6799},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":203,"column":171,"offset":6799},"end":{"line":204,"column":1,"offset":6801},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":204,"column":1,"offset":6801},"end":{"line":204,"column":5,"offset":6805},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":204,"column":5,"offset":6805},"end":{"line":205,"column":1,"offset":6806},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":205,"column":1,"offset":6806},"end":{"line":205,"column":5,"offset":6810},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":205,"column":5,"offset":6810},"end":{"line":207,"column":1,"offset":6830},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":207,"column":1,"offset":6830},"end":{"line":207,"column":5,"offset":6834},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":207,"column":5,"offset":6834},"end":{"line":208,"column":6,"offset":6840},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":208,"column":6,"offset":6840},"end":{"line":208,"column":12,"offset":6846},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":208,"column":12,"offset":6846},"end":{"line":208,"column":30,"offset":6864},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":208,"column":30,"offset":6864},"end":{"line":208,"column":36,"offset":6870},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":208,"column":36,"offset":6870},"end":{"line":208,"column":62,"offset":6896},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":208,"column":62,"offset":6896},"end":{"line":208,"column":75,"offset":6909},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":208,"column":75,"offset":6909},"end":{"line":208,"column":159,"offset":6993},"indent":[]}}],"position":{"start":{"line":193,"column":1,"offset":6268},"end":{"line":208,"column":159,"offset":6993},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":210,"column":8,"offset":7002},"end":{"line":210,"column":41,"offset":7035},"indent":[]}}],"position":{"start":{"line":210,"column":1,"offset":6995},"end":{"line":210,"column":41,"offset":7035},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":211,"column":1,"offset":7036},"end":{"line":216,"column":4,"offset":7111},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":217,"column":1,"offset":7112},"end":{"line":218,"column":1,"offset":7131},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":218,"column":1,"offset":7131},"end":{"line":218,"column":5,"offset":7135},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":218,"column":5,"offset":7135},"end":{"line":220,"column":5,"offset":7273},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":220,"column":5,"offset":7273},"end":{"line":220,"column":9,"offset":7277},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":220,"column":9,"offset":7277},"end":{"line":221,"column":5,"offset":7282},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":221,"column":5,"offset":7282},"end":{"line":221,"column":27,"offset":7304},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":221,"column":27,"offset":7304},"end":{"line":222,"column":5,"offset":7309},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":222,"column":5,"offset":7309},"end":{"line":222,"column":9,"offset":7313},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":222,"column":9,"offset":7313},"end":{"line":223,"column":5,"offset":7318},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":223,"column":5,"offset":7318},"end":{"line":223,"column":12,"offset":7325},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":223,"column":12,"offset":7325},"end":{"line":223,"column":17,"offset":7330},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":223,"column":17,"offset":7330},"end":{"line":223,"column":25,"offset":7338},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":223,"column":25,"offset":7338},"end":{"line":223,"column":63,"offset":7376},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":223,"column":63,"offset":7376},"end":{"line":223,"column":66,"offset":7379},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":223,"column":66,"offset":7379},"end":{"line":223,"column":86,"offset":7399},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":223,"column":86,"offset":7399},"end":{"line":223,"column":89,"offset":7402},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":223,"column":89,"offset":7402},"end":{"line":223,"column":110,"offset":7423},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":223,"column":110,"offset":7423},"end":{"line":223,"column":119,"offset":7432},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":223,"column":119,"offset":7432},"end":{"line":224,"column":1,"offset":7434},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":224,"column":1,"offset":7434},"end":{"line":224,"column":5,"offset":7438},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":224,"column":5,"offset":7438},"end":{"line":226,"column":1,"offset":7454},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":226,"column":1,"offset":7454},"end":{"line":226,"column":5,"offset":7458},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":226,"column":5,"offset":7458},"end":{"line":228,"column":5,"offset":7565},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":228,"column":5,"offset":7565},"end":{"line":228,"column":9,"offset":7569},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":228,"column":9,"offset":7569},"end":{"line":229,"column":1,"offset":7570},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":229,"column":1,"offset":7570},"end":{"line":229,"column":23,"offset":7592},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":229,"column":23,"offset":7592},"end":{"line":229,"column":35,"offset":7604},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":229,"column":35,"offset":7604},"end":{"line":229,"column":61,"offset":7630},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":229,"column":61,"offset":7630},"end":{"line":230,"column":1,"offset":7631},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":230,"column":1,"offset":7631},"end":{"line":230,"column":5,"offset":7635},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":230,"column":5,"offset":7635},"end":{"line":231,"column":5,"offset":7640},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":231,"column":5,"offset":7640},"end":{"line":231,"column":8,"offset":7643},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":231,"column":8,"offset":7643},"end":{"line":231,"column":58,"offset":7693},"indent":[]}}],"position":{"start":{"line":217,"column":1,"offset":7112},"end":{"line":231,"column":58,"offset":7693},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":233,"column":1,"offset":7695},"end":{"line":234,"column":1,"offset":7713},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":234,"column":1,"offset":7713},"end":{"line":234,"column":5,"offset":7717},"indent":[]}}],"position":{"start":{"line":233,"column":1,"offset":7695},"end":{"line":234,"column":5,"offset":7717},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":235,"column":1,"offset":7718},"end":{"line":237,"column":4,"offset":7748},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":238,"column":1,"offset":7749},"end":{"line":238,"column":13,"offset":7761},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":7749},"end":{"line":238,"column":13,"offset":7761},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":239,"column":1,"offset":7762},"end":{"line":245,"column":4,"offset":7841},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":246,"column":1,"offset":7842},"end":{"line":246,"column":8,"offset":7849},"indent":[]}}],"position":{"start":{"line":246,"column":1,"offset":7842},"end":{"line":246,"column":8,"offset":7849},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":247,"column":1,"offset":7850},"end":{"line":254,"column":4,"offset":7974},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":255,"column":1,"offset":7975},"end":{"line":256,"column":5,"offset":7984},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":258,"column":1,"offset":7986},"end":{"line":258,"column":11,"offset":7996},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":258,"column":11,"offset":7996},"end":{"line":258,"column":24,"offset":8009},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":258,"column":24,"offset":8009},"end":{"line":258,"column":107,"offset":8092},"indent":[]}}],"position":{"start":{"line":258,"column":1,"offset":7986},"end":{"line":258,"column":107,"offset":8092},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":260,"column":7,"offset":8100},"end":{"line":260,"column":10,"offset":8103},"indent":[]}}],"position":{"start":{"line":260,"column":1,"offset":8094},"end":{"line":260,"column":10,"offset":8103},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":261,"column":7,"offset":8110},"end":{"line":261,"column":10,"offset":8113},"indent":[]}}],"position":{"start":{"line":261,"column":1,"offset":8104},"end":{"line":261,"column":10,"offset":8113},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":263,"column":6,"offset":8120},"end":{"line":263,"column":10,"offset":8124},"indent":[]}}],"position":{"start":{"line":263,"column":1,"offset":8115},"end":{"line":263,"column":10,"offset":8124},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":264,"column":7,"offset":8131},"end":{"line":264,"column":13,"offset":8137},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":8125},"end":{"line":264,"column":13,"offset":8137},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":265,"column":1,"offset":8138},"end":{"line":265,"column":49,"offset":8186},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":265,"column":49,"offset":8186},"end":{"line":265,"column":57,"offset":8194},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":265,"column":57,"offset":8194},"end":{"line":265,"column":133,"offset":8270},"indent":[]}}],"position":{"start":{"line":265,"column":1,"offset":8138},"end":{"line":265,"column":133,"offset":8270},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":266,"column":1,"offset":8271},"end":{"line":276,"column":4,"offset":8466},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":277,"column":1,"offset":8467},"end":{"line":277,"column":5,"offset":8471},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":280,"column":1,"offset":8474},"end":{"line":281,"column":1,"offset":8556},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":281,"column":1,"offset":8556},"end":{"line":281,"column":5,"offset":8560},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":281,"column":5,"offset":8560},"end":{"line":282,"column":1,"offset":8561},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":282,"column":1,"offset":8561},"end":{"line":282,"column":5,"offset":8565},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":282,"column":5,"offset":8565},"end":{"line":283,"column":26,"offset":8591},"indent":[1]}}],"position":{"start":{"line":280,"column":1,"offset":8474},"end":{"line":283,"column":26,"offset":8591},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":284,"column":1,"offset":8592},"end":{"line":289,"column":4,"offset":8720},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":290,"column":1,"offset":8721},"end":{"line":290,"column":14,"offset":8734},"indent":[]}}],"position":{"start":{"line":290,"column":1,"offset":8721},"end":{"line":290,"column":14,"offset":8734},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":292,"column":1,"offset":8736},"end":{"line":305,"column":4,"offset":9018},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":307,"column":1,"offset":9020},"end":{"line":308,"column":5,"offset":9029},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":311,"column":7,"offset":9038},"end":{"line":311,"column":13,"offset":9044},"indent":[]}}],"position":{"start":{"line":311,"column":1,"offset":9032},"end":{"line":311,"column":13,"offset":9044},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":311,"column":13,"offset":9044}}}}