{"expireTime":9007200842160605000,"key":"transformer-remark-markdown-ast-7eb7f35cfd9024bbd0f05cdfe96cc710-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":10,"offset":421},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":10,"offset":421},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":10,"column":7,"offset":428},"end":{"line":10,"column":10,"offset":431},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":422},"end":{"line":10,"column":10,"offset":431},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":11,"column":7,"offset":438},"end":{"line":11,"column":10,"offset":441},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":432},"end":{"line":11,"column":10,"offset":441},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":13,"column":6,"offset":448},"end":{"line":13,"column":14,"offset":456},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":443},"end":{"line":13,"column":14,"offset":456},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":14,"column":7,"offset":463},"end":{"line":14,"column":10,"offset":466},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":457},"end":{"line":14,"column":10,"offset":466},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":16,"column":8,"offset":475},"end":{"line":16,"column":30,"offset":497},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":468},"end":{"line":16,"column":30,"offset":497},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":18,"column":1,"offset":499},"end":{"line":19,"column":1,"offset":643},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":19,"column":1,"offset":643},"end":{"line":19,"column":5,"offset":647},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":19,"column":5,"offset":647},"end":{"line":19,"column":16,"offset":658},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":19,"column":16,"offset":658},"end":{"line":19,"column":20,"offset":662},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":19,"column":20,"offset":662},"end":{"line":21,"column":1,"offset":806},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":21,"column":1,"offset":806},"end":{"line":21,"column":5,"offset":810},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":21,"column":5,"offset":810},"end":{"line":21,"column":16,"offset":821},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":21,"column":16,"offset":821},"end":{"line":21,"column":20,"offset":825},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":21,"column":20,"offset":825},"end":{"line":22,"column":45,"offset":870},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":45,"offset":870},"end":{"line":22,"column":49,"offset":874},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":22,"column":49,"offset":874},"end":{"line":22,"column":65,"offset":890},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":65,"offset":890},"end":{"line":22,"column":69,"offset":894},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":22,"column":69,"offset":894},"end":{"line":24,"column":1,"offset":937},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":24,"column":1,"offset":937},"end":{"line":24,"column":5,"offset":941},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":24,"column":5,"offset":941},"end":{"line":24,"column":22,"offset":958},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":24,"column":22,"offset":958},"end":{"line":24,"column":26,"offset":962},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":24,"column":26,"offset":962},"end":{"line":25,"column":1,"offset":963},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":25,"column":1,"offset":963},"end":{"line":25,"column":5,"offset":967},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":25,"column":5,"offset":967},"end":{"line":27,"column":1,"offset":1085},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":27,"column":1,"offset":1085},"end":{"line":27,"column":5,"offset":1089},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":27,"column":5,"offset":1089},"end":{"line":29,"column":1,"offset":1210},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":29,"column":1,"offset":1210},"end":{"line":29,"column":12,"offset":1221},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":29,"column":12,"offset":1221},"end":{"line":29,"column":68,"offset":1277},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":29,"column":68,"offset":1277},"end":{"line":29,"column":79,"offset":1288},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":29,"column":79,"offset":1288},"end":{"line":29,"column":106,"offset":1315},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":29,"column":106,"offset":1315},"end":{"line":29,"column":109,"offset":1318},"indent":[]}},{"type":"text","value":" is now 7 and it has 2 primitive values, meaning it can calculate the ","position":{"start":{"line":29,"column":109,"offset":1318},"end":{"line":29,"column":179,"offset":1388},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":29,"column":179,"offset":1388},"end":{"line":29,"column":182,"offset":1391},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":29,"column":182,"offset":1391},"end":{"line":29,"column":192,"offset":1401},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":499},"end":{"line":29,"column":192,"offset":1401},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":31,"column":8,"offset":1410},"end":{"line":31,"column":14,"offset":1416},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1403},"end":{"line":31,"column":14,"offset":1416},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":32,"column":1,"offset":1417},"end":{"line":32,"column":9,"offset":1425},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":32,"column":9,"offset":1425},"end":{"line":32,"column":73,"offset":1489},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1417},"end":{"line":32,"column":73,"offset":1489},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":33,"column":1,"offset":1490},"end":{"line":36,"column":4,"offset":1529},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":37,"column":1,"offset":1530},"end":{"line":37,"column":5,"offset":1534},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":39,"column":1,"offset":1536},"end":{"line":39,"column":72,"offset":1607},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":39,"column":72,"offset":1607},"end":{"line":39,"column":80,"offset":1615},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":39,"column":80,"offset":1615},"end":{"line":40,"column":1,"offset":1639},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":40,"column":1,"offset":1639},"end":{"line":40,"column":5,"offset":1643},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":40,"column":5,"offset":1643},"end":{"line":41,"column":1,"offset":1644},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":41,"column":1,"offset":1644},"end":{"line":41,"column":5,"offset":1648},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":41,"column":5,"offset":1648},"end":{"line":42,"column":184,"offset":1832},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":42,"column":184,"offset":1832},"end":{"line":42,"column":187,"offset":1835},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":42,"column":187,"offset":1835},"end":{"line":43,"column":1,"offset":1838},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":43,"column":1,"offset":1838},"end":{"line":43,"column":5,"offset":1842},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":43,"column":5,"offset":1842},"end":{"line":44,"column":1,"offset":1843},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1843},"end":{"line":44,"column":5,"offset":1847},"indent":[]}},{"type":"text","value":"\nThe second parameter that define takes in is the body that the procedure will call ","position":{"start":{"line":44,"column":5,"offset":1847},"end":{"line":45,"column":84,"offset":1931},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":45,"column":84,"offset":1931},"end":{"line":45,"column":93,"offset":1940},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":45,"column":93,"offset":1940},"end":{"line":45,"column":95,"offset":1942},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1536},"end":{"line":45,"column":95,"offset":1942},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":47,"column":1,"offset":1944},"end":{"line":47,"column":6,"offset":1949},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":49,"column":1,"offset":1951},"end":{"line":50,"column":1,"offset":1995},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":50,"column":1,"offset":1995},"end":{"line":50,"column":5,"offset":1999},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":50,"column":5,"offset":1999},"end":{"line":51,"column":1,"offset":2000},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":51,"column":1,"offset":2000},"end":{"line":51,"column":22,"offset":2021},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":51,"column":22,"offset":2021},"end":{"line":52,"column":1,"offset":2022},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":52,"column":1,"offset":2022},"end":{"line":52,"column":5,"offset":2026},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1951},"end":{"line":52,"column":5,"offset":2026},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no body needs to be called for the second parameter.","position":{"start":{"line":54,"column":1,"offset":2028},"end":{"line":54,"column":143,"offset":2170},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":2028},"end":{"line":54,"column":143,"offset":2170},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":56,"column":8,"offset":2179},"end":{"line":56,"column":20,"offset":2191},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":2172},"end":{"line":56,"column":20,"offset":2191},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":58,"column":1,"offset":2193},"end":{"line":58,"column":56,"offset":2248},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":2193},"end":{"line":58,"column":56,"offset":2248},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":59,"column":1,"offset":2249},"end":{"line":64,"column":4,"offset":2340},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":65,"column":1,"offset":2341},"end":{"line":65,"column":5,"offset":2345},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":67,"column":1,"offset":2347},"end":{"line":67,"column":37,"offset":2383},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":67,"column":37,"offset":2383},"end":{"line":67,"column":41,"offset":2387},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":67,"column":41,"offset":2387},"end":{"line":68,"column":1,"offset":2404},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":68,"column":1,"offset":2404},"end":{"line":68,"column":5,"offset":2408},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":68,"column":5,"offset":2408},"end":{"line":69,"column":1,"offset":2409},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":69,"column":1,"offset":2409},"end":{"line":69,"column":5,"offset":2413},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":69,"column":5,"offset":2413},"end":{"line":70,"column":66,"offset":2479},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":70,"column":66,"offset":2479},"end":{"line":70,"column":89,"offset":2502},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":70,"column":89,"offset":2502},"end":{"line":71,"column":1,"offset":2542},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":71,"column":1,"offset":2542},"end":{"line":71,"column":5,"offset":2546},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":71,"column":5,"offset":2546},"end":{"line":72,"column":1,"offset":2547},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":72,"column":1,"offset":2547},"end":{"line":72,"column":5,"offset":2551},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":72,"column":5,"offset":2551},"end":{"line":73,"column":21,"offset":2572},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":73,"column":21,"offset":2572},"end":{"line":73,"column":25,"offset":2576},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":73,"column":25,"offset":2576},"end":{"line":74,"column":1,"offset":2630},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":74,"column":1,"offset":2630},"end":{"line":74,"column":5,"offset":2634},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":74,"column":5,"offset":2634},"end":{"line":75,"column":1,"offset":2635},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2635},"end":{"line":75,"column":5,"offset":2639},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":75,"column":5,"offset":2639},"end":{"line":76,"column":21,"offset":2660},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":76,"column":21,"offset":2660},"end":{"line":76,"column":25,"offset":2664},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":76,"column":25,"offset":2664},"end":{"line":77,"column":1,"offset":2719},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":77,"column":1,"offset":2719},"end":{"line":77,"column":5,"offset":2723},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":77,"column":5,"offset":2723},"end":{"line":78,"column":1,"offset":2724},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2724},"end":{"line":78,"column":5,"offset":2728},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":78,"column":5,"offset":2728},"end":{"line":79,"column":58,"offset":2786},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":79,"column":58,"offset":2786},"end":{"line":79,"column":61,"offset":2789},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":79,"column":61,"offset":2789},"end":{"line":79,"column":145,"offset":2873},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":79,"column":145,"offset":2873},"end":{"line":79,"column":153,"offset":2881},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":79,"column":153,"offset":2881},"end":{"line":79,"column":178,"offset":2906},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":2347},"end":{"line":79,"column":178,"offset":2906},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":81,"column":7,"offset":2914},"end":{"line":81,"column":10,"offset":2917},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":2908},"end":{"line":81,"column":10,"offset":2917},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":82,"column":7,"offset":2924},"end":{"line":82,"column":10,"offset":2927},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":2918},"end":{"line":82,"column":10,"offset":2927},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":83,"column":7,"offset":2934},"end":{"line":83,"column":10,"offset":2937},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":2928},"end":{"line":83,"column":10,"offset":2937},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":85,"column":6,"offset":2944},"end":{"line":85,"column":10,"offset":2948},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":2939},"end":{"line":85,"column":10,"offset":2948},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1","position":{"start":{"line":86,"column":7,"offset":2955},"end":{"line":86,"column":12,"offset":2960},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":2949},"end":{"line":86,"column":13,"offset":2961},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 2","position":{"start":{"line":87,"column":7,"offset":2968},"end":{"line":87,"column":12,"offset":2973},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":2962},"end":{"line":87,"column":13,"offset":2974},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":87,"column":13,"offset":2974}}}}