{"expireTime":9007200842255717000,"key":"transformer-remark-markdown-ast-7608123b26f38a495cace26bb160e2bf-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632},"indent":[]}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities. \n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705},"indent":[]}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791},"indent":[]}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833},"indent":[]}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865},"indent":[]}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884},"indent":[]}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916},"indent":[]}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052},"indent":[]}},{"type":"text","value":"\nEnvironment: The name-object pairs the interpreter keeps in memory.\n","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":34,"column":1,"offset":1121},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1121},"end":{"line":34,"column":5,"offset":1125},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":34,"column":5,"offset":1125},"end":{"line":35,"column":1,"offset":1126},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":35,"column":1,"offset":1126},"end":{"line":35,"column":5,"offset":1130},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":35,"column":5,"offset":1130},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Compound Procedures can be used to build on top of other Compound Procedures:\n","position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":1,"offset":1210},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1210},"end":{"line":38,"column":5,"offset":1214},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":5,"offset":1214},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (sum-of-squares x y)\n(+ (square x) (square y))</code></pre></div>","position":{"start":{"line":39,"column":1,"offset":1215},"end":{"line":42,"column":4,"offset":1277},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":43,"column":1,"offset":1278},"end":{"line":43,"column":5,"offset":1282},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Compound Procedure: procedure that you make out of other procedures.","position":{"start":{"line":45,"column":1,"offset":1284},"end":{"line":45,"column":69,"offset":1352},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1284},"end":{"line":45,"column":69,"offset":1352},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Primitive Procedure: procedure built into the language ex: ","position":{"start":{"line":47,"column":1,"offset":1354},"end":{"line":47,"column":60,"offset":1413},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":47,"column":60,"offset":1413},"end":{"line":47,"column":63,"offset":1416},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":47,"column":63,"offset":1416},"end":{"line":48,"column":1,"offset":1417},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1417},"end":{"line":48,"column":5,"offset":1421},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":48,"column":5,"offset":1421},"end":{"line":49,"column":1,"offset":1422},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":49,"column":1,"offset":1422},"end":{"line":49,"column":5,"offset":1426},"indent":[]}},{"type":"text","value":"\nBoth are used exactly the same.","position":{"start":{"line":49,"column":5,"offset":1426},"end":{"line":50,"column":32,"offset":1458},"indent":[1]}}],"position":{"start":{"line":47,"column":1,"offset":1354},"end":{"line":50,"column":32,"offset":1458},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"When writing programs it is important to write modular programs that don’t cared how the other things are computed, only what should be computed.\n","position":{"start":{"line":52,"column":1,"offset":1460},"end":{"line":53,"column":1,"offset":1606},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":53,"column":1,"offset":1606},"end":{"line":53,"column":5,"offset":1610},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1460},"end":{"line":53,"column":5,"offset":1610},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":55,"column":7,"offset":1618},"end":{"line":55,"column":10,"offset":1621},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":1612},"end":{"line":55,"column":10,"offset":1621},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":56,"column":7,"offset":1628},"end":{"line":56,"column":10,"offset":1631},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1622},"end":{"line":56,"column":10,"offset":1631},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":58,"column":6,"offset":1638},"end":{"line":58,"column":14,"offset":1646},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1633},"end":{"line":58,"column":14,"offset":1646},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":59,"column":7,"offset":1653},"end":{"line":59,"column":10,"offset":1656},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1647},"end":{"line":59,"column":10,"offset":1656},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":61,"column":8,"offset":1665},"end":{"line":61,"column":30,"offset":1687},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":1658},"end":{"line":61,"column":30,"offset":1687},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":63,"column":1,"offset":1689},"end":{"line":64,"column":1,"offset":1833},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":64,"column":1,"offset":1833},"end":{"line":64,"column":5,"offset":1837},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":64,"column":5,"offset":1837},"end":{"line":64,"column":16,"offset":1848},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":64,"column":16,"offset":1848},"end":{"line":64,"column":20,"offset":1852},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":64,"column":20,"offset":1852},"end":{"line":66,"column":1,"offset":1996},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":66,"column":1,"offset":1996},"end":{"line":66,"column":5,"offset":2000},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":66,"column":5,"offset":2000},"end":{"line":66,"column":16,"offset":2011},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":66,"column":16,"offset":2011},"end":{"line":66,"column":20,"offset":2015},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":66,"column":20,"offset":2015},"end":{"line":67,"column":45,"offset":2060},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":67,"column":45,"offset":2060},"end":{"line":67,"column":49,"offset":2064},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":67,"column":49,"offset":2064},"end":{"line":67,"column":65,"offset":2080},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":67,"column":65,"offset":2080},"end":{"line":67,"column":69,"offset":2084},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":67,"column":69,"offset":2084},"end":{"line":69,"column":1,"offset":2127},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":69,"column":1,"offset":2127},"end":{"line":69,"column":5,"offset":2131},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":69,"column":5,"offset":2131},"end":{"line":69,"column":22,"offset":2148},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":69,"column":22,"offset":2148},"end":{"line":69,"column":26,"offset":2152},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":69,"column":26,"offset":2152},"end":{"line":70,"column":1,"offset":2153},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":70,"column":1,"offset":2153},"end":{"line":70,"column":5,"offset":2157},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":70,"column":5,"offset":2157},"end":{"line":72,"column":1,"offset":2275},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":72,"column":1,"offset":2275},"end":{"line":72,"column":5,"offset":2279},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":72,"column":5,"offset":2279},"end":{"line":74,"column":1,"offset":2400},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":74,"column":1,"offset":2400},"end":{"line":74,"column":12,"offset":2411},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":74,"column":12,"offset":2411},"end":{"line":74,"column":68,"offset":2467},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":74,"column":68,"offset":2467},"end":{"line":74,"column":79,"offset":2478},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":74,"column":79,"offset":2478},"end":{"line":74,"column":106,"offset":2505},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":74,"column":106,"offset":2505},"end":{"line":74,"column":109,"offset":2508},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":74,"column":109,"offset":2508},"end":{"line":74,"column":189,"offset":2588},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":74,"column":189,"offset":2588},"end":{"line":74,"column":192,"offset":2591},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":74,"column":192,"offset":2591},"end":{"line":74,"column":202,"offset":2601},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":1689},"end":{"line":74,"column":202,"offset":2601},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":76,"column":8,"offset":2610},"end":{"line":76,"column":14,"offset":2616},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":2603},"end":{"line":76,"column":14,"offset":2616},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":77,"column":1,"offset":2617},"end":{"line":77,"column":9,"offset":2625},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":77,"column":9,"offset":2625},"end":{"line":77,"column":73,"offset":2689},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":2617},"end":{"line":77,"column":73,"offset":2689},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":78,"column":1,"offset":2690},"end":{"line":81,"column":4,"offset":2729},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":82,"column":1,"offset":2730},"end":{"line":82,"column":5,"offset":2734},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":84,"column":1,"offset":2736},"end":{"line":84,"column":72,"offset":2807},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":84,"column":72,"offset":2807},"end":{"line":84,"column":80,"offset":2815},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":84,"column":80,"offset":2815},"end":{"line":85,"column":1,"offset":2839},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":85,"column":1,"offset":2839},"end":{"line":85,"column":5,"offset":2843},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":85,"column":5,"offset":2843},"end":{"line":86,"column":1,"offset":2844},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":86,"column":1,"offset":2844},"end":{"line":86,"column":5,"offset":2848},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":86,"column":5,"offset":2848},"end":{"line":87,"column":184,"offset":3032},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":87,"column":184,"offset":3032},"end":{"line":87,"column":187,"offset":3035},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":87,"column":187,"offset":3035},"end":{"line":88,"column":1,"offset":3038},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":88,"column":1,"offset":3038},"end":{"line":88,"column":5,"offset":3042},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":88,"column":5,"offset":3042},"end":{"line":89,"column":1,"offset":3043},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":89,"column":1,"offset":3043},"end":{"line":89,"column":5,"offset":3047},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":89,"column":5,"offset":3047},"end":{"line":90,"column":27,"offset":3074},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":90,"column":27,"offset":3074},"end":{"line":90,"column":35,"offset":3082},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":90,"column":35,"offset":3082},"end":{"line":90,"column":86,"offset":3133},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":90,"column":86,"offset":3133},"end":{"line":90,"column":95,"offset":3142},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":90,"column":95,"offset":3142},"end":{"line":90,"column":97,"offset":3144},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":2736},"end":{"line":90,"column":97,"offset":3144},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":92,"column":1,"offset":3146},"end":{"line":92,"column":6,"offset":3151},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":94,"column":1,"offset":3153},"end":{"line":95,"column":1,"offset":3197},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":95,"column":1,"offset":3197},"end":{"line":95,"column":5,"offset":3201},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":95,"column":5,"offset":3201},"end":{"line":96,"column":1,"offset":3202},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":96,"column":1,"offset":3202},"end":{"line":96,"column":22,"offset":3223},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":96,"column":22,"offset":3223},"end":{"line":97,"column":1,"offset":3224},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":97,"column":1,"offset":3224},"end":{"line":97,"column":5,"offset":3228},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":3153},"end":{"line":97,"column":5,"offset":3228},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":99,"column":1,"offset":3230},"end":{"line":99,"column":152,"offset":3381},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":3230},"end":{"line":99,"column":152,"offset":3381},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":101,"column":8,"offset":3390},"end":{"line":101,"column":20,"offset":3402},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":3383},"end":{"line":101,"column":20,"offset":3402},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":103,"column":1,"offset":3404},"end":{"line":103,"column":56,"offset":3459},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":3404},"end":{"line":103,"column":56,"offset":3459},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":104,"column":1,"offset":3460},"end":{"line":109,"column":4,"offset":3551},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":110,"column":1,"offset":3552},"end":{"line":110,"column":5,"offset":3556},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":112,"column":1,"offset":3558},"end":{"line":112,"column":37,"offset":3594},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":112,"column":37,"offset":3594},"end":{"line":112,"column":41,"offset":3598},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":112,"column":41,"offset":3598},"end":{"line":113,"column":1,"offset":3615},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":113,"column":1,"offset":3615},"end":{"line":113,"column":5,"offset":3619},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":113,"column":5,"offset":3619},"end":{"line":114,"column":1,"offset":3620},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":114,"column":1,"offset":3620},"end":{"line":114,"column":5,"offset":3624},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":114,"column":5,"offset":3624},"end":{"line":115,"column":66,"offset":3690},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":115,"column":66,"offset":3690},"end":{"line":115,"column":89,"offset":3713},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":115,"column":89,"offset":3713},"end":{"line":116,"column":1,"offset":3753},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":116,"column":1,"offset":3753},"end":{"line":116,"column":5,"offset":3757},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":116,"column":5,"offset":3757},"end":{"line":117,"column":1,"offset":3758},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":117,"column":1,"offset":3758},"end":{"line":117,"column":5,"offset":3762},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":117,"column":5,"offset":3762},"end":{"line":118,"column":21,"offset":3783},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":118,"column":21,"offset":3783},"end":{"line":118,"column":25,"offset":3787},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":118,"column":25,"offset":3787},"end":{"line":119,"column":1,"offset":3841},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":119,"column":1,"offset":3841},"end":{"line":119,"column":5,"offset":3845},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":119,"column":5,"offset":3845},"end":{"line":120,"column":1,"offset":3846},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":120,"column":1,"offset":3846},"end":{"line":120,"column":5,"offset":3850},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":120,"column":5,"offset":3850},"end":{"line":121,"column":21,"offset":3871},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":121,"column":21,"offset":3871},"end":{"line":121,"column":25,"offset":3875},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":121,"column":25,"offset":3875},"end":{"line":122,"column":1,"offset":3930},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":122,"column":1,"offset":3930},"end":{"line":122,"column":5,"offset":3934},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":122,"column":5,"offset":3934},"end":{"line":123,"column":1,"offset":3935},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":123,"column":1,"offset":3935},"end":{"line":123,"column":5,"offset":3939},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":123,"column":5,"offset":3939},"end":{"line":124,"column":58,"offset":3997},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":124,"column":58,"offset":3997},"end":{"line":124,"column":61,"offset":4000},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":124,"column":61,"offset":4000},"end":{"line":124,"column":145,"offset":4084},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":124,"column":145,"offset":4084},"end":{"line":124,"column":153,"offset":4092},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":124,"column":153,"offset":4092},"end":{"line":124,"column":178,"offset":4117},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":3558},"end":{"line":124,"column":178,"offset":4117},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":126,"column":7,"offset":4125},"end":{"line":126,"column":10,"offset":4128},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":4119},"end":{"line":126,"column":10,"offset":4128},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":128,"column":8,"offset":4137},"end":{"line":128,"column":17,"offset":4146},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":4130},"end":{"line":128,"column":17,"offset":4146},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":129,"column":1,"offset":4147},"end":{"line":140,"column":4,"offset":4346},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":141,"column":1,"offset":4347},"end":{"line":141,"column":5,"offset":4351},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":143,"column":1,"offset":4353},"end":{"line":144,"column":1,"offset":4569},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":144,"column":1,"offset":4569},"end":{"line":144,"column":5,"offset":4573},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":144,"column":5,"offset":4573},"end":{"line":145,"column":1,"offset":4574},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":145,"column":1,"offset":4574},"end":{"line":145,"column":5,"offset":4578},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":145,"column":5,"offset":4578},"end":{"line":146,"column":72,"offset":4650},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":146,"column":72,"offset":4650},"end":{"line":146,"column":81,"offset":4659},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":146,"column":81,"offset":4659},"end":{"line":147,"column":1,"offset":4678},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":147,"column":1,"offset":4678},"end":{"line":147,"column":5,"offset":4682},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":147,"column":5,"offset":4682},"end":{"line":148,"column":1,"offset":4683},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":148,"column":1,"offset":4683},"end":{"line":148,"column":5,"offset":4687},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":148,"column":5,"offset":4687},"end":{"line":149,"column":10,"offset":4697},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":149,"column":10,"offset":4697},"end":{"line":149,"column":16,"offset":4703},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":149,"column":16,"offset":4703},"end":{"line":149,"column":34,"offset":4721},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":149,"column":34,"offset":4721},"end":{"line":149,"column":42,"offset":4729},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":149,"column":42,"offset":4729},"end":{"line":150,"column":24,"offset":4754},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":150,"column":24,"offset":4754},"end":{"line":150,"column":33,"offset":4763},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":150,"column":33,"offset":4763},"end":{"line":150,"column":107,"offset":4837},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":150,"column":107,"offset":4837},"end":{"line":150,"column":116,"offset":4846},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":150,"column":116,"offset":4846},"end":{"line":150,"column":134,"offset":4864},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":150,"column":134,"offset":4864},"end":{"line":150,"column":137,"offset":4867},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":150,"column":137,"offset":4867},"end":{"line":150,"column":161,"offset":4891},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":150,"column":161,"offset":4891},"end":{"line":150,"column":167,"offset":4897},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":150,"column":167,"offset":4897},"end":{"line":150,"column":192,"offset":4922},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":150,"column":192,"offset":4922},"end":{"line":150,"column":200,"offset":4930},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":150,"column":200,"offset":4930},"end":{"line":150,"column":218,"offset":4948},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":150,"column":218,"offset":4948},"end":{"line":150,"column":224,"offset":4954},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":150,"column":224,"offset":4954},"end":{"line":150,"column":245,"offset":4975},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":150,"column":245,"offset":4975},"end":{"line":150,"column":252,"offset":4982},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":150,"column":252,"offset":4982},"end":{"line":150,"column":257,"offset":4987},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":150,"column":257,"offset":4987},"end":{"line":150,"column":260,"offset":4990},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":150,"column":260,"offset":4990},"end":{"line":150,"column":285,"offset":5015},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":150,"column":285,"offset":5015},"end":{"line":150,"column":291,"offset":5021},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":150,"column":291,"offset":5021},"end":{"line":151,"column":96,"offset":5147},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":151,"column":96,"offset":5147},"end":{"line":151,"column":111,"offset":5162},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":151,"column":111,"offset":5162},"end":{"line":151,"column":182,"offset":5233},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":4353},"end":{"line":151,"column":182,"offset":5233},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":153,"column":8,"offset":5242},"end":{"line":153,"column":19,"offset":5253},"indent":[]}}],"position":{"start":{"line":153,"column":1,"offset":5235},"end":{"line":153,"column":19,"offset":5253},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":154,"column":1,"offset":5254},"end":{"line":154,"column":14,"offset":5267},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":5254},"end":{"line":154,"column":14,"offset":5267},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":155,"column":1,"offset":5268},"end":{"line":170,"column":4,"offset":5683},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":171,"column":1,"offset":5684},"end":{"line":171,"column":5,"offset":5688},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":173,"column":1,"offset":5690},"end":{"line":173,"column":141,"offset":5830},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":5690},"end":{"line":173,"column":141,"offset":5830},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":175,"column":8,"offset":5839},"end":{"line":175,"column":30,"offset":5861},"indent":[]}}],"position":{"start":{"line":175,"column":1,"offset":5832},"end":{"line":175,"column":30,"offset":5861},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":176,"column":1,"offset":5862},"end":{"line":176,"column":199,"offset":6060},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":5862},"end":{"line":176,"column":199,"offset":6060},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":178,"column":8,"offset":6069},"end":{"line":178,"column":30,"offset":6091},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":6062},"end":{"line":178,"column":30,"offset":6091},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":180,"column":1,"offset":6093},"end":{"line":181,"column":1,"offset":6168},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":181,"column":1,"offset":6168},"end":{"line":181,"column":5,"offset":6172},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":181,"column":5,"offset":6172},"end":{"line":182,"column":1,"offset":6173},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":182,"column":1,"offset":6173},"end":{"line":182,"column":5,"offset":6177},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":182,"column":5,"offset":6177},"end":{"line":184,"column":1,"offset":6239},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":184,"column":1,"offset":6239},"end":{"line":184,"column":5,"offset":6243},"indent":[]}},{"type":"break","position":{"start":{"line":184,"column":5,"offset":6243},"end":{"line":185,"column":1,"offset":6246},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":185,"column":1,"offset":6246},"end":{"line":185,"column":11,"offset":6256},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":185,"column":11,"offset":6256},"end":{"line":185,"column":19,"offset":6264},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":185,"column":19,"offset":6264},"end":{"line":185,"column":24,"offset":6269},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":185,"column":24,"offset":6269},"end":{"line":185,"column":34,"offset":6279},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":185,"column":34,"offset":6279},"end":{"line":186,"column":1,"offset":6328},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":186,"column":1,"offset":6328},"end":{"line":186,"column":5,"offset":6332},"indent":[]}}],"position":{"start":{"line":180,"column":1,"offset":6093},"end":{"line":186,"column":5,"offset":6332},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":188,"column":8,"offset":6341},"end":{"line":188,"column":12,"offset":6345},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":6334},"end":{"line":188,"column":12,"offset":6345},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":189,"column":1,"offset":6346},"end":{"line":194,"column":4,"offset":6457},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":195,"column":1,"offset":6458},"end":{"line":196,"column":5,"offset":6467},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":198,"column":1,"offset":6469},"end":{"line":198,"column":7,"offset":6475},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":198,"column":7,"offset":6475},"end":{"line":200,"column":1,"offset":6557},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":200,"column":1,"offset":6557},"end":{"line":200,"column":5,"offset":6561},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":200,"column":5,"offset":6561},"end":{"line":201,"column":1,"offset":6562},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":201,"column":1,"offset":6562},"end":{"line":201,"column":5,"offset":6566},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":201,"column":5,"offset":6566},"end":{"line":202,"column":10,"offset":6576},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":202,"column":10,"offset":6576},"end":{"line":202,"column":14,"offset":6580},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":202,"column":14,"offset":6580},"end":{"line":202,"column":22,"offset":6588},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":202,"column":22,"offset":6588},"end":{"line":202,"column":30,"offset":6596},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":202,"column":30,"offset":6596},"end":{"line":202,"column":50,"offset":6616},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":202,"column":50,"offset":6616},"end":{"line":202,"column":53,"offset":6619},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":202,"column":53,"offset":6619},"end":{"line":202,"column":90,"offset":6656},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":202,"column":90,"offset":6656},"end":{"line":202,"column":96,"offset":6662},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":202,"column":96,"offset":6662},"end":{"line":203,"column":1,"offset":6665},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":203,"column":1,"offset":6665},"end":{"line":203,"column":5,"offset":6669},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":203,"column":5,"offset":6669},"end":{"line":204,"column":1,"offset":6670},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":204,"column":1,"offset":6670},"end":{"line":204,"column":5,"offset":6674},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":204,"column":5,"offset":6674},"end":{"line":205,"column":14,"offset":6688},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":205,"column":14,"offset":6688},"end":{"line":205,"column":18,"offset":6692},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":205,"column":18,"offset":6692},"end":{"line":205,"column":90,"offset":6764},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":205,"column":90,"offset":6764},"end":{"line":205,"column":94,"offset":6768},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":205,"column":94,"offset":6768},"end":{"line":205,"column":125,"offset":6799},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":205,"column":125,"offset":6799},"end":{"line":205,"column":131,"offset":6805},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":205,"column":131,"offset":6805},"end":{"line":206,"column":1,"offset":6820},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":206,"column":1,"offset":6820},"end":{"line":206,"column":5,"offset":6824},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":206,"column":5,"offset":6824},"end":{"line":207,"column":1,"offset":6825},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":207,"column":1,"offset":6825},"end":{"line":207,"column":5,"offset":6829},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":207,"column":5,"offset":6829},"end":{"line":208,"column":14,"offset":6843},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":208,"column":14,"offset":6843},"end":{"line":208,"column":18,"offset":6847},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":208,"column":18,"offset":6847},"end":{"line":208,"column":37,"offset":6866},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":208,"column":37,"offset":6866},"end":{"line":208,"column":40,"offset":6869},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":208,"column":40,"offset":6869},"end":{"line":208,"column":77,"offset":6906},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":208,"column":77,"offset":6906},"end":{"line":208,"column":81,"offset":6910},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":208,"column":81,"offset":6910},"end":{"line":208,"column":99,"offset":6928},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":208,"column":99,"offset":6928},"end":{"line":208,"column":102,"offset":6931},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":208,"column":102,"offset":6931},"end":{"line":208,"column":133,"offset":6962},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":208,"column":133,"offset":6962},"end":{"line":208,"column":139,"offset":6968},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":208,"column":139,"offset":6968},"end":{"line":208,"column":167,"offset":6996},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":208,"column":167,"offset":6996},"end":{"line":208,"column":171,"offset":7000},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":208,"column":171,"offset":7000},"end":{"line":209,"column":1,"offset":7002},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":209,"column":1,"offset":7002},"end":{"line":209,"column":5,"offset":7006},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":209,"column":5,"offset":7006},"end":{"line":210,"column":1,"offset":7007},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":210,"column":1,"offset":7007},"end":{"line":210,"column":5,"offset":7011},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":210,"column":5,"offset":7011},"end":{"line":212,"column":1,"offset":7031},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":212,"column":1,"offset":7031},"end":{"line":212,"column":5,"offset":7035},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":212,"column":5,"offset":7035},"end":{"line":213,"column":6,"offset":7041},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":213,"column":6,"offset":7041},"end":{"line":213,"column":12,"offset":7047},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":213,"column":12,"offset":7047},"end":{"line":213,"column":30,"offset":7065},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":213,"column":30,"offset":7065},"end":{"line":213,"column":36,"offset":7071},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":213,"column":36,"offset":7071},"end":{"line":213,"column":62,"offset":7097},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":213,"column":62,"offset":7097},"end":{"line":213,"column":75,"offset":7110},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":213,"column":75,"offset":7110},"end":{"line":213,"column":159,"offset":7194},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":6469},"end":{"line":213,"column":159,"offset":7194},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":215,"column":8,"offset":7203},"end":{"line":215,"column":41,"offset":7236},"indent":[]}}],"position":{"start":{"line":215,"column":1,"offset":7196},"end":{"line":215,"column":41,"offset":7236},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":216,"column":1,"offset":7237},"end":{"line":221,"column":4,"offset":7312},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":222,"column":1,"offset":7313},"end":{"line":223,"column":1,"offset":7332},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":223,"column":1,"offset":7332},"end":{"line":223,"column":5,"offset":7336},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":223,"column":5,"offset":7336},"end":{"line":225,"column":5,"offset":7474},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":225,"column":5,"offset":7474},"end":{"line":225,"column":9,"offset":7478},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":225,"column":9,"offset":7478},"end":{"line":226,"column":5,"offset":7483},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":226,"column":5,"offset":7483},"end":{"line":226,"column":27,"offset":7505},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":226,"column":27,"offset":7505},"end":{"line":227,"column":5,"offset":7510},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":227,"column":5,"offset":7510},"end":{"line":227,"column":9,"offset":7514},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":227,"column":9,"offset":7514},"end":{"line":228,"column":5,"offset":7519},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":228,"column":5,"offset":7519},"end":{"line":228,"column":12,"offset":7526},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":228,"column":12,"offset":7526},"end":{"line":228,"column":17,"offset":7531},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":228,"column":17,"offset":7531},"end":{"line":228,"column":25,"offset":7539},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":228,"column":25,"offset":7539},"end":{"line":228,"column":63,"offset":7577},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":228,"column":63,"offset":7577},"end":{"line":228,"column":66,"offset":7580},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":228,"column":66,"offset":7580},"end":{"line":228,"column":86,"offset":7600},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":228,"column":86,"offset":7600},"end":{"line":228,"column":89,"offset":7603},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":228,"column":89,"offset":7603},"end":{"line":228,"column":110,"offset":7624},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":228,"column":110,"offset":7624},"end":{"line":228,"column":119,"offset":7633},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":228,"column":119,"offset":7633},"end":{"line":229,"column":1,"offset":7635},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":229,"column":1,"offset":7635},"end":{"line":229,"column":5,"offset":7639},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":229,"column":5,"offset":7639},"end":{"line":231,"column":1,"offset":7655},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":231,"column":1,"offset":7655},"end":{"line":231,"column":5,"offset":7659},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":231,"column":5,"offset":7659},"end":{"line":233,"column":5,"offset":7766},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":233,"column":5,"offset":7766},"end":{"line":233,"column":9,"offset":7770},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":233,"column":9,"offset":7770},"end":{"line":234,"column":1,"offset":7771},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":234,"column":1,"offset":7771},"end":{"line":234,"column":23,"offset":7793},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":234,"column":23,"offset":7793},"end":{"line":234,"column":35,"offset":7805},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":234,"column":35,"offset":7805},"end":{"line":234,"column":61,"offset":7831},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":234,"column":61,"offset":7831},"end":{"line":235,"column":1,"offset":7832},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":235,"column":1,"offset":7832},"end":{"line":235,"column":5,"offset":7836},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":235,"column":5,"offset":7836},"end":{"line":236,"column":5,"offset":7841},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":236,"column":5,"offset":7841},"end":{"line":236,"column":8,"offset":7844},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":236,"column":8,"offset":7844},"end":{"line":236,"column":58,"offset":7894},"indent":[]}}],"position":{"start":{"line":222,"column":1,"offset":7313},"end":{"line":236,"column":58,"offset":7894},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":238,"column":1,"offset":7896},"end":{"line":239,"column":1,"offset":7914},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":239,"column":1,"offset":7914},"end":{"line":239,"column":5,"offset":7918},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":7896},"end":{"line":239,"column":5,"offset":7918},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":240,"column":1,"offset":7919},"end":{"line":242,"column":4,"offset":7949},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":243,"column":1,"offset":7950},"end":{"line":243,"column":13,"offset":7962},"indent":[]}}],"position":{"start":{"line":243,"column":1,"offset":7950},"end":{"line":243,"column":13,"offset":7962},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":244,"column":1,"offset":7963},"end":{"line":250,"column":4,"offset":8042},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":251,"column":1,"offset":8043},"end":{"line":251,"column":8,"offset":8050},"indent":[]}}],"position":{"start":{"line":251,"column":1,"offset":8043},"end":{"line":251,"column":8,"offset":8050},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":252,"column":1,"offset":8051},"end":{"line":259,"column":4,"offset":8175},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":260,"column":1,"offset":8176},"end":{"line":261,"column":5,"offset":8185},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":263,"column":1,"offset":8187},"end":{"line":263,"column":11,"offset":8197},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":263,"column":11,"offset":8197},"end":{"line":263,"column":24,"offset":8210},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":263,"column":24,"offset":8210},"end":{"line":263,"column":107,"offset":8293},"indent":[]}}],"position":{"start":{"line":263,"column":1,"offset":8187},"end":{"line":263,"column":107,"offset":8293},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":265,"column":7,"offset":8301},"end":{"line":265,"column":10,"offset":8304},"indent":[]}}],"position":{"start":{"line":265,"column":1,"offset":8295},"end":{"line":265,"column":10,"offset":8304},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":266,"column":7,"offset":8311},"end":{"line":266,"column":10,"offset":8314},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":8305},"end":{"line":266,"column":10,"offset":8314},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":268,"column":6,"offset":8321},"end":{"line":268,"column":10,"offset":8325},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":8316},"end":{"line":268,"column":10,"offset":8325},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":269,"column":7,"offset":8332},"end":{"line":269,"column":13,"offset":8338},"indent":[]}}],"position":{"start":{"line":269,"column":1,"offset":8326},"end":{"line":269,"column":13,"offset":8338},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":270,"column":1,"offset":8339},"end":{"line":270,"column":49,"offset":8387},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":270,"column":49,"offset":8387},"end":{"line":270,"column":57,"offset":8395},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":270,"column":57,"offset":8395},"end":{"line":270,"column":133,"offset":8471},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":8339},"end":{"line":270,"column":133,"offset":8471},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":271,"column":1,"offset":8472},"end":{"line":281,"column":4,"offset":8667},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":282,"column":1,"offset":8668},"end":{"line":282,"column":5,"offset":8672},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":285,"column":1,"offset":8675},"end":{"line":286,"column":1,"offset":8757},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":286,"column":1,"offset":8757},"end":{"line":286,"column":5,"offset":8761},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":286,"column":5,"offset":8761},"end":{"line":287,"column":1,"offset":8762},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":287,"column":1,"offset":8762},"end":{"line":287,"column":5,"offset":8766},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":287,"column":5,"offset":8766},"end":{"line":288,"column":26,"offset":8792},"indent":[1]}}],"position":{"start":{"line":285,"column":1,"offset":8675},"end":{"line":288,"column":26,"offset":8792},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":289,"column":1,"offset":8793},"end":{"line":294,"column":4,"offset":8921},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":295,"column":1,"offset":8922},"end":{"line":295,"column":14,"offset":8935},"indent":[]}}],"position":{"start":{"line":295,"column":1,"offset":8922},"end":{"line":295,"column":14,"offset":8935},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":297,"column":1,"offset":8937},"end":{"line":310,"column":4,"offset":9219},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":312,"column":1,"offset":9221},"end":{"line":313,"column":5,"offset":9230},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":316,"column":7,"offset":9239},"end":{"line":316,"column":13,"offset":9245},"indent":[]}}],"position":{"start":{"line":316,"column":1,"offset":9233},"end":{"line":316,"column":13,"offset":9245},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":316,"column":13,"offset":9245}}}}