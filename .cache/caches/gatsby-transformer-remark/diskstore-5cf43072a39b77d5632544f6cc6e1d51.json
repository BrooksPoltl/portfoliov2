{"expireTime":9007200842248012000,"key":"transformer-remark-markdown-ast-a7d04ff899a7bb1576d24889e631a2eb-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":11,"column":7,"offset":457},"end":{"line":11,"column":10,"offset":460},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":451},"end":{"line":11,"column":10,"offset":460},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":12,"column":7,"offset":467},"end":{"line":12,"column":10,"offset":470},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":461},"end":{"line":12,"column":10,"offset":470},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":14,"column":6,"offset":477},"end":{"line":14,"column":14,"offset":485},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":472},"end":{"line":14,"column":14,"offset":485},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":15,"column":7,"offset":492},"end":{"line":15,"column":10,"offset":495},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":486},"end":{"line":15,"column":10,"offset":495},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":17,"column":8,"offset":504},"end":{"line":17,"column":30,"offset":526},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":497},"end":{"line":17,"column":30,"offset":526},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":19,"column":1,"offset":528},"end":{"line":20,"column":1,"offset":672},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":20,"column":1,"offset":672},"end":{"line":20,"column":5,"offset":676},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":20,"column":5,"offset":676},"end":{"line":20,"column":16,"offset":687},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":20,"column":16,"offset":687},"end":{"line":20,"column":20,"offset":691},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":20,"column":20,"offset":691},"end":{"line":22,"column":1,"offset":835},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":1,"offset":835},"end":{"line":22,"column":5,"offset":839},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":22,"column":5,"offset":839},"end":{"line":22,"column":16,"offset":850},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":16,"offset":850},"end":{"line":22,"column":20,"offset":854},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":22,"column":20,"offset":854},"end":{"line":23,"column":45,"offset":899},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":23,"column":45,"offset":899},"end":{"line":23,"column":49,"offset":903},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":23,"column":49,"offset":903},"end":{"line":23,"column":65,"offset":919},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":23,"column":65,"offset":919},"end":{"line":23,"column":69,"offset":923},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":23,"column":69,"offset":923},"end":{"line":25,"column":1,"offset":966},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":25,"column":1,"offset":966},"end":{"line":25,"column":5,"offset":970},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":25,"column":5,"offset":970},"end":{"line":25,"column":22,"offset":987},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":25,"column":22,"offset":987},"end":{"line":25,"column":26,"offset":991},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":26,"offset":991},"end":{"line":26,"column":1,"offset":992},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":26,"column":1,"offset":992},"end":{"line":26,"column":5,"offset":996},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":26,"column":5,"offset":996},"end":{"line":28,"column":1,"offset":1114},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":1,"offset":1114},"end":{"line":28,"column":5,"offset":1118},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":28,"column":5,"offset":1118},"end":{"line":30,"column":1,"offset":1239},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":30,"column":1,"offset":1239},"end":{"line":30,"column":12,"offset":1250},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":30,"column":12,"offset":1250},"end":{"line":30,"column":68,"offset":1306},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":30,"column":68,"offset":1306},"end":{"line":30,"column":79,"offset":1317},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":30,"column":79,"offset":1317},"end":{"line":30,"column":106,"offset":1344},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":30,"column":106,"offset":1344},"end":{"line":30,"column":109,"offset":1347},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":30,"column":109,"offset":1347},"end":{"line":30,"column":189,"offset":1427},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":30,"column":189,"offset":1427},"end":{"line":30,"column":192,"offset":1430},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":30,"column":192,"offset":1430},"end":{"line":30,"column":202,"offset":1440},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":528},"end":{"line":30,"column":202,"offset":1440},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":32,"column":8,"offset":1449},"end":{"line":32,"column":14,"offset":1455},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1442},"end":{"line":32,"column":14,"offset":1455},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":33,"column":1,"offset":1456},"end":{"line":33,"column":9,"offset":1464},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":33,"column":9,"offset":1464},"end":{"line":33,"column":73,"offset":1528},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1456},"end":{"line":33,"column":73,"offset":1528},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":34,"column":1,"offset":1529},"end":{"line":37,"column":4,"offset":1568},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1569},"end":{"line":38,"column":5,"offset":1573},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":40,"column":1,"offset":1575},"end":{"line":40,"column":72,"offset":1646},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":40,"column":72,"offset":1646},"end":{"line":40,"column":80,"offset":1654},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":40,"column":80,"offset":1654},"end":{"line":41,"column":1,"offset":1678},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":41,"column":1,"offset":1678},"end":{"line":41,"column":5,"offset":1682},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":41,"column":5,"offset":1682},"end":{"line":42,"column":1,"offset":1683},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":42,"column":1,"offset":1683},"end":{"line":42,"column":5,"offset":1687},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":42,"column":5,"offset":1687},"end":{"line":43,"column":184,"offset":1871},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":43,"column":184,"offset":1871},"end":{"line":43,"column":187,"offset":1874},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":43,"column":187,"offset":1874},"end":{"line":44,"column":1,"offset":1877},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1877},"end":{"line":44,"column":5,"offset":1881},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":44,"column":5,"offset":1881},"end":{"line":45,"column":1,"offset":1882},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":45,"column":1,"offset":1882},"end":{"line":45,"column":5,"offset":1886},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":45,"column":5,"offset":1886},"end":{"line":46,"column":27,"offset":1913},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":46,"column":27,"offset":1913},"end":{"line":46,"column":35,"offset":1921},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":46,"column":35,"offset":1921},"end":{"line":46,"column":86,"offset":1972},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":46,"column":86,"offset":1972},"end":{"line":46,"column":95,"offset":1981},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":46,"column":95,"offset":1981},"end":{"line":46,"column":97,"offset":1983},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1575},"end":{"line":46,"column":97,"offset":1983},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":48,"column":1,"offset":1985},"end":{"line":48,"column":6,"offset":1990},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":50,"column":1,"offset":1992},"end":{"line":51,"column":1,"offset":2036},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":51,"column":1,"offset":2036},"end":{"line":51,"column":5,"offset":2040},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":51,"column":5,"offset":2040},"end":{"line":52,"column":1,"offset":2041},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":52,"column":1,"offset":2041},"end":{"line":52,"column":22,"offset":2062},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":52,"column":22,"offset":2062},"end":{"line":53,"column":1,"offset":2063},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":53,"column":1,"offset":2063},"end":{"line":53,"column":5,"offset":2067},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1992},"end":{"line":53,"column":5,"offset":2067},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":55,"column":1,"offset":2069},"end":{"line":55,"column":152,"offset":2220},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":2069},"end":{"line":55,"column":152,"offset":2220},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":57,"column":8,"offset":2229},"end":{"line":57,"column":20,"offset":2241},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":2222},"end":{"line":57,"column":20,"offset":2241},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":59,"column":1,"offset":2243},"end":{"line":59,"column":56,"offset":2298},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":2243},"end":{"line":59,"column":56,"offset":2298},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":60,"column":1,"offset":2299},"end":{"line":65,"column":4,"offset":2390},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":66,"column":1,"offset":2391},"end":{"line":66,"column":5,"offset":2395},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":68,"column":1,"offset":2397},"end":{"line":68,"column":37,"offset":2433},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":68,"column":37,"offset":2433},"end":{"line":68,"column":41,"offset":2437},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":68,"column":41,"offset":2437},"end":{"line":69,"column":1,"offset":2454},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":69,"column":1,"offset":2454},"end":{"line":69,"column":5,"offset":2458},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":69,"column":5,"offset":2458},"end":{"line":70,"column":1,"offset":2459},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":70,"column":1,"offset":2459},"end":{"line":70,"column":5,"offset":2463},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":70,"column":5,"offset":2463},"end":{"line":71,"column":66,"offset":2529},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":71,"column":66,"offset":2529},"end":{"line":71,"column":89,"offset":2552},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":71,"column":89,"offset":2552},"end":{"line":72,"column":1,"offset":2592},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":72,"column":1,"offset":2592},"end":{"line":72,"column":5,"offset":2596},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":72,"column":5,"offset":2596},"end":{"line":73,"column":1,"offset":2597},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":73,"column":1,"offset":2597},"end":{"line":73,"column":5,"offset":2601},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":73,"column":5,"offset":2601},"end":{"line":74,"column":21,"offset":2622},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":74,"column":21,"offset":2622},"end":{"line":74,"column":25,"offset":2626},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":74,"column":25,"offset":2626},"end":{"line":75,"column":1,"offset":2680},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2680},"end":{"line":75,"column":5,"offset":2684},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":75,"column":5,"offset":2684},"end":{"line":76,"column":1,"offset":2685},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":76,"column":1,"offset":2685},"end":{"line":76,"column":5,"offset":2689},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":76,"column":5,"offset":2689},"end":{"line":77,"column":21,"offset":2710},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":77,"column":21,"offset":2710},"end":{"line":77,"column":25,"offset":2714},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":77,"column":25,"offset":2714},"end":{"line":78,"column":1,"offset":2769},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2769},"end":{"line":78,"column":5,"offset":2773},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":78,"column":5,"offset":2773},"end":{"line":79,"column":1,"offset":2774},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":79,"column":1,"offset":2774},"end":{"line":79,"column":5,"offset":2778},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":79,"column":5,"offset":2778},"end":{"line":80,"column":58,"offset":2836},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":80,"column":58,"offset":2836},"end":{"line":80,"column":61,"offset":2839},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":80,"column":61,"offset":2839},"end":{"line":80,"column":145,"offset":2923},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":80,"column":145,"offset":2923},"end":{"line":80,"column":153,"offset":2931},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":80,"column":153,"offset":2931},"end":{"line":80,"column":178,"offset":2956},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":2397},"end":{"line":80,"column":178,"offset":2956},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":82,"column":7,"offset":2964},"end":{"line":82,"column":10,"offset":2967},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":2958},"end":{"line":82,"column":10,"offset":2967},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":84,"column":8,"offset":2976},"end":{"line":84,"column":17,"offset":2985},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":2969},"end":{"line":84,"column":17,"offset":2985},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":85,"column":1,"offset":2986},"end":{"line":96,"column":4,"offset":3185},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":97,"column":1,"offset":3186},"end":{"line":97,"column":5,"offset":3190},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":99,"column":1,"offset":3192},"end":{"line":100,"column":1,"offset":3408},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":100,"column":1,"offset":3408},"end":{"line":100,"column":5,"offset":3412},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":100,"column":5,"offset":3412},"end":{"line":101,"column":1,"offset":3413},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":101,"column":1,"offset":3413},"end":{"line":101,"column":5,"offset":3417},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":101,"column":5,"offset":3417},"end":{"line":102,"column":72,"offset":3489},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":102,"column":72,"offset":3489},"end":{"line":102,"column":81,"offset":3498},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":102,"column":81,"offset":3498},"end":{"line":103,"column":1,"offset":3517},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":103,"column":1,"offset":3517},"end":{"line":103,"column":5,"offset":3521},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":103,"column":5,"offset":3521},"end":{"line":104,"column":1,"offset":3522},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":104,"column":1,"offset":3522},"end":{"line":104,"column":5,"offset":3526},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":104,"column":5,"offset":3526},"end":{"line":105,"column":10,"offset":3536},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":105,"column":10,"offset":3536},"end":{"line":105,"column":16,"offset":3542},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":105,"column":16,"offset":3542},"end":{"line":105,"column":34,"offset":3560},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":105,"column":34,"offset":3560},"end":{"line":105,"column":42,"offset":3568},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":105,"column":42,"offset":3568},"end":{"line":106,"column":24,"offset":3593},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":106,"column":24,"offset":3593},"end":{"line":106,"column":33,"offset":3602},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":106,"column":33,"offset":3602},"end":{"line":106,"column":107,"offset":3676},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":106,"column":107,"offset":3676},"end":{"line":106,"column":116,"offset":3685},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":106,"column":116,"offset":3685},"end":{"line":106,"column":134,"offset":3703},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":106,"column":134,"offset":3703},"end":{"line":106,"column":137,"offset":3706},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":106,"column":137,"offset":3706},"end":{"line":106,"column":161,"offset":3730},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":106,"column":161,"offset":3730},"end":{"line":106,"column":167,"offset":3736},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":106,"column":167,"offset":3736},"end":{"line":106,"column":192,"offset":3761},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":106,"column":192,"offset":3761},"end":{"line":106,"column":200,"offset":3769},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":106,"column":200,"offset":3769},"end":{"line":106,"column":218,"offset":3787},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":106,"column":218,"offset":3787},"end":{"line":106,"column":224,"offset":3793},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":106,"column":224,"offset":3793},"end":{"line":106,"column":245,"offset":3814},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":106,"column":245,"offset":3814},"end":{"line":106,"column":252,"offset":3821},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":106,"column":252,"offset":3821},"end":{"line":106,"column":257,"offset":3826},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":106,"column":257,"offset":3826},"end":{"line":106,"column":260,"offset":3829},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":106,"column":260,"offset":3829},"end":{"line":106,"column":285,"offset":3854},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":106,"column":285,"offset":3854},"end":{"line":106,"column":291,"offset":3860},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":106,"column":291,"offset":3860},"end":{"line":107,"column":96,"offset":3986},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":107,"column":96,"offset":3986},"end":{"line":107,"column":111,"offset":4001},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":107,"column":111,"offset":4001},"end":{"line":107,"column":182,"offset":4072},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":3192},"end":{"line":107,"column":182,"offset":4072},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":109,"column":8,"offset":4081},"end":{"line":109,"column":19,"offset":4092},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":4074},"end":{"line":109,"column":19,"offset":4092},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":110,"column":1,"offset":4093},"end":{"line":110,"column":14,"offset":4106},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":4093},"end":{"line":110,"column":14,"offset":4106},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":111,"column":1,"offset":4107},"end":{"line":126,"column":4,"offset":4522},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":127,"column":1,"offset":4523},"end":{"line":127,"column":5,"offset":4527},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":129,"column":1,"offset":4529},"end":{"line":129,"column":141,"offset":4669},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":4529},"end":{"line":129,"column":141,"offset":4669},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":131,"column":8,"offset":4678},"end":{"line":131,"column":30,"offset":4700},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":4671},"end":{"line":131,"column":30,"offset":4700},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":132,"column":1,"offset":4701},"end":{"line":132,"column":199,"offset":4899},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":4701},"end":{"line":132,"column":199,"offset":4899},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":134,"column":8,"offset":4908},"end":{"line":134,"column":30,"offset":4930},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":4901},"end":{"line":134,"column":30,"offset":4930},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":136,"column":1,"offset":4932},"end":{"line":137,"column":1,"offset":5007},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":137,"column":1,"offset":5007},"end":{"line":137,"column":5,"offset":5011},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":137,"column":5,"offset":5011},"end":{"line":138,"column":1,"offset":5012},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":138,"column":1,"offset":5012},"end":{"line":138,"column":5,"offset":5016},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":138,"column":5,"offset":5016},"end":{"line":140,"column":1,"offset":5078},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":140,"column":1,"offset":5078},"end":{"line":140,"column":5,"offset":5082},"indent":[]}},{"type":"break","position":{"start":{"line":140,"column":5,"offset":5082},"end":{"line":141,"column":1,"offset":5085},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":141,"column":1,"offset":5085},"end":{"line":141,"column":11,"offset":5095},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":141,"column":11,"offset":5095},"end":{"line":141,"column":19,"offset":5103},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":141,"column":19,"offset":5103},"end":{"line":141,"column":24,"offset":5108},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":141,"column":24,"offset":5108},"end":{"line":141,"column":34,"offset":5118},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":141,"column":34,"offset":5118},"end":{"line":142,"column":1,"offset":5167},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":142,"column":1,"offset":5167},"end":{"line":142,"column":5,"offset":5171},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":4932},"end":{"line":142,"column":5,"offset":5171},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":144,"column":8,"offset":5180},"end":{"line":144,"column":12,"offset":5184},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":5173},"end":{"line":144,"column":12,"offset":5184},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":145,"column":1,"offset":5185},"end":{"line":150,"column":4,"offset":5296},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":151,"column":1,"offset":5297},"end":{"line":152,"column":5,"offset":5306},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":154,"column":1,"offset":5308},"end":{"line":154,"column":7,"offset":5314},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":154,"column":7,"offset":5314},"end":{"line":156,"column":1,"offset":5396},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":156,"column":1,"offset":5396},"end":{"line":156,"column":5,"offset":5400},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":156,"column":5,"offset":5400},"end":{"line":157,"column":1,"offset":5401},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":157,"column":1,"offset":5401},"end":{"line":157,"column":5,"offset":5405},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":157,"column":5,"offset":5405},"end":{"line":158,"column":10,"offset":5415},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":158,"column":10,"offset":5415},"end":{"line":158,"column":14,"offset":5419},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":158,"column":14,"offset":5419},"end":{"line":158,"column":22,"offset":5427},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":158,"column":22,"offset":5427},"end":{"line":158,"column":30,"offset":5435},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":158,"column":30,"offset":5435},"end":{"line":158,"column":50,"offset":5455},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":158,"column":50,"offset":5455},"end":{"line":158,"column":53,"offset":5458},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":158,"column":53,"offset":5458},"end":{"line":158,"column":90,"offset":5495},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":158,"column":90,"offset":5495},"end":{"line":158,"column":96,"offset":5501},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":158,"column":96,"offset":5501},"end":{"line":159,"column":1,"offset":5504},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":159,"column":1,"offset":5504},"end":{"line":159,"column":5,"offset":5508},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":159,"column":5,"offset":5508},"end":{"line":160,"column":1,"offset":5509},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":160,"column":1,"offset":5509},"end":{"line":160,"column":5,"offset":5513},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":160,"column":5,"offset":5513},"end":{"line":161,"column":14,"offset":5527},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":161,"column":14,"offset":5527},"end":{"line":161,"column":18,"offset":5531},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":161,"column":18,"offset":5531},"end":{"line":161,"column":90,"offset":5603},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":161,"column":90,"offset":5603},"end":{"line":161,"column":94,"offset":5607},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":161,"column":94,"offset":5607},"end":{"line":161,"column":125,"offset":5638},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":161,"column":125,"offset":5638},"end":{"line":161,"column":131,"offset":5644},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":161,"column":131,"offset":5644},"end":{"line":162,"column":1,"offset":5659},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":162,"column":1,"offset":5659},"end":{"line":162,"column":5,"offset":5663},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":162,"column":5,"offset":5663},"end":{"line":163,"column":1,"offset":5664},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":163,"column":1,"offset":5664},"end":{"line":163,"column":5,"offset":5668},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":163,"column":5,"offset":5668},"end":{"line":164,"column":14,"offset":5682},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":164,"column":14,"offset":5682},"end":{"line":164,"column":18,"offset":5686},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":164,"column":18,"offset":5686},"end":{"line":164,"column":37,"offset":5705},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":164,"column":37,"offset":5705},"end":{"line":164,"column":40,"offset":5708},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":164,"column":40,"offset":5708},"end":{"line":164,"column":77,"offset":5745},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":164,"column":77,"offset":5745},"end":{"line":164,"column":81,"offset":5749},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":164,"column":81,"offset":5749},"end":{"line":164,"column":99,"offset":5767},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":164,"column":99,"offset":5767},"end":{"line":164,"column":102,"offset":5770},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":164,"column":102,"offset":5770},"end":{"line":164,"column":133,"offset":5801},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":164,"column":133,"offset":5801},"end":{"line":164,"column":139,"offset":5807},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":164,"column":139,"offset":5807},"end":{"line":164,"column":167,"offset":5835},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":164,"column":167,"offset":5835},"end":{"line":164,"column":171,"offset":5839},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":164,"column":171,"offset":5839},"end":{"line":165,"column":1,"offset":5841},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":165,"column":1,"offset":5841},"end":{"line":165,"column":5,"offset":5845},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":165,"column":5,"offset":5845},"end":{"line":166,"column":1,"offset":5846},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":166,"column":1,"offset":5846},"end":{"line":166,"column":5,"offset":5850},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":166,"column":5,"offset":5850},"end":{"line":168,"column":1,"offset":5870},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":168,"column":1,"offset":5870},"end":{"line":168,"column":5,"offset":5874},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":168,"column":5,"offset":5874},"end":{"line":169,"column":6,"offset":5880},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":169,"column":6,"offset":5880},"end":{"line":169,"column":12,"offset":5886},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":169,"column":12,"offset":5886},"end":{"line":169,"column":30,"offset":5904},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":169,"column":30,"offset":5904},"end":{"line":169,"column":36,"offset":5910},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":169,"column":36,"offset":5910},"end":{"line":169,"column":62,"offset":5936},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":169,"column":62,"offset":5936},"end":{"line":169,"column":75,"offset":5949},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":169,"column":75,"offset":5949},"end":{"line":169,"column":159,"offset":6033},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":5308},"end":{"line":169,"column":159,"offset":6033},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":171,"column":8,"offset":6042},"end":{"line":171,"column":41,"offset":6075},"indent":[]}}],"position":{"start":{"line":171,"column":1,"offset":6035},"end":{"line":171,"column":41,"offset":6075},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":172,"column":1,"offset":6076},"end":{"line":177,"column":4,"offset":6151},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":178,"column":1,"offset":6152},"end":{"line":179,"column":1,"offset":6171},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":179,"column":1,"offset":6171},"end":{"line":179,"column":5,"offset":6175},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":179,"column":5,"offset":6175},"end":{"line":181,"column":5,"offset":6313},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":181,"column":5,"offset":6313},"end":{"line":181,"column":9,"offset":6317},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":181,"column":9,"offset":6317},"end":{"line":182,"column":5,"offset":6322},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":182,"column":5,"offset":6322},"end":{"line":182,"column":27,"offset":6344},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":182,"column":27,"offset":6344},"end":{"line":183,"column":5,"offset":6349},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":183,"column":5,"offset":6349},"end":{"line":183,"column":9,"offset":6353},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":183,"column":9,"offset":6353},"end":{"line":184,"column":5,"offset":6358},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":184,"column":5,"offset":6358},"end":{"line":184,"column":12,"offset":6365},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":184,"column":12,"offset":6365},"end":{"line":184,"column":17,"offset":6370},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":184,"column":17,"offset":6370},"end":{"line":184,"column":25,"offset":6378},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":184,"column":25,"offset":6378},"end":{"line":184,"column":63,"offset":6416},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":184,"column":63,"offset":6416},"end":{"line":184,"column":66,"offset":6419},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":184,"column":66,"offset":6419},"end":{"line":184,"column":86,"offset":6439},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":184,"column":86,"offset":6439},"end":{"line":184,"column":89,"offset":6442},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":184,"column":89,"offset":6442},"end":{"line":184,"column":110,"offset":6463},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":184,"column":110,"offset":6463},"end":{"line":184,"column":119,"offset":6472},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":184,"column":119,"offset":6472},"end":{"line":185,"column":1,"offset":6474},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":185,"column":1,"offset":6474},"end":{"line":185,"column":5,"offset":6478},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":185,"column":5,"offset":6478},"end":{"line":187,"column":1,"offset":6494},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":187,"column":1,"offset":6494},"end":{"line":187,"column":5,"offset":6498},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":187,"column":5,"offset":6498},"end":{"line":189,"column":5,"offset":6605},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":189,"column":5,"offset":6605},"end":{"line":189,"column":9,"offset":6609},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":189,"column":9,"offset":6609},"end":{"line":190,"column":1,"offset":6610},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":190,"column":1,"offset":6610},"end":{"line":190,"column":23,"offset":6632},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":190,"column":23,"offset":6632},"end":{"line":190,"column":35,"offset":6644},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":190,"column":35,"offset":6644},"end":{"line":190,"column":61,"offset":6670},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":190,"column":61,"offset":6670},"end":{"line":191,"column":1,"offset":6671},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":191,"column":1,"offset":6671},"end":{"line":191,"column":5,"offset":6675},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":191,"column":5,"offset":6675},"end":{"line":192,"column":5,"offset":6680},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":192,"column":5,"offset":6680},"end":{"line":192,"column":8,"offset":6683},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":192,"column":8,"offset":6683},"end":{"line":192,"column":58,"offset":6733},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":6152},"end":{"line":192,"column":58,"offset":6733},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":194,"column":1,"offset":6735},"end":{"line":195,"column":1,"offset":6753},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":195,"column":1,"offset":6753},"end":{"line":195,"column":5,"offset":6757},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":6735},"end":{"line":195,"column":5,"offset":6757},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":196,"column":1,"offset":6758},"end":{"line":198,"column":4,"offset":6788},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":199,"column":1,"offset":6789},"end":{"line":199,"column":13,"offset":6801},"indent":[]}}],"position":{"start":{"line":199,"column":1,"offset":6789},"end":{"line":199,"column":13,"offset":6801},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":200,"column":1,"offset":6802},"end":{"line":206,"column":4,"offset":6881},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":207,"column":1,"offset":6882},"end":{"line":207,"column":8,"offset":6889},"indent":[]}}],"position":{"start":{"line":207,"column":1,"offset":6882},"end":{"line":207,"column":8,"offset":6889},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":208,"column":1,"offset":6890},"end":{"line":215,"column":4,"offset":7014},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":216,"column":1,"offset":7015},"end":{"line":217,"column":5,"offset":7024},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":219,"column":1,"offset":7026},"end":{"line":219,"column":11,"offset":7036},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":219,"column":11,"offset":7036},"end":{"line":219,"column":24,"offset":7049},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":219,"column":24,"offset":7049},"end":{"line":219,"column":107,"offset":7132},"indent":[]}}],"position":{"start":{"line":219,"column":1,"offset":7026},"end":{"line":219,"column":107,"offset":7132},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":221,"column":7,"offset":7140},"end":{"line":221,"column":10,"offset":7143},"indent":[]}}],"position":{"start":{"line":221,"column":1,"offset":7134},"end":{"line":221,"column":10,"offset":7143},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":222,"column":7,"offset":7150},"end":{"line":222,"column":10,"offset":7153},"indent":[]}}],"position":{"start":{"line":222,"column":1,"offset":7144},"end":{"line":222,"column":10,"offset":7153},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":224,"column":6,"offset":7160},"end":{"line":224,"column":10,"offset":7164},"indent":[]}}],"position":{"start":{"line":224,"column":1,"offset":7155},"end":{"line":224,"column":10,"offset":7164},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":225,"column":7,"offset":7171},"end":{"line":225,"column":13,"offset":7177},"indent":[]}}],"position":{"start":{"line":225,"column":1,"offset":7165},"end":{"line":225,"column":13,"offset":7177},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":226,"column":1,"offset":7178},"end":{"line":226,"column":49,"offset":7226},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":226,"column":49,"offset":7226},"end":{"line":226,"column":57,"offset":7234},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":226,"column":57,"offset":7234},"end":{"line":226,"column":133,"offset":7310},"indent":[]}}],"position":{"start":{"line":226,"column":1,"offset":7178},"end":{"line":226,"column":133,"offset":7310},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":227,"column":1,"offset":7311},"end":{"line":237,"column":4,"offset":7506},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":238,"column":1,"offset":7507},"end":{"line":238,"column":5,"offset":7511},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":241,"column":1,"offset":7514},"end":{"line":242,"column":1,"offset":7596},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":242,"column":1,"offset":7596},"end":{"line":242,"column":5,"offset":7600},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":242,"column":5,"offset":7600},"end":{"line":243,"column":1,"offset":7601},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":243,"column":1,"offset":7601},"end":{"line":243,"column":5,"offset":7605},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":243,"column":5,"offset":7605},"end":{"line":244,"column":26,"offset":7631},"indent":[1]}}],"position":{"start":{"line":241,"column":1,"offset":7514},"end":{"line":244,"column":26,"offset":7631},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":245,"column":1,"offset":7632},"end":{"line":250,"column":4,"offset":7760},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":251,"column":1,"offset":7761},"end":{"line":251,"column":14,"offset":7774},"indent":[]}}],"position":{"start":{"line":251,"column":1,"offset":7761},"end":{"line":251,"column":14,"offset":7774},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":253,"column":1,"offset":7776},"end":{"line":266,"column":4,"offset":8058},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":268,"column":1,"offset":8060},"end":{"line":269,"column":5,"offset":8069},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":272,"column":7,"offset":8078},"end":{"line":272,"column":13,"offset":8084},"indent":[]}}],"position":{"start":{"line":272,"column":1,"offset":8072},"end":{"line":272,"column":13,"offset":8084},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":272,"column":13,"offset":8084}}}}