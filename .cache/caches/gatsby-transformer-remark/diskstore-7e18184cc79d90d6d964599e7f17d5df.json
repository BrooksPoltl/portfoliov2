{"expireTime":9007200842160655000,"key":"transformer-remark-markdown-html-ast-4dd9b73158789194a837d142efa22171-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":10,"offset":421}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":10,"offset":421}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":10,"column":7,"offset":428},"end":{"line":10,"column":10,"offset":431}}}],"position":{"start":{"line":10,"column":1,"offset":422},"end":{"line":10,"column":10,"offset":431}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":11,"column":7,"offset":438},"end":{"line":11,"column":10,"offset":441}}}],"position":{"start":{"line":11,"column":1,"offset":432},"end":{"line":11,"column":10,"offset":441}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":13,"column":6,"offset":448},"end":{"line":13,"column":14,"offset":456}}}],"position":{"start":{"line":13,"column":1,"offset":443},"end":{"line":13,"column":14,"offset":456}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":14,"column":7,"offset":463},"end":{"line":14,"column":10,"offset":466}}}],"position":{"start":{"line":14,"column":1,"offset":457},"end":{"line":14,"column":10,"offset":466}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":16,"column":8,"offset":475},"end":{"line":16,"column":30,"offset":497}}}],"position":{"start":{"line":16,"column":1,"offset":468},"end":{"line":16,"column":30,"offset":497}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":18,"column":1,"offset":499},"end":{"line":19,"column":1,"offset":643}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":643},"end":{"line":19,"column":5,"offset":647}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":19,"column":5,"offset":647},"end":{"line":19,"column":16,"offset":658}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":16,"offset":658},"end":{"line":19,"column":20,"offset":662}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":19,"column":20,"offset":662},"end":{"line":21,"column":1,"offset":806}}},{"type":"raw","value":"<br>","position":{"start":{"line":21,"column":1,"offset":806},"end":{"line":21,"column":5,"offset":810}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":21,"column":5,"offset":810},"end":{"line":21,"column":16,"offset":821}}},{"type":"raw","value":"<br>","position":{"start":{"line":21,"column":16,"offset":821},"end":{"line":21,"column":20,"offset":825}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":21,"column":20,"offset":825},"end":{"line":22,"column":45,"offset":870}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":45,"offset":870},"end":{"line":22,"column":49,"offset":874}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":22,"column":49,"offset":874},"end":{"line":22,"column":65,"offset":890}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":65,"offset":890},"end":{"line":22,"column":69,"offset":894}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":22,"column":69,"offset":894},"end":{"line":24,"column":1,"offset":937}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":1,"offset":937},"end":{"line":24,"column":5,"offset":941}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":24,"column":5,"offset":941},"end":{"line":24,"column":22,"offset":958}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":22,"offset":958},"end":{"line":24,"column":26,"offset":962}}},{"type":"text","value":"\n","position":{"start":{"line":24,"column":26,"offset":962},"end":{"line":25,"column":1,"offset":963}}},{"type":"raw","value":"<br>","position":{"start":{"line":25,"column":1,"offset":963},"end":{"line":25,"column":5,"offset":967}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":25,"column":5,"offset":967},"end":{"line":27,"column":1,"offset":1085}}},{"type":"raw","value":"<br>","position":{"start":{"line":27,"column":1,"offset":1085},"end":{"line":27,"column":5,"offset":1089}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":27,"column":5,"offset":1089},"end":{"line":29,"column":1,"offset":1210}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":29,"column":1,"offset":1210},"end":{"line":29,"column":12,"offset":1221}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":29,"column":12,"offset":1221},"end":{"line":29,"column":68,"offset":1277}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":29,"column":68,"offset":1277},"end":{"line":29,"column":79,"offset":1288}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":29,"column":79,"offset":1288},"end":{"line":29,"column":106,"offset":1315}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":29,"column":106,"offset":1315},"end":{"line":29,"column":109,"offset":1318}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":29,"column":109,"offset":1318},"end":{"line":29,"column":189,"offset":1398}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":29,"column":189,"offset":1398},"end":{"line":29,"column":192,"offset":1401}}},{"type":"text","value":" to get 3.","position":{"start":{"line":29,"column":192,"offset":1401},"end":{"line":29,"column":202,"offset":1411}}}],"position":{"start":{"line":18,"column":1,"offset":499},"end":{"line":29,"column":202,"offset":1411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":31,"column":8,"offset":1420},"end":{"line":31,"column":14,"offset":1426}}}],"position":{"start":{"line":31,"column":1,"offset":1413},"end":{"line":31,"column":14,"offset":1426}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":32,"column":1,"offset":1427},"end":{"line":32,"column":9,"offset":1435}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":32,"column":9,"offset":1435},"end":{"line":32,"column":73,"offset":1499}}}],"position":{"start":{"line":32,"column":1,"offset":1427},"end":{"line":32,"column":73,"offset":1499}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":33,"column":1,"offset":1500},"end":{"line":36,"column":4,"offset":1539}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":37,"column":1,"offset":1540},"end":{"line":37,"column":5,"offset":1544}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":39,"column":1,"offset":1546},"end":{"line":39,"column":72,"offset":1617}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":39,"column":72,"offset":1617},"end":{"line":39,"column":80,"offset":1625}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":39,"column":80,"offset":1625},"end":{"line":40,"column":1,"offset":1649}}},{"type":"raw","value":"<br>","position":{"start":{"line":40,"column":1,"offset":1649},"end":{"line":40,"column":5,"offset":1653}}},{"type":"text","value":"\n","position":{"start":{"line":40,"column":5,"offset":1653},"end":{"line":41,"column":1,"offset":1654}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":1,"offset":1654},"end":{"line":41,"column":5,"offset":1658}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":41,"column":5,"offset":1658},"end":{"line":42,"column":184,"offset":1842}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":42,"column":184,"offset":1842},"end":{"line":42,"column":187,"offset":1845}}},{"type":"text","value":".\n","position":{"start":{"line":42,"column":187,"offset":1845},"end":{"line":43,"column":1,"offset":1848}}},{"type":"raw","value":"<br>","position":{"start":{"line":43,"column":1,"offset":1848},"end":{"line":43,"column":5,"offset":1852}}},{"type":"text","value":"\n","position":{"start":{"line":43,"column":5,"offset":1852},"end":{"line":44,"column":1,"offset":1853}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1853},"end":{"line":44,"column":5,"offset":1857}}},{"type":"text","value":"\nThe second parameter that define takes in is the body that the procedure will call ","position":{"start":{"line":44,"column":5,"offset":1857},"end":{"line":45,"column":84,"offset":1941}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":45,"column":84,"offset":1941},"end":{"line":45,"column":93,"offset":1950}}},{"type":"text","value":". ","position":{"start":{"line":45,"column":93,"offset":1950},"end":{"line":45,"column":95,"offset":1952}}}],"position":{"start":{"line":39,"column":1,"offset":1546},"end":{"line":45,"column":95,"offset":1952}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":47,"column":1,"offset":1954},"end":{"line":47,"column":6,"offset":1959}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":49,"column":1,"offset":1961},"end":{"line":50,"column":1,"offset":2005}}},{"type":"raw","value":"<br>","position":{"start":{"line":50,"column":1,"offset":2005},"end":{"line":50,"column":5,"offset":2009}}},{"type":"text","value":"\n","position":{"start":{"line":50,"column":5,"offset":2009},"end":{"line":51,"column":1,"offset":2010}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":51,"column":1,"offset":2010},"end":{"line":51,"column":22,"offset":2031}}},{"type":"text","value":"\n","position":{"start":{"line":51,"column":22,"offset":2031},"end":{"line":52,"column":1,"offset":2032}}},{"type":"raw","value":"<br>","position":{"start":{"line":52,"column":1,"offset":2032},"end":{"line":52,"column":5,"offset":2036}}}],"position":{"start":{"line":49,"column":1,"offset":1961},"end":{"line":52,"column":5,"offset":2036}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no body needs to be called for the second parameter.","position":{"start":{"line":54,"column":1,"offset":2038},"end":{"line":54,"column":143,"offset":2180}}}],"position":{"start":{"line":54,"column":1,"offset":2038},"end":{"line":54,"column":143,"offset":2180}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":56,"column":8,"offset":2189},"end":{"line":56,"column":20,"offset":2201}}}],"position":{"start":{"line":56,"column":1,"offset":2182},"end":{"line":56,"column":20,"offset":2201}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":58,"column":1,"offset":2203},"end":{"line":58,"column":56,"offset":2258}}}],"position":{"start":{"line":58,"column":1,"offset":2203},"end":{"line":58,"column":56,"offset":2258}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":59,"column":1,"offset":2259},"end":{"line":64,"column":4,"offset":2350}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":65,"column":1,"offset":2351},"end":{"line":65,"column":5,"offset":2355}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":67,"column":1,"offset":2357},"end":{"line":67,"column":37,"offset":2393}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":67,"column":37,"offset":2393},"end":{"line":67,"column":41,"offset":2397}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":67,"column":41,"offset":2397},"end":{"line":68,"column":1,"offset":2414}}},{"type":"raw","value":"<br>","position":{"start":{"line":68,"column":1,"offset":2414},"end":{"line":68,"column":5,"offset":2418}}},{"type":"text","value":"\n","position":{"start":{"line":68,"column":5,"offset":2418},"end":{"line":69,"column":1,"offset":2419}}},{"type":"raw","value":"<br>","position":{"start":{"line":69,"column":1,"offset":2419},"end":{"line":69,"column":5,"offset":2423}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":69,"column":5,"offset":2423},"end":{"line":70,"column":66,"offset":2489}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":70,"column":66,"offset":2489},"end":{"line":70,"column":89,"offset":2512}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":70,"column":89,"offset":2512},"end":{"line":71,"column":1,"offset":2552}}},{"type":"raw","value":"<br>","position":{"start":{"line":71,"column":1,"offset":2552},"end":{"line":71,"column":5,"offset":2556}}},{"type":"text","value":"\n","position":{"start":{"line":71,"column":5,"offset":2556},"end":{"line":72,"column":1,"offset":2557}}},{"type":"raw","value":"<br>","position":{"start":{"line":72,"column":1,"offset":2557},"end":{"line":72,"column":5,"offset":2561}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":72,"column":5,"offset":2561},"end":{"line":73,"column":21,"offset":2582}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":73,"column":21,"offset":2582},"end":{"line":73,"column":25,"offset":2586}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":73,"column":25,"offset":2586},"end":{"line":74,"column":1,"offset":2640}}},{"type":"raw","value":"<br>","position":{"start":{"line":74,"column":1,"offset":2640},"end":{"line":74,"column":5,"offset":2644}}},{"type":"text","value":"\n","position":{"start":{"line":74,"column":5,"offset":2644},"end":{"line":75,"column":1,"offset":2645}}},{"type":"raw","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2645},"end":{"line":75,"column":5,"offset":2649}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":75,"column":5,"offset":2649},"end":{"line":76,"column":21,"offset":2670}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":76,"column":21,"offset":2670},"end":{"line":76,"column":25,"offset":2674}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":76,"column":25,"offset":2674},"end":{"line":77,"column":1,"offset":2729}}},{"type":"raw","value":"<br>","position":{"start":{"line":77,"column":1,"offset":2729},"end":{"line":77,"column":5,"offset":2733}}},{"type":"text","value":"\n","position":{"start":{"line":77,"column":5,"offset":2733},"end":{"line":78,"column":1,"offset":2734}}},{"type":"raw","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2734},"end":{"line":78,"column":5,"offset":2738}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":78,"column":5,"offset":2738},"end":{"line":79,"column":58,"offset":2796}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":79,"column":58,"offset":2796},"end":{"line":79,"column":61,"offset":2799}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":79,"column":61,"offset":2799},"end":{"line":79,"column":145,"offset":2883}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":79,"column":145,"offset":2883},"end":{"line":79,"column":153,"offset":2891}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":79,"column":153,"offset":2891},"end":{"line":79,"column":178,"offset":2916}}}],"position":{"start":{"line":67,"column":1,"offset":2357},"end":{"line":79,"column":178,"offset":2916}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":81,"column":7,"offset":2924},"end":{"line":81,"column":10,"offset":2927}}}],"position":{"start":{"line":81,"column":1,"offset":2918},"end":{"line":81,"column":10,"offset":2927}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":82,"column":7,"offset":2934},"end":{"line":82,"column":10,"offset":2937}}}],"position":{"start":{"line":82,"column":1,"offset":2928},"end":{"line":82,"column":10,"offset":2937}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":83,"column":7,"offset":2944},"end":{"line":83,"column":10,"offset":2947}}}],"position":{"start":{"line":83,"column":1,"offset":2938},"end":{"line":83,"column":10,"offset":2947}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":85,"column":6,"offset":2954},"end":{"line":85,"column":10,"offset":2958}}}],"position":{"start":{"line":85,"column":1,"offset":2949},"end":{"line":85,"column":10,"offset":2958}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1","position":{"start":{"line":86,"column":7,"offset":2965},"end":{"line":86,"column":12,"offset":2970}}}],"position":{"start":{"line":86,"column":1,"offset":2959},"end":{"line":86,"column":13,"offset":2971}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 2","position":{"start":{"line":87,"column":7,"offset":2978},"end":{"line":87,"column":12,"offset":2983}}}],"position":{"start":{"line":87,"column":1,"offset":2972},"end":{"line":87,"column":13,"offset":2984}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":87,"column":13,"offset":2984}}}}