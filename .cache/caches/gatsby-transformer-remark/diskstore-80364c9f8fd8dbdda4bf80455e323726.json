{"expireTime":9007200842249529000,"key":"transformer-remark-markdown-html-ast-9c35f6ee80462719d498ad39ad937ea7-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833}}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847}}},{"type":"raw","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860}}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865}}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879}}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884}}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895}}},{"type":"raw","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900}}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901}}},{"type":"raw","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906}}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911}}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912}}},{"type":"raw","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916}}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":30,"column":126,"offset":1042}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":30,"column":126,"offset":1042}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":32,"column":7,"offset":1050},"end":{"line":32,"column":10,"offset":1053}}}],"position":{"start":{"line":32,"column":1,"offset":1044},"end":{"line":32,"column":10,"offset":1053}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":33,"column":7,"offset":1060},"end":{"line":33,"column":10,"offset":1063}}}],"position":{"start":{"line":33,"column":1,"offset":1054},"end":{"line":33,"column":10,"offset":1063}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":35,"column":6,"offset":1070},"end":{"line":35,"column":14,"offset":1078}}}],"position":{"start":{"line":35,"column":1,"offset":1065},"end":{"line":35,"column":14,"offset":1078}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":36,"column":7,"offset":1085},"end":{"line":36,"column":10,"offset":1088}}}],"position":{"start":{"line":36,"column":1,"offset":1079},"end":{"line":36,"column":10,"offset":1088}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":38,"column":8,"offset":1097},"end":{"line":38,"column":30,"offset":1119}}}],"position":{"start":{"line":38,"column":1,"offset":1090},"end":{"line":38,"column":30,"offset":1119}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":40,"column":1,"offset":1121},"end":{"line":41,"column":1,"offset":1265}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":1,"offset":1265},"end":{"line":41,"column":5,"offset":1269}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":41,"column":5,"offset":1269},"end":{"line":41,"column":16,"offset":1280}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":16,"offset":1280},"end":{"line":41,"column":20,"offset":1284}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":41,"column":20,"offset":1284},"end":{"line":43,"column":1,"offset":1428}}},{"type":"raw","value":"<br>","position":{"start":{"line":43,"column":1,"offset":1428},"end":{"line":43,"column":5,"offset":1432}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":43,"column":5,"offset":1432},"end":{"line":43,"column":16,"offset":1443}}},{"type":"raw","value":"<br>","position":{"start":{"line":43,"column":16,"offset":1443},"end":{"line":43,"column":20,"offset":1447}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":43,"column":20,"offset":1447},"end":{"line":44,"column":45,"offset":1492}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":45,"offset":1492},"end":{"line":44,"column":49,"offset":1496}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":44,"column":49,"offset":1496},"end":{"line":44,"column":65,"offset":1512}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":65,"offset":1512},"end":{"line":44,"column":69,"offset":1516}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":44,"column":69,"offset":1516},"end":{"line":46,"column":1,"offset":1559}}},{"type":"raw","value":"<br>","position":{"start":{"line":46,"column":1,"offset":1559},"end":{"line":46,"column":5,"offset":1563}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":46,"column":5,"offset":1563},"end":{"line":46,"column":22,"offset":1580}}},{"type":"raw","value":"<br>","position":{"start":{"line":46,"column":22,"offset":1580},"end":{"line":46,"column":26,"offset":1584}}},{"type":"text","value":"\n","position":{"start":{"line":46,"column":26,"offset":1584},"end":{"line":47,"column":1,"offset":1585}}},{"type":"raw","value":"<br>","position":{"start":{"line":47,"column":1,"offset":1585},"end":{"line":47,"column":5,"offset":1589}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":47,"column":5,"offset":1589},"end":{"line":49,"column":1,"offset":1707}}},{"type":"raw","value":"<br>","position":{"start":{"line":49,"column":1,"offset":1707},"end":{"line":49,"column":5,"offset":1711}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":49,"column":5,"offset":1711},"end":{"line":51,"column":1,"offset":1832}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":51,"column":1,"offset":1832},"end":{"line":51,"column":12,"offset":1843}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":51,"column":12,"offset":1843},"end":{"line":51,"column":68,"offset":1899}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":51,"column":68,"offset":1899},"end":{"line":51,"column":79,"offset":1910}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":51,"column":79,"offset":1910},"end":{"line":51,"column":106,"offset":1937}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":51,"column":106,"offset":1937},"end":{"line":51,"column":109,"offset":1940}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":51,"column":109,"offset":1940},"end":{"line":51,"column":189,"offset":2020}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":51,"column":189,"offset":2020},"end":{"line":51,"column":192,"offset":2023}}},{"type":"text","value":" to get 3.","position":{"start":{"line":51,"column":192,"offset":2023},"end":{"line":51,"column":202,"offset":2033}}}],"position":{"start":{"line":40,"column":1,"offset":1121},"end":{"line":51,"column":202,"offset":2033}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":53,"column":8,"offset":2042},"end":{"line":53,"column":14,"offset":2048}}}],"position":{"start":{"line":53,"column":1,"offset":2035},"end":{"line":53,"column":14,"offset":2048}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":54,"column":1,"offset":2049},"end":{"line":54,"column":9,"offset":2057}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":54,"column":9,"offset":2057},"end":{"line":54,"column":73,"offset":2121}}}],"position":{"start":{"line":54,"column":1,"offset":2049},"end":{"line":54,"column":73,"offset":2121}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":55,"column":1,"offset":2122},"end":{"line":58,"column":4,"offset":2161}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":59,"column":1,"offset":2162},"end":{"line":59,"column":5,"offset":2166}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":61,"column":1,"offset":2168},"end":{"line":61,"column":72,"offset":2239}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":61,"column":72,"offset":2239},"end":{"line":61,"column":80,"offset":2247}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":61,"column":80,"offset":2247},"end":{"line":62,"column":1,"offset":2271}}},{"type":"raw","value":"<br>","position":{"start":{"line":62,"column":1,"offset":2271},"end":{"line":62,"column":5,"offset":2275}}},{"type":"text","value":"\n","position":{"start":{"line":62,"column":5,"offset":2275},"end":{"line":63,"column":1,"offset":2276}}},{"type":"raw","value":"<br>","position":{"start":{"line":63,"column":1,"offset":2276},"end":{"line":63,"column":5,"offset":2280}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":63,"column":5,"offset":2280},"end":{"line":64,"column":184,"offset":2464}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":64,"column":184,"offset":2464},"end":{"line":64,"column":187,"offset":2467}}},{"type":"text","value":".\n","position":{"start":{"line":64,"column":187,"offset":2467},"end":{"line":65,"column":1,"offset":2470}}},{"type":"raw","value":"<br>","position":{"start":{"line":65,"column":1,"offset":2470},"end":{"line":65,"column":5,"offset":2474}}},{"type":"text","value":"\n","position":{"start":{"line":65,"column":5,"offset":2474},"end":{"line":66,"column":1,"offset":2475}}},{"type":"raw","value":"<br>","position":{"start":{"line":66,"column":1,"offset":2475},"end":{"line":66,"column":5,"offset":2479}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":66,"column":5,"offset":2479},"end":{"line":67,"column":27,"offset":2506}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":67,"column":27,"offset":2506},"end":{"line":67,"column":35,"offset":2514}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":67,"column":35,"offset":2514},"end":{"line":67,"column":86,"offset":2565}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":67,"column":86,"offset":2565},"end":{"line":67,"column":95,"offset":2574}}},{"type":"text","value":". ","position":{"start":{"line":67,"column":95,"offset":2574},"end":{"line":67,"column":97,"offset":2576}}}],"position":{"start":{"line":61,"column":1,"offset":2168},"end":{"line":67,"column":97,"offset":2576}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":69,"column":1,"offset":2578},"end":{"line":69,"column":6,"offset":2583}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":71,"column":1,"offset":2585},"end":{"line":72,"column":1,"offset":2629}}},{"type":"raw","value":"<br>","position":{"start":{"line":72,"column":1,"offset":2629},"end":{"line":72,"column":5,"offset":2633}}},{"type":"text","value":"\n","position":{"start":{"line":72,"column":5,"offset":2633},"end":{"line":73,"column":1,"offset":2634}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":73,"column":1,"offset":2634},"end":{"line":73,"column":22,"offset":2655}}},{"type":"text","value":"\n","position":{"start":{"line":73,"column":22,"offset":2655},"end":{"line":74,"column":1,"offset":2656}}},{"type":"raw","value":"<br>","position":{"start":{"line":74,"column":1,"offset":2656},"end":{"line":74,"column":5,"offset":2660}}}],"position":{"start":{"line":71,"column":1,"offset":2585},"end":{"line":74,"column":5,"offset":2660}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":76,"column":1,"offset":2662},"end":{"line":76,"column":152,"offset":2813}}}],"position":{"start":{"line":76,"column":1,"offset":2662},"end":{"line":76,"column":152,"offset":2813}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":78,"column":8,"offset":2822},"end":{"line":78,"column":20,"offset":2834}}}],"position":{"start":{"line":78,"column":1,"offset":2815},"end":{"line":78,"column":20,"offset":2834}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":80,"column":1,"offset":2836},"end":{"line":80,"column":56,"offset":2891}}}],"position":{"start":{"line":80,"column":1,"offset":2836},"end":{"line":80,"column":56,"offset":2891}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":81,"column":1,"offset":2892},"end":{"line":86,"column":4,"offset":2983}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":87,"column":1,"offset":2984},"end":{"line":87,"column":5,"offset":2988}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":89,"column":1,"offset":2990},"end":{"line":89,"column":37,"offset":3026}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":89,"column":37,"offset":3026},"end":{"line":89,"column":41,"offset":3030}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":89,"column":41,"offset":3030},"end":{"line":90,"column":1,"offset":3047}}},{"type":"raw","value":"<br>","position":{"start":{"line":90,"column":1,"offset":3047},"end":{"line":90,"column":5,"offset":3051}}},{"type":"text","value":"\n","position":{"start":{"line":90,"column":5,"offset":3051},"end":{"line":91,"column":1,"offset":3052}}},{"type":"raw","value":"<br>","position":{"start":{"line":91,"column":1,"offset":3052},"end":{"line":91,"column":5,"offset":3056}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":91,"column":5,"offset":3056},"end":{"line":92,"column":66,"offset":3122}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":92,"column":66,"offset":3122},"end":{"line":92,"column":89,"offset":3145}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":92,"column":89,"offset":3145},"end":{"line":93,"column":1,"offset":3185}}},{"type":"raw","value":"<br>","position":{"start":{"line":93,"column":1,"offset":3185},"end":{"line":93,"column":5,"offset":3189}}},{"type":"text","value":"\n","position":{"start":{"line":93,"column":5,"offset":3189},"end":{"line":94,"column":1,"offset":3190}}},{"type":"raw","value":"<br>","position":{"start":{"line":94,"column":1,"offset":3190},"end":{"line":94,"column":5,"offset":3194}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":94,"column":5,"offset":3194},"end":{"line":95,"column":21,"offset":3215}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":95,"column":21,"offset":3215},"end":{"line":95,"column":25,"offset":3219}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":95,"column":25,"offset":3219},"end":{"line":96,"column":1,"offset":3273}}},{"type":"raw","value":"<br>","position":{"start":{"line":96,"column":1,"offset":3273},"end":{"line":96,"column":5,"offset":3277}}},{"type":"text","value":"\n","position":{"start":{"line":96,"column":5,"offset":3277},"end":{"line":97,"column":1,"offset":3278}}},{"type":"raw","value":"<br>","position":{"start":{"line":97,"column":1,"offset":3278},"end":{"line":97,"column":5,"offset":3282}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":97,"column":5,"offset":3282},"end":{"line":98,"column":21,"offset":3303}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":98,"column":21,"offset":3303},"end":{"line":98,"column":25,"offset":3307}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":98,"column":25,"offset":3307},"end":{"line":99,"column":1,"offset":3362}}},{"type":"raw","value":"<br>","position":{"start":{"line":99,"column":1,"offset":3362},"end":{"line":99,"column":5,"offset":3366}}},{"type":"text","value":"\n","position":{"start":{"line":99,"column":5,"offset":3366},"end":{"line":100,"column":1,"offset":3367}}},{"type":"raw","value":"<br>","position":{"start":{"line":100,"column":1,"offset":3367},"end":{"line":100,"column":5,"offset":3371}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":100,"column":5,"offset":3371},"end":{"line":101,"column":58,"offset":3429}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":101,"column":58,"offset":3429},"end":{"line":101,"column":61,"offset":3432}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":101,"column":61,"offset":3432},"end":{"line":101,"column":145,"offset":3516}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":101,"column":145,"offset":3516},"end":{"line":101,"column":153,"offset":3524}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":101,"column":153,"offset":3524},"end":{"line":101,"column":178,"offset":3549}}}],"position":{"start":{"line":89,"column":1,"offset":2990},"end":{"line":101,"column":178,"offset":3549}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":103,"column":7,"offset":3557},"end":{"line":103,"column":10,"offset":3560}}}],"position":{"start":{"line":103,"column":1,"offset":3551},"end":{"line":103,"column":10,"offset":3560}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":105,"column":8,"offset":3569},"end":{"line":105,"column":17,"offset":3578}}}],"position":{"start":{"line":105,"column":1,"offset":3562},"end":{"line":105,"column":17,"offset":3578}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":106,"column":1,"offset":3579},"end":{"line":117,"column":4,"offset":3778}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":118,"column":1,"offset":3779},"end":{"line":118,"column":5,"offset":3783}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":120,"column":1,"offset":3785},"end":{"line":121,"column":1,"offset":4001}}},{"type":"raw","value":"<br>","position":{"start":{"line":121,"column":1,"offset":4001},"end":{"line":121,"column":5,"offset":4005}}},{"type":"text","value":"\n","position":{"start":{"line":121,"column":5,"offset":4005},"end":{"line":122,"column":1,"offset":4006}}},{"type":"raw","value":"<br>","position":{"start":{"line":122,"column":1,"offset":4006},"end":{"line":122,"column":5,"offset":4010}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":122,"column":5,"offset":4010},"end":{"line":123,"column":72,"offset":4082}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":123,"column":72,"offset":4082},"end":{"line":123,"column":81,"offset":4091}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":123,"column":81,"offset":4091},"end":{"line":124,"column":1,"offset":4110}}},{"type":"raw","value":"<br>","position":{"start":{"line":124,"column":1,"offset":4110},"end":{"line":124,"column":5,"offset":4114}}},{"type":"text","value":"\n","position":{"start":{"line":124,"column":5,"offset":4114},"end":{"line":125,"column":1,"offset":4115}}},{"type":"raw","value":"<br>","position":{"start":{"line":125,"column":1,"offset":4115},"end":{"line":125,"column":5,"offset":4119}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":125,"column":5,"offset":4119},"end":{"line":126,"column":10,"offset":4129}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":126,"column":10,"offset":4129},"end":{"line":126,"column":16,"offset":4135}}},{"type":"text","value":" gets called with ","position":{"start":{"line":126,"column":16,"offset":4135},"end":{"line":126,"column":34,"offset":4153}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":126,"column":34,"offset":4153},"end":{"line":126,"column":42,"offset":4161}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":126,"column":42,"offset":4161},"end":{"line":127,"column":24,"offset":4186}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":127,"column":24,"offset":4186},"end":{"line":127,"column":33,"offset":4195}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":127,"column":33,"offset":4195},"end":{"line":127,"column":107,"offset":4269}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":127,"column":107,"offset":4269},"end":{"line":127,"column":116,"offset":4278}}},{"type":"text","value":" is false because ","position":{"start":{"line":127,"column":116,"offset":4278},"end":{"line":127,"column":134,"offset":4296}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":127,"column":134,"offset":4296},"end":{"line":127,"column":137,"offset":4299}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":127,"column":137,"offset":4299},"end":{"line":127,"column":161,"offset":4323}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":127,"column":161,"offset":4323},"end":{"line":127,"column":167,"offset":4329}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":127,"column":167,"offset":4329},"end":{"line":127,"column":192,"offset":4354}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":127,"column":192,"offset":4354},"end":{"line":127,"column":200,"offset":4362}}},{"type":"text","value":". This is because ","position":{"start":{"line":127,"column":200,"offset":4362},"end":{"line":127,"column":218,"offset":4380}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":127,"column":218,"offset":4380},"end":{"line":127,"column":224,"offset":4386}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":127,"column":224,"offset":4386},"end":{"line":127,"column":245,"offset":4407}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":127,"column":245,"offset":4407},"end":{"line":127,"column":252,"offset":4414}}},{"type":"text","value":" and ","position":{"start":{"line":127,"column":252,"offset":4414},"end":{"line":127,"column":257,"offset":4419}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":127,"column":257,"offset":4419},"end":{"line":127,"column":260,"offset":4422}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":127,"column":260,"offset":4422},"end":{"line":127,"column":285,"offset":4447}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":127,"column":285,"offset":4447},"end":{"line":127,"column":291,"offset":4453}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":127,"column":291,"offset":4453},"end":{"line":128,"column":96,"offset":4579}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":128,"column":96,"offset":4579},"end":{"line":128,"column":111,"offset":4594}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":128,"column":111,"offset":4594},"end":{"line":128,"column":182,"offset":4665}}}],"position":{"start":{"line":120,"column":1,"offset":3785},"end":{"line":128,"column":182,"offset":4665}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":130,"column":8,"offset":4674},"end":{"line":130,"column":19,"offset":4685}}}],"position":{"start":{"line":130,"column":1,"offset":4667},"end":{"line":130,"column":19,"offset":4685}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":131,"column":1,"offset":4686},"end":{"line":131,"column":14,"offset":4699}}}],"position":{"start":{"line":131,"column":1,"offset":4686},"end":{"line":131,"column":14,"offset":4699}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":132,"column":1,"offset":4700},"end":{"line":147,"column":4,"offset":5115}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":148,"column":1,"offset":5116},"end":{"line":148,"column":5,"offset":5120}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":150,"column":1,"offset":5122},"end":{"line":150,"column":141,"offset":5262}}}],"position":{"start":{"line":150,"column":1,"offset":5122},"end":{"line":150,"column":141,"offset":5262}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":152,"column":8,"offset":5271},"end":{"line":152,"column":30,"offset":5293}}}],"position":{"start":{"line":152,"column":1,"offset":5264},"end":{"line":152,"column":30,"offset":5293}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":153,"column":1,"offset":5294},"end":{"line":153,"column":199,"offset":5492}}}],"position":{"start":{"line":153,"column":1,"offset":5294},"end":{"line":153,"column":199,"offset":5492}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":155,"column":8,"offset":5501},"end":{"line":155,"column":30,"offset":5523}}}],"position":{"start":{"line":155,"column":1,"offset":5494},"end":{"line":155,"column":30,"offset":5523}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":157,"column":1,"offset":5525},"end":{"line":158,"column":1,"offset":5600}}},{"type":"raw","value":"<br>","position":{"start":{"line":158,"column":1,"offset":5600},"end":{"line":158,"column":5,"offset":5604}}},{"type":"text","value":"\n","position":{"start":{"line":158,"column":5,"offset":5604},"end":{"line":159,"column":1,"offset":5605}}},{"type":"raw","value":"<br>","position":{"start":{"line":159,"column":1,"offset":5605},"end":{"line":159,"column":5,"offset":5609}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":159,"column":5,"offset":5609},"end":{"line":161,"column":1,"offset":5671}}},{"type":"raw","value":"<br>","position":{"start":{"line":161,"column":1,"offset":5671},"end":{"line":161,"column":5,"offset":5675}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":161,"column":5,"offset":5675},"end":{"line":162,"column":1,"offset":5678}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":162,"column":1,"offset":5678},"end":{"line":162,"column":11,"offset":5688}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":162,"column":11,"offset":5688},"end":{"line":162,"column":19,"offset":5696}}},{"type":"text","value":" and ","position":{"start":{"line":162,"column":19,"offset":5696},"end":{"line":162,"column":24,"offset":5701}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":162,"column":24,"offset":5701},"end":{"line":162,"column":34,"offset":5711}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":162,"column":34,"offset":5711},"end":{"line":163,"column":1,"offset":5760}}},{"type":"raw","value":"<br>","position":{"start":{"line":163,"column":1,"offset":5760},"end":{"line":163,"column":5,"offset":5764}}}],"position":{"start":{"line":157,"column":1,"offset":5525},"end":{"line":163,"column":5,"offset":5764}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":165,"column":8,"offset":5773},"end":{"line":165,"column":12,"offset":5777}}}],"position":{"start":{"line":165,"column":1,"offset":5766},"end":{"line":165,"column":12,"offset":5777}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":166,"column":1,"offset":5778},"end":{"line":171,"column":4,"offset":5889}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":172,"column":1,"offset":5890},"end":{"line":173,"column":5,"offset":5899}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":175,"column":1,"offset":5901},"end":{"line":175,"column":7,"offset":5907}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":175,"column":7,"offset":5907},"end":{"line":177,"column":1,"offset":5989}}},{"type":"raw","value":"<br>","position":{"start":{"line":177,"column":1,"offset":5989},"end":{"line":177,"column":5,"offset":5993}}},{"type":"text","value":"\n","position":{"start":{"line":177,"column":5,"offset":5993},"end":{"line":178,"column":1,"offset":5994}}},{"type":"raw","value":"<br>","position":{"start":{"line":178,"column":1,"offset":5994},"end":{"line":178,"column":5,"offset":5998}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":178,"column":5,"offset":5998},"end":{"line":179,"column":10,"offset":6008}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":179,"column":10,"offset":6008},"end":{"line":179,"column":14,"offset":6012}}},{"type":"text","value":". Since ","position":{"start":{"line":179,"column":14,"offset":6012},"end":{"line":179,"column":22,"offset":6020}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":179,"column":22,"offset":6020},"end":{"line":179,"column":30,"offset":6028}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":179,"column":30,"offset":6028},"end":{"line":179,"column":50,"offset":6048}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":179,"column":50,"offset":6048},"end":{"line":179,"column":53,"offset":6051}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":179,"column":53,"offset":6051},"end":{"line":179,"column":90,"offset":6088}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":179,"column":90,"offset":6088},"end":{"line":179,"column":96,"offset":6094}}},{"type":"text","value":".\n","position":{"start":{"line":179,"column":96,"offset":6094},"end":{"line":180,"column":1,"offset":6097}}},{"type":"raw","value":"<br>","position":{"start":{"line":180,"column":1,"offset":6097},"end":{"line":180,"column":5,"offset":6101}}},{"type":"text","value":"\n","position":{"start":{"line":180,"column":5,"offset":6101},"end":{"line":181,"column":1,"offset":6102}}},{"type":"raw","value":"<br>","position":{"start":{"line":181,"column":1,"offset":6102},"end":{"line":181,"column":5,"offset":6106}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":181,"column":5,"offset":6106},"end":{"line":182,"column":14,"offset":6120}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":182,"column":14,"offset":6120},"end":{"line":182,"column":18,"offset":6124}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":182,"column":18,"offset":6124},"end":{"line":182,"column":90,"offset":6196}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":182,"column":90,"offset":6196},"end":{"line":182,"column":94,"offset":6200}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":182,"column":94,"offset":6200},"end":{"line":182,"column":125,"offset":6231}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":182,"column":125,"offset":6231},"end":{"line":182,"column":131,"offset":6237}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":182,"column":131,"offset":6237},"end":{"line":183,"column":1,"offset":6252}}},{"type":"raw","value":"<br>","position":{"start":{"line":183,"column":1,"offset":6252},"end":{"line":183,"column":5,"offset":6256}}},{"type":"text","value":"\n","position":{"start":{"line":183,"column":5,"offset":6256},"end":{"line":184,"column":1,"offset":6257}}},{"type":"raw","value":"<br>","position":{"start":{"line":184,"column":1,"offset":6257},"end":{"line":184,"column":5,"offset":6261}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":184,"column":5,"offset":6261},"end":{"line":185,"column":14,"offset":6275}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":185,"column":14,"offset":6275},"end":{"line":185,"column":18,"offset":6279}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":185,"column":18,"offset":6279},"end":{"line":185,"column":37,"offset":6298}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":185,"column":37,"offset":6298},"end":{"line":185,"column":40,"offset":6301}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":185,"column":40,"offset":6301},"end":{"line":185,"column":77,"offset":6338}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":185,"column":77,"offset":6338},"end":{"line":185,"column":81,"offset":6342}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":185,"column":81,"offset":6342},"end":{"line":185,"column":99,"offset":6360}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":185,"column":99,"offset":6360},"end":{"line":185,"column":102,"offset":6363}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":185,"column":102,"offset":6363},"end":{"line":185,"column":133,"offset":6394}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":185,"column":133,"offset":6394},"end":{"line":185,"column":139,"offset":6400}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":185,"column":139,"offset":6400},"end":{"line":185,"column":167,"offset":6428}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":185,"column":167,"offset":6428},"end":{"line":185,"column":171,"offset":6432}}},{"type":"text","value":".\n","position":{"start":{"line":185,"column":171,"offset":6432},"end":{"line":186,"column":1,"offset":6434}}},{"type":"raw","value":"<br>","position":{"start":{"line":186,"column":1,"offset":6434},"end":{"line":186,"column":5,"offset":6438}}},{"type":"text","value":"\n","position":{"start":{"line":186,"column":5,"offset":6438},"end":{"line":187,"column":1,"offset":6439}}},{"type":"raw","value":"<br>","position":{"start":{"line":187,"column":1,"offset":6439},"end":{"line":187,"column":5,"offset":6443}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":187,"column":5,"offset":6443},"end":{"line":189,"column":1,"offset":6463}}},{"type":"raw","value":"<br>","position":{"start":{"line":189,"column":1,"offset":6463},"end":{"line":189,"column":5,"offset":6467}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":189,"column":5,"offset":6467},"end":{"line":190,"column":6,"offset":6473}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":190,"column":6,"offset":6473},"end":{"line":190,"column":12,"offset":6479}}},{"type":"text","value":" does not have an ","position":{"start":{"line":190,"column":12,"offset":6479},"end":{"line":190,"column":30,"offset":6497}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":190,"column":30,"offset":6497},"end":{"line":190,"column":36,"offset":6503}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":190,"column":36,"offset":6503},"end":{"line":190,"column":62,"offset":6529}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":190,"column":62,"offset":6529},"end":{"line":190,"column":75,"offset":6542}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":190,"column":75,"offset":6542},"end":{"line":190,"column":159,"offset":6626}}}],"position":{"start":{"line":175,"column":1,"offset":5901},"end":{"line":190,"column":159,"offset":6626}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":192,"column":8,"offset":6635},"end":{"line":192,"column":41,"offset":6668}}}],"position":{"start":{"line":192,"column":1,"offset":6628},"end":{"line":192,"column":41,"offset":6668}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":193,"column":1,"offset":6669},"end":{"line":198,"column":4,"offset":6744}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":199,"column":1,"offset":6745},"end":{"line":200,"column":1,"offset":6764}}},{"type":"raw","value":"<br>","position":{"start":{"line":200,"column":1,"offset":6764},"end":{"line":200,"column":5,"offset":6768}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":200,"column":5,"offset":6768},"end":{"line":202,"column":5,"offset":6906}}},{"type":"raw","value":"<br>","position":{"start":{"line":202,"column":5,"offset":6906},"end":{"line":202,"column":9,"offset":6910}}},{"type":"text","value":"\n","position":{"start":{"line":202,"column":9,"offset":6910},"end":{"line":203,"column":5,"offset":6915}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":203,"column":5,"offset":6915},"end":{"line":203,"column":27,"offset":6937}}},{"type":"text","value":"\n","position":{"start":{"line":203,"column":27,"offset":6937},"end":{"line":204,"column":5,"offset":6942}}},{"type":"raw","value":"<br>","position":{"start":{"line":204,"column":5,"offset":6942},"end":{"line":204,"column":9,"offset":6946}}},{"type":"text","value":"\n","position":{"start":{"line":204,"column":9,"offset":6946},"end":{"line":205,"column":5,"offset":6951}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":205,"column":5,"offset":6951},"end":{"line":205,"column":12,"offset":6958}}},{"type":"text","value":" and ","position":{"start":{"line":205,"column":12,"offset":6958},"end":{"line":205,"column":17,"offset":6963}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":205,"column":17,"offset":6963},"end":{"line":205,"column":25,"offset":6971}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":205,"column":25,"offset":6971},"end":{"line":205,"column":63,"offset":7009}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":205,"column":63,"offset":7009},"end":{"line":205,"column":66,"offset":7012}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":205,"column":66,"offset":7012},"end":{"line":205,"column":86,"offset":7032}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":205,"column":86,"offset":7032},"end":{"line":205,"column":89,"offset":7035}}},{"type":"text","value":" will be called with ","position":{"start":{"line":205,"column":89,"offset":7035},"end":{"line":205,"column":110,"offset":7056}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":205,"column":110,"offset":7056},"end":{"line":205,"column":119,"offset":7065}}},{"type":"text","value":".\n","position":{"start":{"line":205,"column":119,"offset":7065},"end":{"line":206,"column":1,"offset":7067}}},{"type":"raw","value":"<br>","position":{"start":{"line":206,"column":1,"offset":7067},"end":{"line":206,"column":5,"offset":7071}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":206,"column":5,"offset":7071},"end":{"line":208,"column":1,"offset":7087}}},{"type":"raw","value":"<br>","position":{"start":{"line":208,"column":1,"offset":7087},"end":{"line":208,"column":5,"offset":7091}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":208,"column":5,"offset":7091},"end":{"line":210,"column":5,"offset":7198}}},{"type":"raw","value":"<br>","position":{"start":{"line":210,"column":5,"offset":7198},"end":{"line":210,"column":9,"offset":7202}}},{"type":"text","value":"\n","position":{"start":{"line":210,"column":9,"offset":7202},"end":{"line":211,"column":1,"offset":7203}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":211,"column":1,"offset":7203},"end":{"line":211,"column":23,"offset":7225}}},{"type":"text","value":" turns into ","position":{"start":{"line":211,"column":23,"offset":7225},"end":{"line":211,"column":35,"offset":7237}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":211,"column":35,"offset":7237},"end":{"line":211,"column":61,"offset":7263}}},{"type":"text","value":"\n","position":{"start":{"line":211,"column":61,"offset":7263},"end":{"line":212,"column":1,"offset":7264}}},{"type":"raw","value":"<br>","position":{"start":{"line":212,"column":1,"offset":7264},"end":{"line":212,"column":5,"offset":7268}}},{"type":"text","value":"\nNow ","position":{"start":{"line":212,"column":5,"offset":7268},"end":{"line":213,"column":5,"offset":7273}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":213,"column":5,"offset":7273},"end":{"line":213,"column":8,"offset":7276}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":213,"column":8,"offset":7276},"end":{"line":213,"column":58,"offset":7326}}}],"position":{"start":{"line":199,"column":1,"offset":6745},"end":{"line":213,"column":58,"offset":7326}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":215,"column":1,"offset":7328},"end":{"line":216,"column":1,"offset":7346}}},{"type":"raw","value":"<br>","position":{"start":{"line":216,"column":1,"offset":7346},"end":{"line":216,"column":5,"offset":7350}}}],"position":{"start":{"line":215,"column":1,"offset":7328},"end":{"line":216,"column":5,"offset":7350}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":217,"column":1,"offset":7351},"end":{"line":219,"column":4,"offset":7381}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":220,"column":1,"offset":7382},"end":{"line":220,"column":13,"offset":7394}}}],"position":{"start":{"line":220,"column":1,"offset":7382},"end":{"line":220,"column":13,"offset":7394}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":221,"column":1,"offset":7395},"end":{"line":227,"column":4,"offset":7474}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":228,"column":1,"offset":7475},"end":{"line":228,"column":8,"offset":7482}}}],"position":{"start":{"line":228,"column":1,"offset":7475},"end":{"line":228,"column":8,"offset":7482}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":229,"column":1,"offset":7483},"end":{"line":236,"column":4,"offset":7607}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":237,"column":1,"offset":7608},"end":{"line":238,"column":5,"offset":7617}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":240,"column":1,"offset":7619},"end":{"line":240,"column":11,"offset":7629}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":240,"column":11,"offset":7629},"end":{"line":240,"column":24,"offset":7642}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":240,"column":24,"offset":7642},"end":{"line":240,"column":107,"offset":7725}}}],"position":{"start":{"line":240,"column":1,"offset":7619},"end":{"line":240,"column":107,"offset":7725}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":242,"column":7,"offset":7733},"end":{"line":242,"column":10,"offset":7736}}}],"position":{"start":{"line":242,"column":1,"offset":7727},"end":{"line":242,"column":10,"offset":7736}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":243,"column":7,"offset":7743},"end":{"line":243,"column":10,"offset":7746}}}],"position":{"start":{"line":243,"column":1,"offset":7737},"end":{"line":243,"column":10,"offset":7746}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":245,"column":6,"offset":7753},"end":{"line":245,"column":10,"offset":7757}}}],"position":{"start":{"line":245,"column":1,"offset":7748},"end":{"line":245,"column":10,"offset":7757}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":246,"column":7,"offset":7764},"end":{"line":246,"column":13,"offset":7770}}}],"position":{"start":{"line":246,"column":1,"offset":7758},"end":{"line":246,"column":13,"offset":7770}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":247,"column":1,"offset":7771},"end":{"line":247,"column":49,"offset":7819}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":247,"column":49,"offset":7819},"end":{"line":247,"column":57,"offset":7827}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":247,"column":57,"offset":7827},"end":{"line":247,"column":133,"offset":7903}}}],"position":{"start":{"line":247,"column":1,"offset":7771},"end":{"line":247,"column":133,"offset":7903}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":248,"column":1,"offset":7904},"end":{"line":258,"column":4,"offset":8099}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":259,"column":1,"offset":8100},"end":{"line":259,"column":5,"offset":8104}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":262,"column":1,"offset":8107},"end":{"line":263,"column":1,"offset":8189}}},{"type":"raw","value":"<br>","position":{"start":{"line":263,"column":1,"offset":8189},"end":{"line":263,"column":5,"offset":8193}}},{"type":"text","value":"\n","position":{"start":{"line":263,"column":5,"offset":8193},"end":{"line":264,"column":1,"offset":8194}}},{"type":"raw","value":"<br>","position":{"start":{"line":264,"column":1,"offset":8194},"end":{"line":264,"column":5,"offset":8198}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":264,"column":5,"offset":8198},"end":{"line":265,"column":26,"offset":8224}}}],"position":{"start":{"line":262,"column":1,"offset":8107},"end":{"line":265,"column":26,"offset":8224}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":266,"column":1,"offset":8225},"end":{"line":271,"column":4,"offset":8353}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":272,"column":1,"offset":8354},"end":{"line":272,"column":14,"offset":8367}}}],"position":{"start":{"line":272,"column":1,"offset":8354},"end":{"line":272,"column":14,"offset":8367}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":274,"column":1,"offset":8369},"end":{"line":287,"column":4,"offset":8651}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":289,"column":1,"offset":8653},"end":{"line":290,"column":5,"offset":8662}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":293,"column":7,"offset":8671},"end":{"line":293,"column":13,"offset":8677}}}],"position":{"start":{"line":293,"column":1,"offset":8665},"end":{"line":293,"column":13,"offset":8677}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":293,"column":13,"offset":8677}}}}