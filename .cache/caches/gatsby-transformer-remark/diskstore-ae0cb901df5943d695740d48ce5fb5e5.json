{"expireTime":9007200842250935000,"key":"transformer-remark-markdown-html-ast-278ad10640e71b58475dbc073eecb0e3-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833}}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847}}},{"type":"raw","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860}}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865}}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879}}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884}}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895}}},{"type":"raw","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900}}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901}}},{"type":"raw","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906}}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911}}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912}}},{"type":"raw","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916}}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043}}},{"type":"raw","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047}}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048}}},{"type":"raw","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052}}},{"type":"text","value":"\nEnvironment: The name-object pairs the interpreter keeps in memory.\n","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":34,"column":1,"offset":1121}}},{"type":"raw","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1121},"end":{"line":34,"column":5,"offset":1125}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":34,"column":5,"offset":1125}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Procedures can be used to build ontop of other procedures:\n","position":{"start":{"line":36,"column":1,"offset":1127},"end":{"line":37,"column":1,"offset":1186}}},{"type":"raw","value":"<br>","position":{"start":{"line":37,"column":1,"offset":1186},"end":{"line":37,"column":5,"offset":1190}}}],"position":{"start":{"line":36,"column":1,"offset":1127},"end":{"line":37,"column":5,"offset":1190}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (sum-of-squares x y))</code></pre></div>","position":{"start":{"line":38,"column":1,"offset":1191},"end":{"line":40,"column":4,"offset":1228}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":42,"column":1,"offset":1230},"end":{"line":42,"column":5,"offset":1234}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":44,"column":7,"offset":1242},"end":{"line":44,"column":10,"offset":1245}}}],"position":{"start":{"line":44,"column":1,"offset":1236},"end":{"line":44,"column":10,"offset":1245}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":45,"column":7,"offset":1252},"end":{"line":45,"column":10,"offset":1255}}}],"position":{"start":{"line":45,"column":1,"offset":1246},"end":{"line":45,"column":10,"offset":1255}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":47,"column":6,"offset":1262},"end":{"line":47,"column":14,"offset":1270}}}],"position":{"start":{"line":47,"column":1,"offset":1257},"end":{"line":47,"column":14,"offset":1270}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":48,"column":7,"offset":1277},"end":{"line":48,"column":10,"offset":1280}}}],"position":{"start":{"line":48,"column":1,"offset":1271},"end":{"line":48,"column":10,"offset":1280}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":50,"column":8,"offset":1289},"end":{"line":50,"column":30,"offset":1311}}}],"position":{"start":{"line":50,"column":1,"offset":1282},"end":{"line":50,"column":30,"offset":1311}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":52,"column":1,"offset":1313},"end":{"line":53,"column":1,"offset":1457}}},{"type":"raw","value":"<br>","position":{"start":{"line":53,"column":1,"offset":1457},"end":{"line":53,"column":5,"offset":1461}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":53,"column":5,"offset":1461},"end":{"line":53,"column":16,"offset":1472}}},{"type":"raw","value":"<br>","position":{"start":{"line":53,"column":16,"offset":1472},"end":{"line":53,"column":20,"offset":1476}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":53,"column":20,"offset":1476},"end":{"line":55,"column":1,"offset":1620}}},{"type":"raw","value":"<br>","position":{"start":{"line":55,"column":1,"offset":1620},"end":{"line":55,"column":5,"offset":1624}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":55,"column":5,"offset":1624},"end":{"line":55,"column":16,"offset":1635}}},{"type":"raw","value":"<br>","position":{"start":{"line":55,"column":16,"offset":1635},"end":{"line":55,"column":20,"offset":1639}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":55,"column":20,"offset":1639},"end":{"line":56,"column":45,"offset":1684}}},{"type":"raw","value":"<br>","position":{"start":{"line":56,"column":45,"offset":1684},"end":{"line":56,"column":49,"offset":1688}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":56,"column":49,"offset":1688},"end":{"line":56,"column":65,"offset":1704}}},{"type":"raw","value":"<br>","position":{"start":{"line":56,"column":65,"offset":1704},"end":{"line":56,"column":69,"offset":1708}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":56,"column":69,"offset":1708},"end":{"line":58,"column":1,"offset":1751}}},{"type":"raw","value":"<br>","position":{"start":{"line":58,"column":1,"offset":1751},"end":{"line":58,"column":5,"offset":1755}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":58,"column":5,"offset":1755},"end":{"line":58,"column":22,"offset":1772}}},{"type":"raw","value":"<br>","position":{"start":{"line":58,"column":22,"offset":1772},"end":{"line":58,"column":26,"offset":1776}}},{"type":"text","value":"\n","position":{"start":{"line":58,"column":26,"offset":1776},"end":{"line":59,"column":1,"offset":1777}}},{"type":"raw","value":"<br>","position":{"start":{"line":59,"column":1,"offset":1777},"end":{"line":59,"column":5,"offset":1781}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":59,"column":5,"offset":1781},"end":{"line":61,"column":1,"offset":1899}}},{"type":"raw","value":"<br>","position":{"start":{"line":61,"column":1,"offset":1899},"end":{"line":61,"column":5,"offset":1903}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":61,"column":5,"offset":1903},"end":{"line":63,"column":1,"offset":2024}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":63,"column":1,"offset":2024},"end":{"line":63,"column":12,"offset":2035}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":63,"column":12,"offset":2035},"end":{"line":63,"column":68,"offset":2091}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":63,"column":68,"offset":2091},"end":{"line":63,"column":79,"offset":2102}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":63,"column":79,"offset":2102},"end":{"line":63,"column":106,"offset":2129}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":63,"column":106,"offset":2129},"end":{"line":63,"column":109,"offset":2132}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":63,"column":109,"offset":2132},"end":{"line":63,"column":189,"offset":2212}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":63,"column":189,"offset":2212},"end":{"line":63,"column":192,"offset":2215}}},{"type":"text","value":" to get 3.","position":{"start":{"line":63,"column":192,"offset":2215},"end":{"line":63,"column":202,"offset":2225}}}],"position":{"start":{"line":52,"column":1,"offset":1313},"end":{"line":63,"column":202,"offset":2225}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":65,"column":8,"offset":2234},"end":{"line":65,"column":14,"offset":2240}}}],"position":{"start":{"line":65,"column":1,"offset":2227},"end":{"line":65,"column":14,"offset":2240}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":66,"column":1,"offset":2241},"end":{"line":66,"column":9,"offset":2249}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":66,"column":9,"offset":2249},"end":{"line":66,"column":73,"offset":2313}}}],"position":{"start":{"line":66,"column":1,"offset":2241},"end":{"line":66,"column":73,"offset":2313}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":67,"column":1,"offset":2314},"end":{"line":70,"column":4,"offset":2353}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":71,"column":1,"offset":2354},"end":{"line":71,"column":5,"offset":2358}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":73,"column":1,"offset":2360},"end":{"line":73,"column":72,"offset":2431}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":73,"column":72,"offset":2431},"end":{"line":73,"column":80,"offset":2439}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":73,"column":80,"offset":2439},"end":{"line":74,"column":1,"offset":2463}}},{"type":"raw","value":"<br>","position":{"start":{"line":74,"column":1,"offset":2463},"end":{"line":74,"column":5,"offset":2467}}},{"type":"text","value":"\n","position":{"start":{"line":74,"column":5,"offset":2467},"end":{"line":75,"column":1,"offset":2468}}},{"type":"raw","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2468},"end":{"line":75,"column":5,"offset":2472}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":75,"column":5,"offset":2472},"end":{"line":76,"column":184,"offset":2656}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":76,"column":184,"offset":2656},"end":{"line":76,"column":187,"offset":2659}}},{"type":"text","value":".\n","position":{"start":{"line":76,"column":187,"offset":2659},"end":{"line":77,"column":1,"offset":2662}}},{"type":"raw","value":"<br>","position":{"start":{"line":77,"column":1,"offset":2662},"end":{"line":77,"column":5,"offset":2666}}},{"type":"text","value":"\n","position":{"start":{"line":77,"column":5,"offset":2666},"end":{"line":78,"column":1,"offset":2667}}},{"type":"raw","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2667},"end":{"line":78,"column":5,"offset":2671}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":78,"column":5,"offset":2671},"end":{"line":79,"column":27,"offset":2698}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":79,"column":27,"offset":2698},"end":{"line":79,"column":35,"offset":2706}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":79,"column":35,"offset":2706},"end":{"line":79,"column":86,"offset":2757}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":79,"column":86,"offset":2757},"end":{"line":79,"column":95,"offset":2766}}},{"type":"text","value":". ","position":{"start":{"line":79,"column":95,"offset":2766},"end":{"line":79,"column":97,"offset":2768}}}],"position":{"start":{"line":73,"column":1,"offset":2360},"end":{"line":79,"column":97,"offset":2768}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":81,"column":1,"offset":2770},"end":{"line":81,"column":6,"offset":2775}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":83,"column":1,"offset":2777},"end":{"line":84,"column":1,"offset":2821}}},{"type":"raw","value":"<br>","position":{"start":{"line":84,"column":1,"offset":2821},"end":{"line":84,"column":5,"offset":2825}}},{"type":"text","value":"\n","position":{"start":{"line":84,"column":5,"offset":2825},"end":{"line":85,"column":1,"offset":2826}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":85,"column":1,"offset":2826},"end":{"line":85,"column":22,"offset":2847}}},{"type":"text","value":"\n","position":{"start":{"line":85,"column":22,"offset":2847},"end":{"line":86,"column":1,"offset":2848}}},{"type":"raw","value":"<br>","position":{"start":{"line":86,"column":1,"offset":2848},"end":{"line":86,"column":5,"offset":2852}}}],"position":{"start":{"line":83,"column":1,"offset":2777},"end":{"line":86,"column":5,"offset":2852}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":88,"column":1,"offset":2854},"end":{"line":88,"column":152,"offset":3005}}}],"position":{"start":{"line":88,"column":1,"offset":2854},"end":{"line":88,"column":152,"offset":3005}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":90,"column":8,"offset":3014},"end":{"line":90,"column":20,"offset":3026}}}],"position":{"start":{"line":90,"column":1,"offset":3007},"end":{"line":90,"column":20,"offset":3026}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":92,"column":1,"offset":3028},"end":{"line":92,"column":56,"offset":3083}}}],"position":{"start":{"line":92,"column":1,"offset":3028},"end":{"line":92,"column":56,"offset":3083}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":93,"column":1,"offset":3084},"end":{"line":98,"column":4,"offset":3175}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":99,"column":1,"offset":3176},"end":{"line":99,"column":5,"offset":3180}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":101,"column":1,"offset":3182},"end":{"line":101,"column":37,"offset":3218}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":101,"column":37,"offset":3218},"end":{"line":101,"column":41,"offset":3222}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":101,"column":41,"offset":3222},"end":{"line":102,"column":1,"offset":3239}}},{"type":"raw","value":"<br>","position":{"start":{"line":102,"column":1,"offset":3239},"end":{"line":102,"column":5,"offset":3243}}},{"type":"text","value":"\n","position":{"start":{"line":102,"column":5,"offset":3243},"end":{"line":103,"column":1,"offset":3244}}},{"type":"raw","value":"<br>","position":{"start":{"line":103,"column":1,"offset":3244},"end":{"line":103,"column":5,"offset":3248}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":103,"column":5,"offset":3248},"end":{"line":104,"column":66,"offset":3314}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":104,"column":66,"offset":3314},"end":{"line":104,"column":89,"offset":3337}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":104,"column":89,"offset":3337},"end":{"line":105,"column":1,"offset":3377}}},{"type":"raw","value":"<br>","position":{"start":{"line":105,"column":1,"offset":3377},"end":{"line":105,"column":5,"offset":3381}}},{"type":"text","value":"\n","position":{"start":{"line":105,"column":5,"offset":3381},"end":{"line":106,"column":1,"offset":3382}}},{"type":"raw","value":"<br>","position":{"start":{"line":106,"column":1,"offset":3382},"end":{"line":106,"column":5,"offset":3386}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":106,"column":5,"offset":3386},"end":{"line":107,"column":21,"offset":3407}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":107,"column":21,"offset":3407},"end":{"line":107,"column":25,"offset":3411}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":107,"column":25,"offset":3411},"end":{"line":108,"column":1,"offset":3465}}},{"type":"raw","value":"<br>","position":{"start":{"line":108,"column":1,"offset":3465},"end":{"line":108,"column":5,"offset":3469}}},{"type":"text","value":"\n","position":{"start":{"line":108,"column":5,"offset":3469},"end":{"line":109,"column":1,"offset":3470}}},{"type":"raw","value":"<br>","position":{"start":{"line":109,"column":1,"offset":3470},"end":{"line":109,"column":5,"offset":3474}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":109,"column":5,"offset":3474},"end":{"line":110,"column":21,"offset":3495}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":110,"column":21,"offset":3495},"end":{"line":110,"column":25,"offset":3499}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":110,"column":25,"offset":3499},"end":{"line":111,"column":1,"offset":3554}}},{"type":"raw","value":"<br>","position":{"start":{"line":111,"column":1,"offset":3554},"end":{"line":111,"column":5,"offset":3558}}},{"type":"text","value":"\n","position":{"start":{"line":111,"column":5,"offset":3558},"end":{"line":112,"column":1,"offset":3559}}},{"type":"raw","value":"<br>","position":{"start":{"line":112,"column":1,"offset":3559},"end":{"line":112,"column":5,"offset":3563}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":112,"column":5,"offset":3563},"end":{"line":113,"column":58,"offset":3621}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":113,"column":58,"offset":3621},"end":{"line":113,"column":61,"offset":3624}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":113,"column":61,"offset":3624},"end":{"line":113,"column":145,"offset":3708}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":113,"column":145,"offset":3708},"end":{"line":113,"column":153,"offset":3716}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":113,"column":153,"offset":3716},"end":{"line":113,"column":178,"offset":3741}}}],"position":{"start":{"line":101,"column":1,"offset":3182},"end":{"line":113,"column":178,"offset":3741}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":115,"column":7,"offset":3749},"end":{"line":115,"column":10,"offset":3752}}}],"position":{"start":{"line":115,"column":1,"offset":3743},"end":{"line":115,"column":10,"offset":3752}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":117,"column":8,"offset":3761},"end":{"line":117,"column":17,"offset":3770}}}],"position":{"start":{"line":117,"column":1,"offset":3754},"end":{"line":117,"column":17,"offset":3770}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":118,"column":1,"offset":3771},"end":{"line":129,"column":4,"offset":3970}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":130,"column":1,"offset":3971},"end":{"line":130,"column":5,"offset":3975}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":132,"column":1,"offset":3977},"end":{"line":133,"column":1,"offset":4193}}},{"type":"raw","value":"<br>","position":{"start":{"line":133,"column":1,"offset":4193},"end":{"line":133,"column":5,"offset":4197}}},{"type":"text","value":"\n","position":{"start":{"line":133,"column":5,"offset":4197},"end":{"line":134,"column":1,"offset":4198}}},{"type":"raw","value":"<br>","position":{"start":{"line":134,"column":1,"offset":4198},"end":{"line":134,"column":5,"offset":4202}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":134,"column":5,"offset":4202},"end":{"line":135,"column":72,"offset":4274}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":135,"column":72,"offset":4274},"end":{"line":135,"column":81,"offset":4283}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":135,"column":81,"offset":4283},"end":{"line":136,"column":1,"offset":4302}}},{"type":"raw","value":"<br>","position":{"start":{"line":136,"column":1,"offset":4302},"end":{"line":136,"column":5,"offset":4306}}},{"type":"text","value":"\n","position":{"start":{"line":136,"column":5,"offset":4306},"end":{"line":137,"column":1,"offset":4307}}},{"type":"raw","value":"<br>","position":{"start":{"line":137,"column":1,"offset":4307},"end":{"line":137,"column":5,"offset":4311}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":137,"column":5,"offset":4311},"end":{"line":138,"column":10,"offset":4321}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":138,"column":10,"offset":4321},"end":{"line":138,"column":16,"offset":4327}}},{"type":"text","value":" gets called with ","position":{"start":{"line":138,"column":16,"offset":4327},"end":{"line":138,"column":34,"offset":4345}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":138,"column":34,"offset":4345},"end":{"line":138,"column":42,"offset":4353}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":138,"column":42,"offset":4353},"end":{"line":139,"column":24,"offset":4378}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":139,"column":24,"offset":4378},"end":{"line":139,"column":33,"offset":4387}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":139,"column":33,"offset":4387},"end":{"line":139,"column":107,"offset":4461}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":139,"column":107,"offset":4461},"end":{"line":139,"column":116,"offset":4470}}},{"type":"text","value":" is false because ","position":{"start":{"line":139,"column":116,"offset":4470},"end":{"line":139,"column":134,"offset":4488}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":139,"column":134,"offset":4488},"end":{"line":139,"column":137,"offset":4491}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":139,"column":137,"offset":4491},"end":{"line":139,"column":161,"offset":4515}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":139,"column":161,"offset":4515},"end":{"line":139,"column":167,"offset":4521}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":139,"column":167,"offset":4521},"end":{"line":139,"column":192,"offset":4546}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":139,"column":192,"offset":4546},"end":{"line":139,"column":200,"offset":4554}}},{"type":"text","value":". This is because ","position":{"start":{"line":139,"column":200,"offset":4554},"end":{"line":139,"column":218,"offset":4572}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":139,"column":218,"offset":4572},"end":{"line":139,"column":224,"offset":4578}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":139,"column":224,"offset":4578},"end":{"line":139,"column":245,"offset":4599}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":139,"column":245,"offset":4599},"end":{"line":139,"column":252,"offset":4606}}},{"type":"text","value":" and ","position":{"start":{"line":139,"column":252,"offset":4606},"end":{"line":139,"column":257,"offset":4611}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":139,"column":257,"offset":4611},"end":{"line":139,"column":260,"offset":4614}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":139,"column":260,"offset":4614},"end":{"line":139,"column":285,"offset":4639}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":139,"column":285,"offset":4639},"end":{"line":139,"column":291,"offset":4645}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":139,"column":291,"offset":4645},"end":{"line":140,"column":96,"offset":4771}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":140,"column":96,"offset":4771},"end":{"line":140,"column":111,"offset":4786}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":140,"column":111,"offset":4786},"end":{"line":140,"column":182,"offset":4857}}}],"position":{"start":{"line":132,"column":1,"offset":3977},"end":{"line":140,"column":182,"offset":4857}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":142,"column":8,"offset":4866},"end":{"line":142,"column":19,"offset":4877}}}],"position":{"start":{"line":142,"column":1,"offset":4859},"end":{"line":142,"column":19,"offset":4877}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":143,"column":1,"offset":4878},"end":{"line":143,"column":14,"offset":4891}}}],"position":{"start":{"line":143,"column":1,"offset":4878},"end":{"line":143,"column":14,"offset":4891}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":144,"column":1,"offset":4892},"end":{"line":159,"column":4,"offset":5307}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":160,"column":1,"offset":5308},"end":{"line":160,"column":5,"offset":5312}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":162,"column":1,"offset":5314},"end":{"line":162,"column":141,"offset":5454}}}],"position":{"start":{"line":162,"column":1,"offset":5314},"end":{"line":162,"column":141,"offset":5454}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":164,"column":8,"offset":5463},"end":{"line":164,"column":30,"offset":5485}}}],"position":{"start":{"line":164,"column":1,"offset":5456},"end":{"line":164,"column":30,"offset":5485}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":165,"column":1,"offset":5486},"end":{"line":165,"column":199,"offset":5684}}}],"position":{"start":{"line":165,"column":1,"offset":5486},"end":{"line":165,"column":199,"offset":5684}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":167,"column":8,"offset":5693},"end":{"line":167,"column":30,"offset":5715}}}],"position":{"start":{"line":167,"column":1,"offset":5686},"end":{"line":167,"column":30,"offset":5715}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":169,"column":1,"offset":5717},"end":{"line":170,"column":1,"offset":5792}}},{"type":"raw","value":"<br>","position":{"start":{"line":170,"column":1,"offset":5792},"end":{"line":170,"column":5,"offset":5796}}},{"type":"text","value":"\n","position":{"start":{"line":170,"column":5,"offset":5796},"end":{"line":171,"column":1,"offset":5797}}},{"type":"raw","value":"<br>","position":{"start":{"line":171,"column":1,"offset":5797},"end":{"line":171,"column":5,"offset":5801}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":171,"column":5,"offset":5801},"end":{"line":173,"column":1,"offset":5863}}},{"type":"raw","value":"<br>","position":{"start":{"line":173,"column":1,"offset":5863},"end":{"line":173,"column":5,"offset":5867}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":173,"column":5,"offset":5867},"end":{"line":174,"column":1,"offset":5870}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":174,"column":1,"offset":5870},"end":{"line":174,"column":11,"offset":5880}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":174,"column":11,"offset":5880},"end":{"line":174,"column":19,"offset":5888}}},{"type":"text","value":" and ","position":{"start":{"line":174,"column":19,"offset":5888},"end":{"line":174,"column":24,"offset":5893}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":174,"column":24,"offset":5893},"end":{"line":174,"column":34,"offset":5903}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":174,"column":34,"offset":5903},"end":{"line":175,"column":1,"offset":5952}}},{"type":"raw","value":"<br>","position":{"start":{"line":175,"column":1,"offset":5952},"end":{"line":175,"column":5,"offset":5956}}}],"position":{"start":{"line":169,"column":1,"offset":5717},"end":{"line":175,"column":5,"offset":5956}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":177,"column":8,"offset":5965},"end":{"line":177,"column":12,"offset":5969}}}],"position":{"start":{"line":177,"column":1,"offset":5958},"end":{"line":177,"column":12,"offset":5969}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":178,"column":1,"offset":5970},"end":{"line":183,"column":4,"offset":6081}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":184,"column":1,"offset":6082},"end":{"line":185,"column":5,"offset":6091}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":187,"column":1,"offset":6093},"end":{"line":187,"column":7,"offset":6099}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":187,"column":7,"offset":6099},"end":{"line":189,"column":1,"offset":6181}}},{"type":"raw","value":"<br>","position":{"start":{"line":189,"column":1,"offset":6181},"end":{"line":189,"column":5,"offset":6185}}},{"type":"text","value":"\n","position":{"start":{"line":189,"column":5,"offset":6185},"end":{"line":190,"column":1,"offset":6186}}},{"type":"raw","value":"<br>","position":{"start":{"line":190,"column":1,"offset":6186},"end":{"line":190,"column":5,"offset":6190}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":190,"column":5,"offset":6190},"end":{"line":191,"column":10,"offset":6200}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":191,"column":10,"offset":6200},"end":{"line":191,"column":14,"offset":6204}}},{"type":"text","value":". Since ","position":{"start":{"line":191,"column":14,"offset":6204},"end":{"line":191,"column":22,"offset":6212}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":191,"column":22,"offset":6212},"end":{"line":191,"column":30,"offset":6220}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":191,"column":30,"offset":6220},"end":{"line":191,"column":50,"offset":6240}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":191,"column":50,"offset":6240},"end":{"line":191,"column":53,"offset":6243}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":191,"column":53,"offset":6243},"end":{"line":191,"column":90,"offset":6280}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":191,"column":90,"offset":6280},"end":{"line":191,"column":96,"offset":6286}}},{"type":"text","value":".\n","position":{"start":{"line":191,"column":96,"offset":6286},"end":{"line":192,"column":1,"offset":6289}}},{"type":"raw","value":"<br>","position":{"start":{"line":192,"column":1,"offset":6289},"end":{"line":192,"column":5,"offset":6293}}},{"type":"text","value":"\n","position":{"start":{"line":192,"column":5,"offset":6293},"end":{"line":193,"column":1,"offset":6294}}},{"type":"raw","value":"<br>","position":{"start":{"line":193,"column":1,"offset":6294},"end":{"line":193,"column":5,"offset":6298}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":193,"column":5,"offset":6298},"end":{"line":194,"column":14,"offset":6312}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":194,"column":14,"offset":6312},"end":{"line":194,"column":18,"offset":6316}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":194,"column":18,"offset":6316},"end":{"line":194,"column":90,"offset":6388}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":194,"column":90,"offset":6388},"end":{"line":194,"column":94,"offset":6392}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":194,"column":94,"offset":6392},"end":{"line":194,"column":125,"offset":6423}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":194,"column":125,"offset":6423},"end":{"line":194,"column":131,"offset":6429}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":194,"column":131,"offset":6429},"end":{"line":195,"column":1,"offset":6444}}},{"type":"raw","value":"<br>","position":{"start":{"line":195,"column":1,"offset":6444},"end":{"line":195,"column":5,"offset":6448}}},{"type":"text","value":"\n","position":{"start":{"line":195,"column":5,"offset":6448},"end":{"line":196,"column":1,"offset":6449}}},{"type":"raw","value":"<br>","position":{"start":{"line":196,"column":1,"offset":6449},"end":{"line":196,"column":5,"offset":6453}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":196,"column":5,"offset":6453},"end":{"line":197,"column":14,"offset":6467}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":197,"column":14,"offset":6467},"end":{"line":197,"column":18,"offset":6471}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":197,"column":18,"offset":6471},"end":{"line":197,"column":37,"offset":6490}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":197,"column":37,"offset":6490},"end":{"line":197,"column":40,"offset":6493}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":197,"column":40,"offset":6493},"end":{"line":197,"column":77,"offset":6530}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":197,"column":77,"offset":6530},"end":{"line":197,"column":81,"offset":6534}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":197,"column":81,"offset":6534},"end":{"line":197,"column":99,"offset":6552}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":197,"column":99,"offset":6552},"end":{"line":197,"column":102,"offset":6555}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":197,"column":102,"offset":6555},"end":{"line":197,"column":133,"offset":6586}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":197,"column":133,"offset":6586},"end":{"line":197,"column":139,"offset":6592}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":197,"column":139,"offset":6592},"end":{"line":197,"column":167,"offset":6620}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":197,"column":167,"offset":6620},"end":{"line":197,"column":171,"offset":6624}}},{"type":"text","value":".\n","position":{"start":{"line":197,"column":171,"offset":6624},"end":{"line":198,"column":1,"offset":6626}}},{"type":"raw","value":"<br>","position":{"start":{"line":198,"column":1,"offset":6626},"end":{"line":198,"column":5,"offset":6630}}},{"type":"text","value":"\n","position":{"start":{"line":198,"column":5,"offset":6630},"end":{"line":199,"column":1,"offset":6631}}},{"type":"raw","value":"<br>","position":{"start":{"line":199,"column":1,"offset":6631},"end":{"line":199,"column":5,"offset":6635}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":199,"column":5,"offset":6635},"end":{"line":201,"column":1,"offset":6655}}},{"type":"raw","value":"<br>","position":{"start":{"line":201,"column":1,"offset":6655},"end":{"line":201,"column":5,"offset":6659}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":201,"column":5,"offset":6659},"end":{"line":202,"column":6,"offset":6665}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":202,"column":6,"offset":6665},"end":{"line":202,"column":12,"offset":6671}}},{"type":"text","value":" does not have an ","position":{"start":{"line":202,"column":12,"offset":6671},"end":{"line":202,"column":30,"offset":6689}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":202,"column":30,"offset":6689},"end":{"line":202,"column":36,"offset":6695}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":202,"column":36,"offset":6695},"end":{"line":202,"column":62,"offset":6721}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":202,"column":62,"offset":6721},"end":{"line":202,"column":75,"offset":6734}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":202,"column":75,"offset":6734},"end":{"line":202,"column":159,"offset":6818}}}],"position":{"start":{"line":187,"column":1,"offset":6093},"end":{"line":202,"column":159,"offset":6818}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":204,"column":8,"offset":6827},"end":{"line":204,"column":41,"offset":6860}}}],"position":{"start":{"line":204,"column":1,"offset":6820},"end":{"line":204,"column":41,"offset":6860}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":205,"column":1,"offset":6861},"end":{"line":210,"column":4,"offset":6936}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":211,"column":1,"offset":6937},"end":{"line":212,"column":1,"offset":6956}}},{"type":"raw","value":"<br>","position":{"start":{"line":212,"column":1,"offset":6956},"end":{"line":212,"column":5,"offset":6960}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":212,"column":5,"offset":6960},"end":{"line":214,"column":5,"offset":7098}}},{"type":"raw","value":"<br>","position":{"start":{"line":214,"column":5,"offset":7098},"end":{"line":214,"column":9,"offset":7102}}},{"type":"text","value":"\n","position":{"start":{"line":214,"column":9,"offset":7102},"end":{"line":215,"column":5,"offset":7107}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":215,"column":5,"offset":7107},"end":{"line":215,"column":27,"offset":7129}}},{"type":"text","value":"\n","position":{"start":{"line":215,"column":27,"offset":7129},"end":{"line":216,"column":5,"offset":7134}}},{"type":"raw","value":"<br>","position":{"start":{"line":216,"column":5,"offset":7134},"end":{"line":216,"column":9,"offset":7138}}},{"type":"text","value":"\n","position":{"start":{"line":216,"column":9,"offset":7138},"end":{"line":217,"column":5,"offset":7143}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":217,"column":5,"offset":7143},"end":{"line":217,"column":12,"offset":7150}}},{"type":"text","value":" and ","position":{"start":{"line":217,"column":12,"offset":7150},"end":{"line":217,"column":17,"offset":7155}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":217,"column":17,"offset":7155},"end":{"line":217,"column":25,"offset":7163}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":217,"column":25,"offset":7163},"end":{"line":217,"column":63,"offset":7201}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":217,"column":63,"offset":7201},"end":{"line":217,"column":66,"offset":7204}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":217,"column":66,"offset":7204},"end":{"line":217,"column":86,"offset":7224}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":217,"column":86,"offset":7224},"end":{"line":217,"column":89,"offset":7227}}},{"type":"text","value":" will be called with ","position":{"start":{"line":217,"column":89,"offset":7227},"end":{"line":217,"column":110,"offset":7248}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":217,"column":110,"offset":7248},"end":{"line":217,"column":119,"offset":7257}}},{"type":"text","value":".\n","position":{"start":{"line":217,"column":119,"offset":7257},"end":{"line":218,"column":1,"offset":7259}}},{"type":"raw","value":"<br>","position":{"start":{"line":218,"column":1,"offset":7259},"end":{"line":218,"column":5,"offset":7263}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":218,"column":5,"offset":7263},"end":{"line":220,"column":1,"offset":7279}}},{"type":"raw","value":"<br>","position":{"start":{"line":220,"column":1,"offset":7279},"end":{"line":220,"column":5,"offset":7283}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":220,"column":5,"offset":7283},"end":{"line":222,"column":5,"offset":7390}}},{"type":"raw","value":"<br>","position":{"start":{"line":222,"column":5,"offset":7390},"end":{"line":222,"column":9,"offset":7394}}},{"type":"text","value":"\n","position":{"start":{"line":222,"column":9,"offset":7394},"end":{"line":223,"column":1,"offset":7395}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":223,"column":1,"offset":7395},"end":{"line":223,"column":23,"offset":7417}}},{"type":"text","value":" turns into ","position":{"start":{"line":223,"column":23,"offset":7417},"end":{"line":223,"column":35,"offset":7429}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":223,"column":35,"offset":7429},"end":{"line":223,"column":61,"offset":7455}}},{"type":"text","value":"\n","position":{"start":{"line":223,"column":61,"offset":7455},"end":{"line":224,"column":1,"offset":7456}}},{"type":"raw","value":"<br>","position":{"start":{"line":224,"column":1,"offset":7456},"end":{"line":224,"column":5,"offset":7460}}},{"type":"text","value":"\nNow ","position":{"start":{"line":224,"column":5,"offset":7460},"end":{"line":225,"column":5,"offset":7465}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":225,"column":5,"offset":7465},"end":{"line":225,"column":8,"offset":7468}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":225,"column":8,"offset":7468},"end":{"line":225,"column":58,"offset":7518}}}],"position":{"start":{"line":211,"column":1,"offset":6937},"end":{"line":225,"column":58,"offset":7518}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":227,"column":1,"offset":7520},"end":{"line":228,"column":1,"offset":7538}}},{"type":"raw","value":"<br>","position":{"start":{"line":228,"column":1,"offset":7538},"end":{"line":228,"column":5,"offset":7542}}}],"position":{"start":{"line":227,"column":1,"offset":7520},"end":{"line":228,"column":5,"offset":7542}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":229,"column":1,"offset":7543},"end":{"line":231,"column":4,"offset":7573}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":232,"column":1,"offset":7574},"end":{"line":232,"column":13,"offset":7586}}}],"position":{"start":{"line":232,"column":1,"offset":7574},"end":{"line":232,"column":13,"offset":7586}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":233,"column":1,"offset":7587},"end":{"line":239,"column":4,"offset":7666}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":240,"column":1,"offset":7667},"end":{"line":240,"column":8,"offset":7674}}}],"position":{"start":{"line":240,"column":1,"offset":7667},"end":{"line":240,"column":8,"offset":7674}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":241,"column":1,"offset":7675},"end":{"line":248,"column":4,"offset":7799}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":249,"column":1,"offset":7800},"end":{"line":250,"column":5,"offset":7809}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":252,"column":1,"offset":7811},"end":{"line":252,"column":11,"offset":7821}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":252,"column":11,"offset":7821},"end":{"line":252,"column":24,"offset":7834}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":252,"column":24,"offset":7834},"end":{"line":252,"column":107,"offset":7917}}}],"position":{"start":{"line":252,"column":1,"offset":7811},"end":{"line":252,"column":107,"offset":7917}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":254,"column":7,"offset":7925},"end":{"line":254,"column":10,"offset":7928}}}],"position":{"start":{"line":254,"column":1,"offset":7919},"end":{"line":254,"column":10,"offset":7928}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":255,"column":7,"offset":7935},"end":{"line":255,"column":10,"offset":7938}}}],"position":{"start":{"line":255,"column":1,"offset":7929},"end":{"line":255,"column":10,"offset":7938}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":257,"column":6,"offset":7945},"end":{"line":257,"column":10,"offset":7949}}}],"position":{"start":{"line":257,"column":1,"offset":7940},"end":{"line":257,"column":10,"offset":7949}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":258,"column":7,"offset":7956},"end":{"line":258,"column":13,"offset":7962}}}],"position":{"start":{"line":258,"column":1,"offset":7950},"end":{"line":258,"column":13,"offset":7962}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":259,"column":1,"offset":7963},"end":{"line":259,"column":49,"offset":8011}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":259,"column":49,"offset":8011},"end":{"line":259,"column":57,"offset":8019}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":259,"column":57,"offset":8019},"end":{"line":259,"column":133,"offset":8095}}}],"position":{"start":{"line":259,"column":1,"offset":7963},"end":{"line":259,"column":133,"offset":8095}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":260,"column":1,"offset":8096},"end":{"line":270,"column":4,"offset":8291}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":271,"column":1,"offset":8292},"end":{"line":271,"column":5,"offset":8296}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":274,"column":1,"offset":8299},"end":{"line":275,"column":1,"offset":8381}}},{"type":"raw","value":"<br>","position":{"start":{"line":275,"column":1,"offset":8381},"end":{"line":275,"column":5,"offset":8385}}},{"type":"text","value":"\n","position":{"start":{"line":275,"column":5,"offset":8385},"end":{"line":276,"column":1,"offset":8386}}},{"type":"raw","value":"<br>","position":{"start":{"line":276,"column":1,"offset":8386},"end":{"line":276,"column":5,"offset":8390}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":276,"column":5,"offset":8390},"end":{"line":277,"column":26,"offset":8416}}}],"position":{"start":{"line":274,"column":1,"offset":8299},"end":{"line":277,"column":26,"offset":8416}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":278,"column":1,"offset":8417},"end":{"line":283,"column":4,"offset":8545}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":284,"column":1,"offset":8546},"end":{"line":284,"column":14,"offset":8559}}}],"position":{"start":{"line":284,"column":1,"offset":8546},"end":{"line":284,"column":14,"offset":8559}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":286,"column":1,"offset":8561},"end":{"line":299,"column":4,"offset":8843}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":301,"column":1,"offset":8845},"end":{"line":302,"column":5,"offset":8854}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":305,"column":7,"offset":8863},"end":{"line":305,"column":13,"offset":8869}}}],"position":{"start":{"line":305,"column":1,"offset":8857},"end":{"line":305,"column":13,"offset":8869}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":305,"column":13,"offset":8869}}}}