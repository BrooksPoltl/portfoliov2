{"expireTime":9007200842248904000,"key":"transformer-remark-markdown-html-ast-d99bd78c5227eac9db2b5301c1105a63-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":820}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":820},"end":{"line":22,"column":5,"offset":824}}},{"type":"text","value":"\nexpression: ","position":{"start":{"line":22,"column":5,"offset":824},"end":{"line":23,"column":13,"offset":837}}},{"type":"raw","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":13,"offset":837},"end":{"line":23,"column":26,"offset":850}}},{"type":"text","value":"\noperator: ","position":{"start":{"line":23,"column":26,"offset":850},"end":{"line":24,"column":11,"offset":861}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":24,"column":11,"offset":861},"end":{"line":24,"column":14,"offset":864}}},{"type":"text","value":"\n","position":{"start":{"line":24,"column":14,"offset":864},"end":{"line":25,"column":1,"offset":865}}},{"type":"raw","value":"<br>","position":{"start":{"line":25,"column":1,"offset":865},"end":{"line":25,"column":5,"offset":869}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":25,"column":5,"offset":869}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":27,"column":7,"offset":877},"end":{"line":27,"column":10,"offset":880}}}],"position":{"start":{"line":27,"column":1,"offset":871},"end":{"line":27,"column":10,"offset":880}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":28,"column":7,"offset":887},"end":{"line":28,"column":10,"offset":890}}}],"position":{"start":{"line":28,"column":1,"offset":881},"end":{"line":28,"column":10,"offset":890}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":30,"column":6,"offset":897},"end":{"line":30,"column":14,"offset":905}}}],"position":{"start":{"line":30,"column":1,"offset":892},"end":{"line":30,"column":14,"offset":905}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":31,"column":7,"offset":912},"end":{"line":31,"column":10,"offset":915}}}],"position":{"start":{"line":31,"column":1,"offset":906},"end":{"line":31,"column":10,"offset":915}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":33,"column":8,"offset":924},"end":{"line":33,"column":30,"offset":946}}}],"position":{"start":{"line":33,"column":1,"offset":917},"end":{"line":33,"column":30,"offset":946}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":35,"column":1,"offset":948},"end":{"line":36,"column":1,"offset":1092}}},{"type":"raw","value":"<br>","position":{"start":{"line":36,"column":1,"offset":1092},"end":{"line":36,"column":5,"offset":1096}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":36,"column":5,"offset":1096},"end":{"line":36,"column":16,"offset":1107}}},{"type":"raw","value":"<br>","position":{"start":{"line":36,"column":16,"offset":1107},"end":{"line":36,"column":20,"offset":1111}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":36,"column":20,"offset":1111},"end":{"line":38,"column":1,"offset":1255}}},{"type":"raw","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1255},"end":{"line":38,"column":5,"offset":1259}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":38,"column":5,"offset":1259},"end":{"line":38,"column":16,"offset":1270}}},{"type":"raw","value":"<br>","position":{"start":{"line":38,"column":16,"offset":1270},"end":{"line":38,"column":20,"offset":1274}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":38,"column":20,"offset":1274},"end":{"line":39,"column":45,"offset":1319}}},{"type":"raw","value":"<br>","position":{"start":{"line":39,"column":45,"offset":1319},"end":{"line":39,"column":49,"offset":1323}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":39,"column":49,"offset":1323},"end":{"line":39,"column":65,"offset":1339}}},{"type":"raw","value":"<br>","position":{"start":{"line":39,"column":65,"offset":1339},"end":{"line":39,"column":69,"offset":1343}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":39,"column":69,"offset":1343},"end":{"line":41,"column":1,"offset":1386}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":1,"offset":1386},"end":{"line":41,"column":5,"offset":1390}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":41,"column":5,"offset":1390},"end":{"line":41,"column":22,"offset":1407}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":22,"offset":1407},"end":{"line":41,"column":26,"offset":1411}}},{"type":"text","value":"\n","position":{"start":{"line":41,"column":26,"offset":1411},"end":{"line":42,"column":1,"offset":1412}}},{"type":"raw","value":"<br>","position":{"start":{"line":42,"column":1,"offset":1412},"end":{"line":42,"column":5,"offset":1416}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":42,"column":5,"offset":1416},"end":{"line":44,"column":1,"offset":1534}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1534},"end":{"line":44,"column":5,"offset":1538}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":44,"column":5,"offset":1538},"end":{"line":46,"column":1,"offset":1659}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":46,"column":1,"offset":1659},"end":{"line":46,"column":12,"offset":1670}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":46,"column":12,"offset":1670},"end":{"line":46,"column":68,"offset":1726}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":46,"column":68,"offset":1726},"end":{"line":46,"column":79,"offset":1737}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":46,"column":79,"offset":1737},"end":{"line":46,"column":106,"offset":1764}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":46,"column":106,"offset":1764},"end":{"line":46,"column":109,"offset":1767}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":46,"column":109,"offset":1767},"end":{"line":46,"column":189,"offset":1847}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":46,"column":189,"offset":1847},"end":{"line":46,"column":192,"offset":1850}}},{"type":"text","value":" to get 3.","position":{"start":{"line":46,"column":192,"offset":1850},"end":{"line":46,"column":202,"offset":1860}}}],"position":{"start":{"line":35,"column":1,"offset":948},"end":{"line":46,"column":202,"offset":1860}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":48,"column":8,"offset":1869},"end":{"line":48,"column":14,"offset":1875}}}],"position":{"start":{"line":48,"column":1,"offset":1862},"end":{"line":48,"column":14,"offset":1875}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":49,"column":1,"offset":1876},"end":{"line":49,"column":9,"offset":1884}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":49,"column":9,"offset":1884},"end":{"line":49,"column":73,"offset":1948}}}],"position":{"start":{"line":49,"column":1,"offset":1876},"end":{"line":49,"column":73,"offset":1948}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":50,"column":1,"offset":1949},"end":{"line":53,"column":4,"offset":1988}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":54,"column":1,"offset":1989},"end":{"line":54,"column":5,"offset":1993}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":56,"column":1,"offset":1995},"end":{"line":56,"column":72,"offset":2066}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":56,"column":72,"offset":2066},"end":{"line":56,"column":80,"offset":2074}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":56,"column":80,"offset":2074},"end":{"line":57,"column":1,"offset":2098}}},{"type":"raw","value":"<br>","position":{"start":{"line":57,"column":1,"offset":2098},"end":{"line":57,"column":5,"offset":2102}}},{"type":"text","value":"\n","position":{"start":{"line":57,"column":5,"offset":2102},"end":{"line":58,"column":1,"offset":2103}}},{"type":"raw","value":"<br>","position":{"start":{"line":58,"column":1,"offset":2103},"end":{"line":58,"column":5,"offset":2107}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":58,"column":5,"offset":2107},"end":{"line":59,"column":184,"offset":2291}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":59,"column":184,"offset":2291},"end":{"line":59,"column":187,"offset":2294}}},{"type":"text","value":".\n","position":{"start":{"line":59,"column":187,"offset":2294},"end":{"line":60,"column":1,"offset":2297}}},{"type":"raw","value":"<br>","position":{"start":{"line":60,"column":1,"offset":2297},"end":{"line":60,"column":5,"offset":2301}}},{"type":"text","value":"\n","position":{"start":{"line":60,"column":5,"offset":2301},"end":{"line":61,"column":1,"offset":2302}}},{"type":"raw","value":"<br>","position":{"start":{"line":61,"column":1,"offset":2302},"end":{"line":61,"column":5,"offset":2306}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":61,"column":5,"offset":2306},"end":{"line":62,"column":27,"offset":2333}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":62,"column":27,"offset":2333},"end":{"line":62,"column":35,"offset":2341}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":62,"column":35,"offset":2341},"end":{"line":62,"column":86,"offset":2392}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":62,"column":86,"offset":2392},"end":{"line":62,"column":95,"offset":2401}}},{"type":"text","value":". ","position":{"start":{"line":62,"column":95,"offset":2401},"end":{"line":62,"column":97,"offset":2403}}}],"position":{"start":{"line":56,"column":1,"offset":1995},"end":{"line":62,"column":97,"offset":2403}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":64,"column":1,"offset":2405},"end":{"line":64,"column":6,"offset":2410}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":66,"column":1,"offset":2412},"end":{"line":67,"column":1,"offset":2456}}},{"type":"raw","value":"<br>","position":{"start":{"line":67,"column":1,"offset":2456},"end":{"line":67,"column":5,"offset":2460}}},{"type":"text","value":"\n","position":{"start":{"line":67,"column":5,"offset":2460},"end":{"line":68,"column":1,"offset":2461}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":68,"column":1,"offset":2461},"end":{"line":68,"column":22,"offset":2482}}},{"type":"text","value":"\n","position":{"start":{"line":68,"column":22,"offset":2482},"end":{"line":69,"column":1,"offset":2483}}},{"type":"raw","value":"<br>","position":{"start":{"line":69,"column":1,"offset":2483},"end":{"line":69,"column":5,"offset":2487}}}],"position":{"start":{"line":66,"column":1,"offset":2412},"end":{"line":69,"column":5,"offset":2487}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":71,"column":1,"offset":2489},"end":{"line":71,"column":152,"offset":2640}}}],"position":{"start":{"line":71,"column":1,"offset":2489},"end":{"line":71,"column":152,"offset":2640}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":73,"column":8,"offset":2649},"end":{"line":73,"column":20,"offset":2661}}}],"position":{"start":{"line":73,"column":1,"offset":2642},"end":{"line":73,"column":20,"offset":2661}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":75,"column":1,"offset":2663},"end":{"line":75,"column":56,"offset":2718}}}],"position":{"start":{"line":75,"column":1,"offset":2663},"end":{"line":75,"column":56,"offset":2718}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":76,"column":1,"offset":2719},"end":{"line":81,"column":4,"offset":2810}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":82,"column":1,"offset":2811},"end":{"line":82,"column":5,"offset":2815}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":84,"column":1,"offset":2817},"end":{"line":84,"column":37,"offset":2853}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":84,"column":37,"offset":2853},"end":{"line":84,"column":41,"offset":2857}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":84,"column":41,"offset":2857},"end":{"line":85,"column":1,"offset":2874}}},{"type":"raw","value":"<br>","position":{"start":{"line":85,"column":1,"offset":2874},"end":{"line":85,"column":5,"offset":2878}}},{"type":"text","value":"\n","position":{"start":{"line":85,"column":5,"offset":2878},"end":{"line":86,"column":1,"offset":2879}}},{"type":"raw","value":"<br>","position":{"start":{"line":86,"column":1,"offset":2879},"end":{"line":86,"column":5,"offset":2883}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":86,"column":5,"offset":2883},"end":{"line":87,"column":66,"offset":2949}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":87,"column":66,"offset":2949},"end":{"line":87,"column":89,"offset":2972}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":87,"column":89,"offset":2972},"end":{"line":88,"column":1,"offset":3012}}},{"type":"raw","value":"<br>","position":{"start":{"line":88,"column":1,"offset":3012},"end":{"line":88,"column":5,"offset":3016}}},{"type":"text","value":"\n","position":{"start":{"line":88,"column":5,"offset":3016},"end":{"line":89,"column":1,"offset":3017}}},{"type":"raw","value":"<br>","position":{"start":{"line":89,"column":1,"offset":3017},"end":{"line":89,"column":5,"offset":3021}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":89,"column":5,"offset":3021},"end":{"line":90,"column":21,"offset":3042}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":90,"column":21,"offset":3042},"end":{"line":90,"column":25,"offset":3046}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":90,"column":25,"offset":3046},"end":{"line":91,"column":1,"offset":3100}}},{"type":"raw","value":"<br>","position":{"start":{"line":91,"column":1,"offset":3100},"end":{"line":91,"column":5,"offset":3104}}},{"type":"text","value":"\n","position":{"start":{"line":91,"column":5,"offset":3104},"end":{"line":92,"column":1,"offset":3105}}},{"type":"raw","value":"<br>","position":{"start":{"line":92,"column":1,"offset":3105},"end":{"line":92,"column":5,"offset":3109}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":92,"column":5,"offset":3109},"end":{"line":93,"column":21,"offset":3130}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":93,"column":21,"offset":3130},"end":{"line":93,"column":25,"offset":3134}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":93,"column":25,"offset":3134},"end":{"line":94,"column":1,"offset":3189}}},{"type":"raw","value":"<br>","position":{"start":{"line":94,"column":1,"offset":3189},"end":{"line":94,"column":5,"offset":3193}}},{"type":"text","value":"\n","position":{"start":{"line":94,"column":5,"offset":3193},"end":{"line":95,"column":1,"offset":3194}}},{"type":"raw","value":"<br>","position":{"start":{"line":95,"column":1,"offset":3194},"end":{"line":95,"column":5,"offset":3198}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":95,"column":5,"offset":3198},"end":{"line":96,"column":58,"offset":3256}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":96,"column":58,"offset":3256},"end":{"line":96,"column":61,"offset":3259}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":96,"column":61,"offset":3259},"end":{"line":96,"column":145,"offset":3343}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":96,"column":145,"offset":3343},"end":{"line":96,"column":153,"offset":3351}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":96,"column":153,"offset":3351},"end":{"line":96,"column":178,"offset":3376}}}],"position":{"start":{"line":84,"column":1,"offset":2817},"end":{"line":96,"column":178,"offset":3376}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":98,"column":7,"offset":3384},"end":{"line":98,"column":10,"offset":3387}}}],"position":{"start":{"line":98,"column":1,"offset":3378},"end":{"line":98,"column":10,"offset":3387}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":100,"column":8,"offset":3396},"end":{"line":100,"column":17,"offset":3405}}}],"position":{"start":{"line":100,"column":1,"offset":3389},"end":{"line":100,"column":17,"offset":3405}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":101,"column":1,"offset":3406},"end":{"line":112,"column":4,"offset":3605}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":113,"column":1,"offset":3606},"end":{"line":113,"column":5,"offset":3610}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":115,"column":1,"offset":3612},"end":{"line":116,"column":1,"offset":3828}}},{"type":"raw","value":"<br>","position":{"start":{"line":116,"column":1,"offset":3828},"end":{"line":116,"column":5,"offset":3832}}},{"type":"text","value":"\n","position":{"start":{"line":116,"column":5,"offset":3832},"end":{"line":117,"column":1,"offset":3833}}},{"type":"raw","value":"<br>","position":{"start":{"line":117,"column":1,"offset":3833},"end":{"line":117,"column":5,"offset":3837}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":117,"column":5,"offset":3837},"end":{"line":118,"column":72,"offset":3909}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":118,"column":72,"offset":3909},"end":{"line":118,"column":81,"offset":3918}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":118,"column":81,"offset":3918},"end":{"line":119,"column":1,"offset":3937}}},{"type":"raw","value":"<br>","position":{"start":{"line":119,"column":1,"offset":3937},"end":{"line":119,"column":5,"offset":3941}}},{"type":"text","value":"\n","position":{"start":{"line":119,"column":5,"offset":3941},"end":{"line":120,"column":1,"offset":3942}}},{"type":"raw","value":"<br>","position":{"start":{"line":120,"column":1,"offset":3942},"end":{"line":120,"column":5,"offset":3946}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":120,"column":5,"offset":3946},"end":{"line":121,"column":10,"offset":3956}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":121,"column":10,"offset":3956},"end":{"line":121,"column":16,"offset":3962}}},{"type":"text","value":" gets called with ","position":{"start":{"line":121,"column":16,"offset":3962},"end":{"line":121,"column":34,"offset":3980}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":121,"column":34,"offset":3980},"end":{"line":121,"column":42,"offset":3988}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":121,"column":42,"offset":3988},"end":{"line":122,"column":24,"offset":4013}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":122,"column":24,"offset":4013},"end":{"line":122,"column":33,"offset":4022}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":122,"column":33,"offset":4022},"end":{"line":122,"column":107,"offset":4096}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":122,"column":107,"offset":4096},"end":{"line":122,"column":116,"offset":4105}}},{"type":"text","value":" is false because ","position":{"start":{"line":122,"column":116,"offset":4105},"end":{"line":122,"column":134,"offset":4123}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":122,"column":134,"offset":4123},"end":{"line":122,"column":137,"offset":4126}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":122,"column":137,"offset":4126},"end":{"line":122,"column":161,"offset":4150}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":122,"column":161,"offset":4150},"end":{"line":122,"column":167,"offset":4156}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":122,"column":167,"offset":4156},"end":{"line":122,"column":192,"offset":4181}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":122,"column":192,"offset":4181},"end":{"line":122,"column":200,"offset":4189}}},{"type":"text","value":". This is because ","position":{"start":{"line":122,"column":200,"offset":4189},"end":{"line":122,"column":218,"offset":4207}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":122,"column":218,"offset":4207},"end":{"line":122,"column":224,"offset":4213}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":122,"column":224,"offset":4213},"end":{"line":122,"column":245,"offset":4234}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":122,"column":245,"offset":4234},"end":{"line":122,"column":252,"offset":4241}}},{"type":"text","value":" and ","position":{"start":{"line":122,"column":252,"offset":4241},"end":{"line":122,"column":257,"offset":4246}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":122,"column":257,"offset":4246},"end":{"line":122,"column":260,"offset":4249}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":122,"column":260,"offset":4249},"end":{"line":122,"column":285,"offset":4274}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":122,"column":285,"offset":4274},"end":{"line":122,"column":291,"offset":4280}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":122,"column":291,"offset":4280},"end":{"line":123,"column":96,"offset":4406}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":123,"column":96,"offset":4406},"end":{"line":123,"column":111,"offset":4421}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":123,"column":111,"offset":4421},"end":{"line":123,"column":182,"offset":4492}}}],"position":{"start":{"line":115,"column":1,"offset":3612},"end":{"line":123,"column":182,"offset":4492}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":125,"column":8,"offset":4501},"end":{"line":125,"column":19,"offset":4512}}}],"position":{"start":{"line":125,"column":1,"offset":4494},"end":{"line":125,"column":19,"offset":4512}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":126,"column":1,"offset":4513},"end":{"line":126,"column":14,"offset":4526}}}],"position":{"start":{"line":126,"column":1,"offset":4513},"end":{"line":126,"column":14,"offset":4526}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":127,"column":1,"offset":4527},"end":{"line":142,"column":4,"offset":4942}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":143,"column":1,"offset":4943},"end":{"line":143,"column":5,"offset":4947}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":145,"column":1,"offset":4949},"end":{"line":145,"column":141,"offset":5089}}}],"position":{"start":{"line":145,"column":1,"offset":4949},"end":{"line":145,"column":141,"offset":5089}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":147,"column":8,"offset":5098},"end":{"line":147,"column":30,"offset":5120}}}],"position":{"start":{"line":147,"column":1,"offset":5091},"end":{"line":147,"column":30,"offset":5120}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":148,"column":1,"offset":5121},"end":{"line":148,"column":199,"offset":5319}}}],"position":{"start":{"line":148,"column":1,"offset":5121},"end":{"line":148,"column":199,"offset":5319}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":150,"column":8,"offset":5328},"end":{"line":150,"column":30,"offset":5350}}}],"position":{"start":{"line":150,"column":1,"offset":5321},"end":{"line":150,"column":30,"offset":5350}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":152,"column":1,"offset":5352},"end":{"line":153,"column":1,"offset":5427}}},{"type":"raw","value":"<br>","position":{"start":{"line":153,"column":1,"offset":5427},"end":{"line":153,"column":5,"offset":5431}}},{"type":"text","value":"\n","position":{"start":{"line":153,"column":5,"offset":5431},"end":{"line":154,"column":1,"offset":5432}}},{"type":"raw","value":"<br>","position":{"start":{"line":154,"column":1,"offset":5432},"end":{"line":154,"column":5,"offset":5436}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":154,"column":5,"offset":5436},"end":{"line":156,"column":1,"offset":5498}}},{"type":"raw","value":"<br>","position":{"start":{"line":156,"column":1,"offset":5498},"end":{"line":156,"column":5,"offset":5502}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":156,"column":5,"offset":5502},"end":{"line":157,"column":1,"offset":5505}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":157,"column":1,"offset":5505},"end":{"line":157,"column":11,"offset":5515}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":157,"column":11,"offset":5515},"end":{"line":157,"column":19,"offset":5523}}},{"type":"text","value":" and ","position":{"start":{"line":157,"column":19,"offset":5523},"end":{"line":157,"column":24,"offset":5528}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":157,"column":24,"offset":5528},"end":{"line":157,"column":34,"offset":5538}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":157,"column":34,"offset":5538},"end":{"line":158,"column":1,"offset":5587}}},{"type":"raw","value":"<br>","position":{"start":{"line":158,"column":1,"offset":5587},"end":{"line":158,"column":5,"offset":5591}}}],"position":{"start":{"line":152,"column":1,"offset":5352},"end":{"line":158,"column":5,"offset":5591}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":160,"column":8,"offset":5600},"end":{"line":160,"column":12,"offset":5604}}}],"position":{"start":{"line":160,"column":1,"offset":5593},"end":{"line":160,"column":12,"offset":5604}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":161,"column":1,"offset":5605},"end":{"line":166,"column":4,"offset":5716}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":167,"column":1,"offset":5717},"end":{"line":168,"column":5,"offset":5726}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":170,"column":1,"offset":5728},"end":{"line":170,"column":7,"offset":5734}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":170,"column":7,"offset":5734},"end":{"line":172,"column":1,"offset":5816}}},{"type":"raw","value":"<br>","position":{"start":{"line":172,"column":1,"offset":5816},"end":{"line":172,"column":5,"offset":5820}}},{"type":"text","value":"\n","position":{"start":{"line":172,"column":5,"offset":5820},"end":{"line":173,"column":1,"offset":5821}}},{"type":"raw","value":"<br>","position":{"start":{"line":173,"column":1,"offset":5821},"end":{"line":173,"column":5,"offset":5825}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":173,"column":5,"offset":5825},"end":{"line":174,"column":10,"offset":5835}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":174,"column":10,"offset":5835},"end":{"line":174,"column":14,"offset":5839}}},{"type":"text","value":". Since ","position":{"start":{"line":174,"column":14,"offset":5839},"end":{"line":174,"column":22,"offset":5847}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":174,"column":22,"offset":5847},"end":{"line":174,"column":30,"offset":5855}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":174,"column":30,"offset":5855},"end":{"line":174,"column":50,"offset":5875}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":174,"column":50,"offset":5875},"end":{"line":174,"column":53,"offset":5878}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":174,"column":53,"offset":5878},"end":{"line":174,"column":90,"offset":5915}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":174,"column":90,"offset":5915},"end":{"line":174,"column":96,"offset":5921}}},{"type":"text","value":".\n","position":{"start":{"line":174,"column":96,"offset":5921},"end":{"line":175,"column":1,"offset":5924}}},{"type":"raw","value":"<br>","position":{"start":{"line":175,"column":1,"offset":5924},"end":{"line":175,"column":5,"offset":5928}}},{"type":"text","value":"\n","position":{"start":{"line":175,"column":5,"offset":5928},"end":{"line":176,"column":1,"offset":5929}}},{"type":"raw","value":"<br>","position":{"start":{"line":176,"column":1,"offset":5929},"end":{"line":176,"column":5,"offset":5933}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":176,"column":5,"offset":5933},"end":{"line":177,"column":14,"offset":5947}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":177,"column":14,"offset":5947},"end":{"line":177,"column":18,"offset":5951}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":177,"column":18,"offset":5951},"end":{"line":177,"column":90,"offset":6023}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":177,"column":90,"offset":6023},"end":{"line":177,"column":94,"offset":6027}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":177,"column":94,"offset":6027},"end":{"line":177,"column":125,"offset":6058}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":177,"column":125,"offset":6058},"end":{"line":177,"column":131,"offset":6064}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":177,"column":131,"offset":6064},"end":{"line":178,"column":1,"offset":6079}}},{"type":"raw","value":"<br>","position":{"start":{"line":178,"column":1,"offset":6079},"end":{"line":178,"column":5,"offset":6083}}},{"type":"text","value":"\n","position":{"start":{"line":178,"column":5,"offset":6083},"end":{"line":179,"column":1,"offset":6084}}},{"type":"raw","value":"<br>","position":{"start":{"line":179,"column":1,"offset":6084},"end":{"line":179,"column":5,"offset":6088}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":179,"column":5,"offset":6088},"end":{"line":180,"column":14,"offset":6102}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":180,"column":14,"offset":6102},"end":{"line":180,"column":18,"offset":6106}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":180,"column":18,"offset":6106},"end":{"line":180,"column":37,"offset":6125}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":180,"column":37,"offset":6125},"end":{"line":180,"column":40,"offset":6128}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":180,"column":40,"offset":6128},"end":{"line":180,"column":77,"offset":6165}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":180,"column":77,"offset":6165},"end":{"line":180,"column":81,"offset":6169}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":180,"column":81,"offset":6169},"end":{"line":180,"column":99,"offset":6187}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":180,"column":99,"offset":6187},"end":{"line":180,"column":102,"offset":6190}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":180,"column":102,"offset":6190},"end":{"line":180,"column":133,"offset":6221}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":180,"column":133,"offset":6221},"end":{"line":180,"column":139,"offset":6227}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":180,"column":139,"offset":6227},"end":{"line":180,"column":167,"offset":6255}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":180,"column":167,"offset":6255},"end":{"line":180,"column":171,"offset":6259}}},{"type":"text","value":".\n","position":{"start":{"line":180,"column":171,"offset":6259},"end":{"line":181,"column":1,"offset":6261}}},{"type":"raw","value":"<br>","position":{"start":{"line":181,"column":1,"offset":6261},"end":{"line":181,"column":5,"offset":6265}}},{"type":"text","value":"\n","position":{"start":{"line":181,"column":5,"offset":6265},"end":{"line":182,"column":1,"offset":6266}}},{"type":"raw","value":"<br>","position":{"start":{"line":182,"column":1,"offset":6266},"end":{"line":182,"column":5,"offset":6270}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":182,"column":5,"offset":6270},"end":{"line":184,"column":1,"offset":6290}}},{"type":"raw","value":"<br>","position":{"start":{"line":184,"column":1,"offset":6290},"end":{"line":184,"column":5,"offset":6294}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":184,"column":5,"offset":6294},"end":{"line":185,"column":6,"offset":6300}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":185,"column":6,"offset":6300},"end":{"line":185,"column":12,"offset":6306}}},{"type":"text","value":" does not have an ","position":{"start":{"line":185,"column":12,"offset":6306},"end":{"line":185,"column":30,"offset":6324}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":185,"column":30,"offset":6324},"end":{"line":185,"column":36,"offset":6330}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":185,"column":36,"offset":6330},"end":{"line":185,"column":62,"offset":6356}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":185,"column":62,"offset":6356},"end":{"line":185,"column":75,"offset":6369}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":185,"column":75,"offset":6369},"end":{"line":185,"column":159,"offset":6453}}}],"position":{"start":{"line":170,"column":1,"offset":5728},"end":{"line":185,"column":159,"offset":6453}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":187,"column":8,"offset":6462},"end":{"line":187,"column":41,"offset":6495}}}],"position":{"start":{"line":187,"column":1,"offset":6455},"end":{"line":187,"column":41,"offset":6495}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":188,"column":1,"offset":6496},"end":{"line":193,"column":4,"offset":6571}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":194,"column":1,"offset":6572},"end":{"line":195,"column":1,"offset":6591}}},{"type":"raw","value":"<br>","position":{"start":{"line":195,"column":1,"offset":6591},"end":{"line":195,"column":5,"offset":6595}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":195,"column":5,"offset":6595},"end":{"line":197,"column":5,"offset":6733}}},{"type":"raw","value":"<br>","position":{"start":{"line":197,"column":5,"offset":6733},"end":{"line":197,"column":9,"offset":6737}}},{"type":"text","value":"\n","position":{"start":{"line":197,"column":9,"offset":6737},"end":{"line":198,"column":5,"offset":6742}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":198,"column":5,"offset":6742},"end":{"line":198,"column":27,"offset":6764}}},{"type":"text","value":"\n","position":{"start":{"line":198,"column":27,"offset":6764},"end":{"line":199,"column":5,"offset":6769}}},{"type":"raw","value":"<br>","position":{"start":{"line":199,"column":5,"offset":6769},"end":{"line":199,"column":9,"offset":6773}}},{"type":"text","value":"\n","position":{"start":{"line":199,"column":9,"offset":6773},"end":{"line":200,"column":5,"offset":6778}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":200,"column":5,"offset":6778},"end":{"line":200,"column":12,"offset":6785}}},{"type":"text","value":" and ","position":{"start":{"line":200,"column":12,"offset":6785},"end":{"line":200,"column":17,"offset":6790}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":200,"column":17,"offset":6790},"end":{"line":200,"column":25,"offset":6798}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":200,"column":25,"offset":6798},"end":{"line":200,"column":63,"offset":6836}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":200,"column":63,"offset":6836},"end":{"line":200,"column":66,"offset":6839}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":200,"column":66,"offset":6839},"end":{"line":200,"column":86,"offset":6859}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":200,"column":86,"offset":6859},"end":{"line":200,"column":89,"offset":6862}}},{"type":"text","value":" will be called with ","position":{"start":{"line":200,"column":89,"offset":6862},"end":{"line":200,"column":110,"offset":6883}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":200,"column":110,"offset":6883},"end":{"line":200,"column":119,"offset":6892}}},{"type":"text","value":".\n","position":{"start":{"line":200,"column":119,"offset":6892},"end":{"line":201,"column":1,"offset":6894}}},{"type":"raw","value":"<br>","position":{"start":{"line":201,"column":1,"offset":6894},"end":{"line":201,"column":5,"offset":6898}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":201,"column":5,"offset":6898},"end":{"line":203,"column":1,"offset":6914}}},{"type":"raw","value":"<br>","position":{"start":{"line":203,"column":1,"offset":6914},"end":{"line":203,"column":5,"offset":6918}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":203,"column":5,"offset":6918},"end":{"line":205,"column":5,"offset":7025}}},{"type":"raw","value":"<br>","position":{"start":{"line":205,"column":5,"offset":7025},"end":{"line":205,"column":9,"offset":7029}}},{"type":"text","value":"\n","position":{"start":{"line":205,"column":9,"offset":7029},"end":{"line":206,"column":1,"offset":7030}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":206,"column":1,"offset":7030},"end":{"line":206,"column":23,"offset":7052}}},{"type":"text","value":" turns into ","position":{"start":{"line":206,"column":23,"offset":7052},"end":{"line":206,"column":35,"offset":7064}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":206,"column":35,"offset":7064},"end":{"line":206,"column":61,"offset":7090}}},{"type":"text","value":"\n","position":{"start":{"line":206,"column":61,"offset":7090},"end":{"line":207,"column":1,"offset":7091}}},{"type":"raw","value":"<br>","position":{"start":{"line":207,"column":1,"offset":7091},"end":{"line":207,"column":5,"offset":7095}}},{"type":"text","value":"\nNow ","position":{"start":{"line":207,"column":5,"offset":7095},"end":{"line":208,"column":5,"offset":7100}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":208,"column":5,"offset":7100},"end":{"line":208,"column":8,"offset":7103}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":208,"column":8,"offset":7103},"end":{"line":208,"column":58,"offset":7153}}}],"position":{"start":{"line":194,"column":1,"offset":6572},"end":{"line":208,"column":58,"offset":7153}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":210,"column":1,"offset":7155},"end":{"line":211,"column":1,"offset":7173}}},{"type":"raw","value":"<br>","position":{"start":{"line":211,"column":1,"offset":7173},"end":{"line":211,"column":5,"offset":7177}}}],"position":{"start":{"line":210,"column":1,"offset":7155},"end":{"line":211,"column":5,"offset":7177}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":212,"column":1,"offset":7178},"end":{"line":214,"column":4,"offset":7208}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":215,"column":1,"offset":7209},"end":{"line":215,"column":13,"offset":7221}}}],"position":{"start":{"line":215,"column":1,"offset":7209},"end":{"line":215,"column":13,"offset":7221}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":216,"column":1,"offset":7222},"end":{"line":222,"column":4,"offset":7301}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":223,"column":1,"offset":7302},"end":{"line":223,"column":8,"offset":7309}}}],"position":{"start":{"line":223,"column":1,"offset":7302},"end":{"line":223,"column":8,"offset":7309}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":224,"column":1,"offset":7310},"end":{"line":231,"column":4,"offset":7434}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":232,"column":1,"offset":7435},"end":{"line":233,"column":5,"offset":7444}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":235,"column":1,"offset":7446},"end":{"line":235,"column":11,"offset":7456}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":235,"column":11,"offset":7456},"end":{"line":235,"column":24,"offset":7469}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":235,"column":24,"offset":7469},"end":{"line":235,"column":107,"offset":7552}}}],"position":{"start":{"line":235,"column":1,"offset":7446},"end":{"line":235,"column":107,"offset":7552}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":237,"column":7,"offset":7560},"end":{"line":237,"column":10,"offset":7563}}}],"position":{"start":{"line":237,"column":1,"offset":7554},"end":{"line":237,"column":10,"offset":7563}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":238,"column":7,"offset":7570},"end":{"line":238,"column":10,"offset":7573}}}],"position":{"start":{"line":238,"column":1,"offset":7564},"end":{"line":238,"column":10,"offset":7573}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":240,"column":6,"offset":7580},"end":{"line":240,"column":10,"offset":7584}}}],"position":{"start":{"line":240,"column":1,"offset":7575},"end":{"line":240,"column":10,"offset":7584}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":241,"column":7,"offset":7591},"end":{"line":241,"column":13,"offset":7597}}}],"position":{"start":{"line":241,"column":1,"offset":7585},"end":{"line":241,"column":13,"offset":7597}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":242,"column":1,"offset":7598},"end":{"line":242,"column":49,"offset":7646}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":242,"column":49,"offset":7646},"end":{"line":242,"column":57,"offset":7654}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":242,"column":57,"offset":7654},"end":{"line":242,"column":133,"offset":7730}}}],"position":{"start":{"line":242,"column":1,"offset":7598},"end":{"line":242,"column":133,"offset":7730}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":243,"column":1,"offset":7731},"end":{"line":253,"column":4,"offset":7926}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":254,"column":1,"offset":7927},"end":{"line":254,"column":5,"offset":7931}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":257,"column":1,"offset":7934},"end":{"line":258,"column":1,"offset":8016}}},{"type":"raw","value":"<br>","position":{"start":{"line":258,"column":1,"offset":8016},"end":{"line":258,"column":5,"offset":8020}}},{"type":"text","value":"\n","position":{"start":{"line":258,"column":5,"offset":8020},"end":{"line":259,"column":1,"offset":8021}}},{"type":"raw","value":"<br>","position":{"start":{"line":259,"column":1,"offset":8021},"end":{"line":259,"column":5,"offset":8025}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":259,"column":5,"offset":8025},"end":{"line":260,"column":26,"offset":8051}}}],"position":{"start":{"line":257,"column":1,"offset":7934},"end":{"line":260,"column":26,"offset":8051}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":261,"column":1,"offset":8052},"end":{"line":266,"column":4,"offset":8180}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":267,"column":1,"offset":8181},"end":{"line":267,"column":14,"offset":8194}}}],"position":{"start":{"line":267,"column":1,"offset":8181},"end":{"line":267,"column":14,"offset":8194}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":269,"column":1,"offset":8196},"end":{"line":282,"column":4,"offset":8478}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":284,"column":1,"offset":8480},"end":{"line":285,"column":5,"offset":8489}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":288,"column":7,"offset":8498},"end":{"line":288,"column":13,"offset":8504}}}],"position":{"start":{"line":288,"column":1,"offset":8492},"end":{"line":288,"column":13,"offset":8504}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":288,"column":13,"offset":8504}}}}