{"expireTime":9007200842246765000,"key":"transformer-remark-markdown-html-ast-7ae2d96960076ebb3a799d24d8bfe0f9-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":10,"offset":421}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":10,"offset":421}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":11,"column":7,"offset":429},"end":{"line":11,"column":10,"offset":432}}}],"position":{"start":{"line":11,"column":1,"offset":423},"end":{"line":11,"column":10,"offset":432}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":12,"column":7,"offset":439},"end":{"line":12,"column":10,"offset":442}}}],"position":{"start":{"line":12,"column":1,"offset":433},"end":{"line":12,"column":10,"offset":442}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":14,"column":6,"offset":449},"end":{"line":14,"column":14,"offset":457}}}],"position":{"start":{"line":14,"column":1,"offset":444},"end":{"line":14,"column":14,"offset":457}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":15,"column":7,"offset":464},"end":{"line":15,"column":10,"offset":467}}}],"position":{"start":{"line":15,"column":1,"offset":458},"end":{"line":15,"column":10,"offset":467}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":17,"column":8,"offset":476},"end":{"line":17,"column":30,"offset":498}}}],"position":{"start":{"line":17,"column":1,"offset":469},"end":{"line":17,"column":30,"offset":498}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":19,"column":1,"offset":500},"end":{"line":20,"column":1,"offset":644}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":644},"end":{"line":20,"column":5,"offset":648}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":20,"column":5,"offset":648},"end":{"line":20,"column":16,"offset":659}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":16,"offset":659},"end":{"line":20,"column":20,"offset":663}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":20,"column":20,"offset":663},"end":{"line":22,"column":1,"offset":807}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":807},"end":{"line":22,"column":5,"offset":811}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":22,"column":5,"offset":811},"end":{"line":22,"column":16,"offset":822}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":16,"offset":822},"end":{"line":22,"column":20,"offset":826}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":22,"column":20,"offset":826},"end":{"line":23,"column":45,"offset":871}}},{"type":"raw","value":"<br>","position":{"start":{"line":23,"column":45,"offset":871},"end":{"line":23,"column":49,"offset":875}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":23,"column":49,"offset":875},"end":{"line":23,"column":65,"offset":891}}},{"type":"raw","value":"<br>","position":{"start":{"line":23,"column":65,"offset":891},"end":{"line":23,"column":69,"offset":895}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":23,"column":69,"offset":895},"end":{"line":25,"column":1,"offset":938}}},{"type":"raw","value":"<br>","position":{"start":{"line":25,"column":1,"offset":938},"end":{"line":25,"column":5,"offset":942}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":25,"column":5,"offset":942},"end":{"line":25,"column":22,"offset":959}}},{"type":"raw","value":"<br>","position":{"start":{"line":25,"column":22,"offset":959},"end":{"line":25,"column":26,"offset":963}}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":26,"offset":963},"end":{"line":26,"column":1,"offset":964}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":1,"offset":964},"end":{"line":26,"column":5,"offset":968}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":26,"column":5,"offset":968},"end":{"line":28,"column":1,"offset":1086}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":1,"offset":1086},"end":{"line":28,"column":5,"offset":1090}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":28,"column":5,"offset":1090},"end":{"line":30,"column":1,"offset":1211}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":30,"column":1,"offset":1211},"end":{"line":30,"column":12,"offset":1222}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":30,"column":12,"offset":1222},"end":{"line":30,"column":68,"offset":1278}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":30,"column":68,"offset":1278},"end":{"line":30,"column":79,"offset":1289}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":30,"column":79,"offset":1289},"end":{"line":30,"column":106,"offset":1316}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":30,"column":106,"offset":1316},"end":{"line":30,"column":109,"offset":1319}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":30,"column":109,"offset":1319},"end":{"line":30,"column":189,"offset":1399}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":30,"column":189,"offset":1399},"end":{"line":30,"column":192,"offset":1402}}},{"type":"text","value":" to get 3.","position":{"start":{"line":30,"column":192,"offset":1402},"end":{"line":30,"column":202,"offset":1412}}}],"position":{"start":{"line":19,"column":1,"offset":500},"end":{"line":30,"column":202,"offset":1412}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":32,"column":8,"offset":1421},"end":{"line":32,"column":14,"offset":1427}}}],"position":{"start":{"line":32,"column":1,"offset":1414},"end":{"line":32,"column":14,"offset":1427}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":33,"column":1,"offset":1428},"end":{"line":33,"column":9,"offset":1436}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":33,"column":9,"offset":1436},"end":{"line":33,"column":73,"offset":1500}}}],"position":{"start":{"line":33,"column":1,"offset":1428},"end":{"line":33,"column":73,"offset":1500}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":34,"column":1,"offset":1501},"end":{"line":37,"column":4,"offset":1540}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1541},"end":{"line":38,"column":5,"offset":1545}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":40,"column":1,"offset":1547},"end":{"line":40,"column":72,"offset":1618}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":40,"column":72,"offset":1618},"end":{"line":40,"column":80,"offset":1626}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":40,"column":80,"offset":1626},"end":{"line":41,"column":1,"offset":1650}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":1,"offset":1650},"end":{"line":41,"column":5,"offset":1654}}},{"type":"text","value":"\n","position":{"start":{"line":41,"column":5,"offset":1654},"end":{"line":42,"column":1,"offset":1655}}},{"type":"raw","value":"<br>","position":{"start":{"line":42,"column":1,"offset":1655},"end":{"line":42,"column":5,"offset":1659}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":42,"column":5,"offset":1659},"end":{"line":43,"column":184,"offset":1843}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":43,"column":184,"offset":1843},"end":{"line":43,"column":187,"offset":1846}}},{"type":"text","value":".\n","position":{"start":{"line":43,"column":187,"offset":1846},"end":{"line":44,"column":1,"offset":1849}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1849},"end":{"line":44,"column":5,"offset":1853}}},{"type":"text","value":"\n","position":{"start":{"line":44,"column":5,"offset":1853},"end":{"line":45,"column":1,"offset":1854}}},{"type":"raw","value":"<br>","position":{"start":{"line":45,"column":1,"offset":1854},"end":{"line":45,"column":5,"offset":1858}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":45,"column":5,"offset":1858},"end":{"line":46,"column":27,"offset":1885}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":46,"column":27,"offset":1885},"end":{"line":46,"column":35,"offset":1893}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":46,"column":35,"offset":1893},"end":{"line":46,"column":86,"offset":1944}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":46,"column":86,"offset":1944},"end":{"line":46,"column":95,"offset":1953}}},{"type":"text","value":". ","position":{"start":{"line":46,"column":95,"offset":1953},"end":{"line":46,"column":97,"offset":1955}}}],"position":{"start":{"line":40,"column":1,"offset":1547},"end":{"line":46,"column":97,"offset":1955}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":48,"column":1,"offset":1957},"end":{"line":48,"column":6,"offset":1962}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":50,"column":1,"offset":1964},"end":{"line":51,"column":1,"offset":2008}}},{"type":"raw","value":"<br>","position":{"start":{"line":51,"column":1,"offset":2008},"end":{"line":51,"column":5,"offset":2012}}},{"type":"text","value":"\n","position":{"start":{"line":51,"column":5,"offset":2012},"end":{"line":52,"column":1,"offset":2013}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":52,"column":1,"offset":2013},"end":{"line":52,"column":22,"offset":2034}}},{"type":"text","value":"\n","position":{"start":{"line":52,"column":22,"offset":2034},"end":{"line":53,"column":1,"offset":2035}}},{"type":"raw","value":"<br>","position":{"start":{"line":53,"column":1,"offset":2035},"end":{"line":53,"column":5,"offset":2039}}}],"position":{"start":{"line":50,"column":1,"offset":1964},"end":{"line":53,"column":5,"offset":2039}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":55,"column":1,"offset":2041},"end":{"line":55,"column":152,"offset":2192}}}],"position":{"start":{"line":55,"column":1,"offset":2041},"end":{"line":55,"column":152,"offset":2192}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":57,"column":8,"offset":2201},"end":{"line":57,"column":20,"offset":2213}}}],"position":{"start":{"line":57,"column":1,"offset":2194},"end":{"line":57,"column":20,"offset":2213}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":59,"column":1,"offset":2215},"end":{"line":59,"column":56,"offset":2270}}}],"position":{"start":{"line":59,"column":1,"offset":2215},"end":{"line":59,"column":56,"offset":2270}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":60,"column":1,"offset":2271},"end":{"line":65,"column":4,"offset":2362}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":66,"column":1,"offset":2363},"end":{"line":66,"column":5,"offset":2367}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":68,"column":1,"offset":2369},"end":{"line":68,"column":37,"offset":2405}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":68,"column":37,"offset":2405},"end":{"line":68,"column":41,"offset":2409}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":68,"column":41,"offset":2409},"end":{"line":69,"column":1,"offset":2426}}},{"type":"raw","value":"<br>","position":{"start":{"line":69,"column":1,"offset":2426},"end":{"line":69,"column":5,"offset":2430}}},{"type":"text","value":"\n","position":{"start":{"line":69,"column":5,"offset":2430},"end":{"line":70,"column":1,"offset":2431}}},{"type":"raw","value":"<br>","position":{"start":{"line":70,"column":1,"offset":2431},"end":{"line":70,"column":5,"offset":2435}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":70,"column":5,"offset":2435},"end":{"line":71,"column":66,"offset":2501}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":71,"column":66,"offset":2501},"end":{"line":71,"column":89,"offset":2524}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":71,"column":89,"offset":2524},"end":{"line":72,"column":1,"offset":2564}}},{"type":"raw","value":"<br>","position":{"start":{"line":72,"column":1,"offset":2564},"end":{"line":72,"column":5,"offset":2568}}},{"type":"text","value":"\n","position":{"start":{"line":72,"column":5,"offset":2568},"end":{"line":73,"column":1,"offset":2569}}},{"type":"raw","value":"<br>","position":{"start":{"line":73,"column":1,"offset":2569},"end":{"line":73,"column":5,"offset":2573}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":73,"column":5,"offset":2573},"end":{"line":74,"column":21,"offset":2594}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":74,"column":21,"offset":2594},"end":{"line":74,"column":25,"offset":2598}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":74,"column":25,"offset":2598},"end":{"line":75,"column":1,"offset":2652}}},{"type":"raw","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2652},"end":{"line":75,"column":5,"offset":2656}}},{"type":"text","value":"\n","position":{"start":{"line":75,"column":5,"offset":2656},"end":{"line":76,"column":1,"offset":2657}}},{"type":"raw","value":"<br>","position":{"start":{"line":76,"column":1,"offset":2657},"end":{"line":76,"column":5,"offset":2661}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":76,"column":5,"offset":2661},"end":{"line":77,"column":21,"offset":2682}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":77,"column":21,"offset":2682},"end":{"line":77,"column":25,"offset":2686}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":77,"column":25,"offset":2686},"end":{"line":78,"column":1,"offset":2741}}},{"type":"raw","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2741},"end":{"line":78,"column":5,"offset":2745}}},{"type":"text","value":"\n","position":{"start":{"line":78,"column":5,"offset":2745},"end":{"line":79,"column":1,"offset":2746}}},{"type":"raw","value":"<br>","position":{"start":{"line":79,"column":1,"offset":2746},"end":{"line":79,"column":5,"offset":2750}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":79,"column":5,"offset":2750},"end":{"line":80,"column":58,"offset":2808}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":80,"column":58,"offset":2808},"end":{"line":80,"column":61,"offset":2811}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":80,"column":61,"offset":2811},"end":{"line":80,"column":145,"offset":2895}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":80,"column":145,"offset":2895},"end":{"line":80,"column":153,"offset":2903}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":80,"column":153,"offset":2903},"end":{"line":80,"column":178,"offset":2928}}}],"position":{"start":{"line":68,"column":1,"offset":2369},"end":{"line":80,"column":178,"offset":2928}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":82,"column":7,"offset":2936},"end":{"line":82,"column":10,"offset":2939}}}],"position":{"start":{"line":82,"column":1,"offset":2930},"end":{"line":82,"column":10,"offset":2939}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":84,"column":8,"offset":2948},"end":{"line":84,"column":17,"offset":2957}}}],"position":{"start":{"line":84,"column":1,"offset":2941},"end":{"line":84,"column":17,"offset":2957}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":85,"column":1,"offset":2958},"end":{"line":96,"column":4,"offset":3157}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":97,"column":1,"offset":3158},"end":{"line":97,"column":5,"offset":3162}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":99,"column":1,"offset":3164},"end":{"line":100,"column":1,"offset":3380}}},{"type":"raw","value":"<br>","position":{"start":{"line":100,"column":1,"offset":3380},"end":{"line":100,"column":5,"offset":3384}}},{"type":"text","value":"\n","position":{"start":{"line":100,"column":5,"offset":3384},"end":{"line":101,"column":1,"offset":3385}}},{"type":"raw","value":"<br>","position":{"start":{"line":101,"column":1,"offset":3385},"end":{"line":101,"column":5,"offset":3389}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":101,"column":5,"offset":3389},"end":{"line":102,"column":72,"offset":3461}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":102,"column":72,"offset":3461},"end":{"line":102,"column":81,"offset":3470}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":102,"column":81,"offset":3470},"end":{"line":103,"column":1,"offset":3489}}},{"type":"raw","value":"<br>","position":{"start":{"line":103,"column":1,"offset":3489},"end":{"line":103,"column":5,"offset":3493}}},{"type":"text","value":"\n","position":{"start":{"line":103,"column":5,"offset":3493},"end":{"line":104,"column":1,"offset":3494}}},{"type":"raw","value":"<br>","position":{"start":{"line":104,"column":1,"offset":3494},"end":{"line":104,"column":5,"offset":3498}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":104,"column":5,"offset":3498},"end":{"line":105,"column":10,"offset":3508}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":105,"column":10,"offset":3508},"end":{"line":105,"column":16,"offset":3514}}},{"type":"text","value":" gets called with ","position":{"start":{"line":105,"column":16,"offset":3514},"end":{"line":105,"column":34,"offset":3532}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":105,"column":34,"offset":3532},"end":{"line":105,"column":42,"offset":3540}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":105,"column":42,"offset":3540},"end":{"line":106,"column":24,"offset":3565}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":106,"column":24,"offset":3565},"end":{"line":106,"column":33,"offset":3574}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":106,"column":33,"offset":3574},"end":{"line":106,"column":107,"offset":3648}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":106,"column":107,"offset":3648},"end":{"line":106,"column":116,"offset":3657}}},{"type":"text","value":" is false because ","position":{"start":{"line":106,"column":116,"offset":3657},"end":{"line":106,"column":134,"offset":3675}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":106,"column":134,"offset":3675},"end":{"line":106,"column":137,"offset":3678}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":106,"column":137,"offset":3678},"end":{"line":106,"column":161,"offset":3702}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":106,"column":161,"offset":3702},"end":{"line":106,"column":167,"offset":3708}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":106,"column":167,"offset":3708},"end":{"line":106,"column":192,"offset":3733}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":106,"column":192,"offset":3733},"end":{"line":106,"column":200,"offset":3741}}},{"type":"text","value":". This is because ","position":{"start":{"line":106,"column":200,"offset":3741},"end":{"line":106,"column":218,"offset":3759}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":106,"column":218,"offset":3759},"end":{"line":106,"column":224,"offset":3765}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":106,"column":224,"offset":3765},"end":{"line":106,"column":245,"offset":3786}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":106,"column":245,"offset":3786},"end":{"line":106,"column":252,"offset":3793}}},{"type":"text","value":" and ","position":{"start":{"line":106,"column":252,"offset":3793},"end":{"line":106,"column":257,"offset":3798}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":106,"column":257,"offset":3798},"end":{"line":106,"column":260,"offset":3801}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":106,"column":260,"offset":3801},"end":{"line":106,"column":285,"offset":3826}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":106,"column":285,"offset":3826},"end":{"line":106,"column":291,"offset":3832}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":106,"column":291,"offset":3832},"end":{"line":107,"column":96,"offset":3958}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":107,"column":96,"offset":3958},"end":{"line":107,"column":111,"offset":3973}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":107,"column":111,"offset":3973},"end":{"line":107,"column":182,"offset":4044}}}],"position":{"start":{"line":99,"column":1,"offset":3164},"end":{"line":107,"column":182,"offset":4044}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":109,"column":8,"offset":4053},"end":{"line":109,"column":19,"offset":4064}}}],"position":{"start":{"line":109,"column":1,"offset":4046},"end":{"line":109,"column":19,"offset":4064}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":110,"column":1,"offset":4065},"end":{"line":110,"column":14,"offset":4078}}}],"position":{"start":{"line":110,"column":1,"offset":4065},"end":{"line":110,"column":14,"offset":4078}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":111,"column":1,"offset":4079},"end":{"line":126,"column":4,"offset":4494}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":127,"column":1,"offset":4495},"end":{"line":127,"column":5,"offset":4499}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":129,"column":1,"offset":4501},"end":{"line":129,"column":141,"offset":4641}}}],"position":{"start":{"line":129,"column":1,"offset":4501},"end":{"line":129,"column":141,"offset":4641}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":131,"column":8,"offset":4650},"end":{"line":131,"column":30,"offset":4672}}}],"position":{"start":{"line":131,"column":1,"offset":4643},"end":{"line":131,"column":30,"offset":4672}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":132,"column":1,"offset":4673},"end":{"line":132,"column":199,"offset":4871}}}],"position":{"start":{"line":132,"column":1,"offset":4673},"end":{"line":132,"column":199,"offset":4871}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":134,"column":8,"offset":4880},"end":{"line":134,"column":30,"offset":4902}}}],"position":{"start":{"line":134,"column":1,"offset":4873},"end":{"line":134,"column":30,"offset":4902}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":136,"column":1,"offset":4904},"end":{"line":137,"column":1,"offset":4979}}},{"type":"raw","value":"<br>","position":{"start":{"line":137,"column":1,"offset":4979},"end":{"line":137,"column":5,"offset":4983}}},{"type":"text","value":"\n","position":{"start":{"line":137,"column":5,"offset":4983},"end":{"line":138,"column":1,"offset":4984}}},{"type":"raw","value":"<br>","position":{"start":{"line":138,"column":1,"offset":4984},"end":{"line":138,"column":5,"offset":4988}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":138,"column":5,"offset":4988},"end":{"line":140,"column":1,"offset":5050}}},{"type":"raw","value":"<br>","position":{"start":{"line":140,"column":1,"offset":5050},"end":{"line":140,"column":5,"offset":5054}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":140,"column":5,"offset":5054},"end":{"line":141,"column":1,"offset":5057}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":141,"column":1,"offset":5057},"end":{"line":141,"column":11,"offset":5067}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":141,"column":11,"offset":5067},"end":{"line":141,"column":19,"offset":5075}}},{"type":"text","value":" and ","position":{"start":{"line":141,"column":19,"offset":5075},"end":{"line":141,"column":24,"offset":5080}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":141,"column":24,"offset":5080},"end":{"line":141,"column":34,"offset":5090}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":141,"column":34,"offset":5090},"end":{"line":142,"column":1,"offset":5139}}},{"type":"raw","value":"<br>","position":{"start":{"line":142,"column":1,"offset":5139},"end":{"line":142,"column":5,"offset":5143}}}],"position":{"start":{"line":136,"column":1,"offset":4904},"end":{"line":142,"column":5,"offset":5143}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":144,"column":8,"offset":5152},"end":{"line":144,"column":12,"offset":5156}}}],"position":{"start":{"line":144,"column":1,"offset":5145},"end":{"line":144,"column":12,"offset":5156}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":145,"column":1,"offset":5157},"end":{"line":150,"column":4,"offset":5268}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":151,"column":1,"offset":5269},"end":{"line":152,"column":5,"offset":5278}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":154,"column":1,"offset":5280},"end":{"line":154,"column":7,"offset":5286}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":154,"column":7,"offset":5286},"end":{"line":156,"column":1,"offset":5368}}},{"type":"raw","value":"<br>","position":{"start":{"line":156,"column":1,"offset":5368},"end":{"line":156,"column":5,"offset":5372}}},{"type":"text","value":"\n","position":{"start":{"line":156,"column":5,"offset":5372},"end":{"line":157,"column":1,"offset":5373}}},{"type":"raw","value":"<br>","position":{"start":{"line":157,"column":1,"offset":5373},"end":{"line":157,"column":5,"offset":5377}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":157,"column":5,"offset":5377},"end":{"line":158,"column":10,"offset":5387}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":158,"column":10,"offset":5387},"end":{"line":158,"column":14,"offset":5391}}},{"type":"text","value":". Since ","position":{"start":{"line":158,"column":14,"offset":5391},"end":{"line":158,"column":22,"offset":5399}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":158,"column":22,"offset":5399},"end":{"line":158,"column":30,"offset":5407}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":158,"column":30,"offset":5407},"end":{"line":158,"column":50,"offset":5427}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":158,"column":50,"offset":5427},"end":{"line":158,"column":53,"offset":5430}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":158,"column":53,"offset":5430},"end":{"line":158,"column":90,"offset":5467}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":158,"column":90,"offset":5467},"end":{"line":158,"column":96,"offset":5473}}},{"type":"text","value":".\n","position":{"start":{"line":158,"column":96,"offset":5473},"end":{"line":159,"column":1,"offset":5476}}},{"type":"raw","value":"<br>","position":{"start":{"line":159,"column":1,"offset":5476},"end":{"line":159,"column":5,"offset":5480}}},{"type":"text","value":"\n","position":{"start":{"line":159,"column":5,"offset":5480},"end":{"line":160,"column":1,"offset":5481}}},{"type":"raw","value":"<br>","position":{"start":{"line":160,"column":1,"offset":5481},"end":{"line":160,"column":5,"offset":5485}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":160,"column":5,"offset":5485},"end":{"line":161,"column":14,"offset":5499}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":161,"column":14,"offset":5499},"end":{"line":161,"column":18,"offset":5503}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":161,"column":18,"offset":5503},"end":{"line":161,"column":90,"offset":5575}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":161,"column":90,"offset":5575},"end":{"line":161,"column":94,"offset":5579}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":161,"column":94,"offset":5579},"end":{"line":161,"column":125,"offset":5610}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":161,"column":125,"offset":5610},"end":{"line":161,"column":131,"offset":5616}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":161,"column":131,"offset":5616},"end":{"line":162,"column":1,"offset":5631}}},{"type":"raw","value":"<br>","position":{"start":{"line":162,"column":1,"offset":5631},"end":{"line":162,"column":5,"offset":5635}}},{"type":"text","value":"\n","position":{"start":{"line":162,"column":5,"offset":5635},"end":{"line":163,"column":1,"offset":5636}}},{"type":"raw","value":"<br>","position":{"start":{"line":163,"column":1,"offset":5636},"end":{"line":163,"column":5,"offset":5640}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":163,"column":5,"offset":5640},"end":{"line":164,"column":14,"offset":5654}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":164,"column":14,"offset":5654},"end":{"line":164,"column":18,"offset":5658}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":164,"column":18,"offset":5658},"end":{"line":164,"column":37,"offset":5677}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":164,"column":37,"offset":5677},"end":{"line":164,"column":40,"offset":5680}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":164,"column":40,"offset":5680},"end":{"line":164,"column":77,"offset":5717}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":164,"column":77,"offset":5717},"end":{"line":164,"column":81,"offset":5721}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":164,"column":81,"offset":5721},"end":{"line":164,"column":99,"offset":5739}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":164,"column":99,"offset":5739},"end":{"line":164,"column":102,"offset":5742}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":164,"column":102,"offset":5742},"end":{"line":164,"column":133,"offset":5773}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":164,"column":133,"offset":5773},"end":{"line":164,"column":139,"offset":5779}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":164,"column":139,"offset":5779},"end":{"line":164,"column":167,"offset":5807}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":164,"column":167,"offset":5807},"end":{"line":164,"column":171,"offset":5811}}},{"type":"text","value":".\n","position":{"start":{"line":164,"column":171,"offset":5811},"end":{"line":165,"column":1,"offset":5813}}},{"type":"raw","value":"<br>","position":{"start":{"line":165,"column":1,"offset":5813},"end":{"line":165,"column":5,"offset":5817}}},{"type":"text","value":"\n","position":{"start":{"line":165,"column":5,"offset":5817},"end":{"line":166,"column":1,"offset":5818}}},{"type":"raw","value":"<br>","position":{"start":{"line":166,"column":1,"offset":5818},"end":{"line":166,"column":5,"offset":5822}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":166,"column":5,"offset":5822},"end":{"line":168,"column":1,"offset":5842}}},{"type":"raw","value":"<br>","position":{"start":{"line":168,"column":1,"offset":5842},"end":{"line":168,"column":5,"offset":5846}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":168,"column":5,"offset":5846},"end":{"line":169,"column":6,"offset":5852}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":169,"column":6,"offset":5852},"end":{"line":169,"column":12,"offset":5858}}},{"type":"text","value":" does not have an ","position":{"start":{"line":169,"column":12,"offset":5858},"end":{"line":169,"column":30,"offset":5876}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":169,"column":30,"offset":5876},"end":{"line":169,"column":36,"offset":5882}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":169,"column":36,"offset":5882},"end":{"line":169,"column":62,"offset":5908}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":169,"column":62,"offset":5908},"end":{"line":169,"column":75,"offset":5921}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":169,"column":75,"offset":5921},"end":{"line":169,"column":159,"offset":6005}}}],"position":{"start":{"line":154,"column":1,"offset":5280},"end":{"line":169,"column":159,"offset":6005}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":171,"column":8,"offset":6014},"end":{"line":171,"column":41,"offset":6047}}}],"position":{"start":{"line":171,"column":1,"offset":6007},"end":{"line":171,"column":41,"offset":6047}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":172,"column":1,"offset":6048},"end":{"line":177,"column":4,"offset":6123}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":178,"column":1,"offset":6124},"end":{"line":179,"column":1,"offset":6143}}},{"type":"raw","value":"<br>","position":{"start":{"line":179,"column":1,"offset":6143},"end":{"line":179,"column":5,"offset":6147}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":179,"column":5,"offset":6147},"end":{"line":181,"column":5,"offset":6285}}},{"type":"raw","value":"<br>","position":{"start":{"line":181,"column":5,"offset":6285},"end":{"line":181,"column":9,"offset":6289}}},{"type":"text","value":"\n","position":{"start":{"line":181,"column":9,"offset":6289},"end":{"line":182,"column":5,"offset":6294}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":182,"column":5,"offset":6294},"end":{"line":182,"column":27,"offset":6316}}},{"type":"text","value":"\n","position":{"start":{"line":182,"column":27,"offset":6316},"end":{"line":183,"column":5,"offset":6321}}},{"type":"raw","value":"<br>","position":{"start":{"line":183,"column":5,"offset":6321},"end":{"line":183,"column":9,"offset":6325}}},{"type":"text","value":"\n","position":{"start":{"line":183,"column":9,"offset":6325},"end":{"line":184,"column":5,"offset":6330}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":184,"column":5,"offset":6330},"end":{"line":184,"column":12,"offset":6337}}},{"type":"text","value":" and ","position":{"start":{"line":184,"column":12,"offset":6337},"end":{"line":184,"column":17,"offset":6342}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":184,"column":17,"offset":6342},"end":{"line":184,"column":25,"offset":6350}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":184,"column":25,"offset":6350},"end":{"line":184,"column":63,"offset":6388}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":184,"column":63,"offset":6388},"end":{"line":184,"column":66,"offset":6391}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":184,"column":66,"offset":6391},"end":{"line":184,"column":86,"offset":6411}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":184,"column":86,"offset":6411},"end":{"line":184,"column":89,"offset":6414}}},{"type":"text","value":" will be called with ","position":{"start":{"line":184,"column":89,"offset":6414},"end":{"line":184,"column":110,"offset":6435}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":184,"column":110,"offset":6435},"end":{"line":184,"column":119,"offset":6444}}},{"type":"text","value":".\n","position":{"start":{"line":184,"column":119,"offset":6444},"end":{"line":185,"column":1,"offset":6446}}},{"type":"raw","value":"<br>","position":{"start":{"line":185,"column":1,"offset":6446},"end":{"line":185,"column":5,"offset":6450}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":185,"column":5,"offset":6450},"end":{"line":187,"column":1,"offset":6466}}},{"type":"raw","value":"<br>","position":{"start":{"line":187,"column":1,"offset":6466},"end":{"line":187,"column":5,"offset":6470}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":187,"column":5,"offset":6470},"end":{"line":189,"column":5,"offset":6577}}},{"type":"raw","value":"<br>","position":{"start":{"line":189,"column":5,"offset":6577},"end":{"line":189,"column":9,"offset":6581}}},{"type":"text","value":"\n","position":{"start":{"line":189,"column":9,"offset":6581},"end":{"line":190,"column":1,"offset":6582}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":190,"column":1,"offset":6582},"end":{"line":190,"column":23,"offset":6604}}},{"type":"text","value":" turns into ","position":{"start":{"line":190,"column":23,"offset":6604},"end":{"line":190,"column":35,"offset":6616}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":190,"column":35,"offset":6616},"end":{"line":190,"column":61,"offset":6642}}},{"type":"text","value":"\n","position":{"start":{"line":190,"column":61,"offset":6642},"end":{"line":191,"column":1,"offset":6643}}},{"type":"raw","value":"<br>","position":{"start":{"line":191,"column":1,"offset":6643},"end":{"line":191,"column":5,"offset":6647}}},{"type":"text","value":"\nNow ","position":{"start":{"line":191,"column":5,"offset":6647},"end":{"line":192,"column":5,"offset":6652}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":192,"column":5,"offset":6652},"end":{"line":192,"column":8,"offset":6655}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":192,"column":8,"offset":6655},"end":{"line":192,"column":58,"offset":6705}}}],"position":{"start":{"line":178,"column":1,"offset":6124},"end":{"line":192,"column":58,"offset":6705}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":194,"column":1,"offset":6707},"end":{"line":195,"column":1,"offset":6725}}},{"type":"raw","value":"<br>","position":{"start":{"line":195,"column":1,"offset":6725},"end":{"line":195,"column":5,"offset":6729}}}],"position":{"start":{"line":194,"column":1,"offset":6707},"end":{"line":195,"column":5,"offset":6729}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":196,"column":1,"offset":6730},"end":{"line":198,"column":4,"offset":6760}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":199,"column":1,"offset":6761},"end":{"line":199,"column":13,"offset":6773}}}],"position":{"start":{"line":199,"column":1,"offset":6761},"end":{"line":199,"column":13,"offset":6773}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":200,"column":1,"offset":6774},"end":{"line":206,"column":4,"offset":6853}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":207,"column":1,"offset":6854},"end":{"line":207,"column":8,"offset":6861}}}],"position":{"start":{"line":207,"column":1,"offset":6854},"end":{"line":207,"column":8,"offset":6861}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":208,"column":1,"offset":6862},"end":{"line":215,"column":4,"offset":6986}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":216,"column":1,"offset":6987},"end":{"line":217,"column":5,"offset":6996}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":219,"column":1,"offset":6998},"end":{"line":219,"column":11,"offset":7008}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":219,"column":11,"offset":7008},"end":{"line":219,"column":24,"offset":7021}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":219,"column":24,"offset":7021},"end":{"line":219,"column":107,"offset":7104}}}],"position":{"start":{"line":219,"column":1,"offset":6998},"end":{"line":219,"column":107,"offset":7104}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":221,"column":7,"offset":7112},"end":{"line":221,"column":10,"offset":7115}}}],"position":{"start":{"line":221,"column":1,"offset":7106},"end":{"line":221,"column":10,"offset":7115}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":222,"column":7,"offset":7122},"end":{"line":222,"column":10,"offset":7125}}}],"position":{"start":{"line":222,"column":1,"offset":7116},"end":{"line":222,"column":10,"offset":7125}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":224,"column":6,"offset":7132},"end":{"line":224,"column":10,"offset":7136}}}],"position":{"start":{"line":224,"column":1,"offset":7127},"end":{"line":224,"column":10,"offset":7136}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":225,"column":7,"offset":7143},"end":{"line":225,"column":13,"offset":7149}}}],"position":{"start":{"line":225,"column":1,"offset":7137},"end":{"line":225,"column":13,"offset":7149}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":226,"column":1,"offset":7150},"end":{"line":226,"column":49,"offset":7198}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":226,"column":49,"offset":7198},"end":{"line":226,"column":57,"offset":7206}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":226,"column":57,"offset":7206},"end":{"line":226,"column":133,"offset":7282}}}],"position":{"start":{"line":226,"column":1,"offset":7150},"end":{"line":226,"column":133,"offset":7282}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":227,"column":1,"offset":7283},"end":{"line":237,"column":4,"offset":7478}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":238,"column":1,"offset":7479},"end":{"line":238,"column":5,"offset":7483}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":241,"column":1,"offset":7486},"end":{"line":242,"column":1,"offset":7568}}},{"type":"raw","value":"<br>","position":{"start":{"line":242,"column":1,"offset":7568},"end":{"line":242,"column":5,"offset":7572}}},{"type":"text","value":"\n","position":{"start":{"line":242,"column":5,"offset":7572},"end":{"line":243,"column":1,"offset":7573}}},{"type":"raw","value":"<br>","position":{"start":{"line":243,"column":1,"offset":7573},"end":{"line":243,"column":5,"offset":7577}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":243,"column":5,"offset":7577},"end":{"line":244,"column":26,"offset":7603}}}],"position":{"start":{"line":241,"column":1,"offset":7486},"end":{"line":244,"column":26,"offset":7603}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":245,"column":1,"offset":7604},"end":{"line":250,"column":4,"offset":7732}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":251,"column":1,"offset":7733},"end":{"line":251,"column":14,"offset":7746}}}],"position":{"start":{"line":251,"column":1,"offset":7733},"end":{"line":251,"column":14,"offset":7746}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":253,"column":1,"offset":7748},"end":{"line":266,"column":4,"offset":8030}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":268,"column":1,"offset":8032},"end":{"line":269,"column":5,"offset":8041}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":272,"column":7,"offset":8050},"end":{"line":272,"column":13,"offset":8056}}}],"position":{"start":{"line":272,"column":1,"offset":8044},"end":{"line":272,"column":13,"offset":8056}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":272,"column":13,"offset":8056}}}}