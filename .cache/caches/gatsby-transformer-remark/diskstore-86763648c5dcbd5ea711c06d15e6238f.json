{"expireTime":9007200876932769000,"key":"transformer-remark-markdown-html-2296abb7cedccdf208fa5c5fe96af2f5-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":"<p>This article is a part of a series where I go through <a href=\"https://teachyourselfcs.com/\">teachyourselfcs</a>.\nIf you would like to start at the beginning start <a href=\"https://bpp.dev/articles/teachyourselfcs/programming/00-getting-started/\">here</a>.</p>\n<h2>LECTURES</h2>\n<h3>L9</h3>\n<p>Hardware Design: how a modern processor is built,\nstarting with basic elements as building block.</p>\n<p>Because Moore’s law is ending there is higher demand for custom hardware. This was 5 years before apple silicon.</p>\n<p>All computers we are building comprise of synchronous or digital systems.</p>\n<br>\n<p>Synchronous:\nAll operations coordinated by a central clock\n“heartbeat” of the system.</p>\n<p>Digital:</p>\n<ul>\n<li>Represent all values by discrete values</li>\n<li>Two binary digits: 1 and 0</li>\n<li>Electrical signals are treated as 1’s and 0’s</li>\n<li>1 and 0 are complements of each other</li>\n<li>high / low voltage for true / false 1 / 0</li>\n</ul>\n<h4>switches</h4>\n<p>if switch is closed light is on if switch is open light is off (simple circuits).</p>\n<p>if two switches is a line it creates an “and” because both must be on.</p>\n<p>if two switches are parallel it creates an “or” because it can choose either one.</p>\n<p>These basic switches can be used to create pretty much all of the logic of the computer.</p>\n<p>Some gates (NAND and NOR) have functional completeness. Meaning they can be used to perform any other logic (I learned this from Nand2Tetris).</p>\n<p>George Boole a mathematician came up with a lot of the theory that computer designers used fr circuits with true and false thats why they are called “Booleans”.</p>\n<h4>Transistors</h4>\n<p>High voltage represents 1 or true, modern microprocessors its about 1 volt.\nlow voltage 0 volt or ground reprensets 0 or false.</p>\n<p>CMOS: Complementary Metal-Oxide on Semiconductor</p>\n<p>CMOS transistors act as voltage controlled switches.</p>\n<p>Modern microprocessors have several billion transistors.</p>\n<p>2 bit Adder needs 3 bits for overflow.</p>\n<h4>Boolean Algebra</h4>\n<p>Use plus ”+” for OR</p>\n<ul>\n<li>“logical sum”</li>\n</ul>\n<p>Use product for AND (a * b or ab)</p>\n<ul>\n<li>“logical product”</li>\n</ul>\n<p>“Hat” means complement (NOT)</p>\n<h4>Type of Circuits</h4>\n<p>Combinational Logic circuits:</p>\n<ul>\n<li>Output is a fucntion of the inputs</li>\n<li>E.g. ALUs</li>\n</ul>\n<p>Sequential Logic:</p>\n<ul>\n<li>Circuits that “remember” or store information</li>\n<li>aka “State Elements”</li>\n<li>E.g. memories and registers</li>\n</ul>\n<p>sequential logic uses the clock which basically snap shots the state\nso the operation can be done without things changing out from under it.</p>\n<h3>L10</h3>\n<p>Clock tells you when to move to next step.</p>\n<p>Takes time when the clock ends its wave for the output to be represented (q delay).</p>\n<p>max delay = CLK to Q Delay + CL Delay + Setup Time</p>\n<p>Critical Path: the bottleneck of the delay. Designers look for these bottlenecks to improve them.</p>\n<p>You can add a register to be able to do parrallelism, but have to be wary about the overhead of adding registers.</p>\n<h3>L11</h3>\n<h2>HW</h2>\n<h3>HW 3</h3>\n<h3>Project 1</h3>\n<h2>READINGS</h2>"}