{"expireTime":9007200842248372000,"key":"transformer-remark-markdown-ast-696c19f0a47f7597f9bd893aa98bf2b6-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":10,"column":108,"offset":557},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":10,"column":108,"offset":557},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"primitive expressions","position":{"start":{"line":12,"column":3,"offset":561},"end":{"line":12,"column":24,"offset":582},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":561},"end":{"line":12,"column":24,"offset":582},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":559},"end":{"line":13,"column":3,"offset":585},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"means of combination","position":{"start":{"line":14,"column":3,"offset":588},"end":{"line":14,"column":23,"offset":608},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":588},"end":{"line":14,"column":23,"offset":608},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":586},"end":{"line":15,"column":3,"offset":611},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"means of abstraction","position":{"start":{"line":16,"column":3,"offset":614},"end":{"line":16,"column":23,"offset":634},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":614},"end":{"line":16,"column":23,"offset":634},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":17,"column":7,"offset":641},"end":{"line":17,"column":10,"offset":644},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":635},"end":{"line":17,"column":10,"offset":644},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":18,"column":7,"offset":651},"end":{"line":18,"column":10,"offset":654},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":645},"end":{"line":18,"column":10,"offset":654},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":612},"end":{"line":18,"column":10,"offset":654},"indent":[1,1]}}],"position":{"start":{"line":12,"column":1,"offset":559},"end":{"line":18,"column":10,"offset":654},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":20,"column":6,"offset":661},"end":{"line":20,"column":14,"offset":669},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":656},"end":{"line":20,"column":14,"offset":669},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":21,"column":7,"offset":676},"end":{"line":21,"column":10,"offset":679},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":670},"end":{"line":21,"column":10,"offset":679},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":23,"column":8,"offset":688},"end":{"line":23,"column":30,"offset":710},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":681},"end":{"line":23,"column":30,"offset":710},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":25,"column":1,"offset":712},"end":{"line":26,"column":1,"offset":856},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":26,"column":1,"offset":856},"end":{"line":26,"column":5,"offset":860},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":26,"column":5,"offset":860},"end":{"line":26,"column":16,"offset":871},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":26,"column":16,"offset":871},"end":{"line":26,"column":20,"offset":875},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":26,"column":20,"offset":875},"end":{"line":28,"column":1,"offset":1019},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":1,"offset":1019},"end":{"line":28,"column":5,"offset":1023},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":28,"column":5,"offset":1023},"end":{"line":28,"column":16,"offset":1034},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":16,"offset":1034},"end":{"line":28,"column":20,"offset":1038},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":28,"column":20,"offset":1038},"end":{"line":29,"column":45,"offset":1083},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":29,"column":45,"offset":1083},"end":{"line":29,"column":49,"offset":1087},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":29,"column":49,"offset":1087},"end":{"line":29,"column":65,"offset":1103},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":29,"column":65,"offset":1103},"end":{"line":29,"column":69,"offset":1107},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":29,"column":69,"offset":1107},"end":{"line":31,"column":1,"offset":1150},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1150},"end":{"line":31,"column":5,"offset":1154},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":31,"column":5,"offset":1154},"end":{"line":31,"column":22,"offset":1171},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":22,"offset":1171},"end":{"line":31,"column":26,"offset":1175},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":26,"offset":1175},"end":{"line":32,"column":1,"offset":1176},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1176},"end":{"line":32,"column":5,"offset":1180},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":32,"column":5,"offset":1180},"end":{"line":34,"column":1,"offset":1298},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1298},"end":{"line":34,"column":5,"offset":1302},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":34,"column":5,"offset":1302},"end":{"line":36,"column":1,"offset":1423},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":36,"column":1,"offset":1423},"end":{"line":36,"column":12,"offset":1434},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":36,"column":12,"offset":1434},"end":{"line":36,"column":68,"offset":1490},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":36,"column":68,"offset":1490},"end":{"line":36,"column":79,"offset":1501},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":36,"column":79,"offset":1501},"end":{"line":36,"column":106,"offset":1528},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":36,"column":106,"offset":1528},"end":{"line":36,"column":109,"offset":1531},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":36,"column":109,"offset":1531},"end":{"line":36,"column":189,"offset":1611},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":36,"column":189,"offset":1611},"end":{"line":36,"column":192,"offset":1614},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":36,"column":192,"offset":1614},"end":{"line":36,"column":202,"offset":1624},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":712},"end":{"line":36,"column":202,"offset":1624},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":38,"column":8,"offset":1633},"end":{"line":38,"column":14,"offset":1639},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1626},"end":{"line":38,"column":14,"offset":1639},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":39,"column":1,"offset":1640},"end":{"line":39,"column":9,"offset":1648},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":39,"column":9,"offset":1648},"end":{"line":39,"column":73,"offset":1712},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1640},"end":{"line":39,"column":73,"offset":1712},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":40,"column":1,"offset":1713},"end":{"line":43,"column":4,"offset":1752},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1753},"end":{"line":44,"column":5,"offset":1757},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":46,"column":1,"offset":1759},"end":{"line":46,"column":72,"offset":1830},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":46,"column":72,"offset":1830},"end":{"line":46,"column":80,"offset":1838},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":46,"column":80,"offset":1838},"end":{"line":47,"column":1,"offset":1862},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":47,"column":1,"offset":1862},"end":{"line":47,"column":5,"offset":1866},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":47,"column":5,"offset":1866},"end":{"line":48,"column":1,"offset":1867},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1867},"end":{"line":48,"column":5,"offset":1871},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":48,"column":5,"offset":1871},"end":{"line":49,"column":184,"offset":2055},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":49,"column":184,"offset":2055},"end":{"line":49,"column":187,"offset":2058},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":49,"column":187,"offset":2058},"end":{"line":50,"column":1,"offset":2061},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":50,"column":1,"offset":2061},"end":{"line":50,"column":5,"offset":2065},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":50,"column":5,"offset":2065},"end":{"line":51,"column":1,"offset":2066},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":51,"column":1,"offset":2066},"end":{"line":51,"column":5,"offset":2070},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":51,"column":5,"offset":2070},"end":{"line":52,"column":27,"offset":2097},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":52,"column":27,"offset":2097},"end":{"line":52,"column":35,"offset":2105},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":52,"column":35,"offset":2105},"end":{"line":52,"column":86,"offset":2156},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":52,"column":86,"offset":2156},"end":{"line":52,"column":95,"offset":2165},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":52,"column":95,"offset":2165},"end":{"line":52,"column":97,"offset":2167},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":1759},"end":{"line":52,"column":97,"offset":2167},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":54,"column":1,"offset":2169},"end":{"line":54,"column":6,"offset":2174},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":56,"column":1,"offset":2176},"end":{"line":57,"column":1,"offset":2220},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":57,"column":1,"offset":2220},"end":{"line":57,"column":5,"offset":2224},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":57,"column":5,"offset":2224},"end":{"line":58,"column":1,"offset":2225},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":58,"column":1,"offset":2225},"end":{"line":58,"column":22,"offset":2246},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":58,"column":22,"offset":2246},"end":{"line":59,"column":1,"offset":2247},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":59,"column":1,"offset":2247},"end":{"line":59,"column":5,"offset":2251},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":2176},"end":{"line":59,"column":5,"offset":2251},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":61,"column":1,"offset":2253},"end":{"line":61,"column":152,"offset":2404},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":2253},"end":{"line":61,"column":152,"offset":2404},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":63,"column":8,"offset":2413},"end":{"line":63,"column":20,"offset":2425},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":2406},"end":{"line":63,"column":20,"offset":2425},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":65,"column":1,"offset":2427},"end":{"line":65,"column":56,"offset":2482},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":2427},"end":{"line":65,"column":56,"offset":2482},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":66,"column":1,"offset":2483},"end":{"line":71,"column":4,"offset":2574},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":72,"column":1,"offset":2575},"end":{"line":72,"column":5,"offset":2579},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":74,"column":1,"offset":2581},"end":{"line":74,"column":37,"offset":2617},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":74,"column":37,"offset":2617},"end":{"line":74,"column":41,"offset":2621},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":74,"column":41,"offset":2621},"end":{"line":75,"column":1,"offset":2638},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2638},"end":{"line":75,"column":5,"offset":2642},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":75,"column":5,"offset":2642},"end":{"line":76,"column":1,"offset":2643},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":76,"column":1,"offset":2643},"end":{"line":76,"column":5,"offset":2647},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":76,"column":5,"offset":2647},"end":{"line":77,"column":66,"offset":2713},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":77,"column":66,"offset":2713},"end":{"line":77,"column":89,"offset":2736},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":77,"column":89,"offset":2736},"end":{"line":78,"column":1,"offset":2776},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2776},"end":{"line":78,"column":5,"offset":2780},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":78,"column":5,"offset":2780},"end":{"line":79,"column":1,"offset":2781},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":79,"column":1,"offset":2781},"end":{"line":79,"column":5,"offset":2785},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":79,"column":5,"offset":2785},"end":{"line":80,"column":21,"offset":2806},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":80,"column":21,"offset":2806},"end":{"line":80,"column":25,"offset":2810},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":80,"column":25,"offset":2810},"end":{"line":81,"column":1,"offset":2864},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":81,"column":1,"offset":2864},"end":{"line":81,"column":5,"offset":2868},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":81,"column":5,"offset":2868},"end":{"line":82,"column":1,"offset":2869},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":82,"column":1,"offset":2869},"end":{"line":82,"column":5,"offset":2873},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":82,"column":5,"offset":2873},"end":{"line":83,"column":21,"offset":2894},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":83,"column":21,"offset":2894},"end":{"line":83,"column":25,"offset":2898},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":83,"column":25,"offset":2898},"end":{"line":84,"column":1,"offset":2953},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":84,"column":1,"offset":2953},"end":{"line":84,"column":5,"offset":2957},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":84,"column":5,"offset":2957},"end":{"line":85,"column":1,"offset":2958},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":85,"column":1,"offset":2958},"end":{"line":85,"column":5,"offset":2962},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":85,"column":5,"offset":2962},"end":{"line":86,"column":58,"offset":3020},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":86,"column":58,"offset":3020},"end":{"line":86,"column":61,"offset":3023},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":86,"column":61,"offset":3023},"end":{"line":86,"column":145,"offset":3107},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":86,"column":145,"offset":3107},"end":{"line":86,"column":153,"offset":3115},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":86,"column":153,"offset":3115},"end":{"line":86,"column":178,"offset":3140},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":2581},"end":{"line":86,"column":178,"offset":3140},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":88,"column":7,"offset":3148},"end":{"line":88,"column":10,"offset":3151},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":3142},"end":{"line":88,"column":10,"offset":3151},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":90,"column":8,"offset":3160},"end":{"line":90,"column":17,"offset":3169},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":3153},"end":{"line":90,"column":17,"offset":3169},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":91,"column":1,"offset":3170},"end":{"line":102,"column":4,"offset":3369},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":103,"column":1,"offset":3370},"end":{"line":103,"column":5,"offset":3374},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":105,"column":1,"offset":3376},"end":{"line":106,"column":1,"offset":3592},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":106,"column":1,"offset":3592},"end":{"line":106,"column":5,"offset":3596},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":106,"column":5,"offset":3596},"end":{"line":107,"column":1,"offset":3597},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":107,"column":1,"offset":3597},"end":{"line":107,"column":5,"offset":3601},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":107,"column":5,"offset":3601},"end":{"line":108,"column":72,"offset":3673},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":108,"column":72,"offset":3673},"end":{"line":108,"column":81,"offset":3682},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":108,"column":81,"offset":3682},"end":{"line":109,"column":1,"offset":3701},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":109,"column":1,"offset":3701},"end":{"line":109,"column":5,"offset":3705},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":109,"column":5,"offset":3705},"end":{"line":110,"column":1,"offset":3706},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":110,"column":1,"offset":3706},"end":{"line":110,"column":5,"offset":3710},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":110,"column":5,"offset":3710},"end":{"line":111,"column":10,"offset":3720},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":111,"column":10,"offset":3720},"end":{"line":111,"column":16,"offset":3726},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":111,"column":16,"offset":3726},"end":{"line":111,"column":34,"offset":3744},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":111,"column":34,"offset":3744},"end":{"line":111,"column":42,"offset":3752},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":111,"column":42,"offset":3752},"end":{"line":112,"column":24,"offset":3777},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":112,"column":24,"offset":3777},"end":{"line":112,"column":33,"offset":3786},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":112,"column":33,"offset":3786},"end":{"line":112,"column":107,"offset":3860},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":112,"column":107,"offset":3860},"end":{"line":112,"column":116,"offset":3869},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":112,"column":116,"offset":3869},"end":{"line":112,"column":134,"offset":3887},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":112,"column":134,"offset":3887},"end":{"line":112,"column":137,"offset":3890},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":112,"column":137,"offset":3890},"end":{"line":112,"column":161,"offset":3914},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":112,"column":161,"offset":3914},"end":{"line":112,"column":167,"offset":3920},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":112,"column":167,"offset":3920},"end":{"line":112,"column":192,"offset":3945},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":112,"column":192,"offset":3945},"end":{"line":112,"column":200,"offset":3953},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":112,"column":200,"offset":3953},"end":{"line":112,"column":218,"offset":3971},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":112,"column":218,"offset":3971},"end":{"line":112,"column":224,"offset":3977},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":112,"column":224,"offset":3977},"end":{"line":112,"column":245,"offset":3998},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":112,"column":245,"offset":3998},"end":{"line":112,"column":252,"offset":4005},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":112,"column":252,"offset":4005},"end":{"line":112,"column":257,"offset":4010},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":112,"column":257,"offset":4010},"end":{"line":112,"column":260,"offset":4013},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":112,"column":260,"offset":4013},"end":{"line":112,"column":285,"offset":4038},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":112,"column":285,"offset":4038},"end":{"line":112,"column":291,"offset":4044},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":112,"column":291,"offset":4044},"end":{"line":113,"column":96,"offset":4170},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":113,"column":96,"offset":4170},"end":{"line":113,"column":111,"offset":4185},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":113,"column":111,"offset":4185},"end":{"line":113,"column":182,"offset":4256},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":3376},"end":{"line":113,"column":182,"offset":4256},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":115,"column":8,"offset":4265},"end":{"line":115,"column":19,"offset":4276},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":4258},"end":{"line":115,"column":19,"offset":4276},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":116,"column":1,"offset":4277},"end":{"line":116,"column":14,"offset":4290},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":4277},"end":{"line":116,"column":14,"offset":4290},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":117,"column":1,"offset":4291},"end":{"line":132,"column":4,"offset":4706},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":133,"column":1,"offset":4707},"end":{"line":133,"column":5,"offset":4711},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":135,"column":1,"offset":4713},"end":{"line":135,"column":141,"offset":4853},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":4713},"end":{"line":135,"column":141,"offset":4853},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":137,"column":8,"offset":4862},"end":{"line":137,"column":30,"offset":4884},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":4855},"end":{"line":137,"column":30,"offset":4884},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":138,"column":1,"offset":4885},"end":{"line":138,"column":199,"offset":5083},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":4885},"end":{"line":138,"column":199,"offset":5083},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":140,"column":8,"offset":5092},"end":{"line":140,"column":30,"offset":5114},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":5085},"end":{"line":140,"column":30,"offset":5114},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":142,"column":1,"offset":5116},"end":{"line":143,"column":1,"offset":5191},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":143,"column":1,"offset":5191},"end":{"line":143,"column":5,"offset":5195},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":143,"column":5,"offset":5195},"end":{"line":144,"column":1,"offset":5196},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":144,"column":1,"offset":5196},"end":{"line":144,"column":5,"offset":5200},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":144,"column":5,"offset":5200},"end":{"line":146,"column":1,"offset":5262},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":146,"column":1,"offset":5262},"end":{"line":146,"column":5,"offset":5266},"indent":[]}},{"type":"break","position":{"start":{"line":146,"column":5,"offset":5266},"end":{"line":147,"column":1,"offset":5269},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":147,"column":1,"offset":5269},"end":{"line":147,"column":11,"offset":5279},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":147,"column":11,"offset":5279},"end":{"line":147,"column":19,"offset":5287},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":147,"column":19,"offset":5287},"end":{"line":147,"column":24,"offset":5292},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":147,"column":24,"offset":5292},"end":{"line":147,"column":34,"offset":5302},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":147,"column":34,"offset":5302},"end":{"line":148,"column":1,"offset":5351},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":148,"column":1,"offset":5351},"end":{"line":148,"column":5,"offset":5355},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":5116},"end":{"line":148,"column":5,"offset":5355},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":150,"column":8,"offset":5364},"end":{"line":150,"column":12,"offset":5368},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":5357},"end":{"line":150,"column":12,"offset":5368},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":151,"column":1,"offset":5369},"end":{"line":156,"column":4,"offset":5480},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":157,"column":1,"offset":5481},"end":{"line":158,"column":5,"offset":5490},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":160,"column":1,"offset":5492},"end":{"line":160,"column":7,"offset":5498},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":160,"column":7,"offset":5498},"end":{"line":162,"column":1,"offset":5580},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":162,"column":1,"offset":5580},"end":{"line":162,"column":5,"offset":5584},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":162,"column":5,"offset":5584},"end":{"line":163,"column":1,"offset":5585},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":163,"column":1,"offset":5585},"end":{"line":163,"column":5,"offset":5589},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":163,"column":5,"offset":5589},"end":{"line":164,"column":10,"offset":5599},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":164,"column":10,"offset":5599},"end":{"line":164,"column":14,"offset":5603},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":164,"column":14,"offset":5603},"end":{"line":164,"column":22,"offset":5611},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":164,"column":22,"offset":5611},"end":{"line":164,"column":30,"offset":5619},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":164,"column":30,"offset":5619},"end":{"line":164,"column":50,"offset":5639},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":164,"column":50,"offset":5639},"end":{"line":164,"column":53,"offset":5642},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":164,"column":53,"offset":5642},"end":{"line":164,"column":90,"offset":5679},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":164,"column":90,"offset":5679},"end":{"line":164,"column":96,"offset":5685},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":164,"column":96,"offset":5685},"end":{"line":165,"column":1,"offset":5688},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":165,"column":1,"offset":5688},"end":{"line":165,"column":5,"offset":5692},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":165,"column":5,"offset":5692},"end":{"line":166,"column":1,"offset":5693},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":166,"column":1,"offset":5693},"end":{"line":166,"column":5,"offset":5697},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":166,"column":5,"offset":5697},"end":{"line":167,"column":14,"offset":5711},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":167,"column":14,"offset":5711},"end":{"line":167,"column":18,"offset":5715},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":167,"column":18,"offset":5715},"end":{"line":167,"column":90,"offset":5787},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":167,"column":90,"offset":5787},"end":{"line":167,"column":94,"offset":5791},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":167,"column":94,"offset":5791},"end":{"line":167,"column":125,"offset":5822},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":167,"column":125,"offset":5822},"end":{"line":167,"column":131,"offset":5828},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":167,"column":131,"offset":5828},"end":{"line":168,"column":1,"offset":5843},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":168,"column":1,"offset":5843},"end":{"line":168,"column":5,"offset":5847},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":168,"column":5,"offset":5847},"end":{"line":169,"column":1,"offset":5848},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":169,"column":1,"offset":5848},"end":{"line":169,"column":5,"offset":5852},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":169,"column":5,"offset":5852},"end":{"line":170,"column":14,"offset":5866},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":170,"column":14,"offset":5866},"end":{"line":170,"column":18,"offset":5870},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":170,"column":18,"offset":5870},"end":{"line":170,"column":37,"offset":5889},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":170,"column":37,"offset":5889},"end":{"line":170,"column":40,"offset":5892},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":170,"column":40,"offset":5892},"end":{"line":170,"column":77,"offset":5929},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":170,"column":77,"offset":5929},"end":{"line":170,"column":81,"offset":5933},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":170,"column":81,"offset":5933},"end":{"line":170,"column":99,"offset":5951},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":170,"column":99,"offset":5951},"end":{"line":170,"column":102,"offset":5954},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":170,"column":102,"offset":5954},"end":{"line":170,"column":133,"offset":5985},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":170,"column":133,"offset":5985},"end":{"line":170,"column":139,"offset":5991},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":170,"column":139,"offset":5991},"end":{"line":170,"column":167,"offset":6019},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":170,"column":167,"offset":6019},"end":{"line":170,"column":171,"offset":6023},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":170,"column":171,"offset":6023},"end":{"line":171,"column":1,"offset":6025},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":171,"column":1,"offset":6025},"end":{"line":171,"column":5,"offset":6029},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":171,"column":5,"offset":6029},"end":{"line":172,"column":1,"offset":6030},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":172,"column":1,"offset":6030},"end":{"line":172,"column":5,"offset":6034},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":172,"column":5,"offset":6034},"end":{"line":174,"column":1,"offset":6054},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":174,"column":1,"offset":6054},"end":{"line":174,"column":5,"offset":6058},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":174,"column":5,"offset":6058},"end":{"line":175,"column":6,"offset":6064},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":175,"column":6,"offset":6064},"end":{"line":175,"column":12,"offset":6070},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":175,"column":12,"offset":6070},"end":{"line":175,"column":30,"offset":6088},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":175,"column":30,"offset":6088},"end":{"line":175,"column":36,"offset":6094},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":175,"column":36,"offset":6094},"end":{"line":175,"column":62,"offset":6120},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":175,"column":62,"offset":6120},"end":{"line":175,"column":75,"offset":6133},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":175,"column":75,"offset":6133},"end":{"line":175,"column":159,"offset":6217},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":5492},"end":{"line":175,"column":159,"offset":6217},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":177,"column":8,"offset":6226},"end":{"line":177,"column":41,"offset":6259},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":6219},"end":{"line":177,"column":41,"offset":6259},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":178,"column":1,"offset":6260},"end":{"line":183,"column":4,"offset":6335},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":184,"column":1,"offset":6336},"end":{"line":185,"column":1,"offset":6355},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":185,"column":1,"offset":6355},"end":{"line":185,"column":5,"offset":6359},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":185,"column":5,"offset":6359},"end":{"line":187,"column":5,"offset":6497},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":187,"column":5,"offset":6497},"end":{"line":187,"column":9,"offset":6501},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":187,"column":9,"offset":6501},"end":{"line":188,"column":5,"offset":6506},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":188,"column":5,"offset":6506},"end":{"line":188,"column":27,"offset":6528},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":188,"column":27,"offset":6528},"end":{"line":189,"column":5,"offset":6533},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":189,"column":5,"offset":6533},"end":{"line":189,"column":9,"offset":6537},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":189,"column":9,"offset":6537},"end":{"line":190,"column":5,"offset":6542},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":190,"column":5,"offset":6542},"end":{"line":190,"column":12,"offset":6549},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":190,"column":12,"offset":6549},"end":{"line":190,"column":17,"offset":6554},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":190,"column":17,"offset":6554},"end":{"line":190,"column":25,"offset":6562},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":190,"column":25,"offset":6562},"end":{"line":190,"column":63,"offset":6600},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":190,"column":63,"offset":6600},"end":{"line":190,"column":66,"offset":6603},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":190,"column":66,"offset":6603},"end":{"line":190,"column":86,"offset":6623},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":190,"column":86,"offset":6623},"end":{"line":190,"column":89,"offset":6626},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":190,"column":89,"offset":6626},"end":{"line":190,"column":110,"offset":6647},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":190,"column":110,"offset":6647},"end":{"line":190,"column":119,"offset":6656},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":190,"column":119,"offset":6656},"end":{"line":191,"column":1,"offset":6658},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":191,"column":1,"offset":6658},"end":{"line":191,"column":5,"offset":6662},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":191,"column":5,"offset":6662},"end":{"line":193,"column":1,"offset":6678},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":193,"column":1,"offset":6678},"end":{"line":193,"column":5,"offset":6682},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":193,"column":5,"offset":6682},"end":{"line":195,"column":5,"offset":6789},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":195,"column":5,"offset":6789},"end":{"line":195,"column":9,"offset":6793},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":195,"column":9,"offset":6793},"end":{"line":196,"column":1,"offset":6794},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":196,"column":1,"offset":6794},"end":{"line":196,"column":23,"offset":6816},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":196,"column":23,"offset":6816},"end":{"line":196,"column":35,"offset":6828},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":196,"column":35,"offset":6828},"end":{"line":196,"column":61,"offset":6854},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":196,"column":61,"offset":6854},"end":{"line":197,"column":1,"offset":6855},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":197,"column":1,"offset":6855},"end":{"line":197,"column":5,"offset":6859},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":197,"column":5,"offset":6859},"end":{"line":198,"column":5,"offset":6864},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":198,"column":5,"offset":6864},"end":{"line":198,"column":8,"offset":6867},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":198,"column":8,"offset":6867},"end":{"line":198,"column":58,"offset":6917},"indent":[]}}],"position":{"start":{"line":184,"column":1,"offset":6336},"end":{"line":198,"column":58,"offset":6917},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":200,"column":1,"offset":6919},"end":{"line":201,"column":1,"offset":6937},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":201,"column":1,"offset":6937},"end":{"line":201,"column":5,"offset":6941},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":6919},"end":{"line":201,"column":5,"offset":6941},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":202,"column":1,"offset":6942},"end":{"line":204,"column":4,"offset":6972},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":205,"column":1,"offset":6973},"end":{"line":205,"column":13,"offset":6985},"indent":[]}}],"position":{"start":{"line":205,"column":1,"offset":6973},"end":{"line":205,"column":13,"offset":6985},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":206,"column":1,"offset":6986},"end":{"line":212,"column":4,"offset":7065},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":213,"column":1,"offset":7066},"end":{"line":213,"column":8,"offset":7073},"indent":[]}}],"position":{"start":{"line":213,"column":1,"offset":7066},"end":{"line":213,"column":8,"offset":7073},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":214,"column":1,"offset":7074},"end":{"line":221,"column":4,"offset":7198},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":222,"column":1,"offset":7199},"end":{"line":223,"column":5,"offset":7208},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":225,"column":1,"offset":7210},"end":{"line":225,"column":11,"offset":7220},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":225,"column":11,"offset":7220},"end":{"line":225,"column":24,"offset":7233},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":225,"column":24,"offset":7233},"end":{"line":225,"column":107,"offset":7316},"indent":[]}}],"position":{"start":{"line":225,"column":1,"offset":7210},"end":{"line":225,"column":107,"offset":7316},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":227,"column":7,"offset":7324},"end":{"line":227,"column":10,"offset":7327},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":7318},"end":{"line":227,"column":10,"offset":7327},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":228,"column":7,"offset":7334},"end":{"line":228,"column":10,"offset":7337},"indent":[]}}],"position":{"start":{"line":228,"column":1,"offset":7328},"end":{"line":228,"column":10,"offset":7337},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":230,"column":6,"offset":7344},"end":{"line":230,"column":10,"offset":7348},"indent":[]}}],"position":{"start":{"line":230,"column":1,"offset":7339},"end":{"line":230,"column":10,"offset":7348},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":231,"column":7,"offset":7355},"end":{"line":231,"column":13,"offset":7361},"indent":[]}}],"position":{"start":{"line":231,"column":1,"offset":7349},"end":{"line":231,"column":13,"offset":7361},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":232,"column":1,"offset":7362},"end":{"line":232,"column":49,"offset":7410},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":232,"column":49,"offset":7410},"end":{"line":232,"column":57,"offset":7418},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":232,"column":57,"offset":7418},"end":{"line":232,"column":133,"offset":7494},"indent":[]}}],"position":{"start":{"line":232,"column":1,"offset":7362},"end":{"line":232,"column":133,"offset":7494},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":233,"column":1,"offset":7495},"end":{"line":243,"column":4,"offset":7690},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":244,"column":1,"offset":7691},"end":{"line":244,"column":5,"offset":7695},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":247,"column":1,"offset":7698},"end":{"line":248,"column":1,"offset":7780},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":248,"column":1,"offset":7780},"end":{"line":248,"column":5,"offset":7784},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":248,"column":5,"offset":7784},"end":{"line":249,"column":1,"offset":7785},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":249,"column":1,"offset":7785},"end":{"line":249,"column":5,"offset":7789},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":249,"column":5,"offset":7789},"end":{"line":250,"column":26,"offset":7815},"indent":[1]}}],"position":{"start":{"line":247,"column":1,"offset":7698},"end":{"line":250,"column":26,"offset":7815},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":251,"column":1,"offset":7816},"end":{"line":256,"column":4,"offset":7944},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":257,"column":1,"offset":7945},"end":{"line":257,"column":14,"offset":7958},"indent":[]}}],"position":{"start":{"line":257,"column":1,"offset":7945},"end":{"line":257,"column":14,"offset":7958},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":259,"column":1,"offset":7960},"end":{"line":272,"column":4,"offset":8242},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":274,"column":1,"offset":8244},"end":{"line":275,"column":5,"offset":8253},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":278,"column":7,"offset":8262},"end":{"line":278,"column":13,"offset":8268},"indent":[]}}],"position":{"start":{"line":278,"column":1,"offset":8256},"end":{"line":278,"column":13,"offset":8268},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":278,"column":13,"offset":8268}}}}