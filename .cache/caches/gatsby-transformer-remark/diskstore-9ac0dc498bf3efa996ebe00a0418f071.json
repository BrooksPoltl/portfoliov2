{"expireTime":9007200842250966000,"key":"transformer-remark-markdown-html-ast-f495d9be2c6708d34abc7524e19fbea9-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833}}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847}}},{"type":"raw","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860}}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865}}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879}}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884}}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895}}},{"type":"raw","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900}}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901}}},{"type":"raw","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906}}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911}}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912}}},{"type":"raw","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916}}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043}}},{"type":"raw","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047}}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048}}},{"type":"raw","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052}}},{"type":"text","value":"\nEnvironment: The name-object pairs the interpreter keeps in memory.\n","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":34,"column":1,"offset":1121}}},{"type":"raw","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1121},"end":{"line":34,"column":5,"offset":1125}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":34,"column":5,"offset":1125}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Procedures can be used to build ontop of other procedures:\n","position":{"start":{"line":36,"column":1,"offset":1127},"end":{"line":37,"column":1,"offset":1186}}},{"type":"raw","value":"<br>","position":{"start":{"line":37,"column":1,"offset":1186},"end":{"line":37,"column":5,"offset":1190}}}],"position":{"start":{"line":36,"column":1,"offset":1127},"end":{"line":37,"column":5,"offset":1190}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (sum-of-squares x y)\n(+ (square x) (square y))</code></pre></div>","position":{"start":{"line":38,"column":1,"offset":1191},"end":{"line":41,"column":4,"offset":1253}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":43,"column":1,"offset":1255},"end":{"line":43,"column":5,"offset":1259}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":45,"column":7,"offset":1267},"end":{"line":45,"column":10,"offset":1270}}}],"position":{"start":{"line":45,"column":1,"offset":1261},"end":{"line":45,"column":10,"offset":1270}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":46,"column":7,"offset":1277},"end":{"line":46,"column":10,"offset":1280}}}],"position":{"start":{"line":46,"column":1,"offset":1271},"end":{"line":46,"column":10,"offset":1280}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":48,"column":6,"offset":1287},"end":{"line":48,"column":14,"offset":1295}}}],"position":{"start":{"line":48,"column":1,"offset":1282},"end":{"line":48,"column":14,"offset":1295}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":49,"column":7,"offset":1302},"end":{"line":49,"column":10,"offset":1305}}}],"position":{"start":{"line":49,"column":1,"offset":1296},"end":{"line":49,"column":10,"offset":1305}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":51,"column":8,"offset":1314},"end":{"line":51,"column":30,"offset":1336}}}],"position":{"start":{"line":51,"column":1,"offset":1307},"end":{"line":51,"column":30,"offset":1336}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":53,"column":1,"offset":1338},"end":{"line":54,"column":1,"offset":1482}}},{"type":"raw","value":"<br>","position":{"start":{"line":54,"column":1,"offset":1482},"end":{"line":54,"column":5,"offset":1486}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":54,"column":5,"offset":1486},"end":{"line":54,"column":16,"offset":1497}}},{"type":"raw","value":"<br>","position":{"start":{"line":54,"column":16,"offset":1497},"end":{"line":54,"column":20,"offset":1501}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":54,"column":20,"offset":1501},"end":{"line":56,"column":1,"offset":1645}}},{"type":"raw","value":"<br>","position":{"start":{"line":56,"column":1,"offset":1645},"end":{"line":56,"column":5,"offset":1649}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":56,"column":5,"offset":1649},"end":{"line":56,"column":16,"offset":1660}}},{"type":"raw","value":"<br>","position":{"start":{"line":56,"column":16,"offset":1660},"end":{"line":56,"column":20,"offset":1664}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":56,"column":20,"offset":1664},"end":{"line":57,"column":45,"offset":1709}}},{"type":"raw","value":"<br>","position":{"start":{"line":57,"column":45,"offset":1709},"end":{"line":57,"column":49,"offset":1713}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":57,"column":49,"offset":1713},"end":{"line":57,"column":65,"offset":1729}}},{"type":"raw","value":"<br>","position":{"start":{"line":57,"column":65,"offset":1729},"end":{"line":57,"column":69,"offset":1733}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":57,"column":69,"offset":1733},"end":{"line":59,"column":1,"offset":1776}}},{"type":"raw","value":"<br>","position":{"start":{"line":59,"column":1,"offset":1776},"end":{"line":59,"column":5,"offset":1780}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":59,"column":5,"offset":1780},"end":{"line":59,"column":22,"offset":1797}}},{"type":"raw","value":"<br>","position":{"start":{"line":59,"column":22,"offset":1797},"end":{"line":59,"column":26,"offset":1801}}},{"type":"text","value":"\n","position":{"start":{"line":59,"column":26,"offset":1801},"end":{"line":60,"column":1,"offset":1802}}},{"type":"raw","value":"<br>","position":{"start":{"line":60,"column":1,"offset":1802},"end":{"line":60,"column":5,"offset":1806}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":60,"column":5,"offset":1806},"end":{"line":62,"column":1,"offset":1924}}},{"type":"raw","value":"<br>","position":{"start":{"line":62,"column":1,"offset":1924},"end":{"line":62,"column":5,"offset":1928}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":62,"column":5,"offset":1928},"end":{"line":64,"column":1,"offset":2049}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":64,"column":1,"offset":2049},"end":{"line":64,"column":12,"offset":2060}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":64,"column":12,"offset":2060},"end":{"line":64,"column":68,"offset":2116}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":64,"column":68,"offset":2116},"end":{"line":64,"column":79,"offset":2127}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":64,"column":79,"offset":2127},"end":{"line":64,"column":106,"offset":2154}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":64,"column":106,"offset":2154},"end":{"line":64,"column":109,"offset":2157}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":64,"column":109,"offset":2157},"end":{"line":64,"column":189,"offset":2237}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":64,"column":189,"offset":2237},"end":{"line":64,"column":192,"offset":2240}}},{"type":"text","value":" to get 3.","position":{"start":{"line":64,"column":192,"offset":2240},"end":{"line":64,"column":202,"offset":2250}}}],"position":{"start":{"line":53,"column":1,"offset":1338},"end":{"line":64,"column":202,"offset":2250}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":66,"column":8,"offset":2259},"end":{"line":66,"column":14,"offset":2265}}}],"position":{"start":{"line":66,"column":1,"offset":2252},"end":{"line":66,"column":14,"offset":2265}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":67,"column":1,"offset":2266},"end":{"line":67,"column":9,"offset":2274}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":67,"column":9,"offset":2274},"end":{"line":67,"column":73,"offset":2338}}}],"position":{"start":{"line":67,"column":1,"offset":2266},"end":{"line":67,"column":73,"offset":2338}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":68,"column":1,"offset":2339},"end":{"line":71,"column":4,"offset":2378}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":72,"column":1,"offset":2379},"end":{"line":72,"column":5,"offset":2383}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":74,"column":1,"offset":2385},"end":{"line":74,"column":72,"offset":2456}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":74,"column":72,"offset":2456},"end":{"line":74,"column":80,"offset":2464}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":74,"column":80,"offset":2464},"end":{"line":75,"column":1,"offset":2488}}},{"type":"raw","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2488},"end":{"line":75,"column":5,"offset":2492}}},{"type":"text","value":"\n","position":{"start":{"line":75,"column":5,"offset":2492},"end":{"line":76,"column":1,"offset":2493}}},{"type":"raw","value":"<br>","position":{"start":{"line":76,"column":1,"offset":2493},"end":{"line":76,"column":5,"offset":2497}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":76,"column":5,"offset":2497},"end":{"line":77,"column":184,"offset":2681}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":77,"column":184,"offset":2681},"end":{"line":77,"column":187,"offset":2684}}},{"type":"text","value":".\n","position":{"start":{"line":77,"column":187,"offset":2684},"end":{"line":78,"column":1,"offset":2687}}},{"type":"raw","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2687},"end":{"line":78,"column":5,"offset":2691}}},{"type":"text","value":"\n","position":{"start":{"line":78,"column":5,"offset":2691},"end":{"line":79,"column":1,"offset":2692}}},{"type":"raw","value":"<br>","position":{"start":{"line":79,"column":1,"offset":2692},"end":{"line":79,"column":5,"offset":2696}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":79,"column":5,"offset":2696},"end":{"line":80,"column":27,"offset":2723}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":80,"column":27,"offset":2723},"end":{"line":80,"column":35,"offset":2731}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":80,"column":35,"offset":2731},"end":{"line":80,"column":86,"offset":2782}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":80,"column":86,"offset":2782},"end":{"line":80,"column":95,"offset":2791}}},{"type":"text","value":". ","position":{"start":{"line":80,"column":95,"offset":2791},"end":{"line":80,"column":97,"offset":2793}}}],"position":{"start":{"line":74,"column":1,"offset":2385},"end":{"line":80,"column":97,"offset":2793}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":82,"column":1,"offset":2795},"end":{"line":82,"column":6,"offset":2800}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":84,"column":1,"offset":2802},"end":{"line":85,"column":1,"offset":2846}}},{"type":"raw","value":"<br>","position":{"start":{"line":85,"column":1,"offset":2846},"end":{"line":85,"column":5,"offset":2850}}},{"type":"text","value":"\n","position":{"start":{"line":85,"column":5,"offset":2850},"end":{"line":86,"column":1,"offset":2851}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":86,"column":1,"offset":2851},"end":{"line":86,"column":22,"offset":2872}}},{"type":"text","value":"\n","position":{"start":{"line":86,"column":22,"offset":2872},"end":{"line":87,"column":1,"offset":2873}}},{"type":"raw","value":"<br>","position":{"start":{"line":87,"column":1,"offset":2873},"end":{"line":87,"column":5,"offset":2877}}}],"position":{"start":{"line":84,"column":1,"offset":2802},"end":{"line":87,"column":5,"offset":2877}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":89,"column":1,"offset":2879},"end":{"line":89,"column":152,"offset":3030}}}],"position":{"start":{"line":89,"column":1,"offset":2879},"end":{"line":89,"column":152,"offset":3030}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":91,"column":8,"offset":3039},"end":{"line":91,"column":20,"offset":3051}}}],"position":{"start":{"line":91,"column":1,"offset":3032},"end":{"line":91,"column":20,"offset":3051}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":93,"column":1,"offset":3053},"end":{"line":93,"column":56,"offset":3108}}}],"position":{"start":{"line":93,"column":1,"offset":3053},"end":{"line":93,"column":56,"offset":3108}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":94,"column":1,"offset":3109},"end":{"line":99,"column":4,"offset":3200}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":100,"column":1,"offset":3201},"end":{"line":100,"column":5,"offset":3205}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":102,"column":1,"offset":3207},"end":{"line":102,"column":37,"offset":3243}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":102,"column":37,"offset":3243},"end":{"line":102,"column":41,"offset":3247}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":102,"column":41,"offset":3247},"end":{"line":103,"column":1,"offset":3264}}},{"type":"raw","value":"<br>","position":{"start":{"line":103,"column":1,"offset":3264},"end":{"line":103,"column":5,"offset":3268}}},{"type":"text","value":"\n","position":{"start":{"line":103,"column":5,"offset":3268},"end":{"line":104,"column":1,"offset":3269}}},{"type":"raw","value":"<br>","position":{"start":{"line":104,"column":1,"offset":3269},"end":{"line":104,"column":5,"offset":3273}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":104,"column":5,"offset":3273},"end":{"line":105,"column":66,"offset":3339}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":105,"column":66,"offset":3339},"end":{"line":105,"column":89,"offset":3362}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":105,"column":89,"offset":3362},"end":{"line":106,"column":1,"offset":3402}}},{"type":"raw","value":"<br>","position":{"start":{"line":106,"column":1,"offset":3402},"end":{"line":106,"column":5,"offset":3406}}},{"type":"text","value":"\n","position":{"start":{"line":106,"column":5,"offset":3406},"end":{"line":107,"column":1,"offset":3407}}},{"type":"raw","value":"<br>","position":{"start":{"line":107,"column":1,"offset":3407},"end":{"line":107,"column":5,"offset":3411}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":107,"column":5,"offset":3411},"end":{"line":108,"column":21,"offset":3432}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":108,"column":21,"offset":3432},"end":{"line":108,"column":25,"offset":3436}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":108,"column":25,"offset":3436},"end":{"line":109,"column":1,"offset":3490}}},{"type":"raw","value":"<br>","position":{"start":{"line":109,"column":1,"offset":3490},"end":{"line":109,"column":5,"offset":3494}}},{"type":"text","value":"\n","position":{"start":{"line":109,"column":5,"offset":3494},"end":{"line":110,"column":1,"offset":3495}}},{"type":"raw","value":"<br>","position":{"start":{"line":110,"column":1,"offset":3495},"end":{"line":110,"column":5,"offset":3499}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":110,"column":5,"offset":3499},"end":{"line":111,"column":21,"offset":3520}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":111,"column":21,"offset":3520},"end":{"line":111,"column":25,"offset":3524}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":111,"column":25,"offset":3524},"end":{"line":112,"column":1,"offset":3579}}},{"type":"raw","value":"<br>","position":{"start":{"line":112,"column":1,"offset":3579},"end":{"line":112,"column":5,"offset":3583}}},{"type":"text","value":"\n","position":{"start":{"line":112,"column":5,"offset":3583},"end":{"line":113,"column":1,"offset":3584}}},{"type":"raw","value":"<br>","position":{"start":{"line":113,"column":1,"offset":3584},"end":{"line":113,"column":5,"offset":3588}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":113,"column":5,"offset":3588},"end":{"line":114,"column":58,"offset":3646}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":114,"column":58,"offset":3646},"end":{"line":114,"column":61,"offset":3649}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":114,"column":61,"offset":3649},"end":{"line":114,"column":145,"offset":3733}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":114,"column":145,"offset":3733},"end":{"line":114,"column":153,"offset":3741}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":114,"column":153,"offset":3741},"end":{"line":114,"column":178,"offset":3766}}}],"position":{"start":{"line":102,"column":1,"offset":3207},"end":{"line":114,"column":178,"offset":3766}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":116,"column":7,"offset":3774},"end":{"line":116,"column":10,"offset":3777}}}],"position":{"start":{"line":116,"column":1,"offset":3768},"end":{"line":116,"column":10,"offset":3777}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":118,"column":8,"offset":3786},"end":{"line":118,"column":17,"offset":3795}}}],"position":{"start":{"line":118,"column":1,"offset":3779},"end":{"line":118,"column":17,"offset":3795}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":119,"column":1,"offset":3796},"end":{"line":130,"column":4,"offset":3995}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":131,"column":1,"offset":3996},"end":{"line":131,"column":5,"offset":4000}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":133,"column":1,"offset":4002},"end":{"line":134,"column":1,"offset":4218}}},{"type":"raw","value":"<br>","position":{"start":{"line":134,"column":1,"offset":4218},"end":{"line":134,"column":5,"offset":4222}}},{"type":"text","value":"\n","position":{"start":{"line":134,"column":5,"offset":4222},"end":{"line":135,"column":1,"offset":4223}}},{"type":"raw","value":"<br>","position":{"start":{"line":135,"column":1,"offset":4223},"end":{"line":135,"column":5,"offset":4227}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":135,"column":5,"offset":4227},"end":{"line":136,"column":72,"offset":4299}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":136,"column":72,"offset":4299},"end":{"line":136,"column":81,"offset":4308}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":136,"column":81,"offset":4308},"end":{"line":137,"column":1,"offset":4327}}},{"type":"raw","value":"<br>","position":{"start":{"line":137,"column":1,"offset":4327},"end":{"line":137,"column":5,"offset":4331}}},{"type":"text","value":"\n","position":{"start":{"line":137,"column":5,"offset":4331},"end":{"line":138,"column":1,"offset":4332}}},{"type":"raw","value":"<br>","position":{"start":{"line":138,"column":1,"offset":4332},"end":{"line":138,"column":5,"offset":4336}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":138,"column":5,"offset":4336},"end":{"line":139,"column":10,"offset":4346}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":139,"column":10,"offset":4346},"end":{"line":139,"column":16,"offset":4352}}},{"type":"text","value":" gets called with ","position":{"start":{"line":139,"column":16,"offset":4352},"end":{"line":139,"column":34,"offset":4370}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":139,"column":34,"offset":4370},"end":{"line":139,"column":42,"offset":4378}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":139,"column":42,"offset":4378},"end":{"line":140,"column":24,"offset":4403}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":140,"column":24,"offset":4403},"end":{"line":140,"column":33,"offset":4412}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":140,"column":33,"offset":4412},"end":{"line":140,"column":107,"offset":4486}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":140,"column":107,"offset":4486},"end":{"line":140,"column":116,"offset":4495}}},{"type":"text","value":" is false because ","position":{"start":{"line":140,"column":116,"offset":4495},"end":{"line":140,"column":134,"offset":4513}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":140,"column":134,"offset":4513},"end":{"line":140,"column":137,"offset":4516}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":140,"column":137,"offset":4516},"end":{"line":140,"column":161,"offset":4540}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":140,"column":161,"offset":4540},"end":{"line":140,"column":167,"offset":4546}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":140,"column":167,"offset":4546},"end":{"line":140,"column":192,"offset":4571}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":140,"column":192,"offset":4571},"end":{"line":140,"column":200,"offset":4579}}},{"type":"text","value":". This is because ","position":{"start":{"line":140,"column":200,"offset":4579},"end":{"line":140,"column":218,"offset":4597}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":140,"column":218,"offset":4597},"end":{"line":140,"column":224,"offset":4603}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":140,"column":224,"offset":4603},"end":{"line":140,"column":245,"offset":4624}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":140,"column":245,"offset":4624},"end":{"line":140,"column":252,"offset":4631}}},{"type":"text","value":" and ","position":{"start":{"line":140,"column":252,"offset":4631},"end":{"line":140,"column":257,"offset":4636}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":140,"column":257,"offset":4636},"end":{"line":140,"column":260,"offset":4639}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":140,"column":260,"offset":4639},"end":{"line":140,"column":285,"offset":4664}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":140,"column":285,"offset":4664},"end":{"line":140,"column":291,"offset":4670}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":140,"column":291,"offset":4670},"end":{"line":141,"column":96,"offset":4796}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":141,"column":96,"offset":4796},"end":{"line":141,"column":111,"offset":4811}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":141,"column":111,"offset":4811},"end":{"line":141,"column":182,"offset":4882}}}],"position":{"start":{"line":133,"column":1,"offset":4002},"end":{"line":141,"column":182,"offset":4882}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":143,"column":8,"offset":4891},"end":{"line":143,"column":19,"offset":4902}}}],"position":{"start":{"line":143,"column":1,"offset":4884},"end":{"line":143,"column":19,"offset":4902}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":144,"column":1,"offset":4903},"end":{"line":144,"column":14,"offset":4916}}}],"position":{"start":{"line":144,"column":1,"offset":4903},"end":{"line":144,"column":14,"offset":4916}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":145,"column":1,"offset":4917},"end":{"line":160,"column":4,"offset":5332}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":161,"column":1,"offset":5333},"end":{"line":161,"column":5,"offset":5337}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":163,"column":1,"offset":5339},"end":{"line":163,"column":141,"offset":5479}}}],"position":{"start":{"line":163,"column":1,"offset":5339},"end":{"line":163,"column":141,"offset":5479}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":165,"column":8,"offset":5488},"end":{"line":165,"column":30,"offset":5510}}}],"position":{"start":{"line":165,"column":1,"offset":5481},"end":{"line":165,"column":30,"offset":5510}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":166,"column":1,"offset":5511},"end":{"line":166,"column":199,"offset":5709}}}],"position":{"start":{"line":166,"column":1,"offset":5511},"end":{"line":166,"column":199,"offset":5709}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":168,"column":8,"offset":5718},"end":{"line":168,"column":30,"offset":5740}}}],"position":{"start":{"line":168,"column":1,"offset":5711},"end":{"line":168,"column":30,"offset":5740}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":170,"column":1,"offset":5742},"end":{"line":171,"column":1,"offset":5817}}},{"type":"raw","value":"<br>","position":{"start":{"line":171,"column":1,"offset":5817},"end":{"line":171,"column":5,"offset":5821}}},{"type":"text","value":"\n","position":{"start":{"line":171,"column":5,"offset":5821},"end":{"line":172,"column":1,"offset":5822}}},{"type":"raw","value":"<br>","position":{"start":{"line":172,"column":1,"offset":5822},"end":{"line":172,"column":5,"offset":5826}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":172,"column":5,"offset":5826},"end":{"line":174,"column":1,"offset":5888}}},{"type":"raw","value":"<br>","position":{"start":{"line":174,"column":1,"offset":5888},"end":{"line":174,"column":5,"offset":5892}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":174,"column":5,"offset":5892},"end":{"line":175,"column":1,"offset":5895}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":175,"column":1,"offset":5895},"end":{"line":175,"column":11,"offset":5905}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":175,"column":11,"offset":5905},"end":{"line":175,"column":19,"offset":5913}}},{"type":"text","value":" and ","position":{"start":{"line":175,"column":19,"offset":5913},"end":{"line":175,"column":24,"offset":5918}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":175,"column":24,"offset":5918},"end":{"line":175,"column":34,"offset":5928}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":175,"column":34,"offset":5928},"end":{"line":176,"column":1,"offset":5977}}},{"type":"raw","value":"<br>","position":{"start":{"line":176,"column":1,"offset":5977},"end":{"line":176,"column":5,"offset":5981}}}],"position":{"start":{"line":170,"column":1,"offset":5742},"end":{"line":176,"column":5,"offset":5981}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":178,"column":8,"offset":5990},"end":{"line":178,"column":12,"offset":5994}}}],"position":{"start":{"line":178,"column":1,"offset":5983},"end":{"line":178,"column":12,"offset":5994}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":179,"column":1,"offset":5995},"end":{"line":184,"column":4,"offset":6106}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":185,"column":1,"offset":6107},"end":{"line":186,"column":5,"offset":6116}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":188,"column":1,"offset":6118},"end":{"line":188,"column":7,"offset":6124}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":188,"column":7,"offset":6124},"end":{"line":190,"column":1,"offset":6206}}},{"type":"raw","value":"<br>","position":{"start":{"line":190,"column":1,"offset":6206},"end":{"line":190,"column":5,"offset":6210}}},{"type":"text","value":"\n","position":{"start":{"line":190,"column":5,"offset":6210},"end":{"line":191,"column":1,"offset":6211}}},{"type":"raw","value":"<br>","position":{"start":{"line":191,"column":1,"offset":6211},"end":{"line":191,"column":5,"offset":6215}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":191,"column":5,"offset":6215},"end":{"line":192,"column":10,"offset":6225}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":192,"column":10,"offset":6225},"end":{"line":192,"column":14,"offset":6229}}},{"type":"text","value":". Since ","position":{"start":{"line":192,"column":14,"offset":6229},"end":{"line":192,"column":22,"offset":6237}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":192,"column":22,"offset":6237},"end":{"line":192,"column":30,"offset":6245}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":192,"column":30,"offset":6245},"end":{"line":192,"column":50,"offset":6265}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":192,"column":50,"offset":6265},"end":{"line":192,"column":53,"offset":6268}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":192,"column":53,"offset":6268},"end":{"line":192,"column":90,"offset":6305}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":192,"column":90,"offset":6305},"end":{"line":192,"column":96,"offset":6311}}},{"type":"text","value":".\n","position":{"start":{"line":192,"column":96,"offset":6311},"end":{"line":193,"column":1,"offset":6314}}},{"type":"raw","value":"<br>","position":{"start":{"line":193,"column":1,"offset":6314},"end":{"line":193,"column":5,"offset":6318}}},{"type":"text","value":"\n","position":{"start":{"line":193,"column":5,"offset":6318},"end":{"line":194,"column":1,"offset":6319}}},{"type":"raw","value":"<br>","position":{"start":{"line":194,"column":1,"offset":6319},"end":{"line":194,"column":5,"offset":6323}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":194,"column":5,"offset":6323},"end":{"line":195,"column":14,"offset":6337}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":195,"column":14,"offset":6337},"end":{"line":195,"column":18,"offset":6341}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":195,"column":18,"offset":6341},"end":{"line":195,"column":90,"offset":6413}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":195,"column":90,"offset":6413},"end":{"line":195,"column":94,"offset":6417}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":195,"column":94,"offset":6417},"end":{"line":195,"column":125,"offset":6448}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":195,"column":125,"offset":6448},"end":{"line":195,"column":131,"offset":6454}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":195,"column":131,"offset":6454},"end":{"line":196,"column":1,"offset":6469}}},{"type":"raw","value":"<br>","position":{"start":{"line":196,"column":1,"offset":6469},"end":{"line":196,"column":5,"offset":6473}}},{"type":"text","value":"\n","position":{"start":{"line":196,"column":5,"offset":6473},"end":{"line":197,"column":1,"offset":6474}}},{"type":"raw","value":"<br>","position":{"start":{"line":197,"column":1,"offset":6474},"end":{"line":197,"column":5,"offset":6478}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":197,"column":5,"offset":6478},"end":{"line":198,"column":14,"offset":6492}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":198,"column":14,"offset":6492},"end":{"line":198,"column":18,"offset":6496}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":198,"column":18,"offset":6496},"end":{"line":198,"column":37,"offset":6515}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":198,"column":37,"offset":6515},"end":{"line":198,"column":40,"offset":6518}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":198,"column":40,"offset":6518},"end":{"line":198,"column":77,"offset":6555}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":198,"column":77,"offset":6555},"end":{"line":198,"column":81,"offset":6559}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":198,"column":81,"offset":6559},"end":{"line":198,"column":99,"offset":6577}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":198,"column":99,"offset":6577},"end":{"line":198,"column":102,"offset":6580}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":198,"column":102,"offset":6580},"end":{"line":198,"column":133,"offset":6611}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":198,"column":133,"offset":6611},"end":{"line":198,"column":139,"offset":6617}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":198,"column":139,"offset":6617},"end":{"line":198,"column":167,"offset":6645}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":198,"column":167,"offset":6645},"end":{"line":198,"column":171,"offset":6649}}},{"type":"text","value":".\n","position":{"start":{"line":198,"column":171,"offset":6649},"end":{"line":199,"column":1,"offset":6651}}},{"type":"raw","value":"<br>","position":{"start":{"line":199,"column":1,"offset":6651},"end":{"line":199,"column":5,"offset":6655}}},{"type":"text","value":"\n","position":{"start":{"line":199,"column":5,"offset":6655},"end":{"line":200,"column":1,"offset":6656}}},{"type":"raw","value":"<br>","position":{"start":{"line":200,"column":1,"offset":6656},"end":{"line":200,"column":5,"offset":6660}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":200,"column":5,"offset":6660},"end":{"line":202,"column":1,"offset":6680}}},{"type":"raw","value":"<br>","position":{"start":{"line":202,"column":1,"offset":6680},"end":{"line":202,"column":5,"offset":6684}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":202,"column":5,"offset":6684},"end":{"line":203,"column":6,"offset":6690}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":203,"column":6,"offset":6690},"end":{"line":203,"column":12,"offset":6696}}},{"type":"text","value":" does not have an ","position":{"start":{"line":203,"column":12,"offset":6696},"end":{"line":203,"column":30,"offset":6714}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":203,"column":30,"offset":6714},"end":{"line":203,"column":36,"offset":6720}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":203,"column":36,"offset":6720},"end":{"line":203,"column":62,"offset":6746}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":203,"column":62,"offset":6746},"end":{"line":203,"column":75,"offset":6759}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":203,"column":75,"offset":6759},"end":{"line":203,"column":159,"offset":6843}}}],"position":{"start":{"line":188,"column":1,"offset":6118},"end":{"line":203,"column":159,"offset":6843}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":205,"column":8,"offset":6852},"end":{"line":205,"column":41,"offset":6885}}}],"position":{"start":{"line":205,"column":1,"offset":6845},"end":{"line":205,"column":41,"offset":6885}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":206,"column":1,"offset":6886},"end":{"line":211,"column":4,"offset":6961}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":212,"column":1,"offset":6962},"end":{"line":213,"column":1,"offset":6981}}},{"type":"raw","value":"<br>","position":{"start":{"line":213,"column":1,"offset":6981},"end":{"line":213,"column":5,"offset":6985}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":213,"column":5,"offset":6985},"end":{"line":215,"column":5,"offset":7123}}},{"type":"raw","value":"<br>","position":{"start":{"line":215,"column":5,"offset":7123},"end":{"line":215,"column":9,"offset":7127}}},{"type":"text","value":"\n","position":{"start":{"line":215,"column":9,"offset":7127},"end":{"line":216,"column":5,"offset":7132}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":216,"column":5,"offset":7132},"end":{"line":216,"column":27,"offset":7154}}},{"type":"text","value":"\n","position":{"start":{"line":216,"column":27,"offset":7154},"end":{"line":217,"column":5,"offset":7159}}},{"type":"raw","value":"<br>","position":{"start":{"line":217,"column":5,"offset":7159},"end":{"line":217,"column":9,"offset":7163}}},{"type":"text","value":"\n","position":{"start":{"line":217,"column":9,"offset":7163},"end":{"line":218,"column":5,"offset":7168}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":218,"column":5,"offset":7168},"end":{"line":218,"column":12,"offset":7175}}},{"type":"text","value":" and ","position":{"start":{"line":218,"column":12,"offset":7175},"end":{"line":218,"column":17,"offset":7180}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":218,"column":17,"offset":7180},"end":{"line":218,"column":25,"offset":7188}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":218,"column":25,"offset":7188},"end":{"line":218,"column":63,"offset":7226}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":218,"column":63,"offset":7226},"end":{"line":218,"column":66,"offset":7229}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":218,"column":66,"offset":7229},"end":{"line":218,"column":86,"offset":7249}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":218,"column":86,"offset":7249},"end":{"line":218,"column":89,"offset":7252}}},{"type":"text","value":" will be called with ","position":{"start":{"line":218,"column":89,"offset":7252},"end":{"line":218,"column":110,"offset":7273}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":218,"column":110,"offset":7273},"end":{"line":218,"column":119,"offset":7282}}},{"type":"text","value":".\n","position":{"start":{"line":218,"column":119,"offset":7282},"end":{"line":219,"column":1,"offset":7284}}},{"type":"raw","value":"<br>","position":{"start":{"line":219,"column":1,"offset":7284},"end":{"line":219,"column":5,"offset":7288}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":219,"column":5,"offset":7288},"end":{"line":221,"column":1,"offset":7304}}},{"type":"raw","value":"<br>","position":{"start":{"line":221,"column":1,"offset":7304},"end":{"line":221,"column":5,"offset":7308}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":221,"column":5,"offset":7308},"end":{"line":223,"column":5,"offset":7415}}},{"type":"raw","value":"<br>","position":{"start":{"line":223,"column":5,"offset":7415},"end":{"line":223,"column":9,"offset":7419}}},{"type":"text","value":"\n","position":{"start":{"line":223,"column":9,"offset":7419},"end":{"line":224,"column":1,"offset":7420}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":224,"column":1,"offset":7420},"end":{"line":224,"column":23,"offset":7442}}},{"type":"text","value":" turns into ","position":{"start":{"line":224,"column":23,"offset":7442},"end":{"line":224,"column":35,"offset":7454}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":224,"column":35,"offset":7454},"end":{"line":224,"column":61,"offset":7480}}},{"type":"text","value":"\n","position":{"start":{"line":224,"column":61,"offset":7480},"end":{"line":225,"column":1,"offset":7481}}},{"type":"raw","value":"<br>","position":{"start":{"line":225,"column":1,"offset":7481},"end":{"line":225,"column":5,"offset":7485}}},{"type":"text","value":"\nNow ","position":{"start":{"line":225,"column":5,"offset":7485},"end":{"line":226,"column":5,"offset":7490}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":226,"column":5,"offset":7490},"end":{"line":226,"column":8,"offset":7493}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":226,"column":8,"offset":7493},"end":{"line":226,"column":58,"offset":7543}}}],"position":{"start":{"line":212,"column":1,"offset":6962},"end":{"line":226,"column":58,"offset":7543}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":228,"column":1,"offset":7545},"end":{"line":229,"column":1,"offset":7563}}},{"type":"raw","value":"<br>","position":{"start":{"line":229,"column":1,"offset":7563},"end":{"line":229,"column":5,"offset":7567}}}],"position":{"start":{"line":228,"column":1,"offset":7545},"end":{"line":229,"column":5,"offset":7567}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":230,"column":1,"offset":7568},"end":{"line":232,"column":4,"offset":7598}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":233,"column":1,"offset":7599},"end":{"line":233,"column":13,"offset":7611}}}],"position":{"start":{"line":233,"column":1,"offset":7599},"end":{"line":233,"column":13,"offset":7611}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":234,"column":1,"offset":7612},"end":{"line":240,"column":4,"offset":7691}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":241,"column":1,"offset":7692},"end":{"line":241,"column":8,"offset":7699}}}],"position":{"start":{"line":241,"column":1,"offset":7692},"end":{"line":241,"column":8,"offset":7699}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":242,"column":1,"offset":7700},"end":{"line":249,"column":4,"offset":7824}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":250,"column":1,"offset":7825},"end":{"line":251,"column":5,"offset":7834}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":253,"column":1,"offset":7836},"end":{"line":253,"column":11,"offset":7846}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":253,"column":11,"offset":7846},"end":{"line":253,"column":24,"offset":7859}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":253,"column":24,"offset":7859},"end":{"line":253,"column":107,"offset":7942}}}],"position":{"start":{"line":253,"column":1,"offset":7836},"end":{"line":253,"column":107,"offset":7942}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":255,"column":7,"offset":7950},"end":{"line":255,"column":10,"offset":7953}}}],"position":{"start":{"line":255,"column":1,"offset":7944},"end":{"line":255,"column":10,"offset":7953}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":256,"column":7,"offset":7960},"end":{"line":256,"column":10,"offset":7963}}}],"position":{"start":{"line":256,"column":1,"offset":7954},"end":{"line":256,"column":10,"offset":7963}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":258,"column":6,"offset":7970},"end":{"line":258,"column":10,"offset":7974}}}],"position":{"start":{"line":258,"column":1,"offset":7965},"end":{"line":258,"column":10,"offset":7974}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":259,"column":7,"offset":7981},"end":{"line":259,"column":13,"offset":7987}}}],"position":{"start":{"line":259,"column":1,"offset":7975},"end":{"line":259,"column":13,"offset":7987}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":260,"column":1,"offset":7988},"end":{"line":260,"column":49,"offset":8036}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":260,"column":49,"offset":8036},"end":{"line":260,"column":57,"offset":8044}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":260,"column":57,"offset":8044},"end":{"line":260,"column":133,"offset":8120}}}],"position":{"start":{"line":260,"column":1,"offset":7988},"end":{"line":260,"column":133,"offset":8120}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":261,"column":1,"offset":8121},"end":{"line":271,"column":4,"offset":8316}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":272,"column":1,"offset":8317},"end":{"line":272,"column":5,"offset":8321}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":275,"column":1,"offset":8324},"end":{"line":276,"column":1,"offset":8406}}},{"type":"raw","value":"<br>","position":{"start":{"line":276,"column":1,"offset":8406},"end":{"line":276,"column":5,"offset":8410}}},{"type":"text","value":"\n","position":{"start":{"line":276,"column":5,"offset":8410},"end":{"line":277,"column":1,"offset":8411}}},{"type":"raw","value":"<br>","position":{"start":{"line":277,"column":1,"offset":8411},"end":{"line":277,"column":5,"offset":8415}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":277,"column":5,"offset":8415},"end":{"line":278,"column":26,"offset":8441}}}],"position":{"start":{"line":275,"column":1,"offset":8324},"end":{"line":278,"column":26,"offset":8441}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":279,"column":1,"offset":8442},"end":{"line":284,"column":4,"offset":8570}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":285,"column":1,"offset":8571},"end":{"line":285,"column":14,"offset":8584}}}],"position":{"start":{"line":285,"column":1,"offset":8571},"end":{"line":285,"column":14,"offset":8584}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":287,"column":1,"offset":8586},"end":{"line":300,"column":4,"offset":8868}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":302,"column":1,"offset":8870},"end":{"line":303,"column":5,"offset":8879}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":306,"column":7,"offset":8888},"end":{"line":306,"column":13,"offset":8894}}}],"position":{"start":{"line":306,"column":1,"offset":8882},"end":{"line":306,"column":13,"offset":8894}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":306,"column":13,"offset":8894}}}}