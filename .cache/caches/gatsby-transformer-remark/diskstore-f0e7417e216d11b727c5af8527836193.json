{"expireTime":9007200842248369000,"key":"transformer-remark-markdown-html-ast-0ae7efc83eda14bb7585e8a90878564f-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":10,"column":108,"offset":557}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":10,"column":108,"offset":557}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"primitive expressions","position":{"start":{"line":12,"column":3,"offset":561},"end":{"line":12,"column":24,"offset":582}}}],"position":{"start":{"line":12,"column":1,"offset":559},"end":{"line":13,"column":3,"offset":585}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"means of combination","position":{"start":{"line":14,"column":3,"offset":588},"end":{"line":14,"column":23,"offset":608}}}],"position":{"start":{"line":14,"column":1,"offset":586},"end":{"line":14,"column":23,"offset":608}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"means of abstraction","position":{"start":{"line":15,"column":3,"offset":611},"end":{"line":15,"column":23,"offset":631}}}],"position":{"start":{"line":15,"column":3,"offset":611},"end":{"line":15,"column":23,"offset":631}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":16,"column":7,"offset":638},"end":{"line":16,"column":10,"offset":641}}}],"position":{"start":{"line":16,"column":1,"offset":632},"end":{"line":16,"column":10,"offset":641}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":17,"column":7,"offset":648},"end":{"line":17,"column":10,"offset":651}}}],"position":{"start":{"line":17,"column":1,"offset":642},"end":{"line":17,"column":10,"offset":651}}},{"type":"text","value":"\n"}],"position":{"start":{"line":15,"column":1,"offset":609},"end":{"line":17,"column":10,"offset":651}}},{"type":"text","value":"\n"}],"position":{"start":{"line":12,"column":1,"offset":559},"end":{"line":17,"column":10,"offset":651}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":19,"column":6,"offset":658},"end":{"line":19,"column":14,"offset":666}}}],"position":{"start":{"line":19,"column":1,"offset":653},"end":{"line":19,"column":14,"offset":666}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":20,"column":7,"offset":673},"end":{"line":20,"column":10,"offset":676}}}],"position":{"start":{"line":20,"column":1,"offset":667},"end":{"line":20,"column":10,"offset":676}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":22,"column":8,"offset":685},"end":{"line":22,"column":30,"offset":707}}}],"position":{"start":{"line":22,"column":1,"offset":678},"end":{"line":22,"column":30,"offset":707}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":24,"column":1,"offset":709},"end":{"line":25,"column":1,"offset":853}}},{"type":"raw","value":"<br>","position":{"start":{"line":25,"column":1,"offset":853},"end":{"line":25,"column":5,"offset":857}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":25,"column":5,"offset":857},"end":{"line":25,"column":16,"offset":868}}},{"type":"raw","value":"<br>","position":{"start":{"line":25,"column":16,"offset":868},"end":{"line":25,"column":20,"offset":872}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":25,"column":20,"offset":872},"end":{"line":27,"column":1,"offset":1016}}},{"type":"raw","value":"<br>","position":{"start":{"line":27,"column":1,"offset":1016},"end":{"line":27,"column":5,"offset":1020}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":27,"column":5,"offset":1020},"end":{"line":27,"column":16,"offset":1031}}},{"type":"raw","value":"<br>","position":{"start":{"line":27,"column":16,"offset":1031},"end":{"line":27,"column":20,"offset":1035}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":27,"column":20,"offset":1035},"end":{"line":28,"column":45,"offset":1080}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":45,"offset":1080},"end":{"line":28,"column":49,"offset":1084}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":28,"column":49,"offset":1084},"end":{"line":28,"column":65,"offset":1100}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":65,"offset":1100},"end":{"line":28,"column":69,"offset":1104}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":28,"column":69,"offset":1104},"end":{"line":30,"column":1,"offset":1147}}},{"type":"raw","value":"<br>","position":{"start":{"line":30,"column":1,"offset":1147},"end":{"line":30,"column":5,"offset":1151}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":30,"column":5,"offset":1151},"end":{"line":30,"column":22,"offset":1168}}},{"type":"raw","value":"<br>","position":{"start":{"line":30,"column":22,"offset":1168},"end":{"line":30,"column":26,"offset":1172}}},{"type":"text","value":"\n","position":{"start":{"line":30,"column":26,"offset":1172},"end":{"line":31,"column":1,"offset":1173}}},{"type":"raw","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1173},"end":{"line":31,"column":5,"offset":1177}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":31,"column":5,"offset":1177},"end":{"line":33,"column":1,"offset":1295}}},{"type":"raw","value":"<br>","position":{"start":{"line":33,"column":1,"offset":1295},"end":{"line":33,"column":5,"offset":1299}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":33,"column":5,"offset":1299},"end":{"line":35,"column":1,"offset":1420}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":35,"column":1,"offset":1420},"end":{"line":35,"column":12,"offset":1431}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":35,"column":12,"offset":1431},"end":{"line":35,"column":68,"offset":1487}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":35,"column":68,"offset":1487},"end":{"line":35,"column":79,"offset":1498}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":35,"column":79,"offset":1498},"end":{"line":35,"column":106,"offset":1525}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":35,"column":106,"offset":1525},"end":{"line":35,"column":109,"offset":1528}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":35,"column":109,"offset":1528},"end":{"line":35,"column":189,"offset":1608}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":35,"column":189,"offset":1608},"end":{"line":35,"column":192,"offset":1611}}},{"type":"text","value":" to get 3.","position":{"start":{"line":35,"column":192,"offset":1611},"end":{"line":35,"column":202,"offset":1621}}}],"position":{"start":{"line":24,"column":1,"offset":709},"end":{"line":35,"column":202,"offset":1621}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":37,"column":8,"offset":1630},"end":{"line":37,"column":14,"offset":1636}}}],"position":{"start":{"line":37,"column":1,"offset":1623},"end":{"line":37,"column":14,"offset":1636}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":38,"column":1,"offset":1637},"end":{"line":38,"column":9,"offset":1645}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":38,"column":9,"offset":1645},"end":{"line":38,"column":73,"offset":1709}}}],"position":{"start":{"line":38,"column":1,"offset":1637},"end":{"line":38,"column":73,"offset":1709}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":39,"column":1,"offset":1710},"end":{"line":42,"column":4,"offset":1749}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":43,"column":1,"offset":1750},"end":{"line":43,"column":5,"offset":1754}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":45,"column":1,"offset":1756},"end":{"line":45,"column":72,"offset":1827}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":45,"column":72,"offset":1827},"end":{"line":45,"column":80,"offset":1835}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":45,"column":80,"offset":1835},"end":{"line":46,"column":1,"offset":1859}}},{"type":"raw","value":"<br>","position":{"start":{"line":46,"column":1,"offset":1859},"end":{"line":46,"column":5,"offset":1863}}},{"type":"text","value":"\n","position":{"start":{"line":46,"column":5,"offset":1863},"end":{"line":47,"column":1,"offset":1864}}},{"type":"raw","value":"<br>","position":{"start":{"line":47,"column":1,"offset":1864},"end":{"line":47,"column":5,"offset":1868}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":47,"column":5,"offset":1868},"end":{"line":48,"column":184,"offset":2052}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":48,"column":184,"offset":2052},"end":{"line":48,"column":187,"offset":2055}}},{"type":"text","value":".\n","position":{"start":{"line":48,"column":187,"offset":2055},"end":{"line":49,"column":1,"offset":2058}}},{"type":"raw","value":"<br>","position":{"start":{"line":49,"column":1,"offset":2058},"end":{"line":49,"column":5,"offset":2062}}},{"type":"text","value":"\n","position":{"start":{"line":49,"column":5,"offset":2062},"end":{"line":50,"column":1,"offset":2063}}},{"type":"raw","value":"<br>","position":{"start":{"line":50,"column":1,"offset":2063},"end":{"line":50,"column":5,"offset":2067}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":50,"column":5,"offset":2067},"end":{"line":51,"column":27,"offset":2094}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":51,"column":27,"offset":2094},"end":{"line":51,"column":35,"offset":2102}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":51,"column":35,"offset":2102},"end":{"line":51,"column":86,"offset":2153}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":51,"column":86,"offset":2153},"end":{"line":51,"column":95,"offset":2162}}},{"type":"text","value":". ","position":{"start":{"line":51,"column":95,"offset":2162},"end":{"line":51,"column":97,"offset":2164}}}],"position":{"start":{"line":45,"column":1,"offset":1756},"end":{"line":51,"column":97,"offset":2164}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":53,"column":1,"offset":2166},"end":{"line":53,"column":6,"offset":2171}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":55,"column":1,"offset":2173},"end":{"line":56,"column":1,"offset":2217}}},{"type":"raw","value":"<br>","position":{"start":{"line":56,"column":1,"offset":2217},"end":{"line":56,"column":5,"offset":2221}}},{"type":"text","value":"\n","position":{"start":{"line":56,"column":5,"offset":2221},"end":{"line":57,"column":1,"offset":2222}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":57,"column":1,"offset":2222},"end":{"line":57,"column":22,"offset":2243}}},{"type":"text","value":"\n","position":{"start":{"line":57,"column":22,"offset":2243},"end":{"line":58,"column":1,"offset":2244}}},{"type":"raw","value":"<br>","position":{"start":{"line":58,"column":1,"offset":2244},"end":{"line":58,"column":5,"offset":2248}}}],"position":{"start":{"line":55,"column":1,"offset":2173},"end":{"line":58,"column":5,"offset":2248}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":60,"column":1,"offset":2250},"end":{"line":60,"column":152,"offset":2401}}}],"position":{"start":{"line":60,"column":1,"offset":2250},"end":{"line":60,"column":152,"offset":2401}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":62,"column":8,"offset":2410},"end":{"line":62,"column":20,"offset":2422}}}],"position":{"start":{"line":62,"column":1,"offset":2403},"end":{"line":62,"column":20,"offset":2422}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":64,"column":1,"offset":2424},"end":{"line":64,"column":56,"offset":2479}}}],"position":{"start":{"line":64,"column":1,"offset":2424},"end":{"line":64,"column":56,"offset":2479}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":65,"column":1,"offset":2480},"end":{"line":70,"column":4,"offset":2571}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":71,"column":1,"offset":2572},"end":{"line":71,"column":5,"offset":2576}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":73,"column":1,"offset":2578},"end":{"line":73,"column":37,"offset":2614}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":73,"column":37,"offset":2614},"end":{"line":73,"column":41,"offset":2618}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":73,"column":41,"offset":2618},"end":{"line":74,"column":1,"offset":2635}}},{"type":"raw","value":"<br>","position":{"start":{"line":74,"column":1,"offset":2635},"end":{"line":74,"column":5,"offset":2639}}},{"type":"text","value":"\n","position":{"start":{"line":74,"column":5,"offset":2639},"end":{"line":75,"column":1,"offset":2640}}},{"type":"raw","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2640},"end":{"line":75,"column":5,"offset":2644}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":75,"column":5,"offset":2644},"end":{"line":76,"column":66,"offset":2710}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":76,"column":66,"offset":2710},"end":{"line":76,"column":89,"offset":2733}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":76,"column":89,"offset":2733},"end":{"line":77,"column":1,"offset":2773}}},{"type":"raw","value":"<br>","position":{"start":{"line":77,"column":1,"offset":2773},"end":{"line":77,"column":5,"offset":2777}}},{"type":"text","value":"\n","position":{"start":{"line":77,"column":5,"offset":2777},"end":{"line":78,"column":1,"offset":2778}}},{"type":"raw","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2778},"end":{"line":78,"column":5,"offset":2782}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":78,"column":5,"offset":2782},"end":{"line":79,"column":21,"offset":2803}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":79,"column":21,"offset":2803},"end":{"line":79,"column":25,"offset":2807}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":79,"column":25,"offset":2807},"end":{"line":80,"column":1,"offset":2861}}},{"type":"raw","value":"<br>","position":{"start":{"line":80,"column":1,"offset":2861},"end":{"line":80,"column":5,"offset":2865}}},{"type":"text","value":"\n","position":{"start":{"line":80,"column":5,"offset":2865},"end":{"line":81,"column":1,"offset":2866}}},{"type":"raw","value":"<br>","position":{"start":{"line":81,"column":1,"offset":2866},"end":{"line":81,"column":5,"offset":2870}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":81,"column":5,"offset":2870},"end":{"line":82,"column":21,"offset":2891}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":82,"column":21,"offset":2891},"end":{"line":82,"column":25,"offset":2895}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":82,"column":25,"offset":2895},"end":{"line":83,"column":1,"offset":2950}}},{"type":"raw","value":"<br>","position":{"start":{"line":83,"column":1,"offset":2950},"end":{"line":83,"column":5,"offset":2954}}},{"type":"text","value":"\n","position":{"start":{"line":83,"column":5,"offset":2954},"end":{"line":84,"column":1,"offset":2955}}},{"type":"raw","value":"<br>","position":{"start":{"line":84,"column":1,"offset":2955},"end":{"line":84,"column":5,"offset":2959}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":84,"column":5,"offset":2959},"end":{"line":85,"column":58,"offset":3017}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":85,"column":58,"offset":3017},"end":{"line":85,"column":61,"offset":3020}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":85,"column":61,"offset":3020},"end":{"line":85,"column":145,"offset":3104}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":85,"column":145,"offset":3104},"end":{"line":85,"column":153,"offset":3112}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":85,"column":153,"offset":3112},"end":{"line":85,"column":178,"offset":3137}}}],"position":{"start":{"line":73,"column":1,"offset":2578},"end":{"line":85,"column":178,"offset":3137}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":87,"column":7,"offset":3145},"end":{"line":87,"column":10,"offset":3148}}}],"position":{"start":{"line":87,"column":1,"offset":3139},"end":{"line":87,"column":10,"offset":3148}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":89,"column":8,"offset":3157},"end":{"line":89,"column":17,"offset":3166}}}],"position":{"start":{"line":89,"column":1,"offset":3150},"end":{"line":89,"column":17,"offset":3166}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":90,"column":1,"offset":3167},"end":{"line":101,"column":4,"offset":3366}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":102,"column":1,"offset":3367},"end":{"line":102,"column":5,"offset":3371}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":104,"column":1,"offset":3373},"end":{"line":105,"column":1,"offset":3589}}},{"type":"raw","value":"<br>","position":{"start":{"line":105,"column":1,"offset":3589},"end":{"line":105,"column":5,"offset":3593}}},{"type":"text","value":"\n","position":{"start":{"line":105,"column":5,"offset":3593},"end":{"line":106,"column":1,"offset":3594}}},{"type":"raw","value":"<br>","position":{"start":{"line":106,"column":1,"offset":3594},"end":{"line":106,"column":5,"offset":3598}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":106,"column":5,"offset":3598},"end":{"line":107,"column":72,"offset":3670}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":107,"column":72,"offset":3670},"end":{"line":107,"column":81,"offset":3679}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":107,"column":81,"offset":3679},"end":{"line":108,"column":1,"offset":3698}}},{"type":"raw","value":"<br>","position":{"start":{"line":108,"column":1,"offset":3698},"end":{"line":108,"column":5,"offset":3702}}},{"type":"text","value":"\n","position":{"start":{"line":108,"column":5,"offset":3702},"end":{"line":109,"column":1,"offset":3703}}},{"type":"raw","value":"<br>","position":{"start":{"line":109,"column":1,"offset":3703},"end":{"line":109,"column":5,"offset":3707}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":109,"column":5,"offset":3707},"end":{"line":110,"column":10,"offset":3717}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":110,"column":10,"offset":3717},"end":{"line":110,"column":16,"offset":3723}}},{"type":"text","value":" gets called with ","position":{"start":{"line":110,"column":16,"offset":3723},"end":{"line":110,"column":34,"offset":3741}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":110,"column":34,"offset":3741},"end":{"line":110,"column":42,"offset":3749}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":110,"column":42,"offset":3749},"end":{"line":111,"column":24,"offset":3774}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":111,"column":24,"offset":3774},"end":{"line":111,"column":33,"offset":3783}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":111,"column":33,"offset":3783},"end":{"line":111,"column":107,"offset":3857}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":111,"column":107,"offset":3857},"end":{"line":111,"column":116,"offset":3866}}},{"type":"text","value":" is false because ","position":{"start":{"line":111,"column":116,"offset":3866},"end":{"line":111,"column":134,"offset":3884}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":111,"column":134,"offset":3884},"end":{"line":111,"column":137,"offset":3887}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":111,"column":137,"offset":3887},"end":{"line":111,"column":161,"offset":3911}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":111,"column":161,"offset":3911},"end":{"line":111,"column":167,"offset":3917}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":111,"column":167,"offset":3917},"end":{"line":111,"column":192,"offset":3942}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":111,"column":192,"offset":3942},"end":{"line":111,"column":200,"offset":3950}}},{"type":"text","value":". This is because ","position":{"start":{"line":111,"column":200,"offset":3950},"end":{"line":111,"column":218,"offset":3968}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":111,"column":218,"offset":3968},"end":{"line":111,"column":224,"offset":3974}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":111,"column":224,"offset":3974},"end":{"line":111,"column":245,"offset":3995}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":111,"column":245,"offset":3995},"end":{"line":111,"column":252,"offset":4002}}},{"type":"text","value":" and ","position":{"start":{"line":111,"column":252,"offset":4002},"end":{"line":111,"column":257,"offset":4007}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":111,"column":257,"offset":4007},"end":{"line":111,"column":260,"offset":4010}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":111,"column":260,"offset":4010},"end":{"line":111,"column":285,"offset":4035}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":111,"column":285,"offset":4035},"end":{"line":111,"column":291,"offset":4041}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":111,"column":291,"offset":4041},"end":{"line":112,"column":96,"offset":4167}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":112,"column":96,"offset":4167},"end":{"line":112,"column":111,"offset":4182}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":112,"column":111,"offset":4182},"end":{"line":112,"column":182,"offset":4253}}}],"position":{"start":{"line":104,"column":1,"offset":3373},"end":{"line":112,"column":182,"offset":4253}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":114,"column":8,"offset":4262},"end":{"line":114,"column":19,"offset":4273}}}],"position":{"start":{"line":114,"column":1,"offset":4255},"end":{"line":114,"column":19,"offset":4273}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":115,"column":1,"offset":4274},"end":{"line":115,"column":14,"offset":4287}}}],"position":{"start":{"line":115,"column":1,"offset":4274},"end":{"line":115,"column":14,"offset":4287}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":116,"column":1,"offset":4288},"end":{"line":131,"column":4,"offset":4703}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":132,"column":1,"offset":4704},"end":{"line":132,"column":5,"offset":4708}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":134,"column":1,"offset":4710},"end":{"line":134,"column":141,"offset":4850}}}],"position":{"start":{"line":134,"column":1,"offset":4710},"end":{"line":134,"column":141,"offset":4850}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":136,"column":8,"offset":4859},"end":{"line":136,"column":30,"offset":4881}}}],"position":{"start":{"line":136,"column":1,"offset":4852},"end":{"line":136,"column":30,"offset":4881}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":137,"column":1,"offset":4882},"end":{"line":137,"column":199,"offset":5080}}}],"position":{"start":{"line":137,"column":1,"offset":4882},"end":{"line":137,"column":199,"offset":5080}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":139,"column":8,"offset":5089},"end":{"line":139,"column":30,"offset":5111}}}],"position":{"start":{"line":139,"column":1,"offset":5082},"end":{"line":139,"column":30,"offset":5111}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":141,"column":1,"offset":5113},"end":{"line":142,"column":1,"offset":5188}}},{"type":"raw","value":"<br>","position":{"start":{"line":142,"column":1,"offset":5188},"end":{"line":142,"column":5,"offset":5192}}},{"type":"text","value":"\n","position":{"start":{"line":142,"column":5,"offset":5192},"end":{"line":143,"column":1,"offset":5193}}},{"type":"raw","value":"<br>","position":{"start":{"line":143,"column":1,"offset":5193},"end":{"line":143,"column":5,"offset":5197}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":143,"column":5,"offset":5197},"end":{"line":145,"column":1,"offset":5259}}},{"type":"raw","value":"<br>","position":{"start":{"line":145,"column":1,"offset":5259},"end":{"line":145,"column":5,"offset":5263}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":145,"column":5,"offset":5263},"end":{"line":146,"column":1,"offset":5266}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":146,"column":1,"offset":5266},"end":{"line":146,"column":11,"offset":5276}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":146,"column":11,"offset":5276},"end":{"line":146,"column":19,"offset":5284}}},{"type":"text","value":" and ","position":{"start":{"line":146,"column":19,"offset":5284},"end":{"line":146,"column":24,"offset":5289}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":146,"column":24,"offset":5289},"end":{"line":146,"column":34,"offset":5299}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":146,"column":34,"offset":5299},"end":{"line":147,"column":1,"offset":5348}}},{"type":"raw","value":"<br>","position":{"start":{"line":147,"column":1,"offset":5348},"end":{"line":147,"column":5,"offset":5352}}}],"position":{"start":{"line":141,"column":1,"offset":5113},"end":{"line":147,"column":5,"offset":5352}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":149,"column":8,"offset":5361},"end":{"line":149,"column":12,"offset":5365}}}],"position":{"start":{"line":149,"column":1,"offset":5354},"end":{"line":149,"column":12,"offset":5365}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":150,"column":1,"offset":5366},"end":{"line":155,"column":4,"offset":5477}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":156,"column":1,"offset":5478},"end":{"line":157,"column":5,"offset":5487}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":159,"column":1,"offset":5489},"end":{"line":159,"column":7,"offset":5495}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":159,"column":7,"offset":5495},"end":{"line":161,"column":1,"offset":5577}}},{"type":"raw","value":"<br>","position":{"start":{"line":161,"column":1,"offset":5577},"end":{"line":161,"column":5,"offset":5581}}},{"type":"text","value":"\n","position":{"start":{"line":161,"column":5,"offset":5581},"end":{"line":162,"column":1,"offset":5582}}},{"type":"raw","value":"<br>","position":{"start":{"line":162,"column":1,"offset":5582},"end":{"line":162,"column":5,"offset":5586}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":162,"column":5,"offset":5586},"end":{"line":163,"column":10,"offset":5596}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":163,"column":10,"offset":5596},"end":{"line":163,"column":14,"offset":5600}}},{"type":"text","value":". Since ","position":{"start":{"line":163,"column":14,"offset":5600},"end":{"line":163,"column":22,"offset":5608}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":163,"column":22,"offset":5608},"end":{"line":163,"column":30,"offset":5616}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":163,"column":30,"offset":5616},"end":{"line":163,"column":50,"offset":5636}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":163,"column":50,"offset":5636},"end":{"line":163,"column":53,"offset":5639}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":163,"column":53,"offset":5639},"end":{"line":163,"column":90,"offset":5676}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":163,"column":90,"offset":5676},"end":{"line":163,"column":96,"offset":5682}}},{"type":"text","value":".\n","position":{"start":{"line":163,"column":96,"offset":5682},"end":{"line":164,"column":1,"offset":5685}}},{"type":"raw","value":"<br>","position":{"start":{"line":164,"column":1,"offset":5685},"end":{"line":164,"column":5,"offset":5689}}},{"type":"text","value":"\n","position":{"start":{"line":164,"column":5,"offset":5689},"end":{"line":165,"column":1,"offset":5690}}},{"type":"raw","value":"<br>","position":{"start":{"line":165,"column":1,"offset":5690},"end":{"line":165,"column":5,"offset":5694}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":165,"column":5,"offset":5694},"end":{"line":166,"column":14,"offset":5708}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":166,"column":14,"offset":5708},"end":{"line":166,"column":18,"offset":5712}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":166,"column":18,"offset":5712},"end":{"line":166,"column":90,"offset":5784}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":166,"column":90,"offset":5784},"end":{"line":166,"column":94,"offset":5788}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":166,"column":94,"offset":5788},"end":{"line":166,"column":125,"offset":5819}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":166,"column":125,"offset":5819},"end":{"line":166,"column":131,"offset":5825}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":166,"column":131,"offset":5825},"end":{"line":167,"column":1,"offset":5840}}},{"type":"raw","value":"<br>","position":{"start":{"line":167,"column":1,"offset":5840},"end":{"line":167,"column":5,"offset":5844}}},{"type":"text","value":"\n","position":{"start":{"line":167,"column":5,"offset":5844},"end":{"line":168,"column":1,"offset":5845}}},{"type":"raw","value":"<br>","position":{"start":{"line":168,"column":1,"offset":5845},"end":{"line":168,"column":5,"offset":5849}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":168,"column":5,"offset":5849},"end":{"line":169,"column":14,"offset":5863}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":169,"column":14,"offset":5863},"end":{"line":169,"column":18,"offset":5867}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":169,"column":18,"offset":5867},"end":{"line":169,"column":37,"offset":5886}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":169,"column":37,"offset":5886},"end":{"line":169,"column":40,"offset":5889}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":169,"column":40,"offset":5889},"end":{"line":169,"column":77,"offset":5926}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":169,"column":77,"offset":5926},"end":{"line":169,"column":81,"offset":5930}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":169,"column":81,"offset":5930},"end":{"line":169,"column":99,"offset":5948}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":169,"column":99,"offset":5948},"end":{"line":169,"column":102,"offset":5951}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":169,"column":102,"offset":5951},"end":{"line":169,"column":133,"offset":5982}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":169,"column":133,"offset":5982},"end":{"line":169,"column":139,"offset":5988}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":169,"column":139,"offset":5988},"end":{"line":169,"column":167,"offset":6016}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":169,"column":167,"offset":6016},"end":{"line":169,"column":171,"offset":6020}}},{"type":"text","value":".\n","position":{"start":{"line":169,"column":171,"offset":6020},"end":{"line":170,"column":1,"offset":6022}}},{"type":"raw","value":"<br>","position":{"start":{"line":170,"column":1,"offset":6022},"end":{"line":170,"column":5,"offset":6026}}},{"type":"text","value":"\n","position":{"start":{"line":170,"column":5,"offset":6026},"end":{"line":171,"column":1,"offset":6027}}},{"type":"raw","value":"<br>","position":{"start":{"line":171,"column":1,"offset":6027},"end":{"line":171,"column":5,"offset":6031}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":171,"column":5,"offset":6031},"end":{"line":173,"column":1,"offset":6051}}},{"type":"raw","value":"<br>","position":{"start":{"line":173,"column":1,"offset":6051},"end":{"line":173,"column":5,"offset":6055}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":173,"column":5,"offset":6055},"end":{"line":174,"column":6,"offset":6061}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":174,"column":6,"offset":6061},"end":{"line":174,"column":12,"offset":6067}}},{"type":"text","value":" does not have an ","position":{"start":{"line":174,"column":12,"offset":6067},"end":{"line":174,"column":30,"offset":6085}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":174,"column":30,"offset":6085},"end":{"line":174,"column":36,"offset":6091}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":174,"column":36,"offset":6091},"end":{"line":174,"column":62,"offset":6117}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":174,"column":62,"offset":6117},"end":{"line":174,"column":75,"offset":6130}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":174,"column":75,"offset":6130},"end":{"line":174,"column":159,"offset":6214}}}],"position":{"start":{"line":159,"column":1,"offset":5489},"end":{"line":174,"column":159,"offset":6214}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":176,"column":8,"offset":6223},"end":{"line":176,"column":41,"offset":6256}}}],"position":{"start":{"line":176,"column":1,"offset":6216},"end":{"line":176,"column":41,"offset":6256}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":177,"column":1,"offset":6257},"end":{"line":182,"column":4,"offset":6332}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":183,"column":1,"offset":6333},"end":{"line":184,"column":1,"offset":6352}}},{"type":"raw","value":"<br>","position":{"start":{"line":184,"column":1,"offset":6352},"end":{"line":184,"column":5,"offset":6356}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":184,"column":5,"offset":6356},"end":{"line":186,"column":5,"offset":6494}}},{"type":"raw","value":"<br>","position":{"start":{"line":186,"column":5,"offset":6494},"end":{"line":186,"column":9,"offset":6498}}},{"type":"text","value":"\n","position":{"start":{"line":186,"column":9,"offset":6498},"end":{"line":187,"column":5,"offset":6503}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":187,"column":5,"offset":6503},"end":{"line":187,"column":27,"offset":6525}}},{"type":"text","value":"\n","position":{"start":{"line":187,"column":27,"offset":6525},"end":{"line":188,"column":5,"offset":6530}}},{"type":"raw","value":"<br>","position":{"start":{"line":188,"column":5,"offset":6530},"end":{"line":188,"column":9,"offset":6534}}},{"type":"text","value":"\n","position":{"start":{"line":188,"column":9,"offset":6534},"end":{"line":189,"column":5,"offset":6539}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":189,"column":5,"offset":6539},"end":{"line":189,"column":12,"offset":6546}}},{"type":"text","value":" and ","position":{"start":{"line":189,"column":12,"offset":6546},"end":{"line":189,"column":17,"offset":6551}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":189,"column":17,"offset":6551},"end":{"line":189,"column":25,"offset":6559}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":189,"column":25,"offset":6559},"end":{"line":189,"column":63,"offset":6597}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":189,"column":63,"offset":6597},"end":{"line":189,"column":66,"offset":6600}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":189,"column":66,"offset":6600},"end":{"line":189,"column":86,"offset":6620}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":189,"column":86,"offset":6620},"end":{"line":189,"column":89,"offset":6623}}},{"type":"text","value":" will be called with ","position":{"start":{"line":189,"column":89,"offset":6623},"end":{"line":189,"column":110,"offset":6644}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":189,"column":110,"offset":6644},"end":{"line":189,"column":119,"offset":6653}}},{"type":"text","value":".\n","position":{"start":{"line":189,"column":119,"offset":6653},"end":{"line":190,"column":1,"offset":6655}}},{"type":"raw","value":"<br>","position":{"start":{"line":190,"column":1,"offset":6655},"end":{"line":190,"column":5,"offset":6659}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":190,"column":5,"offset":6659},"end":{"line":192,"column":1,"offset":6675}}},{"type":"raw","value":"<br>","position":{"start":{"line":192,"column":1,"offset":6675},"end":{"line":192,"column":5,"offset":6679}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":192,"column":5,"offset":6679},"end":{"line":194,"column":5,"offset":6786}}},{"type":"raw","value":"<br>","position":{"start":{"line":194,"column":5,"offset":6786},"end":{"line":194,"column":9,"offset":6790}}},{"type":"text","value":"\n","position":{"start":{"line":194,"column":9,"offset":6790},"end":{"line":195,"column":1,"offset":6791}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":195,"column":1,"offset":6791},"end":{"line":195,"column":23,"offset":6813}}},{"type":"text","value":" turns into ","position":{"start":{"line":195,"column":23,"offset":6813},"end":{"line":195,"column":35,"offset":6825}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":195,"column":35,"offset":6825},"end":{"line":195,"column":61,"offset":6851}}},{"type":"text","value":"\n","position":{"start":{"line":195,"column":61,"offset":6851},"end":{"line":196,"column":1,"offset":6852}}},{"type":"raw","value":"<br>","position":{"start":{"line":196,"column":1,"offset":6852},"end":{"line":196,"column":5,"offset":6856}}},{"type":"text","value":"\nNow ","position":{"start":{"line":196,"column":5,"offset":6856},"end":{"line":197,"column":5,"offset":6861}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":197,"column":5,"offset":6861},"end":{"line":197,"column":8,"offset":6864}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":197,"column":8,"offset":6864},"end":{"line":197,"column":58,"offset":6914}}}],"position":{"start":{"line":183,"column":1,"offset":6333},"end":{"line":197,"column":58,"offset":6914}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":199,"column":1,"offset":6916},"end":{"line":200,"column":1,"offset":6934}}},{"type":"raw","value":"<br>","position":{"start":{"line":200,"column":1,"offset":6934},"end":{"line":200,"column":5,"offset":6938}}}],"position":{"start":{"line":199,"column":1,"offset":6916},"end":{"line":200,"column":5,"offset":6938}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":201,"column":1,"offset":6939},"end":{"line":203,"column":4,"offset":6969}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":204,"column":1,"offset":6970},"end":{"line":204,"column":13,"offset":6982}}}],"position":{"start":{"line":204,"column":1,"offset":6970},"end":{"line":204,"column":13,"offset":6982}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":205,"column":1,"offset":6983},"end":{"line":211,"column":4,"offset":7062}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":212,"column":1,"offset":7063},"end":{"line":212,"column":8,"offset":7070}}}],"position":{"start":{"line":212,"column":1,"offset":7063},"end":{"line":212,"column":8,"offset":7070}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":213,"column":1,"offset":7071},"end":{"line":220,"column":4,"offset":7195}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":221,"column":1,"offset":7196},"end":{"line":222,"column":5,"offset":7205}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":224,"column":1,"offset":7207},"end":{"line":224,"column":11,"offset":7217}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":224,"column":11,"offset":7217},"end":{"line":224,"column":24,"offset":7230}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":224,"column":24,"offset":7230},"end":{"line":224,"column":107,"offset":7313}}}],"position":{"start":{"line":224,"column":1,"offset":7207},"end":{"line":224,"column":107,"offset":7313}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":226,"column":7,"offset":7321},"end":{"line":226,"column":10,"offset":7324}}}],"position":{"start":{"line":226,"column":1,"offset":7315},"end":{"line":226,"column":10,"offset":7324}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":227,"column":7,"offset":7331},"end":{"line":227,"column":10,"offset":7334}}}],"position":{"start":{"line":227,"column":1,"offset":7325},"end":{"line":227,"column":10,"offset":7334}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":229,"column":6,"offset":7341},"end":{"line":229,"column":10,"offset":7345}}}],"position":{"start":{"line":229,"column":1,"offset":7336},"end":{"line":229,"column":10,"offset":7345}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":230,"column":7,"offset":7352},"end":{"line":230,"column":13,"offset":7358}}}],"position":{"start":{"line":230,"column":1,"offset":7346},"end":{"line":230,"column":13,"offset":7358}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":231,"column":1,"offset":7359},"end":{"line":231,"column":49,"offset":7407}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":231,"column":49,"offset":7407},"end":{"line":231,"column":57,"offset":7415}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":231,"column":57,"offset":7415},"end":{"line":231,"column":133,"offset":7491}}}],"position":{"start":{"line":231,"column":1,"offset":7359},"end":{"line":231,"column":133,"offset":7491}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":232,"column":1,"offset":7492},"end":{"line":242,"column":4,"offset":7687}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":243,"column":1,"offset":7688},"end":{"line":243,"column":5,"offset":7692}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":246,"column":1,"offset":7695},"end":{"line":247,"column":1,"offset":7777}}},{"type":"raw","value":"<br>","position":{"start":{"line":247,"column":1,"offset":7777},"end":{"line":247,"column":5,"offset":7781}}},{"type":"text","value":"\n","position":{"start":{"line":247,"column":5,"offset":7781},"end":{"line":248,"column":1,"offset":7782}}},{"type":"raw","value":"<br>","position":{"start":{"line":248,"column":1,"offset":7782},"end":{"line":248,"column":5,"offset":7786}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":248,"column":5,"offset":7786},"end":{"line":249,"column":26,"offset":7812}}}],"position":{"start":{"line":246,"column":1,"offset":7695},"end":{"line":249,"column":26,"offset":7812}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":250,"column":1,"offset":7813},"end":{"line":255,"column":4,"offset":7941}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":256,"column":1,"offset":7942},"end":{"line":256,"column":14,"offset":7955}}}],"position":{"start":{"line":256,"column":1,"offset":7942},"end":{"line":256,"column":14,"offset":7955}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":258,"column":1,"offset":7957},"end":{"line":271,"column":4,"offset":8239}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":273,"column":1,"offset":8241},"end":{"line":274,"column":5,"offset":8250}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":277,"column":7,"offset":8259},"end":{"line":277,"column":13,"offset":8265}}}],"position":{"start":{"line":277,"column":1,"offset":8253},"end":{"line":277,"column":13,"offset":8265}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":277,"column":13,"offset":8265}}}}