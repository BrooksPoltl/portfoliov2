{"expireTime":9007200842249509000,"key":"transformer-remark-markdown-html-ast-fe0d4c02d7e24291d4b5de6f4bb37665-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833}}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847}}},{"type":"raw","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860}}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865}}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879}}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884}}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895}}},{"type":"raw","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900}}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901}}},{"type":"raw","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906}}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911}}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":126,"offset":1037}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":29,"column":126,"offset":1037}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":30,"column":7,"offset":1044},"end":{"line":30,"column":10,"offset":1047}}}],"position":{"start":{"line":30,"column":1,"offset":1038},"end":{"line":30,"column":10,"offset":1047}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":31,"column":7,"offset":1054},"end":{"line":31,"column":10,"offset":1057}}}],"position":{"start":{"line":31,"column":1,"offset":1048},"end":{"line":31,"column":10,"offset":1057}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":33,"column":6,"offset":1064},"end":{"line":33,"column":14,"offset":1072}}}],"position":{"start":{"line":33,"column":1,"offset":1059},"end":{"line":33,"column":14,"offset":1072}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":34,"column":7,"offset":1079},"end":{"line":34,"column":10,"offset":1082}}}],"position":{"start":{"line":34,"column":1,"offset":1073},"end":{"line":34,"column":10,"offset":1082}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":36,"column":8,"offset":1091},"end":{"line":36,"column":30,"offset":1113}}}],"position":{"start":{"line":36,"column":1,"offset":1084},"end":{"line":36,"column":30,"offset":1113}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":38,"column":1,"offset":1115},"end":{"line":39,"column":1,"offset":1259}}},{"type":"raw","value":"<br>","position":{"start":{"line":39,"column":1,"offset":1259},"end":{"line":39,"column":5,"offset":1263}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":39,"column":5,"offset":1263},"end":{"line":39,"column":16,"offset":1274}}},{"type":"raw","value":"<br>","position":{"start":{"line":39,"column":16,"offset":1274},"end":{"line":39,"column":20,"offset":1278}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":39,"column":20,"offset":1278},"end":{"line":41,"column":1,"offset":1422}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":1,"offset":1422},"end":{"line":41,"column":5,"offset":1426}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":41,"column":5,"offset":1426},"end":{"line":41,"column":16,"offset":1437}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":16,"offset":1437},"end":{"line":41,"column":20,"offset":1441}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":41,"column":20,"offset":1441},"end":{"line":42,"column":45,"offset":1486}}},{"type":"raw","value":"<br>","position":{"start":{"line":42,"column":45,"offset":1486},"end":{"line":42,"column":49,"offset":1490}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":42,"column":49,"offset":1490},"end":{"line":42,"column":65,"offset":1506}}},{"type":"raw","value":"<br>","position":{"start":{"line":42,"column":65,"offset":1506},"end":{"line":42,"column":69,"offset":1510}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":42,"column":69,"offset":1510},"end":{"line":44,"column":1,"offset":1553}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1553},"end":{"line":44,"column":5,"offset":1557}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":44,"column":5,"offset":1557},"end":{"line":44,"column":22,"offset":1574}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":22,"offset":1574},"end":{"line":44,"column":26,"offset":1578}}},{"type":"text","value":"\n","position":{"start":{"line":44,"column":26,"offset":1578},"end":{"line":45,"column":1,"offset":1579}}},{"type":"raw","value":"<br>","position":{"start":{"line":45,"column":1,"offset":1579},"end":{"line":45,"column":5,"offset":1583}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":45,"column":5,"offset":1583},"end":{"line":47,"column":1,"offset":1701}}},{"type":"raw","value":"<br>","position":{"start":{"line":47,"column":1,"offset":1701},"end":{"line":47,"column":5,"offset":1705}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":47,"column":5,"offset":1705},"end":{"line":49,"column":1,"offset":1826}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":49,"column":1,"offset":1826},"end":{"line":49,"column":12,"offset":1837}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":49,"column":12,"offset":1837},"end":{"line":49,"column":68,"offset":1893}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":49,"column":68,"offset":1893},"end":{"line":49,"column":79,"offset":1904}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":49,"column":79,"offset":1904},"end":{"line":49,"column":106,"offset":1931}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":49,"column":106,"offset":1931},"end":{"line":49,"column":109,"offset":1934}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":49,"column":109,"offset":1934},"end":{"line":49,"column":189,"offset":2014}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":49,"column":189,"offset":2014},"end":{"line":49,"column":192,"offset":2017}}},{"type":"text","value":" to get 3.","position":{"start":{"line":49,"column":192,"offset":2017},"end":{"line":49,"column":202,"offset":2027}}}],"position":{"start":{"line":38,"column":1,"offset":1115},"end":{"line":49,"column":202,"offset":2027}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":51,"column":8,"offset":2036},"end":{"line":51,"column":14,"offset":2042}}}],"position":{"start":{"line":51,"column":1,"offset":2029},"end":{"line":51,"column":14,"offset":2042}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":52,"column":1,"offset":2043},"end":{"line":52,"column":9,"offset":2051}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":52,"column":9,"offset":2051},"end":{"line":52,"column":73,"offset":2115}}}],"position":{"start":{"line":52,"column":1,"offset":2043},"end":{"line":52,"column":73,"offset":2115}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":53,"column":1,"offset":2116},"end":{"line":56,"column":4,"offset":2155}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":57,"column":1,"offset":2156},"end":{"line":57,"column":5,"offset":2160}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":59,"column":1,"offset":2162},"end":{"line":59,"column":72,"offset":2233}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":59,"column":72,"offset":2233},"end":{"line":59,"column":80,"offset":2241}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":59,"column":80,"offset":2241},"end":{"line":60,"column":1,"offset":2265}}},{"type":"raw","value":"<br>","position":{"start":{"line":60,"column":1,"offset":2265},"end":{"line":60,"column":5,"offset":2269}}},{"type":"text","value":"\n","position":{"start":{"line":60,"column":5,"offset":2269},"end":{"line":61,"column":1,"offset":2270}}},{"type":"raw","value":"<br>","position":{"start":{"line":61,"column":1,"offset":2270},"end":{"line":61,"column":5,"offset":2274}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":61,"column":5,"offset":2274},"end":{"line":62,"column":184,"offset":2458}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":62,"column":184,"offset":2458},"end":{"line":62,"column":187,"offset":2461}}},{"type":"text","value":".\n","position":{"start":{"line":62,"column":187,"offset":2461},"end":{"line":63,"column":1,"offset":2464}}},{"type":"raw","value":"<br>","position":{"start":{"line":63,"column":1,"offset":2464},"end":{"line":63,"column":5,"offset":2468}}},{"type":"text","value":"\n","position":{"start":{"line":63,"column":5,"offset":2468},"end":{"line":64,"column":1,"offset":2469}}},{"type":"raw","value":"<br>","position":{"start":{"line":64,"column":1,"offset":2469},"end":{"line":64,"column":5,"offset":2473}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":64,"column":5,"offset":2473},"end":{"line":65,"column":27,"offset":2500}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":65,"column":27,"offset":2500},"end":{"line":65,"column":35,"offset":2508}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":65,"column":35,"offset":2508},"end":{"line":65,"column":86,"offset":2559}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":65,"column":86,"offset":2559},"end":{"line":65,"column":95,"offset":2568}}},{"type":"text","value":". ","position":{"start":{"line":65,"column":95,"offset":2568},"end":{"line":65,"column":97,"offset":2570}}}],"position":{"start":{"line":59,"column":1,"offset":2162},"end":{"line":65,"column":97,"offset":2570}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":67,"column":1,"offset":2572},"end":{"line":67,"column":6,"offset":2577}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":69,"column":1,"offset":2579},"end":{"line":70,"column":1,"offset":2623}}},{"type":"raw","value":"<br>","position":{"start":{"line":70,"column":1,"offset":2623},"end":{"line":70,"column":5,"offset":2627}}},{"type":"text","value":"\n","position":{"start":{"line":70,"column":5,"offset":2627},"end":{"line":71,"column":1,"offset":2628}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":71,"column":1,"offset":2628},"end":{"line":71,"column":22,"offset":2649}}},{"type":"text","value":"\n","position":{"start":{"line":71,"column":22,"offset":2649},"end":{"line":72,"column":1,"offset":2650}}},{"type":"raw","value":"<br>","position":{"start":{"line":72,"column":1,"offset":2650},"end":{"line":72,"column":5,"offset":2654}}}],"position":{"start":{"line":69,"column":1,"offset":2579},"end":{"line":72,"column":5,"offset":2654}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":74,"column":1,"offset":2656},"end":{"line":74,"column":152,"offset":2807}}}],"position":{"start":{"line":74,"column":1,"offset":2656},"end":{"line":74,"column":152,"offset":2807}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":76,"column":8,"offset":2816},"end":{"line":76,"column":20,"offset":2828}}}],"position":{"start":{"line":76,"column":1,"offset":2809},"end":{"line":76,"column":20,"offset":2828}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":78,"column":1,"offset":2830},"end":{"line":78,"column":56,"offset":2885}}}],"position":{"start":{"line":78,"column":1,"offset":2830},"end":{"line":78,"column":56,"offset":2885}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":79,"column":1,"offset":2886},"end":{"line":84,"column":4,"offset":2977}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":85,"column":1,"offset":2978},"end":{"line":85,"column":5,"offset":2982}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":87,"column":1,"offset":2984},"end":{"line":87,"column":37,"offset":3020}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":87,"column":37,"offset":3020},"end":{"line":87,"column":41,"offset":3024}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":87,"column":41,"offset":3024},"end":{"line":88,"column":1,"offset":3041}}},{"type":"raw","value":"<br>","position":{"start":{"line":88,"column":1,"offset":3041},"end":{"line":88,"column":5,"offset":3045}}},{"type":"text","value":"\n","position":{"start":{"line":88,"column":5,"offset":3045},"end":{"line":89,"column":1,"offset":3046}}},{"type":"raw","value":"<br>","position":{"start":{"line":89,"column":1,"offset":3046},"end":{"line":89,"column":5,"offset":3050}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":89,"column":5,"offset":3050},"end":{"line":90,"column":66,"offset":3116}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":90,"column":66,"offset":3116},"end":{"line":90,"column":89,"offset":3139}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":90,"column":89,"offset":3139},"end":{"line":91,"column":1,"offset":3179}}},{"type":"raw","value":"<br>","position":{"start":{"line":91,"column":1,"offset":3179},"end":{"line":91,"column":5,"offset":3183}}},{"type":"text","value":"\n","position":{"start":{"line":91,"column":5,"offset":3183},"end":{"line":92,"column":1,"offset":3184}}},{"type":"raw","value":"<br>","position":{"start":{"line":92,"column":1,"offset":3184},"end":{"line":92,"column":5,"offset":3188}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":92,"column":5,"offset":3188},"end":{"line":93,"column":21,"offset":3209}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":93,"column":21,"offset":3209},"end":{"line":93,"column":25,"offset":3213}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":93,"column":25,"offset":3213},"end":{"line":94,"column":1,"offset":3267}}},{"type":"raw","value":"<br>","position":{"start":{"line":94,"column":1,"offset":3267},"end":{"line":94,"column":5,"offset":3271}}},{"type":"text","value":"\n","position":{"start":{"line":94,"column":5,"offset":3271},"end":{"line":95,"column":1,"offset":3272}}},{"type":"raw","value":"<br>","position":{"start":{"line":95,"column":1,"offset":3272},"end":{"line":95,"column":5,"offset":3276}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":95,"column":5,"offset":3276},"end":{"line":96,"column":21,"offset":3297}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":96,"column":21,"offset":3297},"end":{"line":96,"column":25,"offset":3301}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":96,"column":25,"offset":3301},"end":{"line":97,"column":1,"offset":3356}}},{"type":"raw","value":"<br>","position":{"start":{"line":97,"column":1,"offset":3356},"end":{"line":97,"column":5,"offset":3360}}},{"type":"text","value":"\n","position":{"start":{"line":97,"column":5,"offset":3360},"end":{"line":98,"column":1,"offset":3361}}},{"type":"raw","value":"<br>","position":{"start":{"line":98,"column":1,"offset":3361},"end":{"line":98,"column":5,"offset":3365}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":98,"column":5,"offset":3365},"end":{"line":99,"column":58,"offset":3423}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":99,"column":58,"offset":3423},"end":{"line":99,"column":61,"offset":3426}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":99,"column":61,"offset":3426},"end":{"line":99,"column":145,"offset":3510}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":99,"column":145,"offset":3510},"end":{"line":99,"column":153,"offset":3518}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":99,"column":153,"offset":3518},"end":{"line":99,"column":178,"offset":3543}}}],"position":{"start":{"line":87,"column":1,"offset":2984},"end":{"line":99,"column":178,"offset":3543}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":101,"column":7,"offset":3551},"end":{"line":101,"column":10,"offset":3554}}}],"position":{"start":{"line":101,"column":1,"offset":3545},"end":{"line":101,"column":10,"offset":3554}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":103,"column":8,"offset":3563},"end":{"line":103,"column":17,"offset":3572}}}],"position":{"start":{"line":103,"column":1,"offset":3556},"end":{"line":103,"column":17,"offset":3572}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":104,"column":1,"offset":3573},"end":{"line":115,"column":4,"offset":3772}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":116,"column":1,"offset":3773},"end":{"line":116,"column":5,"offset":3777}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":118,"column":1,"offset":3779},"end":{"line":119,"column":1,"offset":3995}}},{"type":"raw","value":"<br>","position":{"start":{"line":119,"column":1,"offset":3995},"end":{"line":119,"column":5,"offset":3999}}},{"type":"text","value":"\n","position":{"start":{"line":119,"column":5,"offset":3999},"end":{"line":120,"column":1,"offset":4000}}},{"type":"raw","value":"<br>","position":{"start":{"line":120,"column":1,"offset":4000},"end":{"line":120,"column":5,"offset":4004}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":120,"column":5,"offset":4004},"end":{"line":121,"column":72,"offset":4076}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":121,"column":72,"offset":4076},"end":{"line":121,"column":81,"offset":4085}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":121,"column":81,"offset":4085},"end":{"line":122,"column":1,"offset":4104}}},{"type":"raw","value":"<br>","position":{"start":{"line":122,"column":1,"offset":4104},"end":{"line":122,"column":5,"offset":4108}}},{"type":"text","value":"\n","position":{"start":{"line":122,"column":5,"offset":4108},"end":{"line":123,"column":1,"offset":4109}}},{"type":"raw","value":"<br>","position":{"start":{"line":123,"column":1,"offset":4109},"end":{"line":123,"column":5,"offset":4113}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":123,"column":5,"offset":4113},"end":{"line":124,"column":10,"offset":4123}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":124,"column":10,"offset":4123},"end":{"line":124,"column":16,"offset":4129}}},{"type":"text","value":" gets called with ","position":{"start":{"line":124,"column":16,"offset":4129},"end":{"line":124,"column":34,"offset":4147}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":124,"column":34,"offset":4147},"end":{"line":124,"column":42,"offset":4155}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":124,"column":42,"offset":4155},"end":{"line":125,"column":24,"offset":4180}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":125,"column":24,"offset":4180},"end":{"line":125,"column":33,"offset":4189}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":125,"column":33,"offset":4189},"end":{"line":125,"column":107,"offset":4263}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":125,"column":107,"offset":4263},"end":{"line":125,"column":116,"offset":4272}}},{"type":"text","value":" is false because ","position":{"start":{"line":125,"column":116,"offset":4272},"end":{"line":125,"column":134,"offset":4290}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":125,"column":134,"offset":4290},"end":{"line":125,"column":137,"offset":4293}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":125,"column":137,"offset":4293},"end":{"line":125,"column":161,"offset":4317}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":125,"column":161,"offset":4317},"end":{"line":125,"column":167,"offset":4323}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":125,"column":167,"offset":4323},"end":{"line":125,"column":192,"offset":4348}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":125,"column":192,"offset":4348},"end":{"line":125,"column":200,"offset":4356}}},{"type":"text","value":". This is because ","position":{"start":{"line":125,"column":200,"offset":4356},"end":{"line":125,"column":218,"offset":4374}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":125,"column":218,"offset":4374},"end":{"line":125,"column":224,"offset":4380}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":125,"column":224,"offset":4380},"end":{"line":125,"column":245,"offset":4401}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":125,"column":245,"offset":4401},"end":{"line":125,"column":252,"offset":4408}}},{"type":"text","value":" and ","position":{"start":{"line":125,"column":252,"offset":4408},"end":{"line":125,"column":257,"offset":4413}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":125,"column":257,"offset":4413},"end":{"line":125,"column":260,"offset":4416}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":125,"column":260,"offset":4416},"end":{"line":125,"column":285,"offset":4441}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":125,"column":285,"offset":4441},"end":{"line":125,"column":291,"offset":4447}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":125,"column":291,"offset":4447},"end":{"line":126,"column":96,"offset":4573}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":126,"column":96,"offset":4573},"end":{"line":126,"column":111,"offset":4588}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":126,"column":111,"offset":4588},"end":{"line":126,"column":182,"offset":4659}}}],"position":{"start":{"line":118,"column":1,"offset":3779},"end":{"line":126,"column":182,"offset":4659}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":128,"column":8,"offset":4668},"end":{"line":128,"column":19,"offset":4679}}}],"position":{"start":{"line":128,"column":1,"offset":4661},"end":{"line":128,"column":19,"offset":4679}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":129,"column":1,"offset":4680},"end":{"line":129,"column":14,"offset":4693}}}],"position":{"start":{"line":129,"column":1,"offset":4680},"end":{"line":129,"column":14,"offset":4693}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":130,"column":1,"offset":4694},"end":{"line":145,"column":4,"offset":5109}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":146,"column":1,"offset":5110},"end":{"line":146,"column":5,"offset":5114}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":148,"column":1,"offset":5116},"end":{"line":148,"column":141,"offset":5256}}}],"position":{"start":{"line":148,"column":1,"offset":5116},"end":{"line":148,"column":141,"offset":5256}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":150,"column":8,"offset":5265},"end":{"line":150,"column":30,"offset":5287}}}],"position":{"start":{"line":150,"column":1,"offset":5258},"end":{"line":150,"column":30,"offset":5287}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":151,"column":1,"offset":5288},"end":{"line":151,"column":199,"offset":5486}}}],"position":{"start":{"line":151,"column":1,"offset":5288},"end":{"line":151,"column":199,"offset":5486}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":153,"column":8,"offset":5495},"end":{"line":153,"column":30,"offset":5517}}}],"position":{"start":{"line":153,"column":1,"offset":5488},"end":{"line":153,"column":30,"offset":5517}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":155,"column":1,"offset":5519},"end":{"line":156,"column":1,"offset":5594}}},{"type":"raw","value":"<br>","position":{"start":{"line":156,"column":1,"offset":5594},"end":{"line":156,"column":5,"offset":5598}}},{"type":"text","value":"\n","position":{"start":{"line":156,"column":5,"offset":5598},"end":{"line":157,"column":1,"offset":5599}}},{"type":"raw","value":"<br>","position":{"start":{"line":157,"column":1,"offset":5599},"end":{"line":157,"column":5,"offset":5603}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":157,"column":5,"offset":5603},"end":{"line":159,"column":1,"offset":5665}}},{"type":"raw","value":"<br>","position":{"start":{"line":159,"column":1,"offset":5665},"end":{"line":159,"column":5,"offset":5669}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":159,"column":5,"offset":5669},"end":{"line":160,"column":1,"offset":5672}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":160,"column":1,"offset":5672},"end":{"line":160,"column":11,"offset":5682}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":160,"column":11,"offset":5682},"end":{"line":160,"column":19,"offset":5690}}},{"type":"text","value":" and ","position":{"start":{"line":160,"column":19,"offset":5690},"end":{"line":160,"column":24,"offset":5695}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":160,"column":24,"offset":5695},"end":{"line":160,"column":34,"offset":5705}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":160,"column":34,"offset":5705},"end":{"line":161,"column":1,"offset":5754}}},{"type":"raw","value":"<br>","position":{"start":{"line":161,"column":1,"offset":5754},"end":{"line":161,"column":5,"offset":5758}}}],"position":{"start":{"line":155,"column":1,"offset":5519},"end":{"line":161,"column":5,"offset":5758}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":163,"column":8,"offset":5767},"end":{"line":163,"column":12,"offset":5771}}}],"position":{"start":{"line":163,"column":1,"offset":5760},"end":{"line":163,"column":12,"offset":5771}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":164,"column":1,"offset":5772},"end":{"line":169,"column":4,"offset":5883}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":170,"column":1,"offset":5884},"end":{"line":171,"column":5,"offset":5893}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":173,"column":1,"offset":5895},"end":{"line":173,"column":7,"offset":5901}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":173,"column":7,"offset":5901},"end":{"line":175,"column":1,"offset":5983}}},{"type":"raw","value":"<br>","position":{"start":{"line":175,"column":1,"offset":5983},"end":{"line":175,"column":5,"offset":5987}}},{"type":"text","value":"\n","position":{"start":{"line":175,"column":5,"offset":5987},"end":{"line":176,"column":1,"offset":5988}}},{"type":"raw","value":"<br>","position":{"start":{"line":176,"column":1,"offset":5988},"end":{"line":176,"column":5,"offset":5992}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":176,"column":5,"offset":5992},"end":{"line":177,"column":10,"offset":6002}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":177,"column":10,"offset":6002},"end":{"line":177,"column":14,"offset":6006}}},{"type":"text","value":". Since ","position":{"start":{"line":177,"column":14,"offset":6006},"end":{"line":177,"column":22,"offset":6014}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":177,"column":22,"offset":6014},"end":{"line":177,"column":30,"offset":6022}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":177,"column":30,"offset":6022},"end":{"line":177,"column":50,"offset":6042}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":177,"column":50,"offset":6042},"end":{"line":177,"column":53,"offset":6045}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":177,"column":53,"offset":6045},"end":{"line":177,"column":90,"offset":6082}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":177,"column":90,"offset":6082},"end":{"line":177,"column":96,"offset":6088}}},{"type":"text","value":".\n","position":{"start":{"line":177,"column":96,"offset":6088},"end":{"line":178,"column":1,"offset":6091}}},{"type":"raw","value":"<br>","position":{"start":{"line":178,"column":1,"offset":6091},"end":{"line":178,"column":5,"offset":6095}}},{"type":"text","value":"\n","position":{"start":{"line":178,"column":5,"offset":6095},"end":{"line":179,"column":1,"offset":6096}}},{"type":"raw","value":"<br>","position":{"start":{"line":179,"column":1,"offset":6096},"end":{"line":179,"column":5,"offset":6100}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":179,"column":5,"offset":6100},"end":{"line":180,"column":14,"offset":6114}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":180,"column":14,"offset":6114},"end":{"line":180,"column":18,"offset":6118}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":180,"column":18,"offset":6118},"end":{"line":180,"column":90,"offset":6190}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":180,"column":90,"offset":6190},"end":{"line":180,"column":94,"offset":6194}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":180,"column":94,"offset":6194},"end":{"line":180,"column":125,"offset":6225}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":180,"column":125,"offset":6225},"end":{"line":180,"column":131,"offset":6231}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":180,"column":131,"offset":6231},"end":{"line":181,"column":1,"offset":6246}}},{"type":"raw","value":"<br>","position":{"start":{"line":181,"column":1,"offset":6246},"end":{"line":181,"column":5,"offset":6250}}},{"type":"text","value":"\n","position":{"start":{"line":181,"column":5,"offset":6250},"end":{"line":182,"column":1,"offset":6251}}},{"type":"raw","value":"<br>","position":{"start":{"line":182,"column":1,"offset":6251},"end":{"line":182,"column":5,"offset":6255}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":182,"column":5,"offset":6255},"end":{"line":183,"column":14,"offset":6269}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":183,"column":14,"offset":6269},"end":{"line":183,"column":18,"offset":6273}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":183,"column":18,"offset":6273},"end":{"line":183,"column":37,"offset":6292}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":183,"column":37,"offset":6292},"end":{"line":183,"column":40,"offset":6295}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":183,"column":40,"offset":6295},"end":{"line":183,"column":77,"offset":6332}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":183,"column":77,"offset":6332},"end":{"line":183,"column":81,"offset":6336}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":183,"column":81,"offset":6336},"end":{"line":183,"column":99,"offset":6354}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":183,"column":99,"offset":6354},"end":{"line":183,"column":102,"offset":6357}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":183,"column":102,"offset":6357},"end":{"line":183,"column":133,"offset":6388}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":183,"column":133,"offset":6388},"end":{"line":183,"column":139,"offset":6394}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":183,"column":139,"offset":6394},"end":{"line":183,"column":167,"offset":6422}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":183,"column":167,"offset":6422},"end":{"line":183,"column":171,"offset":6426}}},{"type":"text","value":".\n","position":{"start":{"line":183,"column":171,"offset":6426},"end":{"line":184,"column":1,"offset":6428}}},{"type":"raw","value":"<br>","position":{"start":{"line":184,"column":1,"offset":6428},"end":{"line":184,"column":5,"offset":6432}}},{"type":"text","value":"\n","position":{"start":{"line":184,"column":5,"offset":6432},"end":{"line":185,"column":1,"offset":6433}}},{"type":"raw","value":"<br>","position":{"start":{"line":185,"column":1,"offset":6433},"end":{"line":185,"column":5,"offset":6437}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":185,"column":5,"offset":6437},"end":{"line":187,"column":1,"offset":6457}}},{"type":"raw","value":"<br>","position":{"start":{"line":187,"column":1,"offset":6457},"end":{"line":187,"column":5,"offset":6461}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":187,"column":5,"offset":6461},"end":{"line":188,"column":6,"offset":6467}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":188,"column":6,"offset":6467},"end":{"line":188,"column":12,"offset":6473}}},{"type":"text","value":" does not have an ","position":{"start":{"line":188,"column":12,"offset":6473},"end":{"line":188,"column":30,"offset":6491}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":188,"column":30,"offset":6491},"end":{"line":188,"column":36,"offset":6497}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":188,"column":36,"offset":6497},"end":{"line":188,"column":62,"offset":6523}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":188,"column":62,"offset":6523},"end":{"line":188,"column":75,"offset":6536}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":188,"column":75,"offset":6536},"end":{"line":188,"column":159,"offset":6620}}}],"position":{"start":{"line":173,"column":1,"offset":5895},"end":{"line":188,"column":159,"offset":6620}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":190,"column":8,"offset":6629},"end":{"line":190,"column":41,"offset":6662}}}],"position":{"start":{"line":190,"column":1,"offset":6622},"end":{"line":190,"column":41,"offset":6662}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":191,"column":1,"offset":6663},"end":{"line":196,"column":4,"offset":6738}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":197,"column":1,"offset":6739},"end":{"line":198,"column":1,"offset":6758}}},{"type":"raw","value":"<br>","position":{"start":{"line":198,"column":1,"offset":6758},"end":{"line":198,"column":5,"offset":6762}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":198,"column":5,"offset":6762},"end":{"line":200,"column":5,"offset":6900}}},{"type":"raw","value":"<br>","position":{"start":{"line":200,"column":5,"offset":6900},"end":{"line":200,"column":9,"offset":6904}}},{"type":"text","value":"\n","position":{"start":{"line":200,"column":9,"offset":6904},"end":{"line":201,"column":5,"offset":6909}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":201,"column":5,"offset":6909},"end":{"line":201,"column":27,"offset":6931}}},{"type":"text","value":"\n","position":{"start":{"line":201,"column":27,"offset":6931},"end":{"line":202,"column":5,"offset":6936}}},{"type":"raw","value":"<br>","position":{"start":{"line":202,"column":5,"offset":6936},"end":{"line":202,"column":9,"offset":6940}}},{"type":"text","value":"\n","position":{"start":{"line":202,"column":9,"offset":6940},"end":{"line":203,"column":5,"offset":6945}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":203,"column":5,"offset":6945},"end":{"line":203,"column":12,"offset":6952}}},{"type":"text","value":" and ","position":{"start":{"line":203,"column":12,"offset":6952},"end":{"line":203,"column":17,"offset":6957}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":203,"column":17,"offset":6957},"end":{"line":203,"column":25,"offset":6965}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":203,"column":25,"offset":6965},"end":{"line":203,"column":63,"offset":7003}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":203,"column":63,"offset":7003},"end":{"line":203,"column":66,"offset":7006}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":203,"column":66,"offset":7006},"end":{"line":203,"column":86,"offset":7026}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":203,"column":86,"offset":7026},"end":{"line":203,"column":89,"offset":7029}}},{"type":"text","value":" will be called with ","position":{"start":{"line":203,"column":89,"offset":7029},"end":{"line":203,"column":110,"offset":7050}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":203,"column":110,"offset":7050},"end":{"line":203,"column":119,"offset":7059}}},{"type":"text","value":".\n","position":{"start":{"line":203,"column":119,"offset":7059},"end":{"line":204,"column":1,"offset":7061}}},{"type":"raw","value":"<br>","position":{"start":{"line":204,"column":1,"offset":7061},"end":{"line":204,"column":5,"offset":7065}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":204,"column":5,"offset":7065},"end":{"line":206,"column":1,"offset":7081}}},{"type":"raw","value":"<br>","position":{"start":{"line":206,"column":1,"offset":7081},"end":{"line":206,"column":5,"offset":7085}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":206,"column":5,"offset":7085},"end":{"line":208,"column":5,"offset":7192}}},{"type":"raw","value":"<br>","position":{"start":{"line":208,"column":5,"offset":7192},"end":{"line":208,"column":9,"offset":7196}}},{"type":"text","value":"\n","position":{"start":{"line":208,"column":9,"offset":7196},"end":{"line":209,"column":1,"offset":7197}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":209,"column":1,"offset":7197},"end":{"line":209,"column":23,"offset":7219}}},{"type":"text","value":" turns into ","position":{"start":{"line":209,"column":23,"offset":7219},"end":{"line":209,"column":35,"offset":7231}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":209,"column":35,"offset":7231},"end":{"line":209,"column":61,"offset":7257}}},{"type":"text","value":"\n","position":{"start":{"line":209,"column":61,"offset":7257},"end":{"line":210,"column":1,"offset":7258}}},{"type":"raw","value":"<br>","position":{"start":{"line":210,"column":1,"offset":7258},"end":{"line":210,"column":5,"offset":7262}}},{"type":"text","value":"\nNow ","position":{"start":{"line":210,"column":5,"offset":7262},"end":{"line":211,"column":5,"offset":7267}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":211,"column":5,"offset":7267},"end":{"line":211,"column":8,"offset":7270}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":211,"column":8,"offset":7270},"end":{"line":211,"column":58,"offset":7320}}}],"position":{"start":{"line":197,"column":1,"offset":6739},"end":{"line":211,"column":58,"offset":7320}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":213,"column":1,"offset":7322},"end":{"line":214,"column":1,"offset":7340}}},{"type":"raw","value":"<br>","position":{"start":{"line":214,"column":1,"offset":7340},"end":{"line":214,"column":5,"offset":7344}}}],"position":{"start":{"line":213,"column":1,"offset":7322},"end":{"line":214,"column":5,"offset":7344}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":215,"column":1,"offset":7345},"end":{"line":217,"column":4,"offset":7375}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":218,"column":1,"offset":7376},"end":{"line":218,"column":13,"offset":7388}}}],"position":{"start":{"line":218,"column":1,"offset":7376},"end":{"line":218,"column":13,"offset":7388}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":219,"column":1,"offset":7389},"end":{"line":225,"column":4,"offset":7468}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":226,"column":1,"offset":7469},"end":{"line":226,"column":8,"offset":7476}}}],"position":{"start":{"line":226,"column":1,"offset":7469},"end":{"line":226,"column":8,"offset":7476}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":227,"column":1,"offset":7477},"end":{"line":234,"column":4,"offset":7601}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":235,"column":1,"offset":7602},"end":{"line":236,"column":5,"offset":7611}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":238,"column":1,"offset":7613},"end":{"line":238,"column":11,"offset":7623}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":238,"column":11,"offset":7623},"end":{"line":238,"column":24,"offset":7636}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":238,"column":24,"offset":7636},"end":{"line":238,"column":107,"offset":7719}}}],"position":{"start":{"line":238,"column":1,"offset":7613},"end":{"line":238,"column":107,"offset":7719}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":240,"column":7,"offset":7727},"end":{"line":240,"column":10,"offset":7730}}}],"position":{"start":{"line":240,"column":1,"offset":7721},"end":{"line":240,"column":10,"offset":7730}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":241,"column":7,"offset":7737},"end":{"line":241,"column":10,"offset":7740}}}],"position":{"start":{"line":241,"column":1,"offset":7731},"end":{"line":241,"column":10,"offset":7740}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":243,"column":6,"offset":7747},"end":{"line":243,"column":10,"offset":7751}}}],"position":{"start":{"line":243,"column":1,"offset":7742},"end":{"line":243,"column":10,"offset":7751}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":244,"column":7,"offset":7758},"end":{"line":244,"column":13,"offset":7764}}}],"position":{"start":{"line":244,"column":1,"offset":7752},"end":{"line":244,"column":13,"offset":7764}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":245,"column":1,"offset":7765},"end":{"line":245,"column":49,"offset":7813}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":245,"column":49,"offset":7813},"end":{"line":245,"column":57,"offset":7821}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":245,"column":57,"offset":7821},"end":{"line":245,"column":133,"offset":7897}}}],"position":{"start":{"line":245,"column":1,"offset":7765},"end":{"line":245,"column":133,"offset":7897}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":246,"column":1,"offset":7898},"end":{"line":256,"column":4,"offset":8093}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":257,"column":1,"offset":8094},"end":{"line":257,"column":5,"offset":8098}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":260,"column":1,"offset":8101},"end":{"line":261,"column":1,"offset":8183}}},{"type":"raw","value":"<br>","position":{"start":{"line":261,"column":1,"offset":8183},"end":{"line":261,"column":5,"offset":8187}}},{"type":"text","value":"\n","position":{"start":{"line":261,"column":5,"offset":8187},"end":{"line":262,"column":1,"offset":8188}}},{"type":"raw","value":"<br>","position":{"start":{"line":262,"column":1,"offset":8188},"end":{"line":262,"column":5,"offset":8192}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":262,"column":5,"offset":8192},"end":{"line":263,"column":26,"offset":8218}}}],"position":{"start":{"line":260,"column":1,"offset":8101},"end":{"line":263,"column":26,"offset":8218}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":264,"column":1,"offset":8219},"end":{"line":269,"column":4,"offset":8347}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":270,"column":1,"offset":8348},"end":{"line":270,"column":14,"offset":8361}}}],"position":{"start":{"line":270,"column":1,"offset":8348},"end":{"line":270,"column":14,"offset":8361}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":272,"column":1,"offset":8363},"end":{"line":285,"column":4,"offset":8645}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":287,"column":1,"offset":8647},"end":{"line":288,"column":5,"offset":8656}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":291,"column":7,"offset":8665},"end":{"line":291,"column":13,"offset":8671}}}],"position":{"start":{"line":291,"column":1,"offset":8659},"end":{"line":291,"column":13,"offset":8671}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":291,"column":13,"offset":8671}}}}