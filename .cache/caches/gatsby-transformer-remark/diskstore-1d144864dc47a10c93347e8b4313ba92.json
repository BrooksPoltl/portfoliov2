{"expireTime":9007200842154207000,"key":"transformer-remark-markdown-html-6db9bf20608a4216de0e95b88b583016-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":"<p>This article is a part of a series where I go through <a href=\"https://teachyourselfcs.com/\">teachyourselfcs</a>.\nIf you would like to start at the beginning start <a href=\"http://localhost:8000/teachyourselfcs/programming/00:getting-started/\">here</a>.</p>\n<h5>INTRO</h5>\n<h5>LECTURE</h5>\n<h6>L01</h6>\n<p>Class starts by going over some sytax for Scheme.languages do mathmatical operations the same way we learned in grade school:\n<br><code class=\"language-text\">2 + 2 + 3</code><br>\nScheme uses a different syntax where operator is the always on the left and you can as many numbers as you would like: <br><code class=\"language-text\">(+ 2 2 3)</code><br>\nNow lets say we want to do something like:  <br><code class=\"language-text\">2 + 2 +  3 - 4</code><br>\nIn Scheme you can simply nest operators:\n<br><code class=\"language-text\">(- (+ 2 2 3) 4)</code><br></p>\n<p>Scheme will </p>\n<h6>L02</h6>\n<h5>BOOK</h5>\n<h6>1.1</h6>\n<h6>1.2</h6>\n<h6>1.3</h6>\n<h5>LABS</h5>\n<h6>Lab 1</h6>\n<h6>Lab 2</h6>"}