{"expireTime":9007200842249856000,"key":"transformer-remark-markdown-ast-eff90f806a7ee3a92b4f8119a6e7d61f-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632},"indent":[]}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities. \n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705},"indent":[]}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791},"indent":[]}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833},"indent":[]}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865},"indent":[]}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884},"indent":[]}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916},"indent":[]}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":33,"column":1,"offset":1053},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Environment","position":{"start":{"line":33,"column":3,"offset":1055},"end":{"line":33,"column":14,"offset":1066},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1053},"end":{"line":33,"column":16,"offset":1068},"indent":[]}},{"type":"text","value":": The key-object pairs the interpreter keeps in memory.","position":{"start":{"line":33,"column":16,"offset":1068},"end":{"line":33,"column":71,"offset":1123},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":33,"column":71,"offset":1123},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":35,"column":7,"offset":1131},"end":{"line":35,"column":10,"offset":1134},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1125},"end":{"line":35,"column":10,"offset":1134},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":36,"column":7,"offset":1141},"end":{"line":36,"column":10,"offset":1144},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1135},"end":{"line":36,"column":10,"offset":1144},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":38,"column":6,"offset":1151},"end":{"line":38,"column":14,"offset":1159},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1146},"end":{"line":38,"column":14,"offset":1159},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":39,"column":7,"offset":1166},"end":{"line":39,"column":10,"offset":1169},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1160},"end":{"line":39,"column":10,"offset":1169},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":41,"column":8,"offset":1178},"end":{"line":41,"column":30,"offset":1200},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1171},"end":{"line":41,"column":30,"offset":1200},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":43,"column":1,"offset":1202},"end":{"line":44,"column":1,"offset":1346},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1346},"end":{"line":44,"column":5,"offset":1350},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":44,"column":5,"offset":1350},"end":{"line":44,"column":16,"offset":1361},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":44,"column":16,"offset":1361},"end":{"line":44,"column":20,"offset":1365},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":44,"column":20,"offset":1365},"end":{"line":46,"column":1,"offset":1509},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":46,"column":1,"offset":1509},"end":{"line":46,"column":5,"offset":1513},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":46,"column":5,"offset":1513},"end":{"line":46,"column":16,"offset":1524},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":46,"column":16,"offset":1524},"end":{"line":46,"column":20,"offset":1528},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":46,"column":20,"offset":1528},"end":{"line":47,"column":45,"offset":1573},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":47,"column":45,"offset":1573},"end":{"line":47,"column":49,"offset":1577},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":47,"column":49,"offset":1577},"end":{"line":47,"column":65,"offset":1593},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":47,"column":65,"offset":1593},"end":{"line":47,"column":69,"offset":1597},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":47,"column":69,"offset":1597},"end":{"line":49,"column":1,"offset":1640},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":49,"column":1,"offset":1640},"end":{"line":49,"column":5,"offset":1644},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":49,"column":5,"offset":1644},"end":{"line":49,"column":22,"offset":1661},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":49,"column":22,"offset":1661},"end":{"line":49,"column":26,"offset":1665},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":49,"column":26,"offset":1665},"end":{"line":50,"column":1,"offset":1666},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":50,"column":1,"offset":1666},"end":{"line":50,"column":5,"offset":1670},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":50,"column":5,"offset":1670},"end":{"line":52,"column":1,"offset":1788},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":52,"column":1,"offset":1788},"end":{"line":52,"column":5,"offset":1792},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":52,"column":5,"offset":1792},"end":{"line":54,"column":1,"offset":1913},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":54,"column":1,"offset":1913},"end":{"line":54,"column":12,"offset":1924},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":54,"column":12,"offset":1924},"end":{"line":54,"column":68,"offset":1980},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":54,"column":68,"offset":1980},"end":{"line":54,"column":79,"offset":1991},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":54,"column":79,"offset":1991},"end":{"line":54,"column":106,"offset":2018},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":54,"column":106,"offset":2018},"end":{"line":54,"column":109,"offset":2021},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":54,"column":109,"offset":2021},"end":{"line":54,"column":189,"offset":2101},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":54,"column":189,"offset":2101},"end":{"line":54,"column":192,"offset":2104},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":54,"column":192,"offset":2104},"end":{"line":54,"column":202,"offset":2114},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1202},"end":{"line":54,"column":202,"offset":2114},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":56,"column":8,"offset":2123},"end":{"line":56,"column":14,"offset":2129},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":2116},"end":{"line":56,"column":14,"offset":2129},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":57,"column":1,"offset":2130},"end":{"line":57,"column":9,"offset":2138},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":57,"column":9,"offset":2138},"end":{"line":57,"column":73,"offset":2202},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":2130},"end":{"line":57,"column":73,"offset":2202},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":58,"column":1,"offset":2203},"end":{"line":61,"column":4,"offset":2242},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":62,"column":1,"offset":2243},"end":{"line":62,"column":5,"offset":2247},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":64,"column":1,"offset":2249},"end":{"line":64,"column":72,"offset":2320},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":64,"column":72,"offset":2320},"end":{"line":64,"column":80,"offset":2328},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":64,"column":80,"offset":2328},"end":{"line":65,"column":1,"offset":2352},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":65,"column":1,"offset":2352},"end":{"line":65,"column":5,"offset":2356},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":65,"column":5,"offset":2356},"end":{"line":66,"column":1,"offset":2357},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":66,"column":1,"offset":2357},"end":{"line":66,"column":5,"offset":2361},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":66,"column":5,"offset":2361},"end":{"line":67,"column":184,"offset":2545},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":67,"column":184,"offset":2545},"end":{"line":67,"column":187,"offset":2548},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":67,"column":187,"offset":2548},"end":{"line":68,"column":1,"offset":2551},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":68,"column":1,"offset":2551},"end":{"line":68,"column":5,"offset":2555},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":68,"column":5,"offset":2555},"end":{"line":69,"column":1,"offset":2556},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":69,"column":1,"offset":2556},"end":{"line":69,"column":5,"offset":2560},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":69,"column":5,"offset":2560},"end":{"line":70,"column":27,"offset":2587},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":70,"column":27,"offset":2587},"end":{"line":70,"column":35,"offset":2595},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":70,"column":35,"offset":2595},"end":{"line":70,"column":86,"offset":2646},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":70,"column":86,"offset":2646},"end":{"line":70,"column":95,"offset":2655},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":70,"column":95,"offset":2655},"end":{"line":70,"column":97,"offset":2657},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":2249},"end":{"line":70,"column":97,"offset":2657},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":72,"column":1,"offset":2659},"end":{"line":72,"column":6,"offset":2664},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":74,"column":1,"offset":2666},"end":{"line":75,"column":1,"offset":2710},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2710},"end":{"line":75,"column":5,"offset":2714},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":75,"column":5,"offset":2714},"end":{"line":76,"column":1,"offset":2715},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":76,"column":1,"offset":2715},"end":{"line":76,"column":22,"offset":2736},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":76,"column":22,"offset":2736},"end":{"line":77,"column":1,"offset":2737},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":77,"column":1,"offset":2737},"end":{"line":77,"column":5,"offset":2741},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":2666},"end":{"line":77,"column":5,"offset":2741},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":79,"column":1,"offset":2743},"end":{"line":79,"column":152,"offset":2894},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":2743},"end":{"line":79,"column":152,"offset":2894},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":81,"column":8,"offset":2903},"end":{"line":81,"column":20,"offset":2915},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":2896},"end":{"line":81,"column":20,"offset":2915},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":83,"column":1,"offset":2917},"end":{"line":83,"column":56,"offset":2972},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":2917},"end":{"line":83,"column":56,"offset":2972},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":84,"column":1,"offset":2973},"end":{"line":89,"column":4,"offset":3064},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":90,"column":1,"offset":3065},"end":{"line":90,"column":5,"offset":3069},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":92,"column":1,"offset":3071},"end":{"line":92,"column":37,"offset":3107},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":92,"column":37,"offset":3107},"end":{"line":92,"column":41,"offset":3111},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":92,"column":41,"offset":3111},"end":{"line":93,"column":1,"offset":3128},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":93,"column":1,"offset":3128},"end":{"line":93,"column":5,"offset":3132},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":93,"column":5,"offset":3132},"end":{"line":94,"column":1,"offset":3133},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":94,"column":1,"offset":3133},"end":{"line":94,"column":5,"offset":3137},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":94,"column":5,"offset":3137},"end":{"line":95,"column":66,"offset":3203},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":95,"column":66,"offset":3203},"end":{"line":95,"column":89,"offset":3226},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":95,"column":89,"offset":3226},"end":{"line":96,"column":1,"offset":3266},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":96,"column":1,"offset":3266},"end":{"line":96,"column":5,"offset":3270},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":96,"column":5,"offset":3270},"end":{"line":97,"column":1,"offset":3271},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":97,"column":1,"offset":3271},"end":{"line":97,"column":5,"offset":3275},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":97,"column":5,"offset":3275},"end":{"line":98,"column":21,"offset":3296},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":98,"column":21,"offset":3296},"end":{"line":98,"column":25,"offset":3300},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":98,"column":25,"offset":3300},"end":{"line":99,"column":1,"offset":3354},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":99,"column":1,"offset":3354},"end":{"line":99,"column":5,"offset":3358},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":99,"column":5,"offset":3358},"end":{"line":100,"column":1,"offset":3359},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":100,"column":1,"offset":3359},"end":{"line":100,"column":5,"offset":3363},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":100,"column":5,"offset":3363},"end":{"line":101,"column":21,"offset":3384},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":101,"column":21,"offset":3384},"end":{"line":101,"column":25,"offset":3388},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":101,"column":25,"offset":3388},"end":{"line":102,"column":1,"offset":3443},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":102,"column":1,"offset":3443},"end":{"line":102,"column":5,"offset":3447},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":102,"column":5,"offset":3447},"end":{"line":103,"column":1,"offset":3448},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":103,"column":1,"offset":3448},"end":{"line":103,"column":5,"offset":3452},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":103,"column":5,"offset":3452},"end":{"line":104,"column":58,"offset":3510},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":104,"column":58,"offset":3510},"end":{"line":104,"column":61,"offset":3513},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":104,"column":61,"offset":3513},"end":{"line":104,"column":145,"offset":3597},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":104,"column":145,"offset":3597},"end":{"line":104,"column":153,"offset":3605},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":104,"column":153,"offset":3605},"end":{"line":104,"column":178,"offset":3630},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":3071},"end":{"line":104,"column":178,"offset":3630},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":106,"column":7,"offset":3638},"end":{"line":106,"column":10,"offset":3641},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":3632},"end":{"line":106,"column":10,"offset":3641},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":108,"column":8,"offset":3650},"end":{"line":108,"column":17,"offset":3659},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":3643},"end":{"line":108,"column":17,"offset":3659},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":109,"column":1,"offset":3660},"end":{"line":120,"column":4,"offset":3859},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":121,"column":1,"offset":3860},"end":{"line":121,"column":5,"offset":3864},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":123,"column":1,"offset":3866},"end":{"line":124,"column":1,"offset":4082},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":124,"column":1,"offset":4082},"end":{"line":124,"column":5,"offset":4086},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":124,"column":5,"offset":4086},"end":{"line":125,"column":1,"offset":4087},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":125,"column":1,"offset":4087},"end":{"line":125,"column":5,"offset":4091},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":125,"column":5,"offset":4091},"end":{"line":126,"column":72,"offset":4163},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":126,"column":72,"offset":4163},"end":{"line":126,"column":81,"offset":4172},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":126,"column":81,"offset":4172},"end":{"line":127,"column":1,"offset":4191},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":127,"column":1,"offset":4191},"end":{"line":127,"column":5,"offset":4195},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":127,"column":5,"offset":4195},"end":{"line":128,"column":1,"offset":4196},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":128,"column":1,"offset":4196},"end":{"line":128,"column":5,"offset":4200},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":128,"column":5,"offset":4200},"end":{"line":129,"column":10,"offset":4210},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":129,"column":10,"offset":4210},"end":{"line":129,"column":16,"offset":4216},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":129,"column":16,"offset":4216},"end":{"line":129,"column":34,"offset":4234},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":129,"column":34,"offset":4234},"end":{"line":129,"column":42,"offset":4242},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":129,"column":42,"offset":4242},"end":{"line":130,"column":24,"offset":4267},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":130,"column":24,"offset":4267},"end":{"line":130,"column":33,"offset":4276},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":130,"column":33,"offset":4276},"end":{"line":130,"column":107,"offset":4350},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":130,"column":107,"offset":4350},"end":{"line":130,"column":116,"offset":4359},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":130,"column":116,"offset":4359},"end":{"line":130,"column":134,"offset":4377},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":130,"column":134,"offset":4377},"end":{"line":130,"column":137,"offset":4380},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":130,"column":137,"offset":4380},"end":{"line":130,"column":161,"offset":4404},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":130,"column":161,"offset":4404},"end":{"line":130,"column":167,"offset":4410},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":130,"column":167,"offset":4410},"end":{"line":130,"column":192,"offset":4435},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":130,"column":192,"offset":4435},"end":{"line":130,"column":200,"offset":4443},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":130,"column":200,"offset":4443},"end":{"line":130,"column":218,"offset":4461},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":130,"column":218,"offset":4461},"end":{"line":130,"column":224,"offset":4467},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":130,"column":224,"offset":4467},"end":{"line":130,"column":245,"offset":4488},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":130,"column":245,"offset":4488},"end":{"line":130,"column":252,"offset":4495},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":130,"column":252,"offset":4495},"end":{"line":130,"column":257,"offset":4500},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":130,"column":257,"offset":4500},"end":{"line":130,"column":260,"offset":4503},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":130,"column":260,"offset":4503},"end":{"line":130,"column":285,"offset":4528},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":130,"column":285,"offset":4528},"end":{"line":130,"column":291,"offset":4534},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":130,"column":291,"offset":4534},"end":{"line":131,"column":96,"offset":4660},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":131,"column":96,"offset":4660},"end":{"line":131,"column":111,"offset":4675},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":131,"column":111,"offset":4675},"end":{"line":131,"column":182,"offset":4746},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":3866},"end":{"line":131,"column":182,"offset":4746},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":133,"column":8,"offset":4755},"end":{"line":133,"column":19,"offset":4766},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":4748},"end":{"line":133,"column":19,"offset":4766},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":134,"column":1,"offset":4767},"end":{"line":134,"column":14,"offset":4780},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":4767},"end":{"line":134,"column":14,"offset":4780},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":135,"column":1,"offset":4781},"end":{"line":150,"column":4,"offset":5196},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":151,"column":1,"offset":5197},"end":{"line":151,"column":5,"offset":5201},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":153,"column":1,"offset":5203},"end":{"line":153,"column":141,"offset":5343},"indent":[]}}],"position":{"start":{"line":153,"column":1,"offset":5203},"end":{"line":153,"column":141,"offset":5343},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":155,"column":8,"offset":5352},"end":{"line":155,"column":30,"offset":5374},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":5345},"end":{"line":155,"column":30,"offset":5374},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":156,"column":1,"offset":5375},"end":{"line":156,"column":199,"offset":5573},"indent":[]}}],"position":{"start":{"line":156,"column":1,"offset":5375},"end":{"line":156,"column":199,"offset":5573},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":158,"column":8,"offset":5582},"end":{"line":158,"column":30,"offset":5604},"indent":[]}}],"position":{"start":{"line":158,"column":1,"offset":5575},"end":{"line":158,"column":30,"offset":5604},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":160,"column":1,"offset":5606},"end":{"line":161,"column":1,"offset":5681},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":161,"column":1,"offset":5681},"end":{"line":161,"column":5,"offset":5685},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":161,"column":5,"offset":5685},"end":{"line":162,"column":1,"offset":5686},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":162,"column":1,"offset":5686},"end":{"line":162,"column":5,"offset":5690},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":162,"column":5,"offset":5690},"end":{"line":164,"column":1,"offset":5752},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":164,"column":1,"offset":5752},"end":{"line":164,"column":5,"offset":5756},"indent":[]}},{"type":"break","position":{"start":{"line":164,"column":5,"offset":5756},"end":{"line":165,"column":1,"offset":5759},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":165,"column":1,"offset":5759},"end":{"line":165,"column":11,"offset":5769},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":165,"column":11,"offset":5769},"end":{"line":165,"column":19,"offset":5777},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":165,"column":19,"offset":5777},"end":{"line":165,"column":24,"offset":5782},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":165,"column":24,"offset":5782},"end":{"line":165,"column":34,"offset":5792},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":165,"column":34,"offset":5792},"end":{"line":166,"column":1,"offset":5841},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":166,"column":1,"offset":5841},"end":{"line":166,"column":5,"offset":5845},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":5606},"end":{"line":166,"column":5,"offset":5845},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":168,"column":8,"offset":5854},"end":{"line":168,"column":12,"offset":5858},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":5847},"end":{"line":168,"column":12,"offset":5858},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":169,"column":1,"offset":5859},"end":{"line":174,"column":4,"offset":5970},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":175,"column":1,"offset":5971},"end":{"line":176,"column":5,"offset":5980},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":178,"column":1,"offset":5982},"end":{"line":178,"column":7,"offset":5988},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":178,"column":7,"offset":5988},"end":{"line":180,"column":1,"offset":6070},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":180,"column":1,"offset":6070},"end":{"line":180,"column":5,"offset":6074},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":180,"column":5,"offset":6074},"end":{"line":181,"column":1,"offset":6075},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":181,"column":1,"offset":6075},"end":{"line":181,"column":5,"offset":6079},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":181,"column":5,"offset":6079},"end":{"line":182,"column":10,"offset":6089},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":182,"column":10,"offset":6089},"end":{"line":182,"column":14,"offset":6093},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":182,"column":14,"offset":6093},"end":{"line":182,"column":22,"offset":6101},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":182,"column":22,"offset":6101},"end":{"line":182,"column":30,"offset":6109},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":182,"column":30,"offset":6109},"end":{"line":182,"column":50,"offset":6129},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":182,"column":50,"offset":6129},"end":{"line":182,"column":53,"offset":6132},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":182,"column":53,"offset":6132},"end":{"line":182,"column":90,"offset":6169},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":182,"column":90,"offset":6169},"end":{"line":182,"column":96,"offset":6175},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":182,"column":96,"offset":6175},"end":{"line":183,"column":1,"offset":6178},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":183,"column":1,"offset":6178},"end":{"line":183,"column":5,"offset":6182},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":183,"column":5,"offset":6182},"end":{"line":184,"column":1,"offset":6183},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":184,"column":1,"offset":6183},"end":{"line":184,"column":5,"offset":6187},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":184,"column":5,"offset":6187},"end":{"line":185,"column":14,"offset":6201},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":185,"column":14,"offset":6201},"end":{"line":185,"column":18,"offset":6205},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":185,"column":18,"offset":6205},"end":{"line":185,"column":90,"offset":6277},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":185,"column":90,"offset":6277},"end":{"line":185,"column":94,"offset":6281},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":185,"column":94,"offset":6281},"end":{"line":185,"column":125,"offset":6312},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":185,"column":125,"offset":6312},"end":{"line":185,"column":131,"offset":6318},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":185,"column":131,"offset":6318},"end":{"line":186,"column":1,"offset":6333},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":186,"column":1,"offset":6333},"end":{"line":186,"column":5,"offset":6337},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":186,"column":5,"offset":6337},"end":{"line":187,"column":1,"offset":6338},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":187,"column":1,"offset":6338},"end":{"line":187,"column":5,"offset":6342},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":187,"column":5,"offset":6342},"end":{"line":188,"column":14,"offset":6356},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":188,"column":14,"offset":6356},"end":{"line":188,"column":18,"offset":6360},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":188,"column":18,"offset":6360},"end":{"line":188,"column":37,"offset":6379},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":188,"column":37,"offset":6379},"end":{"line":188,"column":40,"offset":6382},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":188,"column":40,"offset":6382},"end":{"line":188,"column":77,"offset":6419},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":188,"column":77,"offset":6419},"end":{"line":188,"column":81,"offset":6423},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":188,"column":81,"offset":6423},"end":{"line":188,"column":99,"offset":6441},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":188,"column":99,"offset":6441},"end":{"line":188,"column":102,"offset":6444},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":188,"column":102,"offset":6444},"end":{"line":188,"column":133,"offset":6475},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":188,"column":133,"offset":6475},"end":{"line":188,"column":139,"offset":6481},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":188,"column":139,"offset":6481},"end":{"line":188,"column":167,"offset":6509},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":188,"column":167,"offset":6509},"end":{"line":188,"column":171,"offset":6513},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":188,"column":171,"offset":6513},"end":{"line":189,"column":1,"offset":6515},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":189,"column":1,"offset":6515},"end":{"line":189,"column":5,"offset":6519},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":189,"column":5,"offset":6519},"end":{"line":190,"column":1,"offset":6520},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":190,"column":1,"offset":6520},"end":{"line":190,"column":5,"offset":6524},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":190,"column":5,"offset":6524},"end":{"line":192,"column":1,"offset":6544},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":192,"column":1,"offset":6544},"end":{"line":192,"column":5,"offset":6548},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":192,"column":5,"offset":6548},"end":{"line":193,"column":6,"offset":6554},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":193,"column":6,"offset":6554},"end":{"line":193,"column":12,"offset":6560},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":193,"column":12,"offset":6560},"end":{"line":193,"column":30,"offset":6578},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":193,"column":30,"offset":6578},"end":{"line":193,"column":36,"offset":6584},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":193,"column":36,"offset":6584},"end":{"line":193,"column":62,"offset":6610},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":193,"column":62,"offset":6610},"end":{"line":193,"column":75,"offset":6623},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":193,"column":75,"offset":6623},"end":{"line":193,"column":159,"offset":6707},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":5982},"end":{"line":193,"column":159,"offset":6707},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":195,"column":8,"offset":6716},"end":{"line":195,"column":41,"offset":6749},"indent":[]}}],"position":{"start":{"line":195,"column":1,"offset":6709},"end":{"line":195,"column":41,"offset":6749},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":196,"column":1,"offset":6750},"end":{"line":201,"column":4,"offset":6825},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":202,"column":1,"offset":6826},"end":{"line":203,"column":1,"offset":6845},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":203,"column":1,"offset":6845},"end":{"line":203,"column":5,"offset":6849},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":203,"column":5,"offset":6849},"end":{"line":205,"column":5,"offset":6987},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":205,"column":5,"offset":6987},"end":{"line":205,"column":9,"offset":6991},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":205,"column":9,"offset":6991},"end":{"line":206,"column":5,"offset":6996},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":206,"column":5,"offset":6996},"end":{"line":206,"column":27,"offset":7018},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":206,"column":27,"offset":7018},"end":{"line":207,"column":5,"offset":7023},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":207,"column":5,"offset":7023},"end":{"line":207,"column":9,"offset":7027},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":207,"column":9,"offset":7027},"end":{"line":208,"column":5,"offset":7032},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":208,"column":5,"offset":7032},"end":{"line":208,"column":12,"offset":7039},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":208,"column":12,"offset":7039},"end":{"line":208,"column":17,"offset":7044},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":208,"column":17,"offset":7044},"end":{"line":208,"column":25,"offset":7052},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":208,"column":25,"offset":7052},"end":{"line":208,"column":63,"offset":7090},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":208,"column":63,"offset":7090},"end":{"line":208,"column":66,"offset":7093},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":208,"column":66,"offset":7093},"end":{"line":208,"column":86,"offset":7113},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":208,"column":86,"offset":7113},"end":{"line":208,"column":89,"offset":7116},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":208,"column":89,"offset":7116},"end":{"line":208,"column":110,"offset":7137},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":208,"column":110,"offset":7137},"end":{"line":208,"column":119,"offset":7146},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":208,"column":119,"offset":7146},"end":{"line":209,"column":1,"offset":7148},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":209,"column":1,"offset":7148},"end":{"line":209,"column":5,"offset":7152},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":209,"column":5,"offset":7152},"end":{"line":211,"column":1,"offset":7168},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":211,"column":1,"offset":7168},"end":{"line":211,"column":5,"offset":7172},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":211,"column":5,"offset":7172},"end":{"line":213,"column":5,"offset":7279},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":213,"column":5,"offset":7279},"end":{"line":213,"column":9,"offset":7283},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":213,"column":9,"offset":7283},"end":{"line":214,"column":1,"offset":7284},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":214,"column":1,"offset":7284},"end":{"line":214,"column":23,"offset":7306},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":214,"column":23,"offset":7306},"end":{"line":214,"column":35,"offset":7318},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":214,"column":35,"offset":7318},"end":{"line":214,"column":61,"offset":7344},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":214,"column":61,"offset":7344},"end":{"line":215,"column":1,"offset":7345},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":215,"column":1,"offset":7345},"end":{"line":215,"column":5,"offset":7349},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":215,"column":5,"offset":7349},"end":{"line":216,"column":5,"offset":7354},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":216,"column":5,"offset":7354},"end":{"line":216,"column":8,"offset":7357},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":216,"column":8,"offset":7357},"end":{"line":216,"column":58,"offset":7407},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":6826},"end":{"line":216,"column":58,"offset":7407},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":218,"column":1,"offset":7409},"end":{"line":219,"column":1,"offset":7427},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":219,"column":1,"offset":7427},"end":{"line":219,"column":5,"offset":7431},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":7409},"end":{"line":219,"column":5,"offset":7431},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":220,"column":1,"offset":7432},"end":{"line":222,"column":4,"offset":7462},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":223,"column":1,"offset":7463},"end":{"line":223,"column":13,"offset":7475},"indent":[]}}],"position":{"start":{"line":223,"column":1,"offset":7463},"end":{"line":223,"column":13,"offset":7475},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":224,"column":1,"offset":7476},"end":{"line":230,"column":4,"offset":7555},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":231,"column":1,"offset":7556},"end":{"line":231,"column":8,"offset":7563},"indent":[]}}],"position":{"start":{"line":231,"column":1,"offset":7556},"end":{"line":231,"column":8,"offset":7563},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":232,"column":1,"offset":7564},"end":{"line":239,"column":4,"offset":7688},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":240,"column":1,"offset":7689},"end":{"line":241,"column":5,"offset":7698},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":243,"column":1,"offset":7700},"end":{"line":243,"column":11,"offset":7710},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":243,"column":11,"offset":7710},"end":{"line":243,"column":24,"offset":7723},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":243,"column":24,"offset":7723},"end":{"line":243,"column":107,"offset":7806},"indent":[]}}],"position":{"start":{"line":243,"column":1,"offset":7700},"end":{"line":243,"column":107,"offset":7806},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":245,"column":7,"offset":7814},"end":{"line":245,"column":10,"offset":7817},"indent":[]}}],"position":{"start":{"line":245,"column":1,"offset":7808},"end":{"line":245,"column":10,"offset":7817},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":246,"column":7,"offset":7824},"end":{"line":246,"column":10,"offset":7827},"indent":[]}}],"position":{"start":{"line":246,"column":1,"offset":7818},"end":{"line":246,"column":10,"offset":7827},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":248,"column":6,"offset":7834},"end":{"line":248,"column":10,"offset":7838},"indent":[]}}],"position":{"start":{"line":248,"column":1,"offset":7829},"end":{"line":248,"column":10,"offset":7838},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":249,"column":7,"offset":7845},"end":{"line":249,"column":13,"offset":7851},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":7839},"end":{"line":249,"column":13,"offset":7851},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":250,"column":1,"offset":7852},"end":{"line":250,"column":49,"offset":7900},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":250,"column":49,"offset":7900},"end":{"line":250,"column":57,"offset":7908},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":250,"column":57,"offset":7908},"end":{"line":250,"column":133,"offset":7984},"indent":[]}}],"position":{"start":{"line":250,"column":1,"offset":7852},"end":{"line":250,"column":133,"offset":7984},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":251,"column":1,"offset":7985},"end":{"line":261,"column":4,"offset":8180},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":262,"column":1,"offset":8181},"end":{"line":262,"column":5,"offset":8185},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":265,"column":1,"offset":8188},"end":{"line":266,"column":1,"offset":8270},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":266,"column":1,"offset":8270},"end":{"line":266,"column":5,"offset":8274},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":266,"column":5,"offset":8274},"end":{"line":267,"column":1,"offset":8275},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":267,"column":1,"offset":8275},"end":{"line":267,"column":5,"offset":8279},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":267,"column":5,"offset":8279},"end":{"line":268,"column":26,"offset":8305},"indent":[1]}}],"position":{"start":{"line":265,"column":1,"offset":8188},"end":{"line":268,"column":26,"offset":8305},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":269,"column":1,"offset":8306},"end":{"line":274,"column":4,"offset":8434},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":275,"column":1,"offset":8435},"end":{"line":275,"column":14,"offset":8448},"indent":[]}}],"position":{"start":{"line":275,"column":1,"offset":8435},"end":{"line":275,"column":14,"offset":8448},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":277,"column":1,"offset":8450},"end":{"line":290,"column":4,"offset":8732},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":292,"column":1,"offset":8734},"end":{"line":293,"column":5,"offset":8743},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":296,"column":7,"offset":8752},"end":{"line":296,"column":13,"offset":8758},"indent":[]}}],"position":{"start":{"line":296,"column":1,"offset":8746},"end":{"line":296,"column":13,"offset":8758},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":296,"column":13,"offset":8758}}}}