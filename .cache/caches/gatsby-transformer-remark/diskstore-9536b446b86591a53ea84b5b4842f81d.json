{"expireTime":9007200842249847000,"key":"transformer-remark-markdown-ast-9f4d00e826340b1962e460a555e823d3-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632},"indent":[]}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities. \n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705},"indent":[]}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791},"indent":[]}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833},"indent":[]}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865},"indent":[]}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884},"indent":[]}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916},"indent":[]}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052},"indent":[]}},{"type":"text","value":"\nEnvironment: The key-object pairs the interpreter keeps in memory","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":33,"column":66,"offset":1118},"indent":[1]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":33,"column":66,"offset":1118},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":34,"column":7,"offset":1125},"end":{"line":34,"column":10,"offset":1128},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1119},"end":{"line":34,"column":10,"offset":1128},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":35,"column":7,"offset":1135},"end":{"line":35,"column":10,"offset":1138},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1129},"end":{"line":35,"column":10,"offset":1138},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":37,"column":6,"offset":1145},"end":{"line":37,"column":14,"offset":1153},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1140},"end":{"line":37,"column":14,"offset":1153},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":38,"column":7,"offset":1160},"end":{"line":38,"column":10,"offset":1163},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1154},"end":{"line":38,"column":10,"offset":1163},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":40,"column":8,"offset":1172},"end":{"line":40,"column":30,"offset":1194},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1165},"end":{"line":40,"column":30,"offset":1194},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":42,"column":1,"offset":1196},"end":{"line":43,"column":1,"offset":1340},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":43,"column":1,"offset":1340},"end":{"line":43,"column":5,"offset":1344},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":43,"column":5,"offset":1344},"end":{"line":43,"column":16,"offset":1355},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":43,"column":16,"offset":1355},"end":{"line":43,"column":20,"offset":1359},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":43,"column":20,"offset":1359},"end":{"line":45,"column":1,"offset":1503},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":45,"column":1,"offset":1503},"end":{"line":45,"column":5,"offset":1507},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":45,"column":5,"offset":1507},"end":{"line":45,"column":16,"offset":1518},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":45,"column":16,"offset":1518},"end":{"line":45,"column":20,"offset":1522},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":45,"column":20,"offset":1522},"end":{"line":46,"column":45,"offset":1567},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":46,"column":45,"offset":1567},"end":{"line":46,"column":49,"offset":1571},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":46,"column":49,"offset":1571},"end":{"line":46,"column":65,"offset":1587},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":46,"column":65,"offset":1587},"end":{"line":46,"column":69,"offset":1591},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":46,"column":69,"offset":1591},"end":{"line":48,"column":1,"offset":1634},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1634},"end":{"line":48,"column":5,"offset":1638},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":48,"column":5,"offset":1638},"end":{"line":48,"column":22,"offset":1655},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":48,"column":22,"offset":1655},"end":{"line":48,"column":26,"offset":1659},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":48,"column":26,"offset":1659},"end":{"line":49,"column":1,"offset":1660},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":49,"column":1,"offset":1660},"end":{"line":49,"column":5,"offset":1664},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":49,"column":5,"offset":1664},"end":{"line":51,"column":1,"offset":1782},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":51,"column":1,"offset":1782},"end":{"line":51,"column":5,"offset":1786},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":51,"column":5,"offset":1786},"end":{"line":53,"column":1,"offset":1907},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":53,"column":1,"offset":1907},"end":{"line":53,"column":12,"offset":1918},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":53,"column":12,"offset":1918},"end":{"line":53,"column":68,"offset":1974},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":53,"column":68,"offset":1974},"end":{"line":53,"column":79,"offset":1985},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":53,"column":79,"offset":1985},"end":{"line":53,"column":106,"offset":2012},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":53,"column":106,"offset":2012},"end":{"line":53,"column":109,"offset":2015},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":53,"column":109,"offset":2015},"end":{"line":53,"column":189,"offset":2095},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":53,"column":189,"offset":2095},"end":{"line":53,"column":192,"offset":2098},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":53,"column":192,"offset":2098},"end":{"line":53,"column":202,"offset":2108},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1196},"end":{"line":53,"column":202,"offset":2108},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":55,"column":8,"offset":2117},"end":{"line":55,"column":14,"offset":2123},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":2110},"end":{"line":55,"column":14,"offset":2123},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":56,"column":1,"offset":2124},"end":{"line":56,"column":9,"offset":2132},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":56,"column":9,"offset":2132},"end":{"line":56,"column":73,"offset":2196},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":2124},"end":{"line":56,"column":73,"offset":2196},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":57,"column":1,"offset":2197},"end":{"line":60,"column":4,"offset":2236},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":61,"column":1,"offset":2237},"end":{"line":61,"column":5,"offset":2241},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":63,"column":1,"offset":2243},"end":{"line":63,"column":72,"offset":2314},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":63,"column":72,"offset":2314},"end":{"line":63,"column":80,"offset":2322},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":63,"column":80,"offset":2322},"end":{"line":64,"column":1,"offset":2346},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":64,"column":1,"offset":2346},"end":{"line":64,"column":5,"offset":2350},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":64,"column":5,"offset":2350},"end":{"line":65,"column":1,"offset":2351},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":65,"column":1,"offset":2351},"end":{"line":65,"column":5,"offset":2355},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":65,"column":5,"offset":2355},"end":{"line":66,"column":184,"offset":2539},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":66,"column":184,"offset":2539},"end":{"line":66,"column":187,"offset":2542},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":66,"column":187,"offset":2542},"end":{"line":67,"column":1,"offset":2545},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":67,"column":1,"offset":2545},"end":{"line":67,"column":5,"offset":2549},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":67,"column":5,"offset":2549},"end":{"line":68,"column":1,"offset":2550},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":68,"column":1,"offset":2550},"end":{"line":68,"column":5,"offset":2554},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":68,"column":5,"offset":2554},"end":{"line":69,"column":27,"offset":2581},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":69,"column":27,"offset":2581},"end":{"line":69,"column":35,"offset":2589},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":69,"column":35,"offset":2589},"end":{"line":69,"column":86,"offset":2640},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":69,"column":86,"offset":2640},"end":{"line":69,"column":95,"offset":2649},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":69,"column":95,"offset":2649},"end":{"line":69,"column":97,"offset":2651},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":2243},"end":{"line":69,"column":97,"offset":2651},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":71,"column":1,"offset":2653},"end":{"line":71,"column":6,"offset":2658},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":73,"column":1,"offset":2660},"end":{"line":74,"column":1,"offset":2704},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":74,"column":1,"offset":2704},"end":{"line":74,"column":5,"offset":2708},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":74,"column":5,"offset":2708},"end":{"line":75,"column":1,"offset":2709},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":75,"column":1,"offset":2709},"end":{"line":75,"column":22,"offset":2730},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":75,"column":22,"offset":2730},"end":{"line":76,"column":1,"offset":2731},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":76,"column":1,"offset":2731},"end":{"line":76,"column":5,"offset":2735},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":2660},"end":{"line":76,"column":5,"offset":2735},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":78,"column":1,"offset":2737},"end":{"line":78,"column":152,"offset":2888},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":2737},"end":{"line":78,"column":152,"offset":2888},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":80,"column":8,"offset":2897},"end":{"line":80,"column":20,"offset":2909},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":2890},"end":{"line":80,"column":20,"offset":2909},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":82,"column":1,"offset":2911},"end":{"line":82,"column":56,"offset":2966},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":2911},"end":{"line":82,"column":56,"offset":2966},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":83,"column":1,"offset":2967},"end":{"line":88,"column":4,"offset":3058},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":89,"column":1,"offset":3059},"end":{"line":89,"column":5,"offset":3063},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":91,"column":1,"offset":3065},"end":{"line":91,"column":37,"offset":3101},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":91,"column":37,"offset":3101},"end":{"line":91,"column":41,"offset":3105},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":91,"column":41,"offset":3105},"end":{"line":92,"column":1,"offset":3122},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":92,"column":1,"offset":3122},"end":{"line":92,"column":5,"offset":3126},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":92,"column":5,"offset":3126},"end":{"line":93,"column":1,"offset":3127},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":93,"column":1,"offset":3127},"end":{"line":93,"column":5,"offset":3131},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":93,"column":5,"offset":3131},"end":{"line":94,"column":66,"offset":3197},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":94,"column":66,"offset":3197},"end":{"line":94,"column":89,"offset":3220},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":94,"column":89,"offset":3220},"end":{"line":95,"column":1,"offset":3260},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":95,"column":1,"offset":3260},"end":{"line":95,"column":5,"offset":3264},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":95,"column":5,"offset":3264},"end":{"line":96,"column":1,"offset":3265},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":96,"column":1,"offset":3265},"end":{"line":96,"column":5,"offset":3269},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":96,"column":5,"offset":3269},"end":{"line":97,"column":21,"offset":3290},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":97,"column":21,"offset":3290},"end":{"line":97,"column":25,"offset":3294},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":97,"column":25,"offset":3294},"end":{"line":98,"column":1,"offset":3348},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":98,"column":1,"offset":3348},"end":{"line":98,"column":5,"offset":3352},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":98,"column":5,"offset":3352},"end":{"line":99,"column":1,"offset":3353},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":99,"column":1,"offset":3353},"end":{"line":99,"column":5,"offset":3357},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":99,"column":5,"offset":3357},"end":{"line":100,"column":21,"offset":3378},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":100,"column":21,"offset":3378},"end":{"line":100,"column":25,"offset":3382},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":100,"column":25,"offset":3382},"end":{"line":101,"column":1,"offset":3437},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":101,"column":1,"offset":3437},"end":{"line":101,"column":5,"offset":3441},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":101,"column":5,"offset":3441},"end":{"line":102,"column":1,"offset":3442},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":102,"column":1,"offset":3442},"end":{"line":102,"column":5,"offset":3446},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":102,"column":5,"offset":3446},"end":{"line":103,"column":58,"offset":3504},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":103,"column":58,"offset":3504},"end":{"line":103,"column":61,"offset":3507},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":103,"column":61,"offset":3507},"end":{"line":103,"column":145,"offset":3591},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":103,"column":145,"offset":3591},"end":{"line":103,"column":153,"offset":3599},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":103,"column":153,"offset":3599},"end":{"line":103,"column":178,"offset":3624},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":3065},"end":{"line":103,"column":178,"offset":3624},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":105,"column":7,"offset":3632},"end":{"line":105,"column":10,"offset":3635},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":3626},"end":{"line":105,"column":10,"offset":3635},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":107,"column":8,"offset":3644},"end":{"line":107,"column":17,"offset":3653},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":3637},"end":{"line":107,"column":17,"offset":3653},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":108,"column":1,"offset":3654},"end":{"line":119,"column":4,"offset":3853},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":120,"column":1,"offset":3854},"end":{"line":120,"column":5,"offset":3858},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":122,"column":1,"offset":3860},"end":{"line":123,"column":1,"offset":4076},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":123,"column":1,"offset":4076},"end":{"line":123,"column":5,"offset":4080},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":123,"column":5,"offset":4080},"end":{"line":124,"column":1,"offset":4081},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":124,"column":1,"offset":4081},"end":{"line":124,"column":5,"offset":4085},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":124,"column":5,"offset":4085},"end":{"line":125,"column":72,"offset":4157},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":125,"column":72,"offset":4157},"end":{"line":125,"column":81,"offset":4166},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":125,"column":81,"offset":4166},"end":{"line":126,"column":1,"offset":4185},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":126,"column":1,"offset":4185},"end":{"line":126,"column":5,"offset":4189},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":126,"column":5,"offset":4189},"end":{"line":127,"column":1,"offset":4190},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":127,"column":1,"offset":4190},"end":{"line":127,"column":5,"offset":4194},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":127,"column":5,"offset":4194},"end":{"line":128,"column":10,"offset":4204},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":128,"column":10,"offset":4204},"end":{"line":128,"column":16,"offset":4210},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":128,"column":16,"offset":4210},"end":{"line":128,"column":34,"offset":4228},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":128,"column":34,"offset":4228},"end":{"line":128,"column":42,"offset":4236},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":128,"column":42,"offset":4236},"end":{"line":129,"column":24,"offset":4261},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":129,"column":24,"offset":4261},"end":{"line":129,"column":33,"offset":4270},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":129,"column":33,"offset":4270},"end":{"line":129,"column":107,"offset":4344},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":129,"column":107,"offset":4344},"end":{"line":129,"column":116,"offset":4353},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":129,"column":116,"offset":4353},"end":{"line":129,"column":134,"offset":4371},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":129,"column":134,"offset":4371},"end":{"line":129,"column":137,"offset":4374},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":129,"column":137,"offset":4374},"end":{"line":129,"column":161,"offset":4398},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":129,"column":161,"offset":4398},"end":{"line":129,"column":167,"offset":4404},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":129,"column":167,"offset":4404},"end":{"line":129,"column":192,"offset":4429},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":129,"column":192,"offset":4429},"end":{"line":129,"column":200,"offset":4437},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":129,"column":200,"offset":4437},"end":{"line":129,"column":218,"offset":4455},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":129,"column":218,"offset":4455},"end":{"line":129,"column":224,"offset":4461},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":129,"column":224,"offset":4461},"end":{"line":129,"column":245,"offset":4482},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":129,"column":245,"offset":4482},"end":{"line":129,"column":252,"offset":4489},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":129,"column":252,"offset":4489},"end":{"line":129,"column":257,"offset":4494},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":129,"column":257,"offset":4494},"end":{"line":129,"column":260,"offset":4497},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":129,"column":260,"offset":4497},"end":{"line":129,"column":285,"offset":4522},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":129,"column":285,"offset":4522},"end":{"line":129,"column":291,"offset":4528},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":129,"column":291,"offset":4528},"end":{"line":130,"column":96,"offset":4654},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":130,"column":96,"offset":4654},"end":{"line":130,"column":111,"offset":4669},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":130,"column":111,"offset":4669},"end":{"line":130,"column":182,"offset":4740},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":3860},"end":{"line":130,"column":182,"offset":4740},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":132,"column":8,"offset":4749},"end":{"line":132,"column":19,"offset":4760},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":4742},"end":{"line":132,"column":19,"offset":4760},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":133,"column":1,"offset":4761},"end":{"line":133,"column":14,"offset":4774},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":4761},"end":{"line":133,"column":14,"offset":4774},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":134,"column":1,"offset":4775},"end":{"line":149,"column":4,"offset":5190},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":150,"column":1,"offset":5191},"end":{"line":150,"column":5,"offset":5195},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":152,"column":1,"offset":5197},"end":{"line":152,"column":141,"offset":5337},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":5197},"end":{"line":152,"column":141,"offset":5337},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":154,"column":8,"offset":5346},"end":{"line":154,"column":30,"offset":5368},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":5339},"end":{"line":154,"column":30,"offset":5368},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":155,"column":1,"offset":5369},"end":{"line":155,"column":199,"offset":5567},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":5369},"end":{"line":155,"column":199,"offset":5567},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":157,"column":8,"offset":5576},"end":{"line":157,"column":30,"offset":5598},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":5569},"end":{"line":157,"column":30,"offset":5598},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":159,"column":1,"offset":5600},"end":{"line":160,"column":1,"offset":5675},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":160,"column":1,"offset":5675},"end":{"line":160,"column":5,"offset":5679},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":160,"column":5,"offset":5679},"end":{"line":161,"column":1,"offset":5680},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":161,"column":1,"offset":5680},"end":{"line":161,"column":5,"offset":5684},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":161,"column":5,"offset":5684},"end":{"line":163,"column":1,"offset":5746},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":163,"column":1,"offset":5746},"end":{"line":163,"column":5,"offset":5750},"indent":[]}},{"type":"break","position":{"start":{"line":163,"column":5,"offset":5750},"end":{"line":164,"column":1,"offset":5753},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":164,"column":1,"offset":5753},"end":{"line":164,"column":11,"offset":5763},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":164,"column":11,"offset":5763},"end":{"line":164,"column":19,"offset":5771},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":164,"column":19,"offset":5771},"end":{"line":164,"column":24,"offset":5776},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":164,"column":24,"offset":5776},"end":{"line":164,"column":34,"offset":5786},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":164,"column":34,"offset":5786},"end":{"line":165,"column":1,"offset":5835},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":165,"column":1,"offset":5835},"end":{"line":165,"column":5,"offset":5839},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":5600},"end":{"line":165,"column":5,"offset":5839},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":167,"column":8,"offset":5848},"end":{"line":167,"column":12,"offset":5852},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":5841},"end":{"line":167,"column":12,"offset":5852},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":168,"column":1,"offset":5853},"end":{"line":173,"column":4,"offset":5964},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":174,"column":1,"offset":5965},"end":{"line":175,"column":5,"offset":5974},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":177,"column":1,"offset":5976},"end":{"line":177,"column":7,"offset":5982},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":177,"column":7,"offset":5982},"end":{"line":179,"column":1,"offset":6064},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":179,"column":1,"offset":6064},"end":{"line":179,"column":5,"offset":6068},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":179,"column":5,"offset":6068},"end":{"line":180,"column":1,"offset":6069},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":180,"column":1,"offset":6069},"end":{"line":180,"column":5,"offset":6073},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":180,"column":5,"offset":6073},"end":{"line":181,"column":10,"offset":6083},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":181,"column":10,"offset":6083},"end":{"line":181,"column":14,"offset":6087},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":181,"column":14,"offset":6087},"end":{"line":181,"column":22,"offset":6095},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":181,"column":22,"offset":6095},"end":{"line":181,"column":30,"offset":6103},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":181,"column":30,"offset":6103},"end":{"line":181,"column":50,"offset":6123},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":181,"column":50,"offset":6123},"end":{"line":181,"column":53,"offset":6126},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":181,"column":53,"offset":6126},"end":{"line":181,"column":90,"offset":6163},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":181,"column":90,"offset":6163},"end":{"line":181,"column":96,"offset":6169},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":181,"column":96,"offset":6169},"end":{"line":182,"column":1,"offset":6172},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":182,"column":1,"offset":6172},"end":{"line":182,"column":5,"offset":6176},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":182,"column":5,"offset":6176},"end":{"line":183,"column":1,"offset":6177},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":183,"column":1,"offset":6177},"end":{"line":183,"column":5,"offset":6181},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":183,"column":5,"offset":6181},"end":{"line":184,"column":14,"offset":6195},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":184,"column":14,"offset":6195},"end":{"line":184,"column":18,"offset":6199},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":184,"column":18,"offset":6199},"end":{"line":184,"column":90,"offset":6271},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":184,"column":90,"offset":6271},"end":{"line":184,"column":94,"offset":6275},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":184,"column":94,"offset":6275},"end":{"line":184,"column":125,"offset":6306},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":184,"column":125,"offset":6306},"end":{"line":184,"column":131,"offset":6312},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":184,"column":131,"offset":6312},"end":{"line":185,"column":1,"offset":6327},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":185,"column":1,"offset":6327},"end":{"line":185,"column":5,"offset":6331},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":185,"column":5,"offset":6331},"end":{"line":186,"column":1,"offset":6332},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":186,"column":1,"offset":6332},"end":{"line":186,"column":5,"offset":6336},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":186,"column":5,"offset":6336},"end":{"line":187,"column":14,"offset":6350},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":187,"column":14,"offset":6350},"end":{"line":187,"column":18,"offset":6354},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":187,"column":18,"offset":6354},"end":{"line":187,"column":37,"offset":6373},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":187,"column":37,"offset":6373},"end":{"line":187,"column":40,"offset":6376},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":187,"column":40,"offset":6376},"end":{"line":187,"column":77,"offset":6413},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":187,"column":77,"offset":6413},"end":{"line":187,"column":81,"offset":6417},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":187,"column":81,"offset":6417},"end":{"line":187,"column":99,"offset":6435},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":187,"column":99,"offset":6435},"end":{"line":187,"column":102,"offset":6438},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":187,"column":102,"offset":6438},"end":{"line":187,"column":133,"offset":6469},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":187,"column":133,"offset":6469},"end":{"line":187,"column":139,"offset":6475},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":187,"column":139,"offset":6475},"end":{"line":187,"column":167,"offset":6503},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":187,"column":167,"offset":6503},"end":{"line":187,"column":171,"offset":6507},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":187,"column":171,"offset":6507},"end":{"line":188,"column":1,"offset":6509},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":188,"column":1,"offset":6509},"end":{"line":188,"column":5,"offset":6513},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":188,"column":5,"offset":6513},"end":{"line":189,"column":1,"offset":6514},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":189,"column":1,"offset":6514},"end":{"line":189,"column":5,"offset":6518},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":189,"column":5,"offset":6518},"end":{"line":191,"column":1,"offset":6538},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":191,"column":1,"offset":6538},"end":{"line":191,"column":5,"offset":6542},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":191,"column":5,"offset":6542},"end":{"line":192,"column":6,"offset":6548},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":192,"column":6,"offset":6548},"end":{"line":192,"column":12,"offset":6554},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":192,"column":12,"offset":6554},"end":{"line":192,"column":30,"offset":6572},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":192,"column":30,"offset":6572},"end":{"line":192,"column":36,"offset":6578},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":192,"column":36,"offset":6578},"end":{"line":192,"column":62,"offset":6604},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":192,"column":62,"offset":6604},"end":{"line":192,"column":75,"offset":6617},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":192,"column":75,"offset":6617},"end":{"line":192,"column":159,"offset":6701},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":5976},"end":{"line":192,"column":159,"offset":6701},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":194,"column":8,"offset":6710},"end":{"line":194,"column":41,"offset":6743},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":6703},"end":{"line":194,"column":41,"offset":6743},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":195,"column":1,"offset":6744},"end":{"line":200,"column":4,"offset":6819},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":201,"column":1,"offset":6820},"end":{"line":202,"column":1,"offset":6839},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":202,"column":1,"offset":6839},"end":{"line":202,"column":5,"offset":6843},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":202,"column":5,"offset":6843},"end":{"line":204,"column":5,"offset":6981},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":204,"column":5,"offset":6981},"end":{"line":204,"column":9,"offset":6985},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":204,"column":9,"offset":6985},"end":{"line":205,"column":5,"offset":6990},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":205,"column":5,"offset":6990},"end":{"line":205,"column":27,"offset":7012},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":205,"column":27,"offset":7012},"end":{"line":206,"column":5,"offset":7017},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":206,"column":5,"offset":7017},"end":{"line":206,"column":9,"offset":7021},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":206,"column":9,"offset":7021},"end":{"line":207,"column":5,"offset":7026},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":207,"column":5,"offset":7026},"end":{"line":207,"column":12,"offset":7033},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":207,"column":12,"offset":7033},"end":{"line":207,"column":17,"offset":7038},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":207,"column":17,"offset":7038},"end":{"line":207,"column":25,"offset":7046},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":207,"column":25,"offset":7046},"end":{"line":207,"column":63,"offset":7084},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":207,"column":63,"offset":7084},"end":{"line":207,"column":66,"offset":7087},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":207,"column":66,"offset":7087},"end":{"line":207,"column":86,"offset":7107},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":207,"column":86,"offset":7107},"end":{"line":207,"column":89,"offset":7110},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":207,"column":89,"offset":7110},"end":{"line":207,"column":110,"offset":7131},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":207,"column":110,"offset":7131},"end":{"line":207,"column":119,"offset":7140},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":207,"column":119,"offset":7140},"end":{"line":208,"column":1,"offset":7142},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":208,"column":1,"offset":7142},"end":{"line":208,"column":5,"offset":7146},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":208,"column":5,"offset":7146},"end":{"line":210,"column":1,"offset":7162},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":210,"column":1,"offset":7162},"end":{"line":210,"column":5,"offset":7166},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":210,"column":5,"offset":7166},"end":{"line":212,"column":5,"offset":7273},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":212,"column":5,"offset":7273},"end":{"line":212,"column":9,"offset":7277},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":212,"column":9,"offset":7277},"end":{"line":213,"column":1,"offset":7278},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":213,"column":1,"offset":7278},"end":{"line":213,"column":23,"offset":7300},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":213,"column":23,"offset":7300},"end":{"line":213,"column":35,"offset":7312},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":213,"column":35,"offset":7312},"end":{"line":213,"column":61,"offset":7338},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":213,"column":61,"offset":7338},"end":{"line":214,"column":1,"offset":7339},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":214,"column":1,"offset":7339},"end":{"line":214,"column":5,"offset":7343},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":214,"column":5,"offset":7343},"end":{"line":215,"column":5,"offset":7348},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":215,"column":5,"offset":7348},"end":{"line":215,"column":8,"offset":7351},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":215,"column":8,"offset":7351},"end":{"line":215,"column":58,"offset":7401},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":6820},"end":{"line":215,"column":58,"offset":7401},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":217,"column":1,"offset":7403},"end":{"line":218,"column":1,"offset":7421},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":218,"column":1,"offset":7421},"end":{"line":218,"column":5,"offset":7425},"indent":[]}}],"position":{"start":{"line":217,"column":1,"offset":7403},"end":{"line":218,"column":5,"offset":7425},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":219,"column":1,"offset":7426},"end":{"line":221,"column":4,"offset":7456},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":222,"column":1,"offset":7457},"end":{"line":222,"column":13,"offset":7469},"indent":[]}}],"position":{"start":{"line":222,"column":1,"offset":7457},"end":{"line":222,"column":13,"offset":7469},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":223,"column":1,"offset":7470},"end":{"line":229,"column":4,"offset":7549},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":230,"column":1,"offset":7550},"end":{"line":230,"column":8,"offset":7557},"indent":[]}}],"position":{"start":{"line":230,"column":1,"offset":7550},"end":{"line":230,"column":8,"offset":7557},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":231,"column":1,"offset":7558},"end":{"line":238,"column":4,"offset":7682},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":239,"column":1,"offset":7683},"end":{"line":240,"column":5,"offset":7692},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":242,"column":1,"offset":7694},"end":{"line":242,"column":11,"offset":7704},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":242,"column":11,"offset":7704},"end":{"line":242,"column":24,"offset":7717},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":242,"column":24,"offset":7717},"end":{"line":242,"column":107,"offset":7800},"indent":[]}}],"position":{"start":{"line":242,"column":1,"offset":7694},"end":{"line":242,"column":107,"offset":7800},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":244,"column":7,"offset":7808},"end":{"line":244,"column":10,"offset":7811},"indent":[]}}],"position":{"start":{"line":244,"column":1,"offset":7802},"end":{"line":244,"column":10,"offset":7811},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":245,"column":7,"offset":7818},"end":{"line":245,"column":10,"offset":7821},"indent":[]}}],"position":{"start":{"line":245,"column":1,"offset":7812},"end":{"line":245,"column":10,"offset":7821},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":247,"column":6,"offset":7828},"end":{"line":247,"column":10,"offset":7832},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":7823},"end":{"line":247,"column":10,"offset":7832},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":248,"column":7,"offset":7839},"end":{"line":248,"column":13,"offset":7845},"indent":[]}}],"position":{"start":{"line":248,"column":1,"offset":7833},"end":{"line":248,"column":13,"offset":7845},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":249,"column":1,"offset":7846},"end":{"line":249,"column":49,"offset":7894},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":249,"column":49,"offset":7894},"end":{"line":249,"column":57,"offset":7902},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":249,"column":57,"offset":7902},"end":{"line":249,"column":133,"offset":7978},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":7846},"end":{"line":249,"column":133,"offset":7978},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":250,"column":1,"offset":7979},"end":{"line":260,"column":4,"offset":8174},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":261,"column":1,"offset":8175},"end":{"line":261,"column":5,"offset":8179},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":264,"column":1,"offset":8182},"end":{"line":265,"column":1,"offset":8264},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":265,"column":1,"offset":8264},"end":{"line":265,"column":5,"offset":8268},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":265,"column":5,"offset":8268},"end":{"line":266,"column":1,"offset":8269},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":266,"column":1,"offset":8269},"end":{"line":266,"column":5,"offset":8273},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":266,"column":5,"offset":8273},"end":{"line":267,"column":26,"offset":8299},"indent":[1]}}],"position":{"start":{"line":264,"column":1,"offset":8182},"end":{"line":267,"column":26,"offset":8299},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":268,"column":1,"offset":8300},"end":{"line":273,"column":4,"offset":8428},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":274,"column":1,"offset":8429},"end":{"line":274,"column":14,"offset":8442},"indent":[]}}],"position":{"start":{"line":274,"column":1,"offset":8429},"end":{"line":274,"column":14,"offset":8442},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":276,"column":1,"offset":8444},"end":{"line":289,"column":4,"offset":8726},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":291,"column":1,"offset":8728},"end":{"line":292,"column":5,"offset":8737},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":295,"column":7,"offset":8746},"end":{"line":295,"column":13,"offset":8752},"indent":[]}}],"position":{"start":{"line":295,"column":1,"offset":8740},"end":{"line":295,"column":13,"offset":8752},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":295,"column":13,"offset":8752}}}}