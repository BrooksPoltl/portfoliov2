{"expireTime":9007200842156371000,"key":"transformer-remark-markdown-ast-68b0ba58b0d0e1f6135d3ae9544b199e-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":5,"column":6,"offset":249},"end":{"line":5,"column":14,"offset":257},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":14,"offset":257},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":6,"column":7,"offset":264},"end":{"line":6,"column":10,"offset":267},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":258},"end":{"line":6,"column":10,"offset":267},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":8,"column":8,"offset":276},"end":{"line":8,"column":30,"offset":298},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":269},"end":{"line":8,"column":30,"offset":298},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":10,"column":1,"offset":300},"end":{"line":11,"column":1,"offset":444},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":444},"end":{"line":11,"column":5,"offset":448},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":11,"column":5,"offset":448},"end":{"line":11,"column":16,"offset":459},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":16,"offset":459},"end":{"line":11,"column":20,"offset":463},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":11,"column":20,"offset":463},"end":{"line":13,"column":1,"offset":607},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":607},"end":{"line":13,"column":5,"offset":611},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":13,"column":5,"offset":611},"end":{"line":13,"column":16,"offset":622},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":16,"offset":622},"end":{"line":13,"column":20,"offset":626},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":13,"column":20,"offset":626},"end":{"line":14,"column":45,"offset":671},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":45,"offset":671},"end":{"line":14,"column":49,"offset":675},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":14,"column":49,"offset":675},"end":{"line":14,"column":65,"offset":691},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":65,"offset":691},"end":{"line":14,"column":69,"offset":695},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":14,"column":69,"offset":695},"end":{"line":16,"column":1,"offset":738},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":1,"offset":738},"end":{"line":16,"column":5,"offset":742},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":16,"column":5,"offset":742},"end":{"line":16,"column":22,"offset":759},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":22,"offset":759},"end":{"line":16,"column":26,"offset":763},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":26,"offset":763},"end":{"line":17,"column":1,"offset":764},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":17,"column":1,"offset":764},"end":{"line":17,"column":5,"offset":768},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. Scheme takes the arguments and then computes the functions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":17,"column":5,"offset":768},"end":{"line":19,"column":1,"offset":1003},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":19,"column":1,"offset":1003},"end":{"line":19,"column":12,"offset":1014},"indent":[]}},{"type":"text","value":" is a function and not a primitive value, so it calls ","position":{"start":{"line":19,"column":12,"offset":1014},"end":{"line":19,"column":66,"offset":1068},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":19,"column":66,"offset":1068},"end":{"line":19,"column":77,"offset":1079},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":19,"column":77,"offset":1079},"end":{"line":19,"column":104,"offset":1106},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":19,"column":104,"offset":1106},"end":{"line":19,"column":107,"offset":1109},"indent":[]}},{"type":"text","value":" is now 7 and it has 2 primitive values, meaning it can calculate the ","position":{"start":{"line":19,"column":107,"offset":1109},"end":{"line":19,"column":177,"offset":1179},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":19,"column":177,"offset":1179},"end":{"line":19,"column":180,"offset":1182},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":19,"column":180,"offset":1182},"end":{"line":19,"column":190,"offset":1192},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":300},"end":{"line":19,"column":190,"offset":1192},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":21,"column":8,"offset":1201},"end":{"line":21,"column":14,"offset":1207},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1194},"end":{"line":21,"column":14,"offset":1207},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":22,"column":1,"offset":1208},"end":{"line":22,"column":9,"offset":1216},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":22,"column":9,"offset":1216},"end":{"line":22,"column":73,"offset":1280},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":1208},"end":{"line":22,"column":73,"offset":1280},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":23,"column":1,"offset":1281},"end":{"line":26,"column":4,"offset":1320},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Where ","position":{"start":{"line":27,"column":1,"offset":1321},"end":{"line":27,"column":7,"offset":1327},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">square</code>","position":{"start":{"line":27,"column":7,"offset":1327},"end":{"line":27,"column":15,"offset":1335},"indent":[]}},{"type":"text","value":" is the name of the function and ","position":{"start":{"line":27,"column":15,"offset":1335},"end":{"line":27,"column":48,"offset":1368},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":27,"column":48,"offset":1368},"end":{"line":27,"column":51,"offset":1371},"indent":[]}},{"type":"text","value":" is a argument that the function takes in. The syntax is very different from other languages, but try to think of ","position":{"start":{"line":27,"column":51,"offset":1371},"end":{"line":27,"column":165,"offset":1485},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":27,"column":165,"offset":1485},"end":{"line":27,"column":173,"offset":1493},"indent":[]}},{"type":"text","value":" as a function itself. The first arguments first argument is a symbol (square) that will be the ","position":{"start":{"line":27,"column":173,"offset":1493},"end":{"line":27,"column":269,"offset":1589},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"procedure","position":{"start":{"line":27,"column":270,"offset":1590},"end":{"line":27,"column":279,"offset":1599},"indent":[]}}],"position":{"start":{"line":27,"column":269,"offset":1589},"end":{"line":27,"column":280,"offset":1600},"indent":[]}},{"type":"text","value":". The rest of the arguments in the first argument are arguments for that procedure in this case ","position":{"start":{"line":27,"column":280,"offset":1600},"end":{"line":27,"column":376,"offset":1696},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":27,"column":376,"offset":1696},"end":{"line":27,"column":379,"offset":1699},"indent":[]}},{"type":"text","value":".  ","position":{"start":{"line":27,"column":379,"offset":1699},"end":{"line":27,"column":382,"offset":1702},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":1321},"end":{"line":27,"column":382,"offset":1702},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":29,"column":7,"offset":1711},"end":{"line":29,"column":10,"offset":1714},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1705},"end":{"line":29,"column":10,"offset":1714},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"BOOK","position":{"start":{"line":30,"column":6,"offset":1720},"end":{"line":30,"column":10,"offset":1724},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1715},"end":{"line":30,"column":10,"offset":1724},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1","position":{"start":{"line":31,"column":7,"offset":1731},"end":{"line":31,"column":10,"offset":1734},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1725},"end":{"line":31,"column":10,"offset":1734},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":32,"column":7,"offset":1741},"end":{"line":32,"column":10,"offset":1744},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1735},"end":{"line":32,"column":10,"offset":1744},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":33,"column":7,"offset":1751},"end":{"line":33,"column":10,"offset":1754},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1745},"end":{"line":33,"column":10,"offset":1754},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":34,"column":6,"offset":1760},"end":{"line":34,"column":10,"offset":1764},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1755},"end":{"line":34,"column":10,"offset":1764},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1","position":{"start":{"line":35,"column":7,"offset":1771},"end":{"line":35,"column":12,"offset":1776},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1765},"end":{"line":35,"column":13,"offset":1777},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 2","position":{"start":{"line":36,"column":7,"offset":1784},"end":{"line":36,"column":12,"offset":1789},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1778},"end":{"line":36,"column":13,"offset":1790},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":36,"column":13,"offset":1790}}}}