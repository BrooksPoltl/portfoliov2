{"expireTime":9007200842249794000,"key":"transformer-remark-markdown-html-ast-9cfd4c84f4b3a65ee16dca4655b3b0cf-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833}}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847}}},{"type":"raw","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860}}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865}}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879}}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884}}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895}}},{"type":"raw","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900}}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901}}},{"type":"raw","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906}}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911}}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912}}},{"type":"raw","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916}}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043}}},{"type":"raw","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047}}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048}}},{"type":"raw","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052}}},{"type":"text","value":"\nEnvironment: ","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":33,"column":14,"offset":1066}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":33,"column":14,"offset":1066}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":34,"column":7,"offset":1073},"end":{"line":34,"column":10,"offset":1076}}}],"position":{"start":{"line":34,"column":1,"offset":1067},"end":{"line":34,"column":10,"offset":1076}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":35,"column":7,"offset":1083},"end":{"line":35,"column":10,"offset":1086}}}],"position":{"start":{"line":35,"column":1,"offset":1077},"end":{"line":35,"column":10,"offset":1086}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":37,"column":6,"offset":1093},"end":{"line":37,"column":14,"offset":1101}}}],"position":{"start":{"line":37,"column":1,"offset":1088},"end":{"line":37,"column":14,"offset":1101}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":38,"column":7,"offset":1108},"end":{"line":38,"column":10,"offset":1111}}}],"position":{"start":{"line":38,"column":1,"offset":1102},"end":{"line":38,"column":10,"offset":1111}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":40,"column":8,"offset":1120},"end":{"line":40,"column":30,"offset":1142}}}],"position":{"start":{"line":40,"column":1,"offset":1113},"end":{"line":40,"column":30,"offset":1142}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":42,"column":1,"offset":1144},"end":{"line":43,"column":1,"offset":1288}}},{"type":"raw","value":"<br>","position":{"start":{"line":43,"column":1,"offset":1288},"end":{"line":43,"column":5,"offset":1292}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":43,"column":5,"offset":1292},"end":{"line":43,"column":16,"offset":1303}}},{"type":"raw","value":"<br>","position":{"start":{"line":43,"column":16,"offset":1303},"end":{"line":43,"column":20,"offset":1307}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":43,"column":20,"offset":1307},"end":{"line":45,"column":1,"offset":1451}}},{"type":"raw","value":"<br>","position":{"start":{"line":45,"column":1,"offset":1451},"end":{"line":45,"column":5,"offset":1455}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":45,"column":5,"offset":1455},"end":{"line":45,"column":16,"offset":1466}}},{"type":"raw","value":"<br>","position":{"start":{"line":45,"column":16,"offset":1466},"end":{"line":45,"column":20,"offset":1470}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":45,"column":20,"offset":1470},"end":{"line":46,"column":45,"offset":1515}}},{"type":"raw","value":"<br>","position":{"start":{"line":46,"column":45,"offset":1515},"end":{"line":46,"column":49,"offset":1519}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":46,"column":49,"offset":1519},"end":{"line":46,"column":65,"offset":1535}}},{"type":"raw","value":"<br>","position":{"start":{"line":46,"column":65,"offset":1535},"end":{"line":46,"column":69,"offset":1539}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":46,"column":69,"offset":1539},"end":{"line":48,"column":1,"offset":1582}}},{"type":"raw","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1582},"end":{"line":48,"column":5,"offset":1586}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":48,"column":5,"offset":1586},"end":{"line":48,"column":22,"offset":1603}}},{"type":"raw","value":"<br>","position":{"start":{"line":48,"column":22,"offset":1603},"end":{"line":48,"column":26,"offset":1607}}},{"type":"text","value":"\n","position":{"start":{"line":48,"column":26,"offset":1607},"end":{"line":49,"column":1,"offset":1608}}},{"type":"raw","value":"<br>","position":{"start":{"line":49,"column":1,"offset":1608},"end":{"line":49,"column":5,"offset":1612}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":49,"column":5,"offset":1612},"end":{"line":51,"column":1,"offset":1730}}},{"type":"raw","value":"<br>","position":{"start":{"line":51,"column":1,"offset":1730},"end":{"line":51,"column":5,"offset":1734}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":51,"column":5,"offset":1734},"end":{"line":53,"column":1,"offset":1855}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":53,"column":1,"offset":1855},"end":{"line":53,"column":12,"offset":1866}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":53,"column":12,"offset":1866},"end":{"line":53,"column":68,"offset":1922}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":53,"column":68,"offset":1922},"end":{"line":53,"column":79,"offset":1933}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":53,"column":79,"offset":1933},"end":{"line":53,"column":106,"offset":1960}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":53,"column":106,"offset":1960},"end":{"line":53,"column":109,"offset":1963}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":53,"column":109,"offset":1963},"end":{"line":53,"column":189,"offset":2043}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":53,"column":189,"offset":2043},"end":{"line":53,"column":192,"offset":2046}}},{"type":"text","value":" to get 3.","position":{"start":{"line":53,"column":192,"offset":2046},"end":{"line":53,"column":202,"offset":2056}}}],"position":{"start":{"line":42,"column":1,"offset":1144},"end":{"line":53,"column":202,"offset":2056}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":55,"column":8,"offset":2065},"end":{"line":55,"column":14,"offset":2071}}}],"position":{"start":{"line":55,"column":1,"offset":2058},"end":{"line":55,"column":14,"offset":2071}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":56,"column":1,"offset":2072},"end":{"line":56,"column":9,"offset":2080}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":56,"column":9,"offset":2080},"end":{"line":56,"column":73,"offset":2144}}}],"position":{"start":{"line":56,"column":1,"offset":2072},"end":{"line":56,"column":73,"offset":2144}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":57,"column":1,"offset":2145},"end":{"line":60,"column":4,"offset":2184}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":61,"column":1,"offset":2185},"end":{"line":61,"column":5,"offset":2189}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":63,"column":1,"offset":2191},"end":{"line":63,"column":72,"offset":2262}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":63,"column":72,"offset":2262},"end":{"line":63,"column":80,"offset":2270}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":63,"column":80,"offset":2270},"end":{"line":64,"column":1,"offset":2294}}},{"type":"raw","value":"<br>","position":{"start":{"line":64,"column":1,"offset":2294},"end":{"line":64,"column":5,"offset":2298}}},{"type":"text","value":"\n","position":{"start":{"line":64,"column":5,"offset":2298},"end":{"line":65,"column":1,"offset":2299}}},{"type":"raw","value":"<br>","position":{"start":{"line":65,"column":1,"offset":2299},"end":{"line":65,"column":5,"offset":2303}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":65,"column":5,"offset":2303},"end":{"line":66,"column":184,"offset":2487}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":66,"column":184,"offset":2487},"end":{"line":66,"column":187,"offset":2490}}},{"type":"text","value":".\n","position":{"start":{"line":66,"column":187,"offset":2490},"end":{"line":67,"column":1,"offset":2493}}},{"type":"raw","value":"<br>","position":{"start":{"line":67,"column":1,"offset":2493},"end":{"line":67,"column":5,"offset":2497}}},{"type":"text","value":"\n","position":{"start":{"line":67,"column":5,"offset":2497},"end":{"line":68,"column":1,"offset":2498}}},{"type":"raw","value":"<br>","position":{"start":{"line":68,"column":1,"offset":2498},"end":{"line":68,"column":5,"offset":2502}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":68,"column":5,"offset":2502},"end":{"line":69,"column":27,"offset":2529}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":69,"column":27,"offset":2529},"end":{"line":69,"column":35,"offset":2537}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":69,"column":35,"offset":2537},"end":{"line":69,"column":86,"offset":2588}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":69,"column":86,"offset":2588},"end":{"line":69,"column":95,"offset":2597}}},{"type":"text","value":". ","position":{"start":{"line":69,"column":95,"offset":2597},"end":{"line":69,"column":97,"offset":2599}}}],"position":{"start":{"line":63,"column":1,"offset":2191},"end":{"line":69,"column":97,"offset":2599}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":71,"column":1,"offset":2601},"end":{"line":71,"column":6,"offset":2606}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":73,"column":1,"offset":2608},"end":{"line":74,"column":1,"offset":2652}}},{"type":"raw","value":"<br>","position":{"start":{"line":74,"column":1,"offset":2652},"end":{"line":74,"column":5,"offset":2656}}},{"type":"text","value":"\n","position":{"start":{"line":74,"column":5,"offset":2656},"end":{"line":75,"column":1,"offset":2657}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":75,"column":1,"offset":2657},"end":{"line":75,"column":22,"offset":2678}}},{"type":"text","value":"\n","position":{"start":{"line":75,"column":22,"offset":2678},"end":{"line":76,"column":1,"offset":2679}}},{"type":"raw","value":"<br>","position":{"start":{"line":76,"column":1,"offset":2679},"end":{"line":76,"column":5,"offset":2683}}}],"position":{"start":{"line":73,"column":1,"offset":2608},"end":{"line":76,"column":5,"offset":2683}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":78,"column":1,"offset":2685},"end":{"line":78,"column":152,"offset":2836}}}],"position":{"start":{"line":78,"column":1,"offset":2685},"end":{"line":78,"column":152,"offset":2836}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":80,"column":8,"offset":2845},"end":{"line":80,"column":20,"offset":2857}}}],"position":{"start":{"line":80,"column":1,"offset":2838},"end":{"line":80,"column":20,"offset":2857}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":82,"column":1,"offset":2859},"end":{"line":82,"column":56,"offset":2914}}}],"position":{"start":{"line":82,"column":1,"offset":2859},"end":{"line":82,"column":56,"offset":2914}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":83,"column":1,"offset":2915},"end":{"line":88,"column":4,"offset":3006}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":89,"column":1,"offset":3007},"end":{"line":89,"column":5,"offset":3011}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":91,"column":1,"offset":3013},"end":{"line":91,"column":37,"offset":3049}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":91,"column":37,"offset":3049},"end":{"line":91,"column":41,"offset":3053}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":91,"column":41,"offset":3053},"end":{"line":92,"column":1,"offset":3070}}},{"type":"raw","value":"<br>","position":{"start":{"line":92,"column":1,"offset":3070},"end":{"line":92,"column":5,"offset":3074}}},{"type":"text","value":"\n","position":{"start":{"line":92,"column":5,"offset":3074},"end":{"line":93,"column":1,"offset":3075}}},{"type":"raw","value":"<br>","position":{"start":{"line":93,"column":1,"offset":3075},"end":{"line":93,"column":5,"offset":3079}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":93,"column":5,"offset":3079},"end":{"line":94,"column":66,"offset":3145}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":94,"column":66,"offset":3145},"end":{"line":94,"column":89,"offset":3168}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":94,"column":89,"offset":3168},"end":{"line":95,"column":1,"offset":3208}}},{"type":"raw","value":"<br>","position":{"start":{"line":95,"column":1,"offset":3208},"end":{"line":95,"column":5,"offset":3212}}},{"type":"text","value":"\n","position":{"start":{"line":95,"column":5,"offset":3212},"end":{"line":96,"column":1,"offset":3213}}},{"type":"raw","value":"<br>","position":{"start":{"line":96,"column":1,"offset":3213},"end":{"line":96,"column":5,"offset":3217}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":96,"column":5,"offset":3217},"end":{"line":97,"column":21,"offset":3238}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":97,"column":21,"offset":3238},"end":{"line":97,"column":25,"offset":3242}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":97,"column":25,"offset":3242},"end":{"line":98,"column":1,"offset":3296}}},{"type":"raw","value":"<br>","position":{"start":{"line":98,"column":1,"offset":3296},"end":{"line":98,"column":5,"offset":3300}}},{"type":"text","value":"\n","position":{"start":{"line":98,"column":5,"offset":3300},"end":{"line":99,"column":1,"offset":3301}}},{"type":"raw","value":"<br>","position":{"start":{"line":99,"column":1,"offset":3301},"end":{"line":99,"column":5,"offset":3305}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":99,"column":5,"offset":3305},"end":{"line":100,"column":21,"offset":3326}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":100,"column":21,"offset":3326},"end":{"line":100,"column":25,"offset":3330}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":100,"column":25,"offset":3330},"end":{"line":101,"column":1,"offset":3385}}},{"type":"raw","value":"<br>","position":{"start":{"line":101,"column":1,"offset":3385},"end":{"line":101,"column":5,"offset":3389}}},{"type":"text","value":"\n","position":{"start":{"line":101,"column":5,"offset":3389},"end":{"line":102,"column":1,"offset":3390}}},{"type":"raw","value":"<br>","position":{"start":{"line":102,"column":1,"offset":3390},"end":{"line":102,"column":5,"offset":3394}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":102,"column":5,"offset":3394},"end":{"line":103,"column":58,"offset":3452}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":103,"column":58,"offset":3452},"end":{"line":103,"column":61,"offset":3455}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":103,"column":61,"offset":3455},"end":{"line":103,"column":145,"offset":3539}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":103,"column":145,"offset":3539},"end":{"line":103,"column":153,"offset":3547}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":103,"column":153,"offset":3547},"end":{"line":103,"column":178,"offset":3572}}}],"position":{"start":{"line":91,"column":1,"offset":3013},"end":{"line":103,"column":178,"offset":3572}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":105,"column":7,"offset":3580},"end":{"line":105,"column":10,"offset":3583}}}],"position":{"start":{"line":105,"column":1,"offset":3574},"end":{"line":105,"column":10,"offset":3583}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":107,"column":8,"offset":3592},"end":{"line":107,"column":17,"offset":3601}}}],"position":{"start":{"line":107,"column":1,"offset":3585},"end":{"line":107,"column":17,"offset":3601}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":108,"column":1,"offset":3602},"end":{"line":119,"column":4,"offset":3801}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":120,"column":1,"offset":3802},"end":{"line":120,"column":5,"offset":3806}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":122,"column":1,"offset":3808},"end":{"line":123,"column":1,"offset":4024}}},{"type":"raw","value":"<br>","position":{"start":{"line":123,"column":1,"offset":4024},"end":{"line":123,"column":5,"offset":4028}}},{"type":"text","value":"\n","position":{"start":{"line":123,"column":5,"offset":4028},"end":{"line":124,"column":1,"offset":4029}}},{"type":"raw","value":"<br>","position":{"start":{"line":124,"column":1,"offset":4029},"end":{"line":124,"column":5,"offset":4033}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":124,"column":5,"offset":4033},"end":{"line":125,"column":72,"offset":4105}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":125,"column":72,"offset":4105},"end":{"line":125,"column":81,"offset":4114}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":125,"column":81,"offset":4114},"end":{"line":126,"column":1,"offset":4133}}},{"type":"raw","value":"<br>","position":{"start":{"line":126,"column":1,"offset":4133},"end":{"line":126,"column":5,"offset":4137}}},{"type":"text","value":"\n","position":{"start":{"line":126,"column":5,"offset":4137},"end":{"line":127,"column":1,"offset":4138}}},{"type":"raw","value":"<br>","position":{"start":{"line":127,"column":1,"offset":4138},"end":{"line":127,"column":5,"offset":4142}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":127,"column":5,"offset":4142},"end":{"line":128,"column":10,"offset":4152}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":128,"column":10,"offset":4152},"end":{"line":128,"column":16,"offset":4158}}},{"type":"text","value":" gets called with ","position":{"start":{"line":128,"column":16,"offset":4158},"end":{"line":128,"column":34,"offset":4176}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":128,"column":34,"offset":4176},"end":{"line":128,"column":42,"offset":4184}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":128,"column":42,"offset":4184},"end":{"line":129,"column":24,"offset":4209}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":129,"column":24,"offset":4209},"end":{"line":129,"column":33,"offset":4218}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":129,"column":33,"offset":4218},"end":{"line":129,"column":107,"offset":4292}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":129,"column":107,"offset":4292},"end":{"line":129,"column":116,"offset":4301}}},{"type":"text","value":" is false because ","position":{"start":{"line":129,"column":116,"offset":4301},"end":{"line":129,"column":134,"offset":4319}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":129,"column":134,"offset":4319},"end":{"line":129,"column":137,"offset":4322}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":129,"column":137,"offset":4322},"end":{"line":129,"column":161,"offset":4346}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":129,"column":161,"offset":4346},"end":{"line":129,"column":167,"offset":4352}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":129,"column":167,"offset":4352},"end":{"line":129,"column":192,"offset":4377}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":129,"column":192,"offset":4377},"end":{"line":129,"column":200,"offset":4385}}},{"type":"text","value":". This is because ","position":{"start":{"line":129,"column":200,"offset":4385},"end":{"line":129,"column":218,"offset":4403}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":129,"column":218,"offset":4403},"end":{"line":129,"column":224,"offset":4409}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":129,"column":224,"offset":4409},"end":{"line":129,"column":245,"offset":4430}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":129,"column":245,"offset":4430},"end":{"line":129,"column":252,"offset":4437}}},{"type":"text","value":" and ","position":{"start":{"line":129,"column":252,"offset":4437},"end":{"line":129,"column":257,"offset":4442}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":129,"column":257,"offset":4442},"end":{"line":129,"column":260,"offset":4445}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":129,"column":260,"offset":4445},"end":{"line":129,"column":285,"offset":4470}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":129,"column":285,"offset":4470},"end":{"line":129,"column":291,"offset":4476}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":129,"column":291,"offset":4476},"end":{"line":130,"column":96,"offset":4602}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":130,"column":96,"offset":4602},"end":{"line":130,"column":111,"offset":4617}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":130,"column":111,"offset":4617},"end":{"line":130,"column":182,"offset":4688}}}],"position":{"start":{"line":122,"column":1,"offset":3808},"end":{"line":130,"column":182,"offset":4688}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":132,"column":8,"offset":4697},"end":{"line":132,"column":19,"offset":4708}}}],"position":{"start":{"line":132,"column":1,"offset":4690},"end":{"line":132,"column":19,"offset":4708}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":133,"column":1,"offset":4709},"end":{"line":133,"column":14,"offset":4722}}}],"position":{"start":{"line":133,"column":1,"offset":4709},"end":{"line":133,"column":14,"offset":4722}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":134,"column":1,"offset":4723},"end":{"line":149,"column":4,"offset":5138}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":150,"column":1,"offset":5139},"end":{"line":150,"column":5,"offset":5143}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":152,"column":1,"offset":5145},"end":{"line":152,"column":141,"offset":5285}}}],"position":{"start":{"line":152,"column":1,"offset":5145},"end":{"line":152,"column":141,"offset":5285}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":154,"column":8,"offset":5294},"end":{"line":154,"column":30,"offset":5316}}}],"position":{"start":{"line":154,"column":1,"offset":5287},"end":{"line":154,"column":30,"offset":5316}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":155,"column":1,"offset":5317},"end":{"line":155,"column":199,"offset":5515}}}],"position":{"start":{"line":155,"column":1,"offset":5317},"end":{"line":155,"column":199,"offset":5515}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":157,"column":8,"offset":5524},"end":{"line":157,"column":30,"offset":5546}}}],"position":{"start":{"line":157,"column":1,"offset":5517},"end":{"line":157,"column":30,"offset":5546}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":159,"column":1,"offset":5548},"end":{"line":160,"column":1,"offset":5623}}},{"type":"raw","value":"<br>","position":{"start":{"line":160,"column":1,"offset":5623},"end":{"line":160,"column":5,"offset":5627}}},{"type":"text","value":"\n","position":{"start":{"line":160,"column":5,"offset":5627},"end":{"line":161,"column":1,"offset":5628}}},{"type":"raw","value":"<br>","position":{"start":{"line":161,"column":1,"offset":5628},"end":{"line":161,"column":5,"offset":5632}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":161,"column":5,"offset":5632},"end":{"line":163,"column":1,"offset":5694}}},{"type":"raw","value":"<br>","position":{"start":{"line":163,"column":1,"offset":5694},"end":{"line":163,"column":5,"offset":5698}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":163,"column":5,"offset":5698},"end":{"line":164,"column":1,"offset":5701}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":164,"column":1,"offset":5701},"end":{"line":164,"column":11,"offset":5711}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":164,"column":11,"offset":5711},"end":{"line":164,"column":19,"offset":5719}}},{"type":"text","value":" and ","position":{"start":{"line":164,"column":19,"offset":5719},"end":{"line":164,"column":24,"offset":5724}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":164,"column":24,"offset":5724},"end":{"line":164,"column":34,"offset":5734}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":164,"column":34,"offset":5734},"end":{"line":165,"column":1,"offset":5783}}},{"type":"raw","value":"<br>","position":{"start":{"line":165,"column":1,"offset":5783},"end":{"line":165,"column":5,"offset":5787}}}],"position":{"start":{"line":159,"column":1,"offset":5548},"end":{"line":165,"column":5,"offset":5787}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":167,"column":8,"offset":5796},"end":{"line":167,"column":12,"offset":5800}}}],"position":{"start":{"line":167,"column":1,"offset":5789},"end":{"line":167,"column":12,"offset":5800}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":168,"column":1,"offset":5801},"end":{"line":173,"column":4,"offset":5912}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":174,"column":1,"offset":5913},"end":{"line":175,"column":5,"offset":5922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":177,"column":1,"offset":5924},"end":{"line":177,"column":7,"offset":5930}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":177,"column":7,"offset":5930},"end":{"line":179,"column":1,"offset":6012}}},{"type":"raw","value":"<br>","position":{"start":{"line":179,"column":1,"offset":6012},"end":{"line":179,"column":5,"offset":6016}}},{"type":"text","value":"\n","position":{"start":{"line":179,"column":5,"offset":6016},"end":{"line":180,"column":1,"offset":6017}}},{"type":"raw","value":"<br>","position":{"start":{"line":180,"column":1,"offset":6017},"end":{"line":180,"column":5,"offset":6021}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":180,"column":5,"offset":6021},"end":{"line":181,"column":10,"offset":6031}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":181,"column":10,"offset":6031},"end":{"line":181,"column":14,"offset":6035}}},{"type":"text","value":". Since ","position":{"start":{"line":181,"column":14,"offset":6035},"end":{"line":181,"column":22,"offset":6043}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":181,"column":22,"offset":6043},"end":{"line":181,"column":30,"offset":6051}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":181,"column":30,"offset":6051},"end":{"line":181,"column":50,"offset":6071}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":181,"column":50,"offset":6071},"end":{"line":181,"column":53,"offset":6074}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":181,"column":53,"offset":6074},"end":{"line":181,"column":90,"offset":6111}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":181,"column":90,"offset":6111},"end":{"line":181,"column":96,"offset":6117}}},{"type":"text","value":".\n","position":{"start":{"line":181,"column":96,"offset":6117},"end":{"line":182,"column":1,"offset":6120}}},{"type":"raw","value":"<br>","position":{"start":{"line":182,"column":1,"offset":6120},"end":{"line":182,"column":5,"offset":6124}}},{"type":"text","value":"\n","position":{"start":{"line":182,"column":5,"offset":6124},"end":{"line":183,"column":1,"offset":6125}}},{"type":"raw","value":"<br>","position":{"start":{"line":183,"column":1,"offset":6125},"end":{"line":183,"column":5,"offset":6129}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":183,"column":5,"offset":6129},"end":{"line":184,"column":14,"offset":6143}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":184,"column":14,"offset":6143},"end":{"line":184,"column":18,"offset":6147}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":184,"column":18,"offset":6147},"end":{"line":184,"column":90,"offset":6219}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":184,"column":90,"offset":6219},"end":{"line":184,"column":94,"offset":6223}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":184,"column":94,"offset":6223},"end":{"line":184,"column":125,"offset":6254}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":184,"column":125,"offset":6254},"end":{"line":184,"column":131,"offset":6260}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":184,"column":131,"offset":6260},"end":{"line":185,"column":1,"offset":6275}}},{"type":"raw","value":"<br>","position":{"start":{"line":185,"column":1,"offset":6275},"end":{"line":185,"column":5,"offset":6279}}},{"type":"text","value":"\n","position":{"start":{"line":185,"column":5,"offset":6279},"end":{"line":186,"column":1,"offset":6280}}},{"type":"raw","value":"<br>","position":{"start":{"line":186,"column":1,"offset":6280},"end":{"line":186,"column":5,"offset":6284}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":186,"column":5,"offset":6284},"end":{"line":187,"column":14,"offset":6298}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":187,"column":14,"offset":6298},"end":{"line":187,"column":18,"offset":6302}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":187,"column":18,"offset":6302},"end":{"line":187,"column":37,"offset":6321}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":187,"column":37,"offset":6321},"end":{"line":187,"column":40,"offset":6324}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":187,"column":40,"offset":6324},"end":{"line":187,"column":77,"offset":6361}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":187,"column":77,"offset":6361},"end":{"line":187,"column":81,"offset":6365}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":187,"column":81,"offset":6365},"end":{"line":187,"column":99,"offset":6383}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":187,"column":99,"offset":6383},"end":{"line":187,"column":102,"offset":6386}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":187,"column":102,"offset":6386},"end":{"line":187,"column":133,"offset":6417}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":187,"column":133,"offset":6417},"end":{"line":187,"column":139,"offset":6423}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":187,"column":139,"offset":6423},"end":{"line":187,"column":167,"offset":6451}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":187,"column":167,"offset":6451},"end":{"line":187,"column":171,"offset":6455}}},{"type":"text","value":".\n","position":{"start":{"line":187,"column":171,"offset":6455},"end":{"line":188,"column":1,"offset":6457}}},{"type":"raw","value":"<br>","position":{"start":{"line":188,"column":1,"offset":6457},"end":{"line":188,"column":5,"offset":6461}}},{"type":"text","value":"\n","position":{"start":{"line":188,"column":5,"offset":6461},"end":{"line":189,"column":1,"offset":6462}}},{"type":"raw","value":"<br>","position":{"start":{"line":189,"column":1,"offset":6462},"end":{"line":189,"column":5,"offset":6466}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":189,"column":5,"offset":6466},"end":{"line":191,"column":1,"offset":6486}}},{"type":"raw","value":"<br>","position":{"start":{"line":191,"column":1,"offset":6486},"end":{"line":191,"column":5,"offset":6490}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":191,"column":5,"offset":6490},"end":{"line":192,"column":6,"offset":6496}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":192,"column":6,"offset":6496},"end":{"line":192,"column":12,"offset":6502}}},{"type":"text","value":" does not have an ","position":{"start":{"line":192,"column":12,"offset":6502},"end":{"line":192,"column":30,"offset":6520}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":192,"column":30,"offset":6520},"end":{"line":192,"column":36,"offset":6526}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":192,"column":36,"offset":6526},"end":{"line":192,"column":62,"offset":6552}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":192,"column":62,"offset":6552},"end":{"line":192,"column":75,"offset":6565}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":192,"column":75,"offset":6565},"end":{"line":192,"column":159,"offset":6649}}}],"position":{"start":{"line":177,"column":1,"offset":5924},"end":{"line":192,"column":159,"offset":6649}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":194,"column":8,"offset":6658},"end":{"line":194,"column":41,"offset":6691}}}],"position":{"start":{"line":194,"column":1,"offset":6651},"end":{"line":194,"column":41,"offset":6691}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":195,"column":1,"offset":6692},"end":{"line":200,"column":4,"offset":6767}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":201,"column":1,"offset":6768},"end":{"line":202,"column":1,"offset":6787}}},{"type":"raw","value":"<br>","position":{"start":{"line":202,"column":1,"offset":6787},"end":{"line":202,"column":5,"offset":6791}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":202,"column":5,"offset":6791},"end":{"line":204,"column":5,"offset":6929}}},{"type":"raw","value":"<br>","position":{"start":{"line":204,"column":5,"offset":6929},"end":{"line":204,"column":9,"offset":6933}}},{"type":"text","value":"\n","position":{"start":{"line":204,"column":9,"offset":6933},"end":{"line":205,"column":5,"offset":6938}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":205,"column":5,"offset":6938},"end":{"line":205,"column":27,"offset":6960}}},{"type":"text","value":"\n","position":{"start":{"line":205,"column":27,"offset":6960},"end":{"line":206,"column":5,"offset":6965}}},{"type":"raw","value":"<br>","position":{"start":{"line":206,"column":5,"offset":6965},"end":{"line":206,"column":9,"offset":6969}}},{"type":"text","value":"\n","position":{"start":{"line":206,"column":9,"offset":6969},"end":{"line":207,"column":5,"offset":6974}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":207,"column":5,"offset":6974},"end":{"line":207,"column":12,"offset":6981}}},{"type":"text","value":" and ","position":{"start":{"line":207,"column":12,"offset":6981},"end":{"line":207,"column":17,"offset":6986}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":207,"column":17,"offset":6986},"end":{"line":207,"column":25,"offset":6994}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":207,"column":25,"offset":6994},"end":{"line":207,"column":63,"offset":7032}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":207,"column":63,"offset":7032},"end":{"line":207,"column":66,"offset":7035}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":207,"column":66,"offset":7035},"end":{"line":207,"column":86,"offset":7055}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":207,"column":86,"offset":7055},"end":{"line":207,"column":89,"offset":7058}}},{"type":"text","value":" will be called with ","position":{"start":{"line":207,"column":89,"offset":7058},"end":{"line":207,"column":110,"offset":7079}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":207,"column":110,"offset":7079},"end":{"line":207,"column":119,"offset":7088}}},{"type":"text","value":".\n","position":{"start":{"line":207,"column":119,"offset":7088},"end":{"line":208,"column":1,"offset":7090}}},{"type":"raw","value":"<br>","position":{"start":{"line":208,"column":1,"offset":7090},"end":{"line":208,"column":5,"offset":7094}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":208,"column":5,"offset":7094},"end":{"line":210,"column":1,"offset":7110}}},{"type":"raw","value":"<br>","position":{"start":{"line":210,"column":1,"offset":7110},"end":{"line":210,"column":5,"offset":7114}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":210,"column":5,"offset":7114},"end":{"line":212,"column":5,"offset":7221}}},{"type":"raw","value":"<br>","position":{"start":{"line":212,"column":5,"offset":7221},"end":{"line":212,"column":9,"offset":7225}}},{"type":"text","value":"\n","position":{"start":{"line":212,"column":9,"offset":7225},"end":{"line":213,"column":1,"offset":7226}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":213,"column":1,"offset":7226},"end":{"line":213,"column":23,"offset":7248}}},{"type":"text","value":" turns into ","position":{"start":{"line":213,"column":23,"offset":7248},"end":{"line":213,"column":35,"offset":7260}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":213,"column":35,"offset":7260},"end":{"line":213,"column":61,"offset":7286}}},{"type":"text","value":"\n","position":{"start":{"line":213,"column":61,"offset":7286},"end":{"line":214,"column":1,"offset":7287}}},{"type":"raw","value":"<br>","position":{"start":{"line":214,"column":1,"offset":7287},"end":{"line":214,"column":5,"offset":7291}}},{"type":"text","value":"\nNow ","position":{"start":{"line":214,"column":5,"offset":7291},"end":{"line":215,"column":5,"offset":7296}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":215,"column":5,"offset":7296},"end":{"line":215,"column":8,"offset":7299}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":215,"column":8,"offset":7299},"end":{"line":215,"column":58,"offset":7349}}}],"position":{"start":{"line":201,"column":1,"offset":6768},"end":{"line":215,"column":58,"offset":7349}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":217,"column":1,"offset":7351},"end":{"line":218,"column":1,"offset":7369}}},{"type":"raw","value":"<br>","position":{"start":{"line":218,"column":1,"offset":7369},"end":{"line":218,"column":5,"offset":7373}}}],"position":{"start":{"line":217,"column":1,"offset":7351},"end":{"line":218,"column":5,"offset":7373}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":219,"column":1,"offset":7374},"end":{"line":221,"column":4,"offset":7404}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":222,"column":1,"offset":7405},"end":{"line":222,"column":13,"offset":7417}}}],"position":{"start":{"line":222,"column":1,"offset":7405},"end":{"line":222,"column":13,"offset":7417}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":223,"column":1,"offset":7418},"end":{"line":229,"column":4,"offset":7497}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":230,"column":1,"offset":7498},"end":{"line":230,"column":8,"offset":7505}}}],"position":{"start":{"line":230,"column":1,"offset":7498},"end":{"line":230,"column":8,"offset":7505}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":231,"column":1,"offset":7506},"end":{"line":238,"column":4,"offset":7630}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":239,"column":1,"offset":7631},"end":{"line":240,"column":5,"offset":7640}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":242,"column":1,"offset":7642},"end":{"line":242,"column":11,"offset":7652}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":242,"column":11,"offset":7652},"end":{"line":242,"column":24,"offset":7665}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":242,"column":24,"offset":7665},"end":{"line":242,"column":107,"offset":7748}}}],"position":{"start":{"line":242,"column":1,"offset":7642},"end":{"line":242,"column":107,"offset":7748}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":244,"column":7,"offset":7756},"end":{"line":244,"column":10,"offset":7759}}}],"position":{"start":{"line":244,"column":1,"offset":7750},"end":{"line":244,"column":10,"offset":7759}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":245,"column":7,"offset":7766},"end":{"line":245,"column":10,"offset":7769}}}],"position":{"start":{"line":245,"column":1,"offset":7760},"end":{"line":245,"column":10,"offset":7769}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":247,"column":6,"offset":7776},"end":{"line":247,"column":10,"offset":7780}}}],"position":{"start":{"line":247,"column":1,"offset":7771},"end":{"line":247,"column":10,"offset":7780}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":248,"column":7,"offset":7787},"end":{"line":248,"column":13,"offset":7793}}}],"position":{"start":{"line":248,"column":1,"offset":7781},"end":{"line":248,"column":13,"offset":7793}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":249,"column":1,"offset":7794},"end":{"line":249,"column":49,"offset":7842}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":249,"column":49,"offset":7842},"end":{"line":249,"column":57,"offset":7850}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":249,"column":57,"offset":7850},"end":{"line":249,"column":133,"offset":7926}}}],"position":{"start":{"line":249,"column":1,"offset":7794},"end":{"line":249,"column":133,"offset":7926}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":250,"column":1,"offset":7927},"end":{"line":260,"column":4,"offset":8122}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":261,"column":1,"offset":8123},"end":{"line":261,"column":5,"offset":8127}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":264,"column":1,"offset":8130},"end":{"line":265,"column":1,"offset":8212}}},{"type":"raw","value":"<br>","position":{"start":{"line":265,"column":1,"offset":8212},"end":{"line":265,"column":5,"offset":8216}}},{"type":"text","value":"\n","position":{"start":{"line":265,"column":5,"offset":8216},"end":{"line":266,"column":1,"offset":8217}}},{"type":"raw","value":"<br>","position":{"start":{"line":266,"column":1,"offset":8217},"end":{"line":266,"column":5,"offset":8221}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":266,"column":5,"offset":8221},"end":{"line":267,"column":26,"offset":8247}}}],"position":{"start":{"line":264,"column":1,"offset":8130},"end":{"line":267,"column":26,"offset":8247}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":268,"column":1,"offset":8248},"end":{"line":273,"column":4,"offset":8376}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":274,"column":1,"offset":8377},"end":{"line":274,"column":14,"offset":8390}}}],"position":{"start":{"line":274,"column":1,"offset":8377},"end":{"line":274,"column":14,"offset":8390}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":276,"column":1,"offset":8392},"end":{"line":289,"column":4,"offset":8674}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":291,"column":1,"offset":8676},"end":{"line":292,"column":5,"offset":8685}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":295,"column":7,"offset":8694},"end":{"line":295,"column":13,"offset":8700}}}],"position":{"start":{"line":295,"column":1,"offset":8688},"end":{"line":295,"column":13,"offset":8700}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":295,"column":13,"offset":8700}}}}