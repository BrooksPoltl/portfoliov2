{"expireTime":9007200842255750000,"key":"transformer-remark-markdown-ast-e548c3fc37ac43329292f84c821282ae-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632},"indent":[]}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities. \n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705},"indent":[]}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791},"indent":[]}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833},"indent":[]}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865},"indent":[]}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884},"indent":[]}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916},"indent":[]}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052},"indent":[]}},{"type":"text","value":"\nEnvironment: The name-object pairs the interpreter keeps in memory.\n","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":34,"column":1,"offset":1121},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1121},"end":{"line":34,"column":5,"offset":1125},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":34,"column":5,"offset":1125},"end":{"line":35,"column":1,"offset":1126},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":35,"column":1,"offset":1126},"end":{"line":35,"column":5,"offset":1130},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":35,"column":5,"offset":1130},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Compound Procedures can be used to build on top of other Compound Procedures:\n","position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":1,"offset":1210},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1210},"end":{"line":38,"column":5,"offset":1214},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":5,"offset":1214},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (sum-of-squares x y)\n(+ (square x) (square y))</code></pre></div>","position":{"start":{"line":39,"column":1,"offset":1215},"end":{"line":42,"column":4,"offset":1277},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":43,"column":1,"offset":1278},"end":{"line":43,"column":5,"offset":1282},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Compound Procedure: procedure that you make out of other procedures.","position":{"start":{"line":45,"column":1,"offset":1284},"end":{"line":45,"column":69,"offset":1352},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1284},"end":{"line":45,"column":69,"offset":1352},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Primitive Procedure: procedure built into the language ex: ","position":{"start":{"line":47,"column":1,"offset":1354},"end":{"line":47,"column":60,"offset":1413},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":47,"column":60,"offset":1413},"end":{"line":47,"column":63,"offset":1416},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":47,"column":63,"offset":1416},"end":{"line":48,"column":1,"offset":1417},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1417},"end":{"line":48,"column":5,"offset":1421},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":48,"column":5,"offset":1421},"end":{"line":49,"column":1,"offset":1422},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":49,"column":1,"offset":1422},"end":{"line":49,"column":5,"offset":1426},"indent":[]}},{"type":"text","value":"\nBoth are used exactly the same.\n","position":{"start":{"line":49,"column":5,"offset":1426},"end":{"line":51,"column":1,"offset":1459},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":51,"column":1,"offset":1459},"end":{"line":51,"column":5,"offset":1463},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":51,"column":5,"offset":1463},"end":{"line":52,"column":1,"offset":1464},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":52,"column":1,"offset":1464},"end":{"line":52,"column":5,"offset":1468},"indent":[]}},{"type":"text","value":"\nWhen writing programs it is important to write modular code that doesn’t care how the other things are computed, only what should be computed.\n","position":{"start":{"line":52,"column":5,"offset":1468},"end":{"line":54,"column":1,"offset":1612},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":54,"column":1,"offset":1612},"end":{"line":54,"column":5,"offset":1616},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1354},"end":{"line":54,"column":5,"offset":1616},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":56,"column":7,"offset":1624},"end":{"line":56,"column":10,"offset":1627},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1618},"end":{"line":56,"column":10,"offset":1627},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":57,"column":7,"offset":1634},"end":{"line":57,"column":10,"offset":1637},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1628},"end":{"line":57,"column":10,"offset":1637},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":59,"column":6,"offset":1644},"end":{"line":59,"column":14,"offset":1652},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1639},"end":{"line":59,"column":14,"offset":1652},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":60,"column":7,"offset":1659},"end":{"line":60,"column":10,"offset":1662},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1653},"end":{"line":60,"column":10,"offset":1662},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":62,"column":8,"offset":1671},"end":{"line":62,"column":30,"offset":1693},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1664},"end":{"line":62,"column":30,"offset":1693},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":64,"column":1,"offset":1695},"end":{"line":65,"column":1,"offset":1839},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":65,"column":1,"offset":1839},"end":{"line":65,"column":5,"offset":1843},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":65,"column":5,"offset":1843},"end":{"line":65,"column":16,"offset":1854},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":65,"column":16,"offset":1854},"end":{"line":65,"column":20,"offset":1858},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":65,"column":20,"offset":1858},"end":{"line":67,"column":1,"offset":2002},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":67,"column":1,"offset":2002},"end":{"line":67,"column":5,"offset":2006},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":67,"column":5,"offset":2006},"end":{"line":67,"column":16,"offset":2017},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":67,"column":16,"offset":2017},"end":{"line":67,"column":20,"offset":2021},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":67,"column":20,"offset":2021},"end":{"line":68,"column":45,"offset":2066},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":68,"column":45,"offset":2066},"end":{"line":68,"column":49,"offset":2070},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":68,"column":49,"offset":2070},"end":{"line":68,"column":65,"offset":2086},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":68,"column":65,"offset":2086},"end":{"line":68,"column":69,"offset":2090},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":68,"column":69,"offset":2090},"end":{"line":70,"column":1,"offset":2133},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":70,"column":1,"offset":2133},"end":{"line":70,"column":5,"offset":2137},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":70,"column":5,"offset":2137},"end":{"line":70,"column":22,"offset":2154},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":70,"column":22,"offset":2154},"end":{"line":70,"column":26,"offset":2158},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":70,"column":26,"offset":2158},"end":{"line":71,"column":1,"offset":2159},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":71,"column":1,"offset":2159},"end":{"line":71,"column":5,"offset":2163},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":71,"column":5,"offset":2163},"end":{"line":73,"column":1,"offset":2281},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":73,"column":1,"offset":2281},"end":{"line":73,"column":5,"offset":2285},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":73,"column":5,"offset":2285},"end":{"line":75,"column":1,"offset":2406},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":75,"column":1,"offset":2406},"end":{"line":75,"column":12,"offset":2417},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":75,"column":12,"offset":2417},"end":{"line":75,"column":68,"offset":2473},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":75,"column":68,"offset":2473},"end":{"line":75,"column":79,"offset":2484},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":75,"column":79,"offset":2484},"end":{"line":75,"column":106,"offset":2511},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":75,"column":106,"offset":2511},"end":{"line":75,"column":109,"offset":2514},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":75,"column":109,"offset":2514},"end":{"line":75,"column":189,"offset":2594},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":75,"column":189,"offset":2594},"end":{"line":75,"column":192,"offset":2597},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":75,"column":192,"offset":2597},"end":{"line":75,"column":202,"offset":2607},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1695},"end":{"line":75,"column":202,"offset":2607},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":77,"column":8,"offset":2616},"end":{"line":77,"column":14,"offset":2622},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":2609},"end":{"line":77,"column":14,"offset":2622},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":78,"column":1,"offset":2623},"end":{"line":78,"column":9,"offset":2631},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":78,"column":9,"offset":2631},"end":{"line":78,"column":73,"offset":2695},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":2623},"end":{"line":78,"column":73,"offset":2695},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":79,"column":1,"offset":2696},"end":{"line":82,"column":4,"offset":2735},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":83,"column":1,"offset":2736},"end":{"line":83,"column":5,"offset":2740},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":85,"column":1,"offset":2742},"end":{"line":85,"column":72,"offset":2813},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":85,"column":72,"offset":2813},"end":{"line":85,"column":80,"offset":2821},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":85,"column":80,"offset":2821},"end":{"line":86,"column":1,"offset":2845},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":86,"column":1,"offset":2845},"end":{"line":86,"column":5,"offset":2849},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":86,"column":5,"offset":2849},"end":{"line":87,"column":1,"offset":2850},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":87,"column":1,"offset":2850},"end":{"line":87,"column":5,"offset":2854},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":87,"column":5,"offset":2854},"end":{"line":88,"column":184,"offset":3038},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":88,"column":184,"offset":3038},"end":{"line":88,"column":187,"offset":3041},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":88,"column":187,"offset":3041},"end":{"line":89,"column":1,"offset":3044},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":89,"column":1,"offset":3044},"end":{"line":89,"column":5,"offset":3048},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":89,"column":5,"offset":3048},"end":{"line":90,"column":1,"offset":3049},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":90,"column":1,"offset":3049},"end":{"line":90,"column":5,"offset":3053},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":90,"column":5,"offset":3053},"end":{"line":91,"column":27,"offset":3080},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":91,"column":27,"offset":3080},"end":{"line":91,"column":35,"offset":3088},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":91,"column":35,"offset":3088},"end":{"line":91,"column":86,"offset":3139},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":91,"column":86,"offset":3139},"end":{"line":91,"column":95,"offset":3148},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":91,"column":95,"offset":3148},"end":{"line":91,"column":97,"offset":3150},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":2742},"end":{"line":91,"column":97,"offset":3150},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":93,"column":1,"offset":3152},"end":{"line":93,"column":6,"offset":3157},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":95,"column":1,"offset":3159},"end":{"line":96,"column":1,"offset":3203},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":96,"column":1,"offset":3203},"end":{"line":96,"column":5,"offset":3207},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":96,"column":5,"offset":3207},"end":{"line":97,"column":1,"offset":3208},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":97,"column":1,"offset":3208},"end":{"line":97,"column":22,"offset":3229},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":97,"column":22,"offset":3229},"end":{"line":98,"column":1,"offset":3230},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":98,"column":1,"offset":3230},"end":{"line":98,"column":5,"offset":3234},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":3159},"end":{"line":98,"column":5,"offset":3234},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":100,"column":1,"offset":3236},"end":{"line":100,"column":152,"offset":3387},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":3236},"end":{"line":100,"column":152,"offset":3387},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":102,"column":8,"offset":3396},"end":{"line":102,"column":20,"offset":3408},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":3389},"end":{"line":102,"column":20,"offset":3408},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":104,"column":1,"offset":3410},"end":{"line":104,"column":56,"offset":3465},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":3410},"end":{"line":104,"column":56,"offset":3465},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":105,"column":1,"offset":3466},"end":{"line":110,"column":4,"offset":3557},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":111,"column":1,"offset":3558},"end":{"line":111,"column":5,"offset":3562},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":113,"column":1,"offset":3564},"end":{"line":113,"column":37,"offset":3600},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":113,"column":37,"offset":3600},"end":{"line":113,"column":41,"offset":3604},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":113,"column":41,"offset":3604},"end":{"line":114,"column":1,"offset":3621},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":114,"column":1,"offset":3621},"end":{"line":114,"column":5,"offset":3625},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":114,"column":5,"offset":3625},"end":{"line":115,"column":1,"offset":3626},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":115,"column":1,"offset":3626},"end":{"line":115,"column":5,"offset":3630},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":115,"column":5,"offset":3630},"end":{"line":116,"column":66,"offset":3696},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":116,"column":66,"offset":3696},"end":{"line":116,"column":89,"offset":3719},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":116,"column":89,"offset":3719},"end":{"line":117,"column":1,"offset":3759},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":117,"column":1,"offset":3759},"end":{"line":117,"column":5,"offset":3763},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":117,"column":5,"offset":3763},"end":{"line":118,"column":1,"offset":3764},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":118,"column":1,"offset":3764},"end":{"line":118,"column":5,"offset":3768},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":118,"column":5,"offset":3768},"end":{"line":119,"column":21,"offset":3789},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":119,"column":21,"offset":3789},"end":{"line":119,"column":25,"offset":3793},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":119,"column":25,"offset":3793},"end":{"line":120,"column":1,"offset":3847},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":120,"column":1,"offset":3847},"end":{"line":120,"column":5,"offset":3851},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":120,"column":5,"offset":3851},"end":{"line":121,"column":1,"offset":3852},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":121,"column":1,"offset":3852},"end":{"line":121,"column":5,"offset":3856},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":121,"column":5,"offset":3856},"end":{"line":122,"column":21,"offset":3877},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":122,"column":21,"offset":3877},"end":{"line":122,"column":25,"offset":3881},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":122,"column":25,"offset":3881},"end":{"line":123,"column":1,"offset":3936},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":123,"column":1,"offset":3936},"end":{"line":123,"column":5,"offset":3940},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":123,"column":5,"offset":3940},"end":{"line":124,"column":1,"offset":3941},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":124,"column":1,"offset":3941},"end":{"line":124,"column":5,"offset":3945},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":124,"column":5,"offset":3945},"end":{"line":125,"column":58,"offset":4003},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":125,"column":58,"offset":4003},"end":{"line":125,"column":61,"offset":4006},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":125,"column":61,"offset":4006},"end":{"line":125,"column":145,"offset":4090},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":125,"column":145,"offset":4090},"end":{"line":125,"column":153,"offset":4098},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":125,"column":153,"offset":4098},"end":{"line":125,"column":178,"offset":4123},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":3564},"end":{"line":125,"column":178,"offset":4123},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":127,"column":7,"offset":4131},"end":{"line":127,"column":10,"offset":4134},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":4125},"end":{"line":127,"column":10,"offset":4134},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":129,"column":8,"offset":4143},"end":{"line":129,"column":17,"offset":4152},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":4136},"end":{"line":129,"column":17,"offset":4152},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":130,"column":1,"offset":4153},"end":{"line":141,"column":4,"offset":4352},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":142,"column":1,"offset":4353},"end":{"line":142,"column":5,"offset":4357},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":144,"column":1,"offset":4359},"end":{"line":145,"column":1,"offset":4575},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":145,"column":1,"offset":4575},"end":{"line":145,"column":5,"offset":4579},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":145,"column":5,"offset":4579},"end":{"line":146,"column":1,"offset":4580},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":146,"column":1,"offset":4580},"end":{"line":146,"column":5,"offset":4584},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":146,"column":5,"offset":4584},"end":{"line":147,"column":72,"offset":4656},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":147,"column":72,"offset":4656},"end":{"line":147,"column":81,"offset":4665},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":147,"column":81,"offset":4665},"end":{"line":148,"column":1,"offset":4684},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":148,"column":1,"offset":4684},"end":{"line":148,"column":5,"offset":4688},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":148,"column":5,"offset":4688},"end":{"line":149,"column":1,"offset":4689},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":149,"column":1,"offset":4689},"end":{"line":149,"column":5,"offset":4693},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":149,"column":5,"offset":4693},"end":{"line":150,"column":10,"offset":4703},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":150,"column":10,"offset":4703},"end":{"line":150,"column":16,"offset":4709},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":150,"column":16,"offset":4709},"end":{"line":150,"column":34,"offset":4727},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":150,"column":34,"offset":4727},"end":{"line":150,"column":42,"offset":4735},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":150,"column":42,"offset":4735},"end":{"line":151,"column":24,"offset":4760},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":151,"column":24,"offset":4760},"end":{"line":151,"column":33,"offset":4769},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":151,"column":33,"offset":4769},"end":{"line":151,"column":107,"offset":4843},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":151,"column":107,"offset":4843},"end":{"line":151,"column":116,"offset":4852},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":151,"column":116,"offset":4852},"end":{"line":151,"column":134,"offset":4870},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":151,"column":134,"offset":4870},"end":{"line":151,"column":137,"offset":4873},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":151,"column":137,"offset":4873},"end":{"line":151,"column":161,"offset":4897},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":151,"column":161,"offset":4897},"end":{"line":151,"column":167,"offset":4903},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":151,"column":167,"offset":4903},"end":{"line":151,"column":192,"offset":4928},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":151,"column":192,"offset":4928},"end":{"line":151,"column":200,"offset":4936},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":151,"column":200,"offset":4936},"end":{"line":151,"column":218,"offset":4954},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":151,"column":218,"offset":4954},"end":{"line":151,"column":224,"offset":4960},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":151,"column":224,"offset":4960},"end":{"line":151,"column":245,"offset":4981},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":151,"column":245,"offset":4981},"end":{"line":151,"column":252,"offset":4988},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":151,"column":252,"offset":4988},"end":{"line":151,"column":257,"offset":4993},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":151,"column":257,"offset":4993},"end":{"line":151,"column":260,"offset":4996},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":151,"column":260,"offset":4996},"end":{"line":151,"column":285,"offset":5021},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":151,"column":285,"offset":5021},"end":{"line":151,"column":291,"offset":5027},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":151,"column":291,"offset":5027},"end":{"line":152,"column":96,"offset":5153},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":152,"column":96,"offset":5153},"end":{"line":152,"column":111,"offset":5168},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":152,"column":111,"offset":5168},"end":{"line":152,"column":182,"offset":5239},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":4359},"end":{"line":152,"column":182,"offset":5239},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":154,"column":8,"offset":5248},"end":{"line":154,"column":19,"offset":5259},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":5241},"end":{"line":154,"column":19,"offset":5259},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":155,"column":1,"offset":5260},"end":{"line":155,"column":14,"offset":5273},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":5260},"end":{"line":155,"column":14,"offset":5273},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":156,"column":1,"offset":5274},"end":{"line":171,"column":4,"offset":5689},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":172,"column":1,"offset":5690},"end":{"line":172,"column":5,"offset":5694},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":174,"column":1,"offset":5696},"end":{"line":174,"column":141,"offset":5836},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":5696},"end":{"line":174,"column":141,"offset":5836},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":176,"column":8,"offset":5845},"end":{"line":176,"column":30,"offset":5867},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":5838},"end":{"line":176,"column":30,"offset":5867},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":177,"column":1,"offset":5868},"end":{"line":177,"column":199,"offset":6066},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":5868},"end":{"line":177,"column":199,"offset":6066},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":179,"column":8,"offset":6075},"end":{"line":179,"column":30,"offset":6097},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":6068},"end":{"line":179,"column":30,"offset":6097},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":181,"column":1,"offset":6099},"end":{"line":182,"column":1,"offset":6174},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":182,"column":1,"offset":6174},"end":{"line":182,"column":5,"offset":6178},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":182,"column":5,"offset":6178},"end":{"line":183,"column":1,"offset":6179},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":183,"column":1,"offset":6179},"end":{"line":183,"column":5,"offset":6183},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":183,"column":5,"offset":6183},"end":{"line":185,"column":1,"offset":6245},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":185,"column":1,"offset":6245},"end":{"line":185,"column":5,"offset":6249},"indent":[]}},{"type":"break","position":{"start":{"line":185,"column":5,"offset":6249},"end":{"line":186,"column":1,"offset":6252},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":186,"column":1,"offset":6252},"end":{"line":186,"column":11,"offset":6262},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":186,"column":11,"offset":6262},"end":{"line":186,"column":19,"offset":6270},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":186,"column":19,"offset":6270},"end":{"line":186,"column":24,"offset":6275},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":186,"column":24,"offset":6275},"end":{"line":186,"column":34,"offset":6285},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":186,"column":34,"offset":6285},"end":{"line":187,"column":1,"offset":6334},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":187,"column":1,"offset":6334},"end":{"line":187,"column":5,"offset":6338},"indent":[]}}],"position":{"start":{"line":181,"column":1,"offset":6099},"end":{"line":187,"column":5,"offset":6338},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":189,"column":8,"offset":6347},"end":{"line":189,"column":12,"offset":6351},"indent":[]}}],"position":{"start":{"line":189,"column":1,"offset":6340},"end":{"line":189,"column":12,"offset":6351},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":190,"column":1,"offset":6352},"end":{"line":195,"column":4,"offset":6463},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":196,"column":1,"offset":6464},"end":{"line":197,"column":5,"offset":6473},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":199,"column":1,"offset":6475},"end":{"line":199,"column":7,"offset":6481},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":199,"column":7,"offset":6481},"end":{"line":201,"column":1,"offset":6563},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":201,"column":1,"offset":6563},"end":{"line":201,"column":5,"offset":6567},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":201,"column":5,"offset":6567},"end":{"line":202,"column":1,"offset":6568},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":202,"column":1,"offset":6568},"end":{"line":202,"column":5,"offset":6572},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":202,"column":5,"offset":6572},"end":{"line":203,"column":10,"offset":6582},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":203,"column":10,"offset":6582},"end":{"line":203,"column":14,"offset":6586},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":203,"column":14,"offset":6586},"end":{"line":203,"column":22,"offset":6594},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":203,"column":22,"offset":6594},"end":{"line":203,"column":30,"offset":6602},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":203,"column":30,"offset":6602},"end":{"line":203,"column":50,"offset":6622},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":203,"column":50,"offset":6622},"end":{"line":203,"column":53,"offset":6625},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":203,"column":53,"offset":6625},"end":{"line":203,"column":90,"offset":6662},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":203,"column":90,"offset":6662},"end":{"line":203,"column":96,"offset":6668},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":203,"column":96,"offset":6668},"end":{"line":204,"column":1,"offset":6671},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":204,"column":1,"offset":6671},"end":{"line":204,"column":5,"offset":6675},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":204,"column":5,"offset":6675},"end":{"line":205,"column":1,"offset":6676},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":205,"column":1,"offset":6676},"end":{"line":205,"column":5,"offset":6680},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":205,"column":5,"offset":6680},"end":{"line":206,"column":14,"offset":6694},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":206,"column":14,"offset":6694},"end":{"line":206,"column":18,"offset":6698},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":206,"column":18,"offset":6698},"end":{"line":206,"column":90,"offset":6770},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":206,"column":90,"offset":6770},"end":{"line":206,"column":94,"offset":6774},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":206,"column":94,"offset":6774},"end":{"line":206,"column":125,"offset":6805},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":206,"column":125,"offset":6805},"end":{"line":206,"column":131,"offset":6811},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":206,"column":131,"offset":6811},"end":{"line":207,"column":1,"offset":6826},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":207,"column":1,"offset":6826},"end":{"line":207,"column":5,"offset":6830},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":207,"column":5,"offset":6830},"end":{"line":208,"column":1,"offset":6831},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":208,"column":1,"offset":6831},"end":{"line":208,"column":5,"offset":6835},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":208,"column":5,"offset":6835},"end":{"line":209,"column":14,"offset":6849},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":209,"column":14,"offset":6849},"end":{"line":209,"column":18,"offset":6853},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":209,"column":18,"offset":6853},"end":{"line":209,"column":37,"offset":6872},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":209,"column":37,"offset":6872},"end":{"line":209,"column":40,"offset":6875},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":209,"column":40,"offset":6875},"end":{"line":209,"column":77,"offset":6912},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":209,"column":77,"offset":6912},"end":{"line":209,"column":81,"offset":6916},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":209,"column":81,"offset":6916},"end":{"line":209,"column":99,"offset":6934},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":209,"column":99,"offset":6934},"end":{"line":209,"column":102,"offset":6937},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":209,"column":102,"offset":6937},"end":{"line":209,"column":133,"offset":6968},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":209,"column":133,"offset":6968},"end":{"line":209,"column":139,"offset":6974},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":209,"column":139,"offset":6974},"end":{"line":209,"column":167,"offset":7002},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":209,"column":167,"offset":7002},"end":{"line":209,"column":171,"offset":7006},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":209,"column":171,"offset":7006},"end":{"line":210,"column":1,"offset":7008},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":210,"column":1,"offset":7008},"end":{"line":210,"column":5,"offset":7012},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":210,"column":5,"offset":7012},"end":{"line":211,"column":1,"offset":7013},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":211,"column":1,"offset":7013},"end":{"line":211,"column":5,"offset":7017},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":211,"column":5,"offset":7017},"end":{"line":213,"column":1,"offset":7037},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":213,"column":1,"offset":7037},"end":{"line":213,"column":5,"offset":7041},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":213,"column":5,"offset":7041},"end":{"line":214,"column":6,"offset":7047},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":214,"column":6,"offset":7047},"end":{"line":214,"column":12,"offset":7053},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":214,"column":12,"offset":7053},"end":{"line":214,"column":30,"offset":7071},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":214,"column":30,"offset":7071},"end":{"line":214,"column":36,"offset":7077},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":214,"column":36,"offset":7077},"end":{"line":214,"column":62,"offset":7103},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":214,"column":62,"offset":7103},"end":{"line":214,"column":75,"offset":7116},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":214,"column":75,"offset":7116},"end":{"line":214,"column":159,"offset":7200},"indent":[]}}],"position":{"start":{"line":199,"column":1,"offset":6475},"end":{"line":214,"column":159,"offset":7200},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":216,"column":8,"offset":7209},"end":{"line":216,"column":41,"offset":7242},"indent":[]}}],"position":{"start":{"line":216,"column":1,"offset":7202},"end":{"line":216,"column":41,"offset":7242},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":217,"column":1,"offset":7243},"end":{"line":222,"column":4,"offset":7318},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":223,"column":1,"offset":7319},"end":{"line":224,"column":1,"offset":7338},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":224,"column":1,"offset":7338},"end":{"line":224,"column":5,"offset":7342},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":224,"column":5,"offset":7342},"end":{"line":226,"column":5,"offset":7480},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":226,"column":5,"offset":7480},"end":{"line":226,"column":9,"offset":7484},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":226,"column":9,"offset":7484},"end":{"line":227,"column":5,"offset":7489},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":227,"column":5,"offset":7489},"end":{"line":227,"column":27,"offset":7511},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":227,"column":27,"offset":7511},"end":{"line":228,"column":5,"offset":7516},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":228,"column":5,"offset":7516},"end":{"line":228,"column":9,"offset":7520},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":228,"column":9,"offset":7520},"end":{"line":229,"column":5,"offset":7525},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":229,"column":5,"offset":7525},"end":{"line":229,"column":12,"offset":7532},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":229,"column":12,"offset":7532},"end":{"line":229,"column":17,"offset":7537},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":229,"column":17,"offset":7537},"end":{"line":229,"column":25,"offset":7545},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":229,"column":25,"offset":7545},"end":{"line":229,"column":63,"offset":7583},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":229,"column":63,"offset":7583},"end":{"line":229,"column":66,"offset":7586},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":229,"column":66,"offset":7586},"end":{"line":229,"column":86,"offset":7606},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":229,"column":86,"offset":7606},"end":{"line":229,"column":89,"offset":7609},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":229,"column":89,"offset":7609},"end":{"line":229,"column":110,"offset":7630},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":229,"column":110,"offset":7630},"end":{"line":229,"column":119,"offset":7639},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":229,"column":119,"offset":7639},"end":{"line":230,"column":1,"offset":7641},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":230,"column":1,"offset":7641},"end":{"line":230,"column":5,"offset":7645},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":230,"column":5,"offset":7645},"end":{"line":232,"column":1,"offset":7661},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":232,"column":1,"offset":7661},"end":{"line":232,"column":5,"offset":7665},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":232,"column":5,"offset":7665},"end":{"line":234,"column":5,"offset":7772},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":234,"column":5,"offset":7772},"end":{"line":234,"column":9,"offset":7776},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":234,"column":9,"offset":7776},"end":{"line":235,"column":1,"offset":7777},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":235,"column":1,"offset":7777},"end":{"line":235,"column":23,"offset":7799},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":235,"column":23,"offset":7799},"end":{"line":235,"column":35,"offset":7811},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":235,"column":35,"offset":7811},"end":{"line":235,"column":61,"offset":7837},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":235,"column":61,"offset":7837},"end":{"line":236,"column":1,"offset":7838},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":236,"column":1,"offset":7838},"end":{"line":236,"column":5,"offset":7842},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":236,"column":5,"offset":7842},"end":{"line":237,"column":5,"offset":7847},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":237,"column":5,"offset":7847},"end":{"line":237,"column":8,"offset":7850},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":237,"column":8,"offset":7850},"end":{"line":237,"column":58,"offset":7900},"indent":[]}}],"position":{"start":{"line":223,"column":1,"offset":7319},"end":{"line":237,"column":58,"offset":7900},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":239,"column":1,"offset":7902},"end":{"line":240,"column":1,"offset":7920},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":240,"column":1,"offset":7920},"end":{"line":240,"column":5,"offset":7924},"indent":[]}}],"position":{"start":{"line":239,"column":1,"offset":7902},"end":{"line":240,"column":5,"offset":7924},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":241,"column":1,"offset":7925},"end":{"line":243,"column":4,"offset":7955},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":244,"column":1,"offset":7956},"end":{"line":244,"column":13,"offset":7968},"indent":[]}}],"position":{"start":{"line":244,"column":1,"offset":7956},"end":{"line":244,"column":13,"offset":7968},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":245,"column":1,"offset":7969},"end":{"line":251,"column":4,"offset":8048},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":252,"column":1,"offset":8049},"end":{"line":252,"column":8,"offset":8056},"indent":[]}}],"position":{"start":{"line":252,"column":1,"offset":8049},"end":{"line":252,"column":8,"offset":8056},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":253,"column":1,"offset":8057},"end":{"line":260,"column":4,"offset":8181},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":261,"column":1,"offset":8182},"end":{"line":262,"column":5,"offset":8191},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":264,"column":1,"offset":8193},"end":{"line":264,"column":11,"offset":8203},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":264,"column":11,"offset":8203},"end":{"line":264,"column":24,"offset":8216},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":264,"column":24,"offset":8216},"end":{"line":264,"column":107,"offset":8299},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":8193},"end":{"line":264,"column":107,"offset":8299},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":266,"column":7,"offset":8307},"end":{"line":266,"column":10,"offset":8310},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":8301},"end":{"line":266,"column":10,"offset":8310},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":267,"column":7,"offset":8317},"end":{"line":267,"column":10,"offset":8320},"indent":[]}}],"position":{"start":{"line":267,"column":1,"offset":8311},"end":{"line":267,"column":10,"offset":8320},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":269,"column":6,"offset":8327},"end":{"line":269,"column":10,"offset":8331},"indent":[]}}],"position":{"start":{"line":269,"column":1,"offset":8322},"end":{"line":269,"column":10,"offset":8331},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":270,"column":7,"offset":8338},"end":{"line":270,"column":13,"offset":8344},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":8332},"end":{"line":270,"column":13,"offset":8344},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":271,"column":1,"offset":8345},"end":{"line":271,"column":49,"offset":8393},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":271,"column":49,"offset":8393},"end":{"line":271,"column":57,"offset":8401},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":271,"column":57,"offset":8401},"end":{"line":271,"column":133,"offset":8477},"indent":[]}}],"position":{"start":{"line":271,"column":1,"offset":8345},"end":{"line":271,"column":133,"offset":8477},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":272,"column":1,"offset":8478},"end":{"line":282,"column":4,"offset":8673},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":283,"column":1,"offset":8674},"end":{"line":283,"column":5,"offset":8678},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":286,"column":1,"offset":8681},"end":{"line":287,"column":1,"offset":8763},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":287,"column":1,"offset":8763},"end":{"line":287,"column":5,"offset":8767},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":287,"column":5,"offset":8767},"end":{"line":288,"column":1,"offset":8768},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":288,"column":1,"offset":8768},"end":{"line":288,"column":5,"offset":8772},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":288,"column":5,"offset":8772},"end":{"line":289,"column":26,"offset":8798},"indent":[1]}}],"position":{"start":{"line":286,"column":1,"offset":8681},"end":{"line":289,"column":26,"offset":8798},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":290,"column":1,"offset":8799},"end":{"line":295,"column":4,"offset":8927},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":296,"column":1,"offset":8928},"end":{"line":296,"column":14,"offset":8941},"indent":[]}}],"position":{"start":{"line":296,"column":1,"offset":8928},"end":{"line":296,"column":14,"offset":8941},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":298,"column":1,"offset":8943},"end":{"line":311,"column":4,"offset":9225},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":313,"column":1,"offset":9227},"end":{"line":314,"column":5,"offset":9236},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":317,"column":7,"offset":9245},"end":{"line":317,"column":13,"offset":9251},"indent":[]}}],"position":{"start":{"line":317,"column":1,"offset":9239},"end":{"line":317,"column":13,"offset":9251},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":317,"column":13,"offset":9251}}}}