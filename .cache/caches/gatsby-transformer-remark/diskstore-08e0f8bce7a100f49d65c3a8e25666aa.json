{"expireTime":9007200842248538000,"key":"transformer-remark-markdown-ast-924a3a2669e1be54ede5b2befd1c400b-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632},"indent":[]}},{"type":"text","value":"\nmeans of combination: The ability to combine simplest entities. \n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":698},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":1,"offset":698},"end":{"line":16,"column":5,"offset":702},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":702},"end":{"line":17,"column":1,"offset":703},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":17,"column":1,"offset":703},"end":{"line":17,"column":5,"offset":707},"indent":[]}},{"type":"text","value":"\nmeans of abstraction","position":{"start":{"line":17,"column":5,"offset":707},"end":{"line":18,"column":21,"offset":728},"indent":[1]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":18,"column":21,"offset":728},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":19,"column":7,"offset":735},"end":{"line":19,"column":10,"offset":738},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":729},"end":{"line":19,"column":10,"offset":738},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":20,"column":7,"offset":745},"end":{"line":20,"column":10,"offset":748},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":739},"end":{"line":20,"column":10,"offset":748},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":22,"column":6,"offset":755},"end":{"line":22,"column":14,"offset":763},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":750},"end":{"line":22,"column":14,"offset":763},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":23,"column":7,"offset":770},"end":{"line":23,"column":10,"offset":773},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":764},"end":{"line":23,"column":10,"offset":773},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":25,"column":8,"offset":782},"end":{"line":25,"column":30,"offset":804},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":775},"end":{"line":25,"column":30,"offset":804},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":27,"column":1,"offset":806},"end":{"line":28,"column":1,"offset":950},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":1,"offset":950},"end":{"line":28,"column":5,"offset":954},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":28,"column":5,"offset":954},"end":{"line":28,"column":16,"offset":965},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":16,"offset":965},"end":{"line":28,"column":20,"offset":969},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":28,"column":20,"offset":969},"end":{"line":30,"column":1,"offset":1113},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":30,"column":1,"offset":1113},"end":{"line":30,"column":5,"offset":1117},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":30,"column":5,"offset":1117},"end":{"line":30,"column":16,"offset":1128},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":30,"column":16,"offset":1128},"end":{"line":30,"column":20,"offset":1132},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":30,"column":20,"offset":1132},"end":{"line":31,"column":45,"offset":1177},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":45,"offset":1177},"end":{"line":31,"column":49,"offset":1181},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":31,"column":49,"offset":1181},"end":{"line":31,"column":65,"offset":1197},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":65,"offset":1197},"end":{"line":31,"column":69,"offset":1201},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":31,"column":69,"offset":1201},"end":{"line":33,"column":1,"offset":1244},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":33,"column":1,"offset":1244},"end":{"line":33,"column":5,"offset":1248},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":33,"column":5,"offset":1248},"end":{"line":33,"column":22,"offset":1265},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":33,"column":22,"offset":1265},"end":{"line":33,"column":26,"offset":1269},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":33,"column":26,"offset":1269},"end":{"line":34,"column":1,"offset":1270},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1270},"end":{"line":34,"column":5,"offset":1274},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":34,"column":5,"offset":1274},"end":{"line":36,"column":1,"offset":1392},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":36,"column":1,"offset":1392},"end":{"line":36,"column":5,"offset":1396},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":36,"column":5,"offset":1396},"end":{"line":38,"column":1,"offset":1517},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":38,"column":1,"offset":1517},"end":{"line":38,"column":12,"offset":1528},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":38,"column":12,"offset":1528},"end":{"line":38,"column":68,"offset":1584},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":38,"column":68,"offset":1584},"end":{"line":38,"column":79,"offset":1595},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":38,"column":79,"offset":1595},"end":{"line":38,"column":106,"offset":1622},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":38,"column":106,"offset":1622},"end":{"line":38,"column":109,"offset":1625},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":38,"column":109,"offset":1625},"end":{"line":38,"column":189,"offset":1705},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":38,"column":189,"offset":1705},"end":{"line":38,"column":192,"offset":1708},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":38,"column":192,"offset":1708},"end":{"line":38,"column":202,"offset":1718},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":806},"end":{"line":38,"column":202,"offset":1718},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":40,"column":8,"offset":1727},"end":{"line":40,"column":14,"offset":1733},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1720},"end":{"line":40,"column":14,"offset":1733},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":41,"column":1,"offset":1734},"end":{"line":41,"column":9,"offset":1742},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":41,"column":9,"offset":1742},"end":{"line":41,"column":73,"offset":1806},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1734},"end":{"line":41,"column":73,"offset":1806},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":42,"column":1,"offset":1807},"end":{"line":45,"column":4,"offset":1846},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":46,"column":1,"offset":1847},"end":{"line":46,"column":5,"offset":1851},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":48,"column":1,"offset":1853},"end":{"line":48,"column":72,"offset":1924},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":48,"column":72,"offset":1924},"end":{"line":48,"column":80,"offset":1932},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":48,"column":80,"offset":1932},"end":{"line":49,"column":1,"offset":1956},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":49,"column":1,"offset":1956},"end":{"line":49,"column":5,"offset":1960},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":49,"column":5,"offset":1960},"end":{"line":50,"column":1,"offset":1961},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":50,"column":1,"offset":1961},"end":{"line":50,"column":5,"offset":1965},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":50,"column":5,"offset":1965},"end":{"line":51,"column":184,"offset":2149},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":51,"column":184,"offset":2149},"end":{"line":51,"column":187,"offset":2152},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":51,"column":187,"offset":2152},"end":{"line":52,"column":1,"offset":2155},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":52,"column":1,"offset":2155},"end":{"line":52,"column":5,"offset":2159},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":52,"column":5,"offset":2159},"end":{"line":53,"column":1,"offset":2160},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":53,"column":1,"offset":2160},"end":{"line":53,"column":5,"offset":2164},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":53,"column":5,"offset":2164},"end":{"line":54,"column":27,"offset":2191},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":54,"column":27,"offset":2191},"end":{"line":54,"column":35,"offset":2199},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":54,"column":35,"offset":2199},"end":{"line":54,"column":86,"offset":2250},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":54,"column":86,"offset":2250},"end":{"line":54,"column":95,"offset":2259},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":54,"column":95,"offset":2259},"end":{"line":54,"column":97,"offset":2261},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1853},"end":{"line":54,"column":97,"offset":2261},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":56,"column":1,"offset":2263},"end":{"line":56,"column":6,"offset":2268},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":58,"column":1,"offset":2270},"end":{"line":59,"column":1,"offset":2314},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":59,"column":1,"offset":2314},"end":{"line":59,"column":5,"offset":2318},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":59,"column":5,"offset":2318},"end":{"line":60,"column":1,"offset":2319},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":60,"column":1,"offset":2319},"end":{"line":60,"column":22,"offset":2340},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":60,"column":22,"offset":2340},"end":{"line":61,"column":1,"offset":2341},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":61,"column":1,"offset":2341},"end":{"line":61,"column":5,"offset":2345},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":2270},"end":{"line":61,"column":5,"offset":2345},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":63,"column":1,"offset":2347},"end":{"line":63,"column":152,"offset":2498},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":2347},"end":{"line":63,"column":152,"offset":2498},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":65,"column":8,"offset":2507},"end":{"line":65,"column":20,"offset":2519},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":2500},"end":{"line":65,"column":20,"offset":2519},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":67,"column":1,"offset":2521},"end":{"line":67,"column":56,"offset":2576},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":2521},"end":{"line":67,"column":56,"offset":2576},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":68,"column":1,"offset":2577},"end":{"line":73,"column":4,"offset":2668},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":74,"column":1,"offset":2669},"end":{"line":74,"column":5,"offset":2673},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":76,"column":1,"offset":2675},"end":{"line":76,"column":37,"offset":2711},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":76,"column":37,"offset":2711},"end":{"line":76,"column":41,"offset":2715},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":76,"column":41,"offset":2715},"end":{"line":77,"column":1,"offset":2732},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":77,"column":1,"offset":2732},"end":{"line":77,"column":5,"offset":2736},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":77,"column":5,"offset":2736},"end":{"line":78,"column":1,"offset":2737},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2737},"end":{"line":78,"column":5,"offset":2741},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":78,"column":5,"offset":2741},"end":{"line":79,"column":66,"offset":2807},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":79,"column":66,"offset":2807},"end":{"line":79,"column":89,"offset":2830},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":79,"column":89,"offset":2830},"end":{"line":80,"column":1,"offset":2870},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":80,"column":1,"offset":2870},"end":{"line":80,"column":5,"offset":2874},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":80,"column":5,"offset":2874},"end":{"line":81,"column":1,"offset":2875},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":81,"column":1,"offset":2875},"end":{"line":81,"column":5,"offset":2879},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":81,"column":5,"offset":2879},"end":{"line":82,"column":21,"offset":2900},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":82,"column":21,"offset":2900},"end":{"line":82,"column":25,"offset":2904},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":82,"column":25,"offset":2904},"end":{"line":83,"column":1,"offset":2958},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":83,"column":1,"offset":2958},"end":{"line":83,"column":5,"offset":2962},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":83,"column":5,"offset":2962},"end":{"line":84,"column":1,"offset":2963},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":84,"column":1,"offset":2963},"end":{"line":84,"column":5,"offset":2967},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":84,"column":5,"offset":2967},"end":{"line":85,"column":21,"offset":2988},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":85,"column":21,"offset":2988},"end":{"line":85,"column":25,"offset":2992},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":85,"column":25,"offset":2992},"end":{"line":86,"column":1,"offset":3047},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":86,"column":1,"offset":3047},"end":{"line":86,"column":5,"offset":3051},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":86,"column":5,"offset":3051},"end":{"line":87,"column":1,"offset":3052},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":87,"column":1,"offset":3052},"end":{"line":87,"column":5,"offset":3056},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":87,"column":5,"offset":3056},"end":{"line":88,"column":58,"offset":3114},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":88,"column":58,"offset":3114},"end":{"line":88,"column":61,"offset":3117},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":88,"column":61,"offset":3117},"end":{"line":88,"column":145,"offset":3201},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":88,"column":145,"offset":3201},"end":{"line":88,"column":153,"offset":3209},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":88,"column":153,"offset":3209},"end":{"line":88,"column":178,"offset":3234},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":2675},"end":{"line":88,"column":178,"offset":3234},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":90,"column":7,"offset":3242},"end":{"line":90,"column":10,"offset":3245},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":3236},"end":{"line":90,"column":10,"offset":3245},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":92,"column":8,"offset":3254},"end":{"line":92,"column":17,"offset":3263},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":3247},"end":{"line":92,"column":17,"offset":3263},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":93,"column":1,"offset":3264},"end":{"line":104,"column":4,"offset":3463},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":105,"column":1,"offset":3464},"end":{"line":105,"column":5,"offset":3468},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":107,"column":1,"offset":3470},"end":{"line":108,"column":1,"offset":3686},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":108,"column":1,"offset":3686},"end":{"line":108,"column":5,"offset":3690},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":108,"column":5,"offset":3690},"end":{"line":109,"column":1,"offset":3691},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":109,"column":1,"offset":3691},"end":{"line":109,"column":5,"offset":3695},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":109,"column":5,"offset":3695},"end":{"line":110,"column":72,"offset":3767},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":110,"column":72,"offset":3767},"end":{"line":110,"column":81,"offset":3776},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":110,"column":81,"offset":3776},"end":{"line":111,"column":1,"offset":3795},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":111,"column":1,"offset":3795},"end":{"line":111,"column":5,"offset":3799},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":111,"column":5,"offset":3799},"end":{"line":112,"column":1,"offset":3800},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":112,"column":1,"offset":3800},"end":{"line":112,"column":5,"offset":3804},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":112,"column":5,"offset":3804},"end":{"line":113,"column":10,"offset":3814},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":113,"column":10,"offset":3814},"end":{"line":113,"column":16,"offset":3820},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":113,"column":16,"offset":3820},"end":{"line":113,"column":34,"offset":3838},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":113,"column":34,"offset":3838},"end":{"line":113,"column":42,"offset":3846},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":113,"column":42,"offset":3846},"end":{"line":114,"column":24,"offset":3871},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":114,"column":24,"offset":3871},"end":{"line":114,"column":33,"offset":3880},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":114,"column":33,"offset":3880},"end":{"line":114,"column":107,"offset":3954},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":114,"column":107,"offset":3954},"end":{"line":114,"column":116,"offset":3963},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":114,"column":116,"offset":3963},"end":{"line":114,"column":134,"offset":3981},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":114,"column":134,"offset":3981},"end":{"line":114,"column":137,"offset":3984},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":114,"column":137,"offset":3984},"end":{"line":114,"column":161,"offset":4008},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":114,"column":161,"offset":4008},"end":{"line":114,"column":167,"offset":4014},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":114,"column":167,"offset":4014},"end":{"line":114,"column":192,"offset":4039},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":114,"column":192,"offset":4039},"end":{"line":114,"column":200,"offset":4047},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":114,"column":200,"offset":4047},"end":{"line":114,"column":218,"offset":4065},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":114,"column":218,"offset":4065},"end":{"line":114,"column":224,"offset":4071},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":114,"column":224,"offset":4071},"end":{"line":114,"column":245,"offset":4092},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":114,"column":245,"offset":4092},"end":{"line":114,"column":252,"offset":4099},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":114,"column":252,"offset":4099},"end":{"line":114,"column":257,"offset":4104},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":114,"column":257,"offset":4104},"end":{"line":114,"column":260,"offset":4107},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":114,"column":260,"offset":4107},"end":{"line":114,"column":285,"offset":4132},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":114,"column":285,"offset":4132},"end":{"line":114,"column":291,"offset":4138},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":114,"column":291,"offset":4138},"end":{"line":115,"column":96,"offset":4264},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":115,"column":96,"offset":4264},"end":{"line":115,"column":111,"offset":4279},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":115,"column":111,"offset":4279},"end":{"line":115,"column":182,"offset":4350},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":3470},"end":{"line":115,"column":182,"offset":4350},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":117,"column":8,"offset":4359},"end":{"line":117,"column":19,"offset":4370},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":4352},"end":{"line":117,"column":19,"offset":4370},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":118,"column":1,"offset":4371},"end":{"line":118,"column":14,"offset":4384},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":4371},"end":{"line":118,"column":14,"offset":4384},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":119,"column":1,"offset":4385},"end":{"line":134,"column":4,"offset":4800},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":135,"column":1,"offset":4801},"end":{"line":135,"column":5,"offset":4805},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":137,"column":1,"offset":4807},"end":{"line":137,"column":141,"offset":4947},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":4807},"end":{"line":137,"column":141,"offset":4947},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":139,"column":8,"offset":4956},"end":{"line":139,"column":30,"offset":4978},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":4949},"end":{"line":139,"column":30,"offset":4978},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":140,"column":1,"offset":4979},"end":{"line":140,"column":199,"offset":5177},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":4979},"end":{"line":140,"column":199,"offset":5177},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":142,"column":8,"offset":5186},"end":{"line":142,"column":30,"offset":5208},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":5179},"end":{"line":142,"column":30,"offset":5208},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":144,"column":1,"offset":5210},"end":{"line":145,"column":1,"offset":5285},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":145,"column":1,"offset":5285},"end":{"line":145,"column":5,"offset":5289},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":145,"column":5,"offset":5289},"end":{"line":146,"column":1,"offset":5290},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":146,"column":1,"offset":5290},"end":{"line":146,"column":5,"offset":5294},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":146,"column":5,"offset":5294},"end":{"line":148,"column":1,"offset":5356},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":148,"column":1,"offset":5356},"end":{"line":148,"column":5,"offset":5360},"indent":[]}},{"type":"break","position":{"start":{"line":148,"column":5,"offset":5360},"end":{"line":149,"column":1,"offset":5363},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":149,"column":1,"offset":5363},"end":{"line":149,"column":11,"offset":5373},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":149,"column":11,"offset":5373},"end":{"line":149,"column":19,"offset":5381},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":149,"column":19,"offset":5381},"end":{"line":149,"column":24,"offset":5386},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":149,"column":24,"offset":5386},"end":{"line":149,"column":34,"offset":5396},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":149,"column":34,"offset":5396},"end":{"line":150,"column":1,"offset":5445},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":150,"column":1,"offset":5445},"end":{"line":150,"column":5,"offset":5449},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":5210},"end":{"line":150,"column":5,"offset":5449},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":152,"column":8,"offset":5458},"end":{"line":152,"column":12,"offset":5462},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":5451},"end":{"line":152,"column":12,"offset":5462},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":153,"column":1,"offset":5463},"end":{"line":158,"column":4,"offset":5574},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":159,"column":1,"offset":5575},"end":{"line":160,"column":5,"offset":5584},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":162,"column":1,"offset":5586},"end":{"line":162,"column":7,"offset":5592},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":162,"column":7,"offset":5592},"end":{"line":164,"column":1,"offset":5674},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":164,"column":1,"offset":5674},"end":{"line":164,"column":5,"offset":5678},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":164,"column":5,"offset":5678},"end":{"line":165,"column":1,"offset":5679},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":165,"column":1,"offset":5679},"end":{"line":165,"column":5,"offset":5683},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":165,"column":5,"offset":5683},"end":{"line":166,"column":10,"offset":5693},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":166,"column":10,"offset":5693},"end":{"line":166,"column":14,"offset":5697},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":166,"column":14,"offset":5697},"end":{"line":166,"column":22,"offset":5705},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":166,"column":22,"offset":5705},"end":{"line":166,"column":30,"offset":5713},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":166,"column":30,"offset":5713},"end":{"line":166,"column":50,"offset":5733},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":166,"column":50,"offset":5733},"end":{"line":166,"column":53,"offset":5736},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":166,"column":53,"offset":5736},"end":{"line":166,"column":90,"offset":5773},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":166,"column":90,"offset":5773},"end":{"line":166,"column":96,"offset":5779},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":166,"column":96,"offset":5779},"end":{"line":167,"column":1,"offset":5782},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":167,"column":1,"offset":5782},"end":{"line":167,"column":5,"offset":5786},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":167,"column":5,"offset":5786},"end":{"line":168,"column":1,"offset":5787},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":168,"column":1,"offset":5787},"end":{"line":168,"column":5,"offset":5791},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":168,"column":5,"offset":5791},"end":{"line":169,"column":14,"offset":5805},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":169,"column":14,"offset":5805},"end":{"line":169,"column":18,"offset":5809},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":169,"column":18,"offset":5809},"end":{"line":169,"column":90,"offset":5881},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":169,"column":90,"offset":5881},"end":{"line":169,"column":94,"offset":5885},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":169,"column":94,"offset":5885},"end":{"line":169,"column":125,"offset":5916},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":169,"column":125,"offset":5916},"end":{"line":169,"column":131,"offset":5922},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":169,"column":131,"offset":5922},"end":{"line":170,"column":1,"offset":5937},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":170,"column":1,"offset":5937},"end":{"line":170,"column":5,"offset":5941},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":170,"column":5,"offset":5941},"end":{"line":171,"column":1,"offset":5942},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":171,"column":1,"offset":5942},"end":{"line":171,"column":5,"offset":5946},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":171,"column":5,"offset":5946},"end":{"line":172,"column":14,"offset":5960},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":172,"column":14,"offset":5960},"end":{"line":172,"column":18,"offset":5964},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":172,"column":18,"offset":5964},"end":{"line":172,"column":37,"offset":5983},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":172,"column":37,"offset":5983},"end":{"line":172,"column":40,"offset":5986},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":172,"column":40,"offset":5986},"end":{"line":172,"column":77,"offset":6023},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":172,"column":77,"offset":6023},"end":{"line":172,"column":81,"offset":6027},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":172,"column":81,"offset":6027},"end":{"line":172,"column":99,"offset":6045},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":172,"column":99,"offset":6045},"end":{"line":172,"column":102,"offset":6048},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":172,"column":102,"offset":6048},"end":{"line":172,"column":133,"offset":6079},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":172,"column":133,"offset":6079},"end":{"line":172,"column":139,"offset":6085},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":172,"column":139,"offset":6085},"end":{"line":172,"column":167,"offset":6113},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":172,"column":167,"offset":6113},"end":{"line":172,"column":171,"offset":6117},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":172,"column":171,"offset":6117},"end":{"line":173,"column":1,"offset":6119},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":173,"column":1,"offset":6119},"end":{"line":173,"column":5,"offset":6123},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":173,"column":5,"offset":6123},"end":{"line":174,"column":1,"offset":6124},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":174,"column":1,"offset":6124},"end":{"line":174,"column":5,"offset":6128},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":174,"column":5,"offset":6128},"end":{"line":176,"column":1,"offset":6148},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":176,"column":1,"offset":6148},"end":{"line":176,"column":5,"offset":6152},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":176,"column":5,"offset":6152},"end":{"line":177,"column":6,"offset":6158},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":177,"column":6,"offset":6158},"end":{"line":177,"column":12,"offset":6164},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":177,"column":12,"offset":6164},"end":{"line":177,"column":30,"offset":6182},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":177,"column":30,"offset":6182},"end":{"line":177,"column":36,"offset":6188},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":177,"column":36,"offset":6188},"end":{"line":177,"column":62,"offset":6214},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":177,"column":62,"offset":6214},"end":{"line":177,"column":75,"offset":6227},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":177,"column":75,"offset":6227},"end":{"line":177,"column":159,"offset":6311},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":5586},"end":{"line":177,"column":159,"offset":6311},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":179,"column":8,"offset":6320},"end":{"line":179,"column":41,"offset":6353},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":6313},"end":{"line":179,"column":41,"offset":6353},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":180,"column":1,"offset":6354},"end":{"line":185,"column":4,"offset":6429},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":186,"column":1,"offset":6430},"end":{"line":187,"column":1,"offset":6449},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":187,"column":1,"offset":6449},"end":{"line":187,"column":5,"offset":6453},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":187,"column":5,"offset":6453},"end":{"line":189,"column":5,"offset":6591},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":189,"column":5,"offset":6591},"end":{"line":189,"column":9,"offset":6595},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":189,"column":9,"offset":6595},"end":{"line":190,"column":5,"offset":6600},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":190,"column":5,"offset":6600},"end":{"line":190,"column":27,"offset":6622},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":190,"column":27,"offset":6622},"end":{"line":191,"column":5,"offset":6627},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":191,"column":5,"offset":6627},"end":{"line":191,"column":9,"offset":6631},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":191,"column":9,"offset":6631},"end":{"line":192,"column":5,"offset":6636},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":192,"column":5,"offset":6636},"end":{"line":192,"column":12,"offset":6643},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":192,"column":12,"offset":6643},"end":{"line":192,"column":17,"offset":6648},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":192,"column":17,"offset":6648},"end":{"line":192,"column":25,"offset":6656},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":192,"column":25,"offset":6656},"end":{"line":192,"column":63,"offset":6694},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":192,"column":63,"offset":6694},"end":{"line":192,"column":66,"offset":6697},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":192,"column":66,"offset":6697},"end":{"line":192,"column":86,"offset":6717},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":192,"column":86,"offset":6717},"end":{"line":192,"column":89,"offset":6720},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":192,"column":89,"offset":6720},"end":{"line":192,"column":110,"offset":6741},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":192,"column":110,"offset":6741},"end":{"line":192,"column":119,"offset":6750},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":192,"column":119,"offset":6750},"end":{"line":193,"column":1,"offset":6752},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":193,"column":1,"offset":6752},"end":{"line":193,"column":5,"offset":6756},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":193,"column":5,"offset":6756},"end":{"line":195,"column":1,"offset":6772},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":195,"column":1,"offset":6772},"end":{"line":195,"column":5,"offset":6776},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":195,"column":5,"offset":6776},"end":{"line":197,"column":5,"offset":6883},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":197,"column":5,"offset":6883},"end":{"line":197,"column":9,"offset":6887},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":197,"column":9,"offset":6887},"end":{"line":198,"column":1,"offset":6888},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":198,"column":1,"offset":6888},"end":{"line":198,"column":23,"offset":6910},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":198,"column":23,"offset":6910},"end":{"line":198,"column":35,"offset":6922},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":198,"column":35,"offset":6922},"end":{"line":198,"column":61,"offset":6948},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":198,"column":61,"offset":6948},"end":{"line":199,"column":1,"offset":6949},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":199,"column":1,"offset":6949},"end":{"line":199,"column":5,"offset":6953},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":199,"column":5,"offset":6953},"end":{"line":200,"column":5,"offset":6958},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":200,"column":5,"offset":6958},"end":{"line":200,"column":8,"offset":6961},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":200,"column":8,"offset":6961},"end":{"line":200,"column":58,"offset":7011},"indent":[]}}],"position":{"start":{"line":186,"column":1,"offset":6430},"end":{"line":200,"column":58,"offset":7011},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":202,"column":1,"offset":7013},"end":{"line":203,"column":1,"offset":7031},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":203,"column":1,"offset":7031},"end":{"line":203,"column":5,"offset":7035},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":7013},"end":{"line":203,"column":5,"offset":7035},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":204,"column":1,"offset":7036},"end":{"line":206,"column":4,"offset":7066},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":207,"column":1,"offset":7067},"end":{"line":207,"column":13,"offset":7079},"indent":[]}}],"position":{"start":{"line":207,"column":1,"offset":7067},"end":{"line":207,"column":13,"offset":7079},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":208,"column":1,"offset":7080},"end":{"line":214,"column":4,"offset":7159},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":215,"column":1,"offset":7160},"end":{"line":215,"column":8,"offset":7167},"indent":[]}}],"position":{"start":{"line":215,"column":1,"offset":7160},"end":{"line":215,"column":8,"offset":7167},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":216,"column":1,"offset":7168},"end":{"line":223,"column":4,"offset":7292},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":224,"column":1,"offset":7293},"end":{"line":225,"column":5,"offset":7302},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":227,"column":1,"offset":7304},"end":{"line":227,"column":11,"offset":7314},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":227,"column":11,"offset":7314},"end":{"line":227,"column":24,"offset":7327},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":227,"column":24,"offset":7327},"end":{"line":227,"column":107,"offset":7410},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":7304},"end":{"line":227,"column":107,"offset":7410},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":229,"column":7,"offset":7418},"end":{"line":229,"column":10,"offset":7421},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":7412},"end":{"line":229,"column":10,"offset":7421},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":230,"column":7,"offset":7428},"end":{"line":230,"column":10,"offset":7431},"indent":[]}}],"position":{"start":{"line":230,"column":1,"offset":7422},"end":{"line":230,"column":10,"offset":7431},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":232,"column":6,"offset":7438},"end":{"line":232,"column":10,"offset":7442},"indent":[]}}],"position":{"start":{"line":232,"column":1,"offset":7433},"end":{"line":232,"column":10,"offset":7442},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":233,"column":7,"offset":7449},"end":{"line":233,"column":13,"offset":7455},"indent":[]}}],"position":{"start":{"line":233,"column":1,"offset":7443},"end":{"line":233,"column":13,"offset":7455},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":234,"column":1,"offset":7456},"end":{"line":234,"column":49,"offset":7504},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":234,"column":49,"offset":7504},"end":{"line":234,"column":57,"offset":7512},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":234,"column":57,"offset":7512},"end":{"line":234,"column":133,"offset":7588},"indent":[]}}],"position":{"start":{"line":234,"column":1,"offset":7456},"end":{"line":234,"column":133,"offset":7588},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":235,"column":1,"offset":7589},"end":{"line":245,"column":4,"offset":7784},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":246,"column":1,"offset":7785},"end":{"line":246,"column":5,"offset":7789},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":249,"column":1,"offset":7792},"end":{"line":250,"column":1,"offset":7874},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":250,"column":1,"offset":7874},"end":{"line":250,"column":5,"offset":7878},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":250,"column":5,"offset":7878},"end":{"line":251,"column":1,"offset":7879},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":251,"column":1,"offset":7879},"end":{"line":251,"column":5,"offset":7883},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":251,"column":5,"offset":7883},"end":{"line":252,"column":26,"offset":7909},"indent":[1]}}],"position":{"start":{"line":249,"column":1,"offset":7792},"end":{"line":252,"column":26,"offset":7909},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":253,"column":1,"offset":7910},"end":{"line":258,"column":4,"offset":8038},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":259,"column":1,"offset":8039},"end":{"line":259,"column":14,"offset":8052},"indent":[]}}],"position":{"start":{"line":259,"column":1,"offset":8039},"end":{"line":259,"column":14,"offset":8052},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":261,"column":1,"offset":8054},"end":{"line":274,"column":4,"offset":8336},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":276,"column":1,"offset":8338},"end":{"line":277,"column":5,"offset":8347},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":280,"column":7,"offset":8356},"end":{"line":280,"column":13,"offset":8362},"indent":[]}}],"position":{"start":{"line":280,"column":1,"offset":8350},"end":{"line":280,"column":13,"offset":8362},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":280,"column":13,"offset":8362}}}}