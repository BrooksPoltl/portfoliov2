{"expireTime":9007200842248876000,"key":"transformer-remark-markdown-html-ast-ab1abe709097952605e438aeb56cd26f-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a expression:\nexpression: ","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":13,"offset":832}}},{"type":"raw","value":"<code class=\"language-text\">(137 349)</code>","position":{"start":{"line":22,"column":13,"offset":832},"end":{"line":22,"column":24,"offset":843}}},{"type":"text","value":"\n","position":{"start":{"line":22,"column":24,"offset":843},"end":{"line":23,"column":1,"offset":844}}},{"type":"raw","value":"<br>","position":{"start":{"line":23,"column":1,"offset":844},"end":{"line":23,"column":5,"offset":848}}},{"type":"text","value":"\n`","position":{"start":{"line":23,"column":5,"offset":848},"end":{"line":24,"column":2,"offset":850}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":24,"column":2,"offset":850}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":25,"column":7,"offset":857},"end":{"line":25,"column":10,"offset":860}}}],"position":{"start":{"line":25,"column":1,"offset":851},"end":{"line":25,"column":10,"offset":860}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":26,"column":7,"offset":867},"end":{"line":26,"column":10,"offset":870}}}],"position":{"start":{"line":26,"column":1,"offset":861},"end":{"line":26,"column":10,"offset":870}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":28,"column":6,"offset":877},"end":{"line":28,"column":14,"offset":885}}}],"position":{"start":{"line":28,"column":1,"offset":872},"end":{"line":28,"column":14,"offset":885}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":29,"column":7,"offset":892},"end":{"line":29,"column":10,"offset":895}}}],"position":{"start":{"line":29,"column":1,"offset":886},"end":{"line":29,"column":10,"offset":895}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":31,"column":8,"offset":904},"end":{"line":31,"column":30,"offset":926}}}],"position":{"start":{"line":31,"column":1,"offset":897},"end":{"line":31,"column":30,"offset":926}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":33,"column":1,"offset":928},"end":{"line":34,"column":1,"offset":1072}}},{"type":"raw","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1072},"end":{"line":34,"column":5,"offset":1076}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":34,"column":5,"offset":1076},"end":{"line":34,"column":16,"offset":1087}}},{"type":"raw","value":"<br>","position":{"start":{"line":34,"column":16,"offset":1087},"end":{"line":34,"column":20,"offset":1091}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":34,"column":20,"offset":1091},"end":{"line":36,"column":1,"offset":1235}}},{"type":"raw","value":"<br>","position":{"start":{"line":36,"column":1,"offset":1235},"end":{"line":36,"column":5,"offset":1239}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":36,"column":5,"offset":1239},"end":{"line":36,"column":16,"offset":1250}}},{"type":"raw","value":"<br>","position":{"start":{"line":36,"column":16,"offset":1250},"end":{"line":36,"column":20,"offset":1254}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":36,"column":20,"offset":1254},"end":{"line":37,"column":45,"offset":1299}}},{"type":"raw","value":"<br>","position":{"start":{"line":37,"column":45,"offset":1299},"end":{"line":37,"column":49,"offset":1303}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":37,"column":49,"offset":1303},"end":{"line":37,"column":65,"offset":1319}}},{"type":"raw","value":"<br>","position":{"start":{"line":37,"column":65,"offset":1319},"end":{"line":37,"column":69,"offset":1323}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":37,"column":69,"offset":1323},"end":{"line":39,"column":1,"offset":1366}}},{"type":"raw","value":"<br>","position":{"start":{"line":39,"column":1,"offset":1366},"end":{"line":39,"column":5,"offset":1370}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":39,"column":5,"offset":1370},"end":{"line":39,"column":22,"offset":1387}}},{"type":"raw","value":"<br>","position":{"start":{"line":39,"column":22,"offset":1387},"end":{"line":39,"column":26,"offset":1391}}},{"type":"text","value":"\n","position":{"start":{"line":39,"column":26,"offset":1391},"end":{"line":40,"column":1,"offset":1392}}},{"type":"raw","value":"<br>","position":{"start":{"line":40,"column":1,"offset":1392},"end":{"line":40,"column":5,"offset":1396}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":40,"column":5,"offset":1396},"end":{"line":42,"column":1,"offset":1514}}},{"type":"raw","value":"<br>","position":{"start":{"line":42,"column":1,"offset":1514},"end":{"line":42,"column":5,"offset":1518}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":42,"column":5,"offset":1518},"end":{"line":44,"column":1,"offset":1639}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":44,"column":1,"offset":1639},"end":{"line":44,"column":12,"offset":1650}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":44,"column":12,"offset":1650},"end":{"line":44,"column":68,"offset":1706}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":44,"column":68,"offset":1706},"end":{"line":44,"column":79,"offset":1717}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":44,"column":79,"offset":1717},"end":{"line":44,"column":106,"offset":1744}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":44,"column":106,"offset":1744},"end":{"line":44,"column":109,"offset":1747}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":44,"column":109,"offset":1747},"end":{"line":44,"column":189,"offset":1827}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":44,"column":189,"offset":1827},"end":{"line":44,"column":192,"offset":1830}}},{"type":"text","value":" to get 3.","position":{"start":{"line":44,"column":192,"offset":1830},"end":{"line":44,"column":202,"offset":1840}}}],"position":{"start":{"line":33,"column":1,"offset":928},"end":{"line":44,"column":202,"offset":1840}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":46,"column":8,"offset":1849},"end":{"line":46,"column":14,"offset":1855}}}],"position":{"start":{"line":46,"column":1,"offset":1842},"end":{"line":46,"column":14,"offset":1855}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":47,"column":1,"offset":1856},"end":{"line":47,"column":9,"offset":1864}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":47,"column":9,"offset":1864},"end":{"line":47,"column":73,"offset":1928}}}],"position":{"start":{"line":47,"column":1,"offset":1856},"end":{"line":47,"column":73,"offset":1928}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":48,"column":1,"offset":1929},"end":{"line":51,"column":4,"offset":1968}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":52,"column":1,"offset":1969},"end":{"line":52,"column":5,"offset":1973}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":54,"column":1,"offset":1975},"end":{"line":54,"column":72,"offset":2046}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":54,"column":72,"offset":2046},"end":{"line":54,"column":80,"offset":2054}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":54,"column":80,"offset":2054},"end":{"line":55,"column":1,"offset":2078}}},{"type":"raw","value":"<br>","position":{"start":{"line":55,"column":1,"offset":2078},"end":{"line":55,"column":5,"offset":2082}}},{"type":"text","value":"\n","position":{"start":{"line":55,"column":5,"offset":2082},"end":{"line":56,"column":1,"offset":2083}}},{"type":"raw","value":"<br>","position":{"start":{"line":56,"column":1,"offset":2083},"end":{"line":56,"column":5,"offset":2087}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":56,"column":5,"offset":2087},"end":{"line":57,"column":184,"offset":2271}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":57,"column":184,"offset":2271},"end":{"line":57,"column":187,"offset":2274}}},{"type":"text","value":".\n","position":{"start":{"line":57,"column":187,"offset":2274},"end":{"line":58,"column":1,"offset":2277}}},{"type":"raw","value":"<br>","position":{"start":{"line":58,"column":1,"offset":2277},"end":{"line":58,"column":5,"offset":2281}}},{"type":"text","value":"\n","position":{"start":{"line":58,"column":5,"offset":2281},"end":{"line":59,"column":1,"offset":2282}}},{"type":"raw","value":"<br>","position":{"start":{"line":59,"column":1,"offset":2282},"end":{"line":59,"column":5,"offset":2286}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":59,"column":5,"offset":2286},"end":{"line":60,"column":27,"offset":2313}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":60,"column":27,"offset":2313},"end":{"line":60,"column":35,"offset":2321}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":60,"column":35,"offset":2321},"end":{"line":60,"column":86,"offset":2372}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":60,"column":86,"offset":2372},"end":{"line":60,"column":95,"offset":2381}}},{"type":"text","value":". ","position":{"start":{"line":60,"column":95,"offset":2381},"end":{"line":60,"column":97,"offset":2383}}}],"position":{"start":{"line":54,"column":1,"offset":1975},"end":{"line":60,"column":97,"offset":2383}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":62,"column":1,"offset":2385},"end":{"line":62,"column":6,"offset":2390}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":64,"column":1,"offset":2392},"end":{"line":65,"column":1,"offset":2436}}},{"type":"raw","value":"<br>","position":{"start":{"line":65,"column":1,"offset":2436},"end":{"line":65,"column":5,"offset":2440}}},{"type":"text","value":"\n","position":{"start":{"line":65,"column":5,"offset":2440},"end":{"line":66,"column":1,"offset":2441}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":66,"column":1,"offset":2441},"end":{"line":66,"column":22,"offset":2462}}},{"type":"text","value":"\n","position":{"start":{"line":66,"column":22,"offset":2462},"end":{"line":67,"column":1,"offset":2463}}},{"type":"raw","value":"<br>","position":{"start":{"line":67,"column":1,"offset":2463},"end":{"line":67,"column":5,"offset":2467}}}],"position":{"start":{"line":64,"column":1,"offset":2392},"end":{"line":67,"column":5,"offset":2467}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":69,"column":1,"offset":2469},"end":{"line":69,"column":152,"offset":2620}}}],"position":{"start":{"line":69,"column":1,"offset":2469},"end":{"line":69,"column":152,"offset":2620}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":71,"column":8,"offset":2629},"end":{"line":71,"column":20,"offset":2641}}}],"position":{"start":{"line":71,"column":1,"offset":2622},"end":{"line":71,"column":20,"offset":2641}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":73,"column":1,"offset":2643},"end":{"line":73,"column":56,"offset":2698}}}],"position":{"start":{"line":73,"column":1,"offset":2643},"end":{"line":73,"column":56,"offset":2698}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":74,"column":1,"offset":2699},"end":{"line":79,"column":4,"offset":2790}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":80,"column":1,"offset":2791},"end":{"line":80,"column":5,"offset":2795}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":82,"column":1,"offset":2797},"end":{"line":82,"column":37,"offset":2833}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":82,"column":37,"offset":2833},"end":{"line":82,"column":41,"offset":2837}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":82,"column":41,"offset":2837},"end":{"line":83,"column":1,"offset":2854}}},{"type":"raw","value":"<br>","position":{"start":{"line":83,"column":1,"offset":2854},"end":{"line":83,"column":5,"offset":2858}}},{"type":"text","value":"\n","position":{"start":{"line":83,"column":5,"offset":2858},"end":{"line":84,"column":1,"offset":2859}}},{"type":"raw","value":"<br>","position":{"start":{"line":84,"column":1,"offset":2859},"end":{"line":84,"column":5,"offset":2863}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":84,"column":5,"offset":2863},"end":{"line":85,"column":66,"offset":2929}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":85,"column":66,"offset":2929},"end":{"line":85,"column":89,"offset":2952}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":85,"column":89,"offset":2952},"end":{"line":86,"column":1,"offset":2992}}},{"type":"raw","value":"<br>","position":{"start":{"line":86,"column":1,"offset":2992},"end":{"line":86,"column":5,"offset":2996}}},{"type":"text","value":"\n","position":{"start":{"line":86,"column":5,"offset":2996},"end":{"line":87,"column":1,"offset":2997}}},{"type":"raw","value":"<br>","position":{"start":{"line":87,"column":1,"offset":2997},"end":{"line":87,"column":5,"offset":3001}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":87,"column":5,"offset":3001},"end":{"line":88,"column":21,"offset":3022}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":88,"column":21,"offset":3022},"end":{"line":88,"column":25,"offset":3026}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":88,"column":25,"offset":3026},"end":{"line":89,"column":1,"offset":3080}}},{"type":"raw","value":"<br>","position":{"start":{"line":89,"column":1,"offset":3080},"end":{"line":89,"column":5,"offset":3084}}},{"type":"text","value":"\n","position":{"start":{"line":89,"column":5,"offset":3084},"end":{"line":90,"column":1,"offset":3085}}},{"type":"raw","value":"<br>","position":{"start":{"line":90,"column":1,"offset":3085},"end":{"line":90,"column":5,"offset":3089}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":90,"column":5,"offset":3089},"end":{"line":91,"column":21,"offset":3110}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":91,"column":21,"offset":3110},"end":{"line":91,"column":25,"offset":3114}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":91,"column":25,"offset":3114},"end":{"line":92,"column":1,"offset":3169}}},{"type":"raw","value":"<br>","position":{"start":{"line":92,"column":1,"offset":3169},"end":{"line":92,"column":5,"offset":3173}}},{"type":"text","value":"\n","position":{"start":{"line":92,"column":5,"offset":3173},"end":{"line":93,"column":1,"offset":3174}}},{"type":"raw","value":"<br>","position":{"start":{"line":93,"column":1,"offset":3174},"end":{"line":93,"column":5,"offset":3178}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":93,"column":5,"offset":3178},"end":{"line":94,"column":58,"offset":3236}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":94,"column":58,"offset":3236},"end":{"line":94,"column":61,"offset":3239}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":94,"column":61,"offset":3239},"end":{"line":94,"column":145,"offset":3323}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":94,"column":145,"offset":3323},"end":{"line":94,"column":153,"offset":3331}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":94,"column":153,"offset":3331},"end":{"line":94,"column":178,"offset":3356}}}],"position":{"start":{"line":82,"column":1,"offset":2797},"end":{"line":94,"column":178,"offset":3356}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":96,"column":7,"offset":3364},"end":{"line":96,"column":10,"offset":3367}}}],"position":{"start":{"line":96,"column":1,"offset":3358},"end":{"line":96,"column":10,"offset":3367}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":98,"column":8,"offset":3376},"end":{"line":98,"column":17,"offset":3385}}}],"position":{"start":{"line":98,"column":1,"offset":3369},"end":{"line":98,"column":17,"offset":3385}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":99,"column":1,"offset":3386},"end":{"line":110,"column":4,"offset":3585}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":111,"column":1,"offset":3586},"end":{"line":111,"column":5,"offset":3590}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":113,"column":1,"offset":3592},"end":{"line":114,"column":1,"offset":3808}}},{"type":"raw","value":"<br>","position":{"start":{"line":114,"column":1,"offset":3808},"end":{"line":114,"column":5,"offset":3812}}},{"type":"text","value":"\n","position":{"start":{"line":114,"column":5,"offset":3812},"end":{"line":115,"column":1,"offset":3813}}},{"type":"raw","value":"<br>","position":{"start":{"line":115,"column":1,"offset":3813},"end":{"line":115,"column":5,"offset":3817}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":115,"column":5,"offset":3817},"end":{"line":116,"column":72,"offset":3889}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":116,"column":72,"offset":3889},"end":{"line":116,"column":81,"offset":3898}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":116,"column":81,"offset":3898},"end":{"line":117,"column":1,"offset":3917}}},{"type":"raw","value":"<br>","position":{"start":{"line":117,"column":1,"offset":3917},"end":{"line":117,"column":5,"offset":3921}}},{"type":"text","value":"\n","position":{"start":{"line":117,"column":5,"offset":3921},"end":{"line":118,"column":1,"offset":3922}}},{"type":"raw","value":"<br>","position":{"start":{"line":118,"column":1,"offset":3922},"end":{"line":118,"column":5,"offset":3926}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":118,"column":5,"offset":3926},"end":{"line":119,"column":10,"offset":3936}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":119,"column":10,"offset":3936},"end":{"line":119,"column":16,"offset":3942}}},{"type":"text","value":" gets called with ","position":{"start":{"line":119,"column":16,"offset":3942},"end":{"line":119,"column":34,"offset":3960}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":119,"column":34,"offset":3960},"end":{"line":119,"column":42,"offset":3968}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":119,"column":42,"offset":3968},"end":{"line":120,"column":24,"offset":3993}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":120,"column":24,"offset":3993},"end":{"line":120,"column":33,"offset":4002}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":120,"column":33,"offset":4002},"end":{"line":120,"column":107,"offset":4076}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":120,"column":107,"offset":4076},"end":{"line":120,"column":116,"offset":4085}}},{"type":"text","value":" is false because ","position":{"start":{"line":120,"column":116,"offset":4085},"end":{"line":120,"column":134,"offset":4103}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":120,"column":134,"offset":4103},"end":{"line":120,"column":137,"offset":4106}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":120,"column":137,"offset":4106},"end":{"line":120,"column":161,"offset":4130}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":120,"column":161,"offset":4130},"end":{"line":120,"column":167,"offset":4136}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":120,"column":167,"offset":4136},"end":{"line":120,"column":192,"offset":4161}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":120,"column":192,"offset":4161},"end":{"line":120,"column":200,"offset":4169}}},{"type":"text","value":". This is because ","position":{"start":{"line":120,"column":200,"offset":4169},"end":{"line":120,"column":218,"offset":4187}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":120,"column":218,"offset":4187},"end":{"line":120,"column":224,"offset":4193}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":120,"column":224,"offset":4193},"end":{"line":120,"column":245,"offset":4214}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":120,"column":245,"offset":4214},"end":{"line":120,"column":252,"offset":4221}}},{"type":"text","value":" and ","position":{"start":{"line":120,"column":252,"offset":4221},"end":{"line":120,"column":257,"offset":4226}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":120,"column":257,"offset":4226},"end":{"line":120,"column":260,"offset":4229}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":120,"column":260,"offset":4229},"end":{"line":120,"column":285,"offset":4254}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":120,"column":285,"offset":4254},"end":{"line":120,"column":291,"offset":4260}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":120,"column":291,"offset":4260},"end":{"line":121,"column":96,"offset":4386}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":121,"column":96,"offset":4386},"end":{"line":121,"column":111,"offset":4401}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":121,"column":111,"offset":4401},"end":{"line":121,"column":182,"offset":4472}}}],"position":{"start":{"line":113,"column":1,"offset":3592},"end":{"line":121,"column":182,"offset":4472}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":123,"column":8,"offset":4481},"end":{"line":123,"column":19,"offset":4492}}}],"position":{"start":{"line":123,"column":1,"offset":4474},"end":{"line":123,"column":19,"offset":4492}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":124,"column":1,"offset":4493},"end":{"line":124,"column":14,"offset":4506}}}],"position":{"start":{"line":124,"column":1,"offset":4493},"end":{"line":124,"column":14,"offset":4506}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":125,"column":1,"offset":4507},"end":{"line":140,"column":4,"offset":4922}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":141,"column":1,"offset":4923},"end":{"line":141,"column":5,"offset":4927}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":143,"column":1,"offset":4929},"end":{"line":143,"column":141,"offset":5069}}}],"position":{"start":{"line":143,"column":1,"offset":4929},"end":{"line":143,"column":141,"offset":5069}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":145,"column":8,"offset":5078},"end":{"line":145,"column":30,"offset":5100}}}],"position":{"start":{"line":145,"column":1,"offset":5071},"end":{"line":145,"column":30,"offset":5100}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":146,"column":1,"offset":5101},"end":{"line":146,"column":199,"offset":5299}}}],"position":{"start":{"line":146,"column":1,"offset":5101},"end":{"line":146,"column":199,"offset":5299}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":148,"column":8,"offset":5308},"end":{"line":148,"column":30,"offset":5330}}}],"position":{"start":{"line":148,"column":1,"offset":5301},"end":{"line":148,"column":30,"offset":5330}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":150,"column":1,"offset":5332},"end":{"line":151,"column":1,"offset":5407}}},{"type":"raw","value":"<br>","position":{"start":{"line":151,"column":1,"offset":5407},"end":{"line":151,"column":5,"offset":5411}}},{"type":"text","value":"\n","position":{"start":{"line":151,"column":5,"offset":5411},"end":{"line":152,"column":1,"offset":5412}}},{"type":"raw","value":"<br>","position":{"start":{"line":152,"column":1,"offset":5412},"end":{"line":152,"column":5,"offset":5416}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":152,"column":5,"offset":5416},"end":{"line":154,"column":1,"offset":5478}}},{"type":"raw","value":"<br>","position":{"start":{"line":154,"column":1,"offset":5478},"end":{"line":154,"column":5,"offset":5482}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":154,"column":5,"offset":5482},"end":{"line":155,"column":1,"offset":5485}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":155,"column":1,"offset":5485},"end":{"line":155,"column":11,"offset":5495}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":155,"column":11,"offset":5495},"end":{"line":155,"column":19,"offset":5503}}},{"type":"text","value":" and ","position":{"start":{"line":155,"column":19,"offset":5503},"end":{"line":155,"column":24,"offset":5508}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":155,"column":24,"offset":5508},"end":{"line":155,"column":34,"offset":5518}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":155,"column":34,"offset":5518},"end":{"line":156,"column":1,"offset":5567}}},{"type":"raw","value":"<br>","position":{"start":{"line":156,"column":1,"offset":5567},"end":{"line":156,"column":5,"offset":5571}}}],"position":{"start":{"line":150,"column":1,"offset":5332},"end":{"line":156,"column":5,"offset":5571}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":158,"column":8,"offset":5580},"end":{"line":158,"column":12,"offset":5584}}}],"position":{"start":{"line":158,"column":1,"offset":5573},"end":{"line":158,"column":12,"offset":5584}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":159,"column":1,"offset":5585},"end":{"line":164,"column":4,"offset":5696}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":165,"column":1,"offset":5697},"end":{"line":166,"column":5,"offset":5706}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":168,"column":1,"offset":5708},"end":{"line":168,"column":7,"offset":5714}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":168,"column":7,"offset":5714},"end":{"line":170,"column":1,"offset":5796}}},{"type":"raw","value":"<br>","position":{"start":{"line":170,"column":1,"offset":5796},"end":{"line":170,"column":5,"offset":5800}}},{"type":"text","value":"\n","position":{"start":{"line":170,"column":5,"offset":5800},"end":{"line":171,"column":1,"offset":5801}}},{"type":"raw","value":"<br>","position":{"start":{"line":171,"column":1,"offset":5801},"end":{"line":171,"column":5,"offset":5805}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":171,"column":5,"offset":5805},"end":{"line":172,"column":10,"offset":5815}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":172,"column":10,"offset":5815},"end":{"line":172,"column":14,"offset":5819}}},{"type":"text","value":". Since ","position":{"start":{"line":172,"column":14,"offset":5819},"end":{"line":172,"column":22,"offset":5827}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":172,"column":22,"offset":5827},"end":{"line":172,"column":30,"offset":5835}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":172,"column":30,"offset":5835},"end":{"line":172,"column":50,"offset":5855}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":172,"column":50,"offset":5855},"end":{"line":172,"column":53,"offset":5858}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":172,"column":53,"offset":5858},"end":{"line":172,"column":90,"offset":5895}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":172,"column":90,"offset":5895},"end":{"line":172,"column":96,"offset":5901}}},{"type":"text","value":".\n","position":{"start":{"line":172,"column":96,"offset":5901},"end":{"line":173,"column":1,"offset":5904}}},{"type":"raw","value":"<br>","position":{"start":{"line":173,"column":1,"offset":5904},"end":{"line":173,"column":5,"offset":5908}}},{"type":"text","value":"\n","position":{"start":{"line":173,"column":5,"offset":5908},"end":{"line":174,"column":1,"offset":5909}}},{"type":"raw","value":"<br>","position":{"start":{"line":174,"column":1,"offset":5909},"end":{"line":174,"column":5,"offset":5913}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":174,"column":5,"offset":5913},"end":{"line":175,"column":14,"offset":5927}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":175,"column":14,"offset":5927},"end":{"line":175,"column":18,"offset":5931}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":175,"column":18,"offset":5931},"end":{"line":175,"column":90,"offset":6003}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":175,"column":90,"offset":6003},"end":{"line":175,"column":94,"offset":6007}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":175,"column":94,"offset":6007},"end":{"line":175,"column":125,"offset":6038}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":175,"column":125,"offset":6038},"end":{"line":175,"column":131,"offset":6044}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":175,"column":131,"offset":6044},"end":{"line":176,"column":1,"offset":6059}}},{"type":"raw","value":"<br>","position":{"start":{"line":176,"column":1,"offset":6059},"end":{"line":176,"column":5,"offset":6063}}},{"type":"text","value":"\n","position":{"start":{"line":176,"column":5,"offset":6063},"end":{"line":177,"column":1,"offset":6064}}},{"type":"raw","value":"<br>","position":{"start":{"line":177,"column":1,"offset":6064},"end":{"line":177,"column":5,"offset":6068}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":177,"column":5,"offset":6068},"end":{"line":178,"column":14,"offset":6082}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":178,"column":14,"offset":6082},"end":{"line":178,"column":18,"offset":6086}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":178,"column":18,"offset":6086},"end":{"line":178,"column":37,"offset":6105}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":178,"column":37,"offset":6105},"end":{"line":178,"column":40,"offset":6108}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":178,"column":40,"offset":6108},"end":{"line":178,"column":77,"offset":6145}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":178,"column":77,"offset":6145},"end":{"line":178,"column":81,"offset":6149}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":178,"column":81,"offset":6149},"end":{"line":178,"column":99,"offset":6167}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":178,"column":99,"offset":6167},"end":{"line":178,"column":102,"offset":6170}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":178,"column":102,"offset":6170},"end":{"line":178,"column":133,"offset":6201}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":178,"column":133,"offset":6201},"end":{"line":178,"column":139,"offset":6207}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":178,"column":139,"offset":6207},"end":{"line":178,"column":167,"offset":6235}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":178,"column":167,"offset":6235},"end":{"line":178,"column":171,"offset":6239}}},{"type":"text","value":".\n","position":{"start":{"line":178,"column":171,"offset":6239},"end":{"line":179,"column":1,"offset":6241}}},{"type":"raw","value":"<br>","position":{"start":{"line":179,"column":1,"offset":6241},"end":{"line":179,"column":5,"offset":6245}}},{"type":"text","value":"\n","position":{"start":{"line":179,"column":5,"offset":6245},"end":{"line":180,"column":1,"offset":6246}}},{"type":"raw","value":"<br>","position":{"start":{"line":180,"column":1,"offset":6246},"end":{"line":180,"column":5,"offset":6250}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":180,"column":5,"offset":6250},"end":{"line":182,"column":1,"offset":6270}}},{"type":"raw","value":"<br>","position":{"start":{"line":182,"column":1,"offset":6270},"end":{"line":182,"column":5,"offset":6274}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":182,"column":5,"offset":6274},"end":{"line":183,"column":6,"offset":6280}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":183,"column":6,"offset":6280},"end":{"line":183,"column":12,"offset":6286}}},{"type":"text","value":" does not have an ","position":{"start":{"line":183,"column":12,"offset":6286},"end":{"line":183,"column":30,"offset":6304}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":183,"column":30,"offset":6304},"end":{"line":183,"column":36,"offset":6310}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":183,"column":36,"offset":6310},"end":{"line":183,"column":62,"offset":6336}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":183,"column":62,"offset":6336},"end":{"line":183,"column":75,"offset":6349}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":183,"column":75,"offset":6349},"end":{"line":183,"column":159,"offset":6433}}}],"position":{"start":{"line":168,"column":1,"offset":5708},"end":{"line":183,"column":159,"offset":6433}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":185,"column":8,"offset":6442},"end":{"line":185,"column":41,"offset":6475}}}],"position":{"start":{"line":185,"column":1,"offset":6435},"end":{"line":185,"column":41,"offset":6475}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":186,"column":1,"offset":6476},"end":{"line":191,"column":4,"offset":6551}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":192,"column":1,"offset":6552},"end":{"line":193,"column":1,"offset":6571}}},{"type":"raw","value":"<br>","position":{"start":{"line":193,"column":1,"offset":6571},"end":{"line":193,"column":5,"offset":6575}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":193,"column":5,"offset":6575},"end":{"line":195,"column":5,"offset":6713}}},{"type":"raw","value":"<br>","position":{"start":{"line":195,"column":5,"offset":6713},"end":{"line":195,"column":9,"offset":6717}}},{"type":"text","value":"\n","position":{"start":{"line":195,"column":9,"offset":6717},"end":{"line":196,"column":5,"offset":6722}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":196,"column":5,"offset":6722},"end":{"line":196,"column":27,"offset":6744}}},{"type":"text","value":"\n","position":{"start":{"line":196,"column":27,"offset":6744},"end":{"line":197,"column":5,"offset":6749}}},{"type":"raw","value":"<br>","position":{"start":{"line":197,"column":5,"offset":6749},"end":{"line":197,"column":9,"offset":6753}}},{"type":"text","value":"\n","position":{"start":{"line":197,"column":9,"offset":6753},"end":{"line":198,"column":5,"offset":6758}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":198,"column":5,"offset":6758},"end":{"line":198,"column":12,"offset":6765}}},{"type":"text","value":" and ","position":{"start":{"line":198,"column":12,"offset":6765},"end":{"line":198,"column":17,"offset":6770}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":198,"column":17,"offset":6770},"end":{"line":198,"column":25,"offset":6778}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":198,"column":25,"offset":6778},"end":{"line":198,"column":63,"offset":6816}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":198,"column":63,"offset":6816},"end":{"line":198,"column":66,"offset":6819}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":198,"column":66,"offset":6819},"end":{"line":198,"column":86,"offset":6839}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":198,"column":86,"offset":6839},"end":{"line":198,"column":89,"offset":6842}}},{"type":"text","value":" will be called with ","position":{"start":{"line":198,"column":89,"offset":6842},"end":{"line":198,"column":110,"offset":6863}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":198,"column":110,"offset":6863},"end":{"line":198,"column":119,"offset":6872}}},{"type":"text","value":".\n","position":{"start":{"line":198,"column":119,"offset":6872},"end":{"line":199,"column":1,"offset":6874}}},{"type":"raw","value":"<br>","position":{"start":{"line":199,"column":1,"offset":6874},"end":{"line":199,"column":5,"offset":6878}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":199,"column":5,"offset":6878},"end":{"line":201,"column":1,"offset":6894}}},{"type":"raw","value":"<br>","position":{"start":{"line":201,"column":1,"offset":6894},"end":{"line":201,"column":5,"offset":6898}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":201,"column":5,"offset":6898},"end":{"line":203,"column":5,"offset":7005}}},{"type":"raw","value":"<br>","position":{"start":{"line":203,"column":5,"offset":7005},"end":{"line":203,"column":9,"offset":7009}}},{"type":"text","value":"\n","position":{"start":{"line":203,"column":9,"offset":7009},"end":{"line":204,"column":1,"offset":7010}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":204,"column":1,"offset":7010},"end":{"line":204,"column":23,"offset":7032}}},{"type":"text","value":" turns into ","position":{"start":{"line":204,"column":23,"offset":7032},"end":{"line":204,"column":35,"offset":7044}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":204,"column":35,"offset":7044},"end":{"line":204,"column":61,"offset":7070}}},{"type":"text","value":"\n","position":{"start":{"line":204,"column":61,"offset":7070},"end":{"line":205,"column":1,"offset":7071}}},{"type":"raw","value":"<br>","position":{"start":{"line":205,"column":1,"offset":7071},"end":{"line":205,"column":5,"offset":7075}}},{"type":"text","value":"\nNow ","position":{"start":{"line":205,"column":5,"offset":7075},"end":{"line":206,"column":5,"offset":7080}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":206,"column":5,"offset":7080},"end":{"line":206,"column":8,"offset":7083}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":206,"column":8,"offset":7083},"end":{"line":206,"column":58,"offset":7133}}}],"position":{"start":{"line":192,"column":1,"offset":6552},"end":{"line":206,"column":58,"offset":7133}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":208,"column":1,"offset":7135},"end":{"line":209,"column":1,"offset":7153}}},{"type":"raw","value":"<br>","position":{"start":{"line":209,"column":1,"offset":7153},"end":{"line":209,"column":5,"offset":7157}}}],"position":{"start":{"line":208,"column":1,"offset":7135},"end":{"line":209,"column":5,"offset":7157}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":210,"column":1,"offset":7158},"end":{"line":212,"column":4,"offset":7188}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":213,"column":1,"offset":7189},"end":{"line":213,"column":13,"offset":7201}}}],"position":{"start":{"line":213,"column":1,"offset":7189},"end":{"line":213,"column":13,"offset":7201}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":214,"column":1,"offset":7202},"end":{"line":220,"column":4,"offset":7281}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":221,"column":1,"offset":7282},"end":{"line":221,"column":8,"offset":7289}}}],"position":{"start":{"line":221,"column":1,"offset":7282},"end":{"line":221,"column":8,"offset":7289}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":222,"column":1,"offset":7290},"end":{"line":229,"column":4,"offset":7414}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":230,"column":1,"offset":7415},"end":{"line":231,"column":5,"offset":7424}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":233,"column":1,"offset":7426},"end":{"line":233,"column":11,"offset":7436}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":233,"column":11,"offset":7436},"end":{"line":233,"column":24,"offset":7449}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":233,"column":24,"offset":7449},"end":{"line":233,"column":107,"offset":7532}}}],"position":{"start":{"line":233,"column":1,"offset":7426},"end":{"line":233,"column":107,"offset":7532}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":235,"column":7,"offset":7540},"end":{"line":235,"column":10,"offset":7543}}}],"position":{"start":{"line":235,"column":1,"offset":7534},"end":{"line":235,"column":10,"offset":7543}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":236,"column":7,"offset":7550},"end":{"line":236,"column":10,"offset":7553}}}],"position":{"start":{"line":236,"column":1,"offset":7544},"end":{"line":236,"column":10,"offset":7553}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":238,"column":6,"offset":7560},"end":{"line":238,"column":10,"offset":7564}}}],"position":{"start":{"line":238,"column":1,"offset":7555},"end":{"line":238,"column":10,"offset":7564}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":239,"column":7,"offset":7571},"end":{"line":239,"column":13,"offset":7577}}}],"position":{"start":{"line":239,"column":1,"offset":7565},"end":{"line":239,"column":13,"offset":7577}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":240,"column":1,"offset":7578},"end":{"line":240,"column":49,"offset":7626}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":240,"column":49,"offset":7626},"end":{"line":240,"column":57,"offset":7634}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":240,"column":57,"offset":7634},"end":{"line":240,"column":133,"offset":7710}}}],"position":{"start":{"line":240,"column":1,"offset":7578},"end":{"line":240,"column":133,"offset":7710}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":241,"column":1,"offset":7711},"end":{"line":251,"column":4,"offset":7906}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":252,"column":1,"offset":7907},"end":{"line":252,"column":5,"offset":7911}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":255,"column":1,"offset":7914},"end":{"line":256,"column":1,"offset":7996}}},{"type":"raw","value":"<br>","position":{"start":{"line":256,"column":1,"offset":7996},"end":{"line":256,"column":5,"offset":8000}}},{"type":"text","value":"\n","position":{"start":{"line":256,"column":5,"offset":8000},"end":{"line":257,"column":1,"offset":8001}}},{"type":"raw","value":"<br>","position":{"start":{"line":257,"column":1,"offset":8001},"end":{"line":257,"column":5,"offset":8005}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":257,"column":5,"offset":8005},"end":{"line":258,"column":26,"offset":8031}}}],"position":{"start":{"line":255,"column":1,"offset":7914},"end":{"line":258,"column":26,"offset":8031}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":259,"column":1,"offset":8032},"end":{"line":264,"column":4,"offset":8160}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":265,"column":1,"offset":8161},"end":{"line":265,"column":14,"offset":8174}}}],"position":{"start":{"line":265,"column":1,"offset":8161},"end":{"line":265,"column":14,"offset":8174}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":267,"column":1,"offset":8176},"end":{"line":280,"column":4,"offset":8458}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":282,"column":1,"offset":8460},"end":{"line":283,"column":5,"offset":8469}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":286,"column":7,"offset":8478},"end":{"line":286,"column":13,"offset":8484}}}],"position":{"start":{"line":286,"column":1,"offset":8472},"end":{"line":286,"column":13,"offset":8484}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":286,"column":13,"offset":8484}}}}