{"expireTime":9007200842248436000,"key":"transformer-remark-markdown-ast-62052caed6b84ae5065b6c017387fae1-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":5,"offset":562},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"primitive expressions","position":{"start":{"line":13,"column":3,"offset":566},"end":{"line":13,"column":24,"offset":587},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":566},"end":{"line":13,"column":24,"offset":587},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"means of combination","position":{"start":{"line":15,"column":5,"offset":595},"end":{"line":15,"column":25,"offset":615},"indent":[]}}],"position":{"start":{"line":15,"column":5,"offset":595},"end":{"line":15,"column":25,"offset":615},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":593},"end":{"line":15,"column":25,"offset":615},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":593},"end":{"line":15,"column":25,"offset":615},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":564},"end":{"line":16,"column":3,"offset":618},"indent":[1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"means of abstraction","position":{"start":{"line":17,"column":3,"offset":621},"end":{"line":17,"column":23,"offset":641},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":621},"end":{"line":17,"column":23,"offset":641},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":18,"column":7,"offset":648},"end":{"line":18,"column":10,"offset":651},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":642},"end":{"line":18,"column":10,"offset":651},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":19,"column":7,"offset":658},"end":{"line":19,"column":10,"offset":661},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":652},"end":{"line":19,"column":10,"offset":661},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":619},"end":{"line":19,"column":10,"offset":661},"indent":[1,1]}}],"position":{"start":{"line":13,"column":1,"offset":564},"end":{"line":19,"column":10,"offset":661},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":21,"column":6,"offset":668},"end":{"line":21,"column":14,"offset":676},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":663},"end":{"line":21,"column":14,"offset":676},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":22,"column":7,"offset":683},"end":{"line":22,"column":10,"offset":686},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":677},"end":{"line":22,"column":10,"offset":686},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":24,"column":8,"offset":695},"end":{"line":24,"column":30,"offset":717},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":688},"end":{"line":24,"column":30,"offset":717},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":26,"column":1,"offset":719},"end":{"line":27,"column":1,"offset":863},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":27,"column":1,"offset":863},"end":{"line":27,"column":5,"offset":867},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":27,"column":5,"offset":867},"end":{"line":27,"column":16,"offset":878},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":27,"column":16,"offset":878},"end":{"line":27,"column":20,"offset":882},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":27,"column":20,"offset":882},"end":{"line":29,"column":1,"offset":1026},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":29,"column":1,"offset":1026},"end":{"line":29,"column":5,"offset":1030},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":29,"column":5,"offset":1030},"end":{"line":29,"column":16,"offset":1041},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":29,"column":16,"offset":1041},"end":{"line":29,"column":20,"offset":1045},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":29,"column":20,"offset":1045},"end":{"line":30,"column":45,"offset":1090},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":30,"column":45,"offset":1090},"end":{"line":30,"column":49,"offset":1094},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":30,"column":49,"offset":1094},"end":{"line":30,"column":65,"offset":1110},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":30,"column":65,"offset":1110},"end":{"line":30,"column":69,"offset":1114},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":30,"column":69,"offset":1114},"end":{"line":32,"column":1,"offset":1157},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1157},"end":{"line":32,"column":5,"offset":1161},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":32,"column":5,"offset":1161},"end":{"line":32,"column":22,"offset":1178},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":32,"column":22,"offset":1178},"end":{"line":32,"column":26,"offset":1182},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":32,"column":26,"offset":1182},"end":{"line":33,"column":1,"offset":1183},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":33,"column":1,"offset":1183},"end":{"line":33,"column":5,"offset":1187},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":33,"column":5,"offset":1187},"end":{"line":35,"column":1,"offset":1305},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":35,"column":1,"offset":1305},"end":{"line":35,"column":5,"offset":1309},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":35,"column":5,"offset":1309},"end":{"line":37,"column":1,"offset":1430},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":37,"column":1,"offset":1430},"end":{"line":37,"column":12,"offset":1441},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":37,"column":12,"offset":1441},"end":{"line":37,"column":68,"offset":1497},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":37,"column":68,"offset":1497},"end":{"line":37,"column":79,"offset":1508},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":37,"column":79,"offset":1508},"end":{"line":37,"column":106,"offset":1535},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":37,"column":106,"offset":1535},"end":{"line":37,"column":109,"offset":1538},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":37,"column":109,"offset":1538},"end":{"line":37,"column":189,"offset":1618},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":37,"column":189,"offset":1618},"end":{"line":37,"column":192,"offset":1621},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":37,"column":192,"offset":1621},"end":{"line":37,"column":202,"offset":1631},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":719},"end":{"line":37,"column":202,"offset":1631},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":39,"column":8,"offset":1640},"end":{"line":39,"column":14,"offset":1646},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1633},"end":{"line":39,"column":14,"offset":1646},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":40,"column":1,"offset":1647},"end":{"line":40,"column":9,"offset":1655},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":40,"column":9,"offset":1655},"end":{"line":40,"column":73,"offset":1719},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1647},"end":{"line":40,"column":73,"offset":1719},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":41,"column":1,"offset":1720},"end":{"line":44,"column":4,"offset":1759},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":45,"column":1,"offset":1760},"end":{"line":45,"column":5,"offset":1764},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":47,"column":1,"offset":1766},"end":{"line":47,"column":72,"offset":1837},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":47,"column":72,"offset":1837},"end":{"line":47,"column":80,"offset":1845},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":47,"column":80,"offset":1845},"end":{"line":48,"column":1,"offset":1869},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1869},"end":{"line":48,"column":5,"offset":1873},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":48,"column":5,"offset":1873},"end":{"line":49,"column":1,"offset":1874},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":49,"column":1,"offset":1874},"end":{"line":49,"column":5,"offset":1878},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":49,"column":5,"offset":1878},"end":{"line":50,"column":184,"offset":2062},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":50,"column":184,"offset":2062},"end":{"line":50,"column":187,"offset":2065},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":50,"column":187,"offset":2065},"end":{"line":51,"column":1,"offset":2068},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":51,"column":1,"offset":2068},"end":{"line":51,"column":5,"offset":2072},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":51,"column":5,"offset":2072},"end":{"line":52,"column":1,"offset":2073},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":52,"column":1,"offset":2073},"end":{"line":52,"column":5,"offset":2077},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":52,"column":5,"offset":2077},"end":{"line":53,"column":27,"offset":2104},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":53,"column":27,"offset":2104},"end":{"line":53,"column":35,"offset":2112},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":53,"column":35,"offset":2112},"end":{"line":53,"column":86,"offset":2163},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":53,"column":86,"offset":2163},"end":{"line":53,"column":95,"offset":2172},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":53,"column":95,"offset":2172},"end":{"line":53,"column":97,"offset":2174},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1766},"end":{"line":53,"column":97,"offset":2174},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":55,"column":1,"offset":2176},"end":{"line":55,"column":6,"offset":2181},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":57,"column":1,"offset":2183},"end":{"line":58,"column":1,"offset":2227},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":58,"column":1,"offset":2227},"end":{"line":58,"column":5,"offset":2231},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":58,"column":5,"offset":2231},"end":{"line":59,"column":1,"offset":2232},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":59,"column":1,"offset":2232},"end":{"line":59,"column":22,"offset":2253},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":59,"column":22,"offset":2253},"end":{"line":60,"column":1,"offset":2254},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":60,"column":1,"offset":2254},"end":{"line":60,"column":5,"offset":2258},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":2183},"end":{"line":60,"column":5,"offset":2258},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":62,"column":1,"offset":2260},"end":{"line":62,"column":152,"offset":2411},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":2260},"end":{"line":62,"column":152,"offset":2411},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":64,"column":8,"offset":2420},"end":{"line":64,"column":20,"offset":2432},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":2413},"end":{"line":64,"column":20,"offset":2432},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":66,"column":1,"offset":2434},"end":{"line":66,"column":56,"offset":2489},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":2434},"end":{"line":66,"column":56,"offset":2489},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":67,"column":1,"offset":2490},"end":{"line":72,"column":4,"offset":2581},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":73,"column":1,"offset":2582},"end":{"line":73,"column":5,"offset":2586},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":75,"column":1,"offset":2588},"end":{"line":75,"column":37,"offset":2624},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":75,"column":37,"offset":2624},"end":{"line":75,"column":41,"offset":2628},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":75,"column":41,"offset":2628},"end":{"line":76,"column":1,"offset":2645},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":76,"column":1,"offset":2645},"end":{"line":76,"column":5,"offset":2649},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":76,"column":5,"offset":2649},"end":{"line":77,"column":1,"offset":2650},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":77,"column":1,"offset":2650},"end":{"line":77,"column":5,"offset":2654},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":77,"column":5,"offset":2654},"end":{"line":78,"column":66,"offset":2720},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":78,"column":66,"offset":2720},"end":{"line":78,"column":89,"offset":2743},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":78,"column":89,"offset":2743},"end":{"line":79,"column":1,"offset":2783},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":79,"column":1,"offset":2783},"end":{"line":79,"column":5,"offset":2787},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":79,"column":5,"offset":2787},"end":{"line":80,"column":1,"offset":2788},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":80,"column":1,"offset":2788},"end":{"line":80,"column":5,"offset":2792},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":80,"column":5,"offset":2792},"end":{"line":81,"column":21,"offset":2813},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":81,"column":21,"offset":2813},"end":{"line":81,"column":25,"offset":2817},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":81,"column":25,"offset":2817},"end":{"line":82,"column":1,"offset":2871},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":82,"column":1,"offset":2871},"end":{"line":82,"column":5,"offset":2875},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":82,"column":5,"offset":2875},"end":{"line":83,"column":1,"offset":2876},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":83,"column":1,"offset":2876},"end":{"line":83,"column":5,"offset":2880},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":83,"column":5,"offset":2880},"end":{"line":84,"column":21,"offset":2901},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":84,"column":21,"offset":2901},"end":{"line":84,"column":25,"offset":2905},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":84,"column":25,"offset":2905},"end":{"line":85,"column":1,"offset":2960},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":85,"column":1,"offset":2960},"end":{"line":85,"column":5,"offset":2964},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":85,"column":5,"offset":2964},"end":{"line":86,"column":1,"offset":2965},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":86,"column":1,"offset":2965},"end":{"line":86,"column":5,"offset":2969},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":86,"column":5,"offset":2969},"end":{"line":87,"column":58,"offset":3027},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":87,"column":58,"offset":3027},"end":{"line":87,"column":61,"offset":3030},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":87,"column":61,"offset":3030},"end":{"line":87,"column":145,"offset":3114},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":87,"column":145,"offset":3114},"end":{"line":87,"column":153,"offset":3122},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":87,"column":153,"offset":3122},"end":{"line":87,"column":178,"offset":3147},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":2588},"end":{"line":87,"column":178,"offset":3147},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":89,"column":7,"offset":3155},"end":{"line":89,"column":10,"offset":3158},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":3149},"end":{"line":89,"column":10,"offset":3158},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":91,"column":8,"offset":3167},"end":{"line":91,"column":17,"offset":3176},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":3160},"end":{"line":91,"column":17,"offset":3176},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":92,"column":1,"offset":3177},"end":{"line":103,"column":4,"offset":3376},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":104,"column":1,"offset":3377},"end":{"line":104,"column":5,"offset":3381},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":106,"column":1,"offset":3383},"end":{"line":107,"column":1,"offset":3599},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":107,"column":1,"offset":3599},"end":{"line":107,"column":5,"offset":3603},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":107,"column":5,"offset":3603},"end":{"line":108,"column":1,"offset":3604},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":108,"column":1,"offset":3604},"end":{"line":108,"column":5,"offset":3608},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":108,"column":5,"offset":3608},"end":{"line":109,"column":72,"offset":3680},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":109,"column":72,"offset":3680},"end":{"line":109,"column":81,"offset":3689},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":109,"column":81,"offset":3689},"end":{"line":110,"column":1,"offset":3708},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":110,"column":1,"offset":3708},"end":{"line":110,"column":5,"offset":3712},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":110,"column":5,"offset":3712},"end":{"line":111,"column":1,"offset":3713},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":111,"column":1,"offset":3713},"end":{"line":111,"column":5,"offset":3717},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":111,"column":5,"offset":3717},"end":{"line":112,"column":10,"offset":3727},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":112,"column":10,"offset":3727},"end":{"line":112,"column":16,"offset":3733},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":112,"column":16,"offset":3733},"end":{"line":112,"column":34,"offset":3751},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":112,"column":34,"offset":3751},"end":{"line":112,"column":42,"offset":3759},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":112,"column":42,"offset":3759},"end":{"line":113,"column":24,"offset":3784},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":113,"column":24,"offset":3784},"end":{"line":113,"column":33,"offset":3793},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":113,"column":33,"offset":3793},"end":{"line":113,"column":107,"offset":3867},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":113,"column":107,"offset":3867},"end":{"line":113,"column":116,"offset":3876},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":113,"column":116,"offset":3876},"end":{"line":113,"column":134,"offset":3894},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":113,"column":134,"offset":3894},"end":{"line":113,"column":137,"offset":3897},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":113,"column":137,"offset":3897},"end":{"line":113,"column":161,"offset":3921},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":113,"column":161,"offset":3921},"end":{"line":113,"column":167,"offset":3927},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":113,"column":167,"offset":3927},"end":{"line":113,"column":192,"offset":3952},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":113,"column":192,"offset":3952},"end":{"line":113,"column":200,"offset":3960},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":113,"column":200,"offset":3960},"end":{"line":113,"column":218,"offset":3978},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":113,"column":218,"offset":3978},"end":{"line":113,"column":224,"offset":3984},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":113,"column":224,"offset":3984},"end":{"line":113,"column":245,"offset":4005},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":113,"column":245,"offset":4005},"end":{"line":113,"column":252,"offset":4012},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":113,"column":252,"offset":4012},"end":{"line":113,"column":257,"offset":4017},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":113,"column":257,"offset":4017},"end":{"line":113,"column":260,"offset":4020},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":113,"column":260,"offset":4020},"end":{"line":113,"column":285,"offset":4045},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":113,"column":285,"offset":4045},"end":{"line":113,"column":291,"offset":4051},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":113,"column":291,"offset":4051},"end":{"line":114,"column":96,"offset":4177},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":114,"column":96,"offset":4177},"end":{"line":114,"column":111,"offset":4192},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":114,"column":111,"offset":4192},"end":{"line":114,"column":182,"offset":4263},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":3383},"end":{"line":114,"column":182,"offset":4263},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":116,"column":8,"offset":4272},"end":{"line":116,"column":19,"offset":4283},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":4265},"end":{"line":116,"column":19,"offset":4283},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":117,"column":1,"offset":4284},"end":{"line":117,"column":14,"offset":4297},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":4284},"end":{"line":117,"column":14,"offset":4297},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":118,"column":1,"offset":4298},"end":{"line":133,"column":4,"offset":4713},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":134,"column":1,"offset":4714},"end":{"line":134,"column":5,"offset":4718},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":136,"column":1,"offset":4720},"end":{"line":136,"column":141,"offset":4860},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":4720},"end":{"line":136,"column":141,"offset":4860},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":138,"column":8,"offset":4869},"end":{"line":138,"column":30,"offset":4891},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":4862},"end":{"line":138,"column":30,"offset":4891},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":139,"column":1,"offset":4892},"end":{"line":139,"column":199,"offset":5090},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":4892},"end":{"line":139,"column":199,"offset":5090},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":141,"column":8,"offset":5099},"end":{"line":141,"column":30,"offset":5121},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":5092},"end":{"line":141,"column":30,"offset":5121},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":143,"column":1,"offset":5123},"end":{"line":144,"column":1,"offset":5198},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":144,"column":1,"offset":5198},"end":{"line":144,"column":5,"offset":5202},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":144,"column":5,"offset":5202},"end":{"line":145,"column":1,"offset":5203},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":145,"column":1,"offset":5203},"end":{"line":145,"column":5,"offset":5207},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":145,"column":5,"offset":5207},"end":{"line":147,"column":1,"offset":5269},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":147,"column":1,"offset":5269},"end":{"line":147,"column":5,"offset":5273},"indent":[]}},{"type":"break","position":{"start":{"line":147,"column":5,"offset":5273},"end":{"line":148,"column":1,"offset":5276},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":148,"column":1,"offset":5276},"end":{"line":148,"column":11,"offset":5286},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":148,"column":11,"offset":5286},"end":{"line":148,"column":19,"offset":5294},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":148,"column":19,"offset":5294},"end":{"line":148,"column":24,"offset":5299},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":148,"column":24,"offset":5299},"end":{"line":148,"column":34,"offset":5309},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":148,"column":34,"offset":5309},"end":{"line":149,"column":1,"offset":5358},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":149,"column":1,"offset":5358},"end":{"line":149,"column":5,"offset":5362},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":5123},"end":{"line":149,"column":5,"offset":5362},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":151,"column":8,"offset":5371},"end":{"line":151,"column":12,"offset":5375},"indent":[]}}],"position":{"start":{"line":151,"column":1,"offset":5364},"end":{"line":151,"column":12,"offset":5375},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":152,"column":1,"offset":5376},"end":{"line":157,"column":4,"offset":5487},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":158,"column":1,"offset":5488},"end":{"line":159,"column":5,"offset":5497},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":161,"column":1,"offset":5499},"end":{"line":161,"column":7,"offset":5505},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":161,"column":7,"offset":5505},"end":{"line":163,"column":1,"offset":5587},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":163,"column":1,"offset":5587},"end":{"line":163,"column":5,"offset":5591},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":163,"column":5,"offset":5591},"end":{"line":164,"column":1,"offset":5592},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":164,"column":1,"offset":5592},"end":{"line":164,"column":5,"offset":5596},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":164,"column":5,"offset":5596},"end":{"line":165,"column":10,"offset":5606},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":165,"column":10,"offset":5606},"end":{"line":165,"column":14,"offset":5610},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":165,"column":14,"offset":5610},"end":{"line":165,"column":22,"offset":5618},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":165,"column":22,"offset":5618},"end":{"line":165,"column":30,"offset":5626},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":165,"column":30,"offset":5626},"end":{"line":165,"column":50,"offset":5646},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":165,"column":50,"offset":5646},"end":{"line":165,"column":53,"offset":5649},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":165,"column":53,"offset":5649},"end":{"line":165,"column":90,"offset":5686},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":165,"column":90,"offset":5686},"end":{"line":165,"column":96,"offset":5692},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":165,"column":96,"offset":5692},"end":{"line":166,"column":1,"offset":5695},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":166,"column":1,"offset":5695},"end":{"line":166,"column":5,"offset":5699},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":166,"column":5,"offset":5699},"end":{"line":167,"column":1,"offset":5700},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":167,"column":1,"offset":5700},"end":{"line":167,"column":5,"offset":5704},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":167,"column":5,"offset":5704},"end":{"line":168,"column":14,"offset":5718},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":168,"column":14,"offset":5718},"end":{"line":168,"column":18,"offset":5722},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":168,"column":18,"offset":5722},"end":{"line":168,"column":90,"offset":5794},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":168,"column":90,"offset":5794},"end":{"line":168,"column":94,"offset":5798},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":168,"column":94,"offset":5798},"end":{"line":168,"column":125,"offset":5829},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":168,"column":125,"offset":5829},"end":{"line":168,"column":131,"offset":5835},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":168,"column":131,"offset":5835},"end":{"line":169,"column":1,"offset":5850},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":169,"column":1,"offset":5850},"end":{"line":169,"column":5,"offset":5854},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":169,"column":5,"offset":5854},"end":{"line":170,"column":1,"offset":5855},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":170,"column":1,"offset":5855},"end":{"line":170,"column":5,"offset":5859},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":170,"column":5,"offset":5859},"end":{"line":171,"column":14,"offset":5873},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":171,"column":14,"offset":5873},"end":{"line":171,"column":18,"offset":5877},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":171,"column":18,"offset":5877},"end":{"line":171,"column":37,"offset":5896},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":171,"column":37,"offset":5896},"end":{"line":171,"column":40,"offset":5899},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":171,"column":40,"offset":5899},"end":{"line":171,"column":77,"offset":5936},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":171,"column":77,"offset":5936},"end":{"line":171,"column":81,"offset":5940},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":171,"column":81,"offset":5940},"end":{"line":171,"column":99,"offset":5958},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":171,"column":99,"offset":5958},"end":{"line":171,"column":102,"offset":5961},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":171,"column":102,"offset":5961},"end":{"line":171,"column":133,"offset":5992},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":171,"column":133,"offset":5992},"end":{"line":171,"column":139,"offset":5998},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":171,"column":139,"offset":5998},"end":{"line":171,"column":167,"offset":6026},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":171,"column":167,"offset":6026},"end":{"line":171,"column":171,"offset":6030},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":171,"column":171,"offset":6030},"end":{"line":172,"column":1,"offset":6032},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":172,"column":1,"offset":6032},"end":{"line":172,"column":5,"offset":6036},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":172,"column":5,"offset":6036},"end":{"line":173,"column":1,"offset":6037},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":173,"column":1,"offset":6037},"end":{"line":173,"column":5,"offset":6041},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":173,"column":5,"offset":6041},"end":{"line":175,"column":1,"offset":6061},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":175,"column":1,"offset":6061},"end":{"line":175,"column":5,"offset":6065},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":175,"column":5,"offset":6065},"end":{"line":176,"column":6,"offset":6071},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":176,"column":6,"offset":6071},"end":{"line":176,"column":12,"offset":6077},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":176,"column":12,"offset":6077},"end":{"line":176,"column":30,"offset":6095},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":176,"column":30,"offset":6095},"end":{"line":176,"column":36,"offset":6101},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":176,"column":36,"offset":6101},"end":{"line":176,"column":62,"offset":6127},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":176,"column":62,"offset":6127},"end":{"line":176,"column":75,"offset":6140},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":176,"column":75,"offset":6140},"end":{"line":176,"column":159,"offset":6224},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":5499},"end":{"line":176,"column":159,"offset":6224},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":178,"column":8,"offset":6233},"end":{"line":178,"column":41,"offset":6266},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":6226},"end":{"line":178,"column":41,"offset":6266},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":179,"column":1,"offset":6267},"end":{"line":184,"column":4,"offset":6342},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":185,"column":1,"offset":6343},"end":{"line":186,"column":1,"offset":6362},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":186,"column":1,"offset":6362},"end":{"line":186,"column":5,"offset":6366},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":186,"column":5,"offset":6366},"end":{"line":188,"column":5,"offset":6504},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":188,"column":5,"offset":6504},"end":{"line":188,"column":9,"offset":6508},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":188,"column":9,"offset":6508},"end":{"line":189,"column":5,"offset":6513},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":189,"column":5,"offset":6513},"end":{"line":189,"column":27,"offset":6535},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":189,"column":27,"offset":6535},"end":{"line":190,"column":5,"offset":6540},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":190,"column":5,"offset":6540},"end":{"line":190,"column":9,"offset":6544},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":190,"column":9,"offset":6544},"end":{"line":191,"column":5,"offset":6549},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":191,"column":5,"offset":6549},"end":{"line":191,"column":12,"offset":6556},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":191,"column":12,"offset":6556},"end":{"line":191,"column":17,"offset":6561},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":191,"column":17,"offset":6561},"end":{"line":191,"column":25,"offset":6569},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":191,"column":25,"offset":6569},"end":{"line":191,"column":63,"offset":6607},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":191,"column":63,"offset":6607},"end":{"line":191,"column":66,"offset":6610},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":191,"column":66,"offset":6610},"end":{"line":191,"column":86,"offset":6630},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":191,"column":86,"offset":6630},"end":{"line":191,"column":89,"offset":6633},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":191,"column":89,"offset":6633},"end":{"line":191,"column":110,"offset":6654},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":191,"column":110,"offset":6654},"end":{"line":191,"column":119,"offset":6663},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":191,"column":119,"offset":6663},"end":{"line":192,"column":1,"offset":6665},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":192,"column":1,"offset":6665},"end":{"line":192,"column":5,"offset":6669},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":192,"column":5,"offset":6669},"end":{"line":194,"column":1,"offset":6685},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":194,"column":1,"offset":6685},"end":{"line":194,"column":5,"offset":6689},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":194,"column":5,"offset":6689},"end":{"line":196,"column":5,"offset":6796},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":196,"column":5,"offset":6796},"end":{"line":196,"column":9,"offset":6800},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":196,"column":9,"offset":6800},"end":{"line":197,"column":1,"offset":6801},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":197,"column":1,"offset":6801},"end":{"line":197,"column":23,"offset":6823},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":197,"column":23,"offset":6823},"end":{"line":197,"column":35,"offset":6835},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":197,"column":35,"offset":6835},"end":{"line":197,"column":61,"offset":6861},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":197,"column":61,"offset":6861},"end":{"line":198,"column":1,"offset":6862},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":198,"column":1,"offset":6862},"end":{"line":198,"column":5,"offset":6866},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":198,"column":5,"offset":6866},"end":{"line":199,"column":5,"offset":6871},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":199,"column":5,"offset":6871},"end":{"line":199,"column":8,"offset":6874},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":199,"column":8,"offset":6874},"end":{"line":199,"column":58,"offset":6924},"indent":[]}}],"position":{"start":{"line":185,"column":1,"offset":6343},"end":{"line":199,"column":58,"offset":6924},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":201,"column":1,"offset":6926},"end":{"line":202,"column":1,"offset":6944},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":202,"column":1,"offset":6944},"end":{"line":202,"column":5,"offset":6948},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":6926},"end":{"line":202,"column":5,"offset":6948},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":203,"column":1,"offset":6949},"end":{"line":205,"column":4,"offset":6979},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":206,"column":1,"offset":6980},"end":{"line":206,"column":13,"offset":6992},"indent":[]}}],"position":{"start":{"line":206,"column":1,"offset":6980},"end":{"line":206,"column":13,"offset":6992},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":207,"column":1,"offset":6993},"end":{"line":213,"column":4,"offset":7072},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":214,"column":1,"offset":7073},"end":{"line":214,"column":8,"offset":7080},"indent":[]}}],"position":{"start":{"line":214,"column":1,"offset":7073},"end":{"line":214,"column":8,"offset":7080},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":215,"column":1,"offset":7081},"end":{"line":222,"column":4,"offset":7205},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":223,"column":1,"offset":7206},"end":{"line":224,"column":5,"offset":7215},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":226,"column":1,"offset":7217},"end":{"line":226,"column":11,"offset":7227},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":226,"column":11,"offset":7227},"end":{"line":226,"column":24,"offset":7240},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":226,"column":24,"offset":7240},"end":{"line":226,"column":107,"offset":7323},"indent":[]}}],"position":{"start":{"line":226,"column":1,"offset":7217},"end":{"line":226,"column":107,"offset":7323},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":228,"column":7,"offset":7331},"end":{"line":228,"column":10,"offset":7334},"indent":[]}}],"position":{"start":{"line":228,"column":1,"offset":7325},"end":{"line":228,"column":10,"offset":7334},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":229,"column":7,"offset":7341},"end":{"line":229,"column":10,"offset":7344},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":7335},"end":{"line":229,"column":10,"offset":7344},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":231,"column":6,"offset":7351},"end":{"line":231,"column":10,"offset":7355},"indent":[]}}],"position":{"start":{"line":231,"column":1,"offset":7346},"end":{"line":231,"column":10,"offset":7355},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":232,"column":7,"offset":7362},"end":{"line":232,"column":13,"offset":7368},"indent":[]}}],"position":{"start":{"line":232,"column":1,"offset":7356},"end":{"line":232,"column":13,"offset":7368},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":233,"column":1,"offset":7369},"end":{"line":233,"column":49,"offset":7417},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":233,"column":49,"offset":7417},"end":{"line":233,"column":57,"offset":7425},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":233,"column":57,"offset":7425},"end":{"line":233,"column":133,"offset":7501},"indent":[]}}],"position":{"start":{"line":233,"column":1,"offset":7369},"end":{"line":233,"column":133,"offset":7501},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":234,"column":1,"offset":7502},"end":{"line":244,"column":4,"offset":7697},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":245,"column":1,"offset":7698},"end":{"line":245,"column":5,"offset":7702},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":248,"column":1,"offset":7705},"end":{"line":249,"column":1,"offset":7787},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":249,"column":1,"offset":7787},"end":{"line":249,"column":5,"offset":7791},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":249,"column":5,"offset":7791},"end":{"line":250,"column":1,"offset":7792},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":250,"column":1,"offset":7792},"end":{"line":250,"column":5,"offset":7796},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":250,"column":5,"offset":7796},"end":{"line":251,"column":26,"offset":7822},"indent":[1]}}],"position":{"start":{"line":248,"column":1,"offset":7705},"end":{"line":251,"column":26,"offset":7822},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":252,"column":1,"offset":7823},"end":{"line":257,"column":4,"offset":7951},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":258,"column":1,"offset":7952},"end":{"line":258,"column":14,"offset":7965},"indent":[]}}],"position":{"start":{"line":258,"column":1,"offset":7952},"end":{"line":258,"column":14,"offset":7965},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":260,"column":1,"offset":7967},"end":{"line":273,"column":4,"offset":8249},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":275,"column":1,"offset":8251},"end":{"line":276,"column":5,"offset":8260},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":279,"column":7,"offset":8269},"end":{"line":279,"column":13,"offset":8275},"indent":[]}}],"position":{"start":{"line":279,"column":1,"offset":8263},"end":{"line":279,"column":13,"offset":8275},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":279,"column":13,"offset":8275}}}}