{"expireTime":9007200842248810000,"key":"transformer-remark-markdown-html-ast-6adf6ce84afff9d88bfe1d7c65eb713d-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":18,"column":76,"offset":781}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":18,"column":76,"offset":781}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Breaking down a expression:\n","position":{"start":{"line":20,"column":1,"offset":783},"end":{"line":21,"column":1,"offset":811}}},{"type":"raw","value":"<br>","position":{"start":{"line":21,"column":1,"offset":811},"end":{"line":21,"column":5,"offset":815}}},{"type":"text","value":"\n`","position":{"start":{"line":21,"column":5,"offset":815},"end":{"line":22,"column":2,"offset":817}}}],"position":{"start":{"line":20,"column":1,"offset":783},"end":{"line":22,"column":2,"offset":817}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":23,"column":7,"offset":824},"end":{"line":23,"column":10,"offset":827}}}],"position":{"start":{"line":23,"column":1,"offset":818},"end":{"line":23,"column":10,"offset":827}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":24,"column":7,"offset":834},"end":{"line":24,"column":10,"offset":837}}}],"position":{"start":{"line":24,"column":1,"offset":828},"end":{"line":24,"column":10,"offset":837}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":26,"column":6,"offset":844},"end":{"line":26,"column":14,"offset":852}}}],"position":{"start":{"line":26,"column":1,"offset":839},"end":{"line":26,"column":14,"offset":852}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":27,"column":7,"offset":859},"end":{"line":27,"column":10,"offset":862}}}],"position":{"start":{"line":27,"column":1,"offset":853},"end":{"line":27,"column":10,"offset":862}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":29,"column":8,"offset":871},"end":{"line":29,"column":30,"offset":893}}}],"position":{"start":{"line":29,"column":1,"offset":864},"end":{"line":29,"column":30,"offset":893}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":31,"column":1,"offset":895},"end":{"line":32,"column":1,"offset":1039}}},{"type":"raw","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1039},"end":{"line":32,"column":5,"offset":1043}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":32,"column":5,"offset":1043},"end":{"line":32,"column":16,"offset":1054}}},{"type":"raw","value":"<br>","position":{"start":{"line":32,"column":16,"offset":1054},"end":{"line":32,"column":20,"offset":1058}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":32,"column":20,"offset":1058},"end":{"line":34,"column":1,"offset":1202}}},{"type":"raw","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1202},"end":{"line":34,"column":5,"offset":1206}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":34,"column":5,"offset":1206},"end":{"line":34,"column":16,"offset":1217}}},{"type":"raw","value":"<br>","position":{"start":{"line":34,"column":16,"offset":1217},"end":{"line":34,"column":20,"offset":1221}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":34,"column":20,"offset":1221},"end":{"line":35,"column":45,"offset":1266}}},{"type":"raw","value":"<br>","position":{"start":{"line":35,"column":45,"offset":1266},"end":{"line":35,"column":49,"offset":1270}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":35,"column":49,"offset":1270},"end":{"line":35,"column":65,"offset":1286}}},{"type":"raw","value":"<br>","position":{"start":{"line":35,"column":65,"offset":1286},"end":{"line":35,"column":69,"offset":1290}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":35,"column":69,"offset":1290},"end":{"line":37,"column":1,"offset":1333}}},{"type":"raw","value":"<br>","position":{"start":{"line":37,"column":1,"offset":1333},"end":{"line":37,"column":5,"offset":1337}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":37,"column":5,"offset":1337},"end":{"line":37,"column":22,"offset":1354}}},{"type":"raw","value":"<br>","position":{"start":{"line":37,"column":22,"offset":1354},"end":{"line":37,"column":26,"offset":1358}}},{"type":"text","value":"\n","position":{"start":{"line":37,"column":26,"offset":1358},"end":{"line":38,"column":1,"offset":1359}}},{"type":"raw","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1359},"end":{"line":38,"column":5,"offset":1363}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":38,"column":5,"offset":1363},"end":{"line":40,"column":1,"offset":1481}}},{"type":"raw","value":"<br>","position":{"start":{"line":40,"column":1,"offset":1481},"end":{"line":40,"column":5,"offset":1485}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":40,"column":5,"offset":1485},"end":{"line":42,"column":1,"offset":1606}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":42,"column":1,"offset":1606},"end":{"line":42,"column":12,"offset":1617}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":42,"column":12,"offset":1617},"end":{"line":42,"column":68,"offset":1673}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":42,"column":68,"offset":1673},"end":{"line":42,"column":79,"offset":1684}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":42,"column":79,"offset":1684},"end":{"line":42,"column":106,"offset":1711}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":42,"column":106,"offset":1711},"end":{"line":42,"column":109,"offset":1714}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":42,"column":109,"offset":1714},"end":{"line":42,"column":189,"offset":1794}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":42,"column":189,"offset":1794},"end":{"line":42,"column":192,"offset":1797}}},{"type":"text","value":" to get 3.","position":{"start":{"line":42,"column":192,"offset":1797},"end":{"line":42,"column":202,"offset":1807}}}],"position":{"start":{"line":31,"column":1,"offset":895},"end":{"line":42,"column":202,"offset":1807}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":44,"column":8,"offset":1816},"end":{"line":44,"column":14,"offset":1822}}}],"position":{"start":{"line":44,"column":1,"offset":1809},"end":{"line":44,"column":14,"offset":1822}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":45,"column":1,"offset":1823},"end":{"line":45,"column":9,"offset":1831}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":45,"column":9,"offset":1831},"end":{"line":45,"column":73,"offset":1895}}}],"position":{"start":{"line":45,"column":1,"offset":1823},"end":{"line":45,"column":73,"offset":1895}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":46,"column":1,"offset":1896},"end":{"line":49,"column":4,"offset":1935}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":50,"column":1,"offset":1936},"end":{"line":50,"column":5,"offset":1940}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":52,"column":1,"offset":1942},"end":{"line":52,"column":72,"offset":2013}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":52,"column":72,"offset":2013},"end":{"line":52,"column":80,"offset":2021}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":52,"column":80,"offset":2021},"end":{"line":53,"column":1,"offset":2045}}},{"type":"raw","value":"<br>","position":{"start":{"line":53,"column":1,"offset":2045},"end":{"line":53,"column":5,"offset":2049}}},{"type":"text","value":"\n","position":{"start":{"line":53,"column":5,"offset":2049},"end":{"line":54,"column":1,"offset":2050}}},{"type":"raw","value":"<br>","position":{"start":{"line":54,"column":1,"offset":2050},"end":{"line":54,"column":5,"offset":2054}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":54,"column":5,"offset":2054},"end":{"line":55,"column":184,"offset":2238}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":55,"column":184,"offset":2238},"end":{"line":55,"column":187,"offset":2241}}},{"type":"text","value":".\n","position":{"start":{"line":55,"column":187,"offset":2241},"end":{"line":56,"column":1,"offset":2244}}},{"type":"raw","value":"<br>","position":{"start":{"line":56,"column":1,"offset":2244},"end":{"line":56,"column":5,"offset":2248}}},{"type":"text","value":"\n","position":{"start":{"line":56,"column":5,"offset":2248},"end":{"line":57,"column":1,"offset":2249}}},{"type":"raw","value":"<br>","position":{"start":{"line":57,"column":1,"offset":2249},"end":{"line":57,"column":5,"offset":2253}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":57,"column":5,"offset":2253},"end":{"line":58,"column":27,"offset":2280}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":58,"column":27,"offset":2280},"end":{"line":58,"column":35,"offset":2288}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":58,"column":35,"offset":2288},"end":{"line":58,"column":86,"offset":2339}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":58,"column":86,"offset":2339},"end":{"line":58,"column":95,"offset":2348}}},{"type":"text","value":". ","position":{"start":{"line":58,"column":95,"offset":2348},"end":{"line":58,"column":97,"offset":2350}}}],"position":{"start":{"line":52,"column":1,"offset":1942},"end":{"line":58,"column":97,"offset":2350}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":60,"column":1,"offset":2352},"end":{"line":60,"column":6,"offset":2357}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":62,"column":1,"offset":2359},"end":{"line":63,"column":1,"offset":2403}}},{"type":"raw","value":"<br>","position":{"start":{"line":63,"column":1,"offset":2403},"end":{"line":63,"column":5,"offset":2407}}},{"type":"text","value":"\n","position":{"start":{"line":63,"column":5,"offset":2407},"end":{"line":64,"column":1,"offset":2408}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":64,"column":1,"offset":2408},"end":{"line":64,"column":22,"offset":2429}}},{"type":"text","value":"\n","position":{"start":{"line":64,"column":22,"offset":2429},"end":{"line":65,"column":1,"offset":2430}}},{"type":"raw","value":"<br>","position":{"start":{"line":65,"column":1,"offset":2430},"end":{"line":65,"column":5,"offset":2434}}}],"position":{"start":{"line":62,"column":1,"offset":2359},"end":{"line":65,"column":5,"offset":2434}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":67,"column":1,"offset":2436},"end":{"line":67,"column":152,"offset":2587}}}],"position":{"start":{"line":67,"column":1,"offset":2436},"end":{"line":67,"column":152,"offset":2587}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":69,"column":8,"offset":2596},"end":{"line":69,"column":20,"offset":2608}}}],"position":{"start":{"line":69,"column":1,"offset":2589},"end":{"line":69,"column":20,"offset":2608}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":71,"column":1,"offset":2610},"end":{"line":71,"column":56,"offset":2665}}}],"position":{"start":{"line":71,"column":1,"offset":2610},"end":{"line":71,"column":56,"offset":2665}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":72,"column":1,"offset":2666},"end":{"line":77,"column":4,"offset":2757}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2758},"end":{"line":78,"column":5,"offset":2762}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":80,"column":1,"offset":2764},"end":{"line":80,"column":37,"offset":2800}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":80,"column":37,"offset":2800},"end":{"line":80,"column":41,"offset":2804}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":80,"column":41,"offset":2804},"end":{"line":81,"column":1,"offset":2821}}},{"type":"raw","value":"<br>","position":{"start":{"line":81,"column":1,"offset":2821},"end":{"line":81,"column":5,"offset":2825}}},{"type":"text","value":"\n","position":{"start":{"line":81,"column":5,"offset":2825},"end":{"line":82,"column":1,"offset":2826}}},{"type":"raw","value":"<br>","position":{"start":{"line":82,"column":1,"offset":2826},"end":{"line":82,"column":5,"offset":2830}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":82,"column":5,"offset":2830},"end":{"line":83,"column":66,"offset":2896}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":83,"column":66,"offset":2896},"end":{"line":83,"column":89,"offset":2919}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":83,"column":89,"offset":2919},"end":{"line":84,"column":1,"offset":2959}}},{"type":"raw","value":"<br>","position":{"start":{"line":84,"column":1,"offset":2959},"end":{"line":84,"column":5,"offset":2963}}},{"type":"text","value":"\n","position":{"start":{"line":84,"column":5,"offset":2963},"end":{"line":85,"column":1,"offset":2964}}},{"type":"raw","value":"<br>","position":{"start":{"line":85,"column":1,"offset":2964},"end":{"line":85,"column":5,"offset":2968}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":85,"column":5,"offset":2968},"end":{"line":86,"column":21,"offset":2989}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":86,"column":21,"offset":2989},"end":{"line":86,"column":25,"offset":2993}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":86,"column":25,"offset":2993},"end":{"line":87,"column":1,"offset":3047}}},{"type":"raw","value":"<br>","position":{"start":{"line":87,"column":1,"offset":3047},"end":{"line":87,"column":5,"offset":3051}}},{"type":"text","value":"\n","position":{"start":{"line":87,"column":5,"offset":3051},"end":{"line":88,"column":1,"offset":3052}}},{"type":"raw","value":"<br>","position":{"start":{"line":88,"column":1,"offset":3052},"end":{"line":88,"column":5,"offset":3056}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":88,"column":5,"offset":3056},"end":{"line":89,"column":21,"offset":3077}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":89,"column":21,"offset":3077},"end":{"line":89,"column":25,"offset":3081}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":89,"column":25,"offset":3081},"end":{"line":90,"column":1,"offset":3136}}},{"type":"raw","value":"<br>","position":{"start":{"line":90,"column":1,"offset":3136},"end":{"line":90,"column":5,"offset":3140}}},{"type":"text","value":"\n","position":{"start":{"line":90,"column":5,"offset":3140},"end":{"line":91,"column":1,"offset":3141}}},{"type":"raw","value":"<br>","position":{"start":{"line":91,"column":1,"offset":3141},"end":{"line":91,"column":5,"offset":3145}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":91,"column":5,"offset":3145},"end":{"line":92,"column":58,"offset":3203}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":92,"column":58,"offset":3203},"end":{"line":92,"column":61,"offset":3206}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":92,"column":61,"offset":3206},"end":{"line":92,"column":145,"offset":3290}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":92,"column":145,"offset":3290},"end":{"line":92,"column":153,"offset":3298}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":92,"column":153,"offset":3298},"end":{"line":92,"column":178,"offset":3323}}}],"position":{"start":{"line":80,"column":1,"offset":2764},"end":{"line":92,"column":178,"offset":3323}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":94,"column":7,"offset":3331},"end":{"line":94,"column":10,"offset":3334}}}],"position":{"start":{"line":94,"column":1,"offset":3325},"end":{"line":94,"column":10,"offset":3334}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":96,"column":8,"offset":3343},"end":{"line":96,"column":17,"offset":3352}}}],"position":{"start":{"line":96,"column":1,"offset":3336},"end":{"line":96,"column":17,"offset":3352}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":97,"column":1,"offset":3353},"end":{"line":108,"column":4,"offset":3552}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":109,"column":1,"offset":3553},"end":{"line":109,"column":5,"offset":3557}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":111,"column":1,"offset":3559},"end":{"line":112,"column":1,"offset":3775}}},{"type":"raw","value":"<br>","position":{"start":{"line":112,"column":1,"offset":3775},"end":{"line":112,"column":5,"offset":3779}}},{"type":"text","value":"\n","position":{"start":{"line":112,"column":5,"offset":3779},"end":{"line":113,"column":1,"offset":3780}}},{"type":"raw","value":"<br>","position":{"start":{"line":113,"column":1,"offset":3780},"end":{"line":113,"column":5,"offset":3784}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":113,"column":5,"offset":3784},"end":{"line":114,"column":72,"offset":3856}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":114,"column":72,"offset":3856},"end":{"line":114,"column":81,"offset":3865}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":114,"column":81,"offset":3865},"end":{"line":115,"column":1,"offset":3884}}},{"type":"raw","value":"<br>","position":{"start":{"line":115,"column":1,"offset":3884},"end":{"line":115,"column":5,"offset":3888}}},{"type":"text","value":"\n","position":{"start":{"line":115,"column":5,"offset":3888},"end":{"line":116,"column":1,"offset":3889}}},{"type":"raw","value":"<br>","position":{"start":{"line":116,"column":1,"offset":3889},"end":{"line":116,"column":5,"offset":3893}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":116,"column":5,"offset":3893},"end":{"line":117,"column":10,"offset":3903}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":117,"column":10,"offset":3903},"end":{"line":117,"column":16,"offset":3909}}},{"type":"text","value":" gets called with ","position":{"start":{"line":117,"column":16,"offset":3909},"end":{"line":117,"column":34,"offset":3927}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":117,"column":34,"offset":3927},"end":{"line":117,"column":42,"offset":3935}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":117,"column":42,"offset":3935},"end":{"line":118,"column":24,"offset":3960}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":118,"column":24,"offset":3960},"end":{"line":118,"column":33,"offset":3969}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":118,"column":33,"offset":3969},"end":{"line":118,"column":107,"offset":4043}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":118,"column":107,"offset":4043},"end":{"line":118,"column":116,"offset":4052}}},{"type":"text","value":" is false because ","position":{"start":{"line":118,"column":116,"offset":4052},"end":{"line":118,"column":134,"offset":4070}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":118,"column":134,"offset":4070},"end":{"line":118,"column":137,"offset":4073}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":118,"column":137,"offset":4073},"end":{"line":118,"column":161,"offset":4097}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":118,"column":161,"offset":4097},"end":{"line":118,"column":167,"offset":4103}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":118,"column":167,"offset":4103},"end":{"line":118,"column":192,"offset":4128}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":118,"column":192,"offset":4128},"end":{"line":118,"column":200,"offset":4136}}},{"type":"text","value":". This is because ","position":{"start":{"line":118,"column":200,"offset":4136},"end":{"line":118,"column":218,"offset":4154}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":118,"column":218,"offset":4154},"end":{"line":118,"column":224,"offset":4160}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":118,"column":224,"offset":4160},"end":{"line":118,"column":245,"offset":4181}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":118,"column":245,"offset":4181},"end":{"line":118,"column":252,"offset":4188}}},{"type":"text","value":" and ","position":{"start":{"line":118,"column":252,"offset":4188},"end":{"line":118,"column":257,"offset":4193}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":118,"column":257,"offset":4193},"end":{"line":118,"column":260,"offset":4196}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":118,"column":260,"offset":4196},"end":{"line":118,"column":285,"offset":4221}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":118,"column":285,"offset":4221},"end":{"line":118,"column":291,"offset":4227}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":118,"column":291,"offset":4227},"end":{"line":119,"column":96,"offset":4353}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":119,"column":96,"offset":4353},"end":{"line":119,"column":111,"offset":4368}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":119,"column":111,"offset":4368},"end":{"line":119,"column":182,"offset":4439}}}],"position":{"start":{"line":111,"column":1,"offset":3559},"end":{"line":119,"column":182,"offset":4439}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":121,"column":8,"offset":4448},"end":{"line":121,"column":19,"offset":4459}}}],"position":{"start":{"line":121,"column":1,"offset":4441},"end":{"line":121,"column":19,"offset":4459}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":122,"column":1,"offset":4460},"end":{"line":122,"column":14,"offset":4473}}}],"position":{"start":{"line":122,"column":1,"offset":4460},"end":{"line":122,"column":14,"offset":4473}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":123,"column":1,"offset":4474},"end":{"line":138,"column":4,"offset":4889}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":139,"column":1,"offset":4890},"end":{"line":139,"column":5,"offset":4894}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":141,"column":1,"offset":4896},"end":{"line":141,"column":141,"offset":5036}}}],"position":{"start":{"line":141,"column":1,"offset":4896},"end":{"line":141,"column":141,"offset":5036}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":143,"column":8,"offset":5045},"end":{"line":143,"column":30,"offset":5067}}}],"position":{"start":{"line":143,"column":1,"offset":5038},"end":{"line":143,"column":30,"offset":5067}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":144,"column":1,"offset":5068},"end":{"line":144,"column":199,"offset":5266}}}],"position":{"start":{"line":144,"column":1,"offset":5068},"end":{"line":144,"column":199,"offset":5266}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":146,"column":8,"offset":5275},"end":{"line":146,"column":30,"offset":5297}}}],"position":{"start":{"line":146,"column":1,"offset":5268},"end":{"line":146,"column":30,"offset":5297}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":148,"column":1,"offset":5299},"end":{"line":149,"column":1,"offset":5374}}},{"type":"raw","value":"<br>","position":{"start":{"line":149,"column":1,"offset":5374},"end":{"line":149,"column":5,"offset":5378}}},{"type":"text","value":"\n","position":{"start":{"line":149,"column":5,"offset":5378},"end":{"line":150,"column":1,"offset":5379}}},{"type":"raw","value":"<br>","position":{"start":{"line":150,"column":1,"offset":5379},"end":{"line":150,"column":5,"offset":5383}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":150,"column":5,"offset":5383},"end":{"line":152,"column":1,"offset":5445}}},{"type":"raw","value":"<br>","position":{"start":{"line":152,"column":1,"offset":5445},"end":{"line":152,"column":5,"offset":5449}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":152,"column":5,"offset":5449},"end":{"line":153,"column":1,"offset":5452}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":153,"column":1,"offset":5452},"end":{"line":153,"column":11,"offset":5462}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":153,"column":11,"offset":5462},"end":{"line":153,"column":19,"offset":5470}}},{"type":"text","value":" and ","position":{"start":{"line":153,"column":19,"offset":5470},"end":{"line":153,"column":24,"offset":5475}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":153,"column":24,"offset":5475},"end":{"line":153,"column":34,"offset":5485}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":153,"column":34,"offset":5485},"end":{"line":154,"column":1,"offset":5534}}},{"type":"raw","value":"<br>","position":{"start":{"line":154,"column":1,"offset":5534},"end":{"line":154,"column":5,"offset":5538}}}],"position":{"start":{"line":148,"column":1,"offset":5299},"end":{"line":154,"column":5,"offset":5538}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":156,"column":8,"offset":5547},"end":{"line":156,"column":12,"offset":5551}}}],"position":{"start":{"line":156,"column":1,"offset":5540},"end":{"line":156,"column":12,"offset":5551}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":157,"column":1,"offset":5552},"end":{"line":162,"column":4,"offset":5663}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":163,"column":1,"offset":5664},"end":{"line":164,"column":5,"offset":5673}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":166,"column":1,"offset":5675},"end":{"line":166,"column":7,"offset":5681}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":166,"column":7,"offset":5681},"end":{"line":168,"column":1,"offset":5763}}},{"type":"raw","value":"<br>","position":{"start":{"line":168,"column":1,"offset":5763},"end":{"line":168,"column":5,"offset":5767}}},{"type":"text","value":"\n","position":{"start":{"line":168,"column":5,"offset":5767},"end":{"line":169,"column":1,"offset":5768}}},{"type":"raw","value":"<br>","position":{"start":{"line":169,"column":1,"offset":5768},"end":{"line":169,"column":5,"offset":5772}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":169,"column":5,"offset":5772},"end":{"line":170,"column":10,"offset":5782}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":170,"column":10,"offset":5782},"end":{"line":170,"column":14,"offset":5786}}},{"type":"text","value":". Since ","position":{"start":{"line":170,"column":14,"offset":5786},"end":{"line":170,"column":22,"offset":5794}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":170,"column":22,"offset":5794},"end":{"line":170,"column":30,"offset":5802}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":170,"column":30,"offset":5802},"end":{"line":170,"column":50,"offset":5822}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":170,"column":50,"offset":5822},"end":{"line":170,"column":53,"offset":5825}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":170,"column":53,"offset":5825},"end":{"line":170,"column":90,"offset":5862}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":170,"column":90,"offset":5862},"end":{"line":170,"column":96,"offset":5868}}},{"type":"text","value":".\n","position":{"start":{"line":170,"column":96,"offset":5868},"end":{"line":171,"column":1,"offset":5871}}},{"type":"raw","value":"<br>","position":{"start":{"line":171,"column":1,"offset":5871},"end":{"line":171,"column":5,"offset":5875}}},{"type":"text","value":"\n","position":{"start":{"line":171,"column":5,"offset":5875},"end":{"line":172,"column":1,"offset":5876}}},{"type":"raw","value":"<br>","position":{"start":{"line":172,"column":1,"offset":5876},"end":{"line":172,"column":5,"offset":5880}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":172,"column":5,"offset":5880},"end":{"line":173,"column":14,"offset":5894}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":173,"column":14,"offset":5894},"end":{"line":173,"column":18,"offset":5898}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":173,"column":18,"offset":5898},"end":{"line":173,"column":90,"offset":5970}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":173,"column":90,"offset":5970},"end":{"line":173,"column":94,"offset":5974}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":173,"column":94,"offset":5974},"end":{"line":173,"column":125,"offset":6005}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":173,"column":125,"offset":6005},"end":{"line":173,"column":131,"offset":6011}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":173,"column":131,"offset":6011},"end":{"line":174,"column":1,"offset":6026}}},{"type":"raw","value":"<br>","position":{"start":{"line":174,"column":1,"offset":6026},"end":{"line":174,"column":5,"offset":6030}}},{"type":"text","value":"\n","position":{"start":{"line":174,"column":5,"offset":6030},"end":{"line":175,"column":1,"offset":6031}}},{"type":"raw","value":"<br>","position":{"start":{"line":175,"column":1,"offset":6031},"end":{"line":175,"column":5,"offset":6035}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":175,"column":5,"offset":6035},"end":{"line":176,"column":14,"offset":6049}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":176,"column":14,"offset":6049},"end":{"line":176,"column":18,"offset":6053}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":176,"column":18,"offset":6053},"end":{"line":176,"column":37,"offset":6072}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":176,"column":37,"offset":6072},"end":{"line":176,"column":40,"offset":6075}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":176,"column":40,"offset":6075},"end":{"line":176,"column":77,"offset":6112}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":176,"column":77,"offset":6112},"end":{"line":176,"column":81,"offset":6116}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":176,"column":81,"offset":6116},"end":{"line":176,"column":99,"offset":6134}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":176,"column":99,"offset":6134},"end":{"line":176,"column":102,"offset":6137}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":176,"column":102,"offset":6137},"end":{"line":176,"column":133,"offset":6168}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":176,"column":133,"offset":6168},"end":{"line":176,"column":139,"offset":6174}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":176,"column":139,"offset":6174},"end":{"line":176,"column":167,"offset":6202}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":176,"column":167,"offset":6202},"end":{"line":176,"column":171,"offset":6206}}},{"type":"text","value":".\n","position":{"start":{"line":176,"column":171,"offset":6206},"end":{"line":177,"column":1,"offset":6208}}},{"type":"raw","value":"<br>","position":{"start":{"line":177,"column":1,"offset":6208},"end":{"line":177,"column":5,"offset":6212}}},{"type":"text","value":"\n","position":{"start":{"line":177,"column":5,"offset":6212},"end":{"line":178,"column":1,"offset":6213}}},{"type":"raw","value":"<br>","position":{"start":{"line":178,"column":1,"offset":6213},"end":{"line":178,"column":5,"offset":6217}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":178,"column":5,"offset":6217},"end":{"line":180,"column":1,"offset":6237}}},{"type":"raw","value":"<br>","position":{"start":{"line":180,"column":1,"offset":6237},"end":{"line":180,"column":5,"offset":6241}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":180,"column":5,"offset":6241},"end":{"line":181,"column":6,"offset":6247}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":181,"column":6,"offset":6247},"end":{"line":181,"column":12,"offset":6253}}},{"type":"text","value":" does not have an ","position":{"start":{"line":181,"column":12,"offset":6253},"end":{"line":181,"column":30,"offset":6271}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":181,"column":30,"offset":6271},"end":{"line":181,"column":36,"offset":6277}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":181,"column":36,"offset":6277},"end":{"line":181,"column":62,"offset":6303}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":181,"column":62,"offset":6303},"end":{"line":181,"column":75,"offset":6316}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":181,"column":75,"offset":6316},"end":{"line":181,"column":159,"offset":6400}}}],"position":{"start":{"line":166,"column":1,"offset":5675},"end":{"line":181,"column":159,"offset":6400}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":183,"column":8,"offset":6409},"end":{"line":183,"column":41,"offset":6442}}}],"position":{"start":{"line":183,"column":1,"offset":6402},"end":{"line":183,"column":41,"offset":6442}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":184,"column":1,"offset":6443},"end":{"line":189,"column":4,"offset":6518}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":190,"column":1,"offset":6519},"end":{"line":191,"column":1,"offset":6538}}},{"type":"raw","value":"<br>","position":{"start":{"line":191,"column":1,"offset":6538},"end":{"line":191,"column":5,"offset":6542}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":191,"column":5,"offset":6542},"end":{"line":193,"column":5,"offset":6680}}},{"type":"raw","value":"<br>","position":{"start":{"line":193,"column":5,"offset":6680},"end":{"line":193,"column":9,"offset":6684}}},{"type":"text","value":"\n","position":{"start":{"line":193,"column":9,"offset":6684},"end":{"line":194,"column":5,"offset":6689}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":194,"column":5,"offset":6689},"end":{"line":194,"column":27,"offset":6711}}},{"type":"text","value":"\n","position":{"start":{"line":194,"column":27,"offset":6711},"end":{"line":195,"column":5,"offset":6716}}},{"type":"raw","value":"<br>","position":{"start":{"line":195,"column":5,"offset":6716},"end":{"line":195,"column":9,"offset":6720}}},{"type":"text","value":"\n","position":{"start":{"line":195,"column":9,"offset":6720},"end":{"line":196,"column":5,"offset":6725}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":196,"column":5,"offset":6725},"end":{"line":196,"column":12,"offset":6732}}},{"type":"text","value":" and ","position":{"start":{"line":196,"column":12,"offset":6732},"end":{"line":196,"column":17,"offset":6737}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":196,"column":17,"offset":6737},"end":{"line":196,"column":25,"offset":6745}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":196,"column":25,"offset":6745},"end":{"line":196,"column":63,"offset":6783}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":196,"column":63,"offset":6783},"end":{"line":196,"column":66,"offset":6786}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":196,"column":66,"offset":6786},"end":{"line":196,"column":86,"offset":6806}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":196,"column":86,"offset":6806},"end":{"line":196,"column":89,"offset":6809}}},{"type":"text","value":" will be called with ","position":{"start":{"line":196,"column":89,"offset":6809},"end":{"line":196,"column":110,"offset":6830}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":196,"column":110,"offset":6830},"end":{"line":196,"column":119,"offset":6839}}},{"type":"text","value":".\n","position":{"start":{"line":196,"column":119,"offset":6839},"end":{"line":197,"column":1,"offset":6841}}},{"type":"raw","value":"<br>","position":{"start":{"line":197,"column":1,"offset":6841},"end":{"line":197,"column":5,"offset":6845}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":197,"column":5,"offset":6845},"end":{"line":199,"column":1,"offset":6861}}},{"type":"raw","value":"<br>","position":{"start":{"line":199,"column":1,"offset":6861},"end":{"line":199,"column":5,"offset":6865}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":199,"column":5,"offset":6865},"end":{"line":201,"column":5,"offset":6972}}},{"type":"raw","value":"<br>","position":{"start":{"line":201,"column":5,"offset":6972},"end":{"line":201,"column":9,"offset":6976}}},{"type":"text","value":"\n","position":{"start":{"line":201,"column":9,"offset":6976},"end":{"line":202,"column":1,"offset":6977}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":202,"column":1,"offset":6977},"end":{"line":202,"column":23,"offset":6999}}},{"type":"text","value":" turns into ","position":{"start":{"line":202,"column":23,"offset":6999},"end":{"line":202,"column":35,"offset":7011}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":202,"column":35,"offset":7011},"end":{"line":202,"column":61,"offset":7037}}},{"type":"text","value":"\n","position":{"start":{"line":202,"column":61,"offset":7037},"end":{"line":203,"column":1,"offset":7038}}},{"type":"raw","value":"<br>","position":{"start":{"line":203,"column":1,"offset":7038},"end":{"line":203,"column":5,"offset":7042}}},{"type":"text","value":"\nNow ","position":{"start":{"line":203,"column":5,"offset":7042},"end":{"line":204,"column":5,"offset":7047}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":204,"column":5,"offset":7047},"end":{"line":204,"column":8,"offset":7050}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":204,"column":8,"offset":7050},"end":{"line":204,"column":58,"offset":7100}}}],"position":{"start":{"line":190,"column":1,"offset":6519},"end":{"line":204,"column":58,"offset":7100}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":206,"column":1,"offset":7102},"end":{"line":207,"column":1,"offset":7120}}},{"type":"raw","value":"<br>","position":{"start":{"line":207,"column":1,"offset":7120},"end":{"line":207,"column":5,"offset":7124}}}],"position":{"start":{"line":206,"column":1,"offset":7102},"end":{"line":207,"column":5,"offset":7124}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":208,"column":1,"offset":7125},"end":{"line":210,"column":4,"offset":7155}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":211,"column":1,"offset":7156},"end":{"line":211,"column":13,"offset":7168}}}],"position":{"start":{"line":211,"column":1,"offset":7156},"end":{"line":211,"column":13,"offset":7168}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":212,"column":1,"offset":7169},"end":{"line":218,"column":4,"offset":7248}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":219,"column":1,"offset":7249},"end":{"line":219,"column":8,"offset":7256}}}],"position":{"start":{"line":219,"column":1,"offset":7249},"end":{"line":219,"column":8,"offset":7256}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":220,"column":1,"offset":7257},"end":{"line":227,"column":4,"offset":7381}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":228,"column":1,"offset":7382},"end":{"line":229,"column":5,"offset":7391}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":231,"column":1,"offset":7393},"end":{"line":231,"column":11,"offset":7403}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":231,"column":11,"offset":7403},"end":{"line":231,"column":24,"offset":7416}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":231,"column":24,"offset":7416},"end":{"line":231,"column":107,"offset":7499}}}],"position":{"start":{"line":231,"column":1,"offset":7393},"end":{"line":231,"column":107,"offset":7499}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":233,"column":7,"offset":7507},"end":{"line":233,"column":10,"offset":7510}}}],"position":{"start":{"line":233,"column":1,"offset":7501},"end":{"line":233,"column":10,"offset":7510}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":234,"column":7,"offset":7517},"end":{"line":234,"column":10,"offset":7520}}}],"position":{"start":{"line":234,"column":1,"offset":7511},"end":{"line":234,"column":10,"offset":7520}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":236,"column":6,"offset":7527},"end":{"line":236,"column":10,"offset":7531}}}],"position":{"start":{"line":236,"column":1,"offset":7522},"end":{"line":236,"column":10,"offset":7531}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":237,"column":7,"offset":7538},"end":{"line":237,"column":13,"offset":7544}}}],"position":{"start":{"line":237,"column":1,"offset":7532},"end":{"line":237,"column":13,"offset":7544}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":238,"column":1,"offset":7545},"end":{"line":238,"column":49,"offset":7593}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":238,"column":49,"offset":7593},"end":{"line":238,"column":57,"offset":7601}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":238,"column":57,"offset":7601},"end":{"line":238,"column":133,"offset":7677}}}],"position":{"start":{"line":238,"column":1,"offset":7545},"end":{"line":238,"column":133,"offset":7677}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":239,"column":1,"offset":7678},"end":{"line":249,"column":4,"offset":7873}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":250,"column":1,"offset":7874},"end":{"line":250,"column":5,"offset":7878}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":253,"column":1,"offset":7881},"end":{"line":254,"column":1,"offset":7963}}},{"type":"raw","value":"<br>","position":{"start":{"line":254,"column":1,"offset":7963},"end":{"line":254,"column":5,"offset":7967}}},{"type":"text","value":"\n","position":{"start":{"line":254,"column":5,"offset":7967},"end":{"line":255,"column":1,"offset":7968}}},{"type":"raw","value":"<br>","position":{"start":{"line":255,"column":1,"offset":7968},"end":{"line":255,"column":5,"offset":7972}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":255,"column":5,"offset":7972},"end":{"line":256,"column":26,"offset":7998}}}],"position":{"start":{"line":253,"column":1,"offset":7881},"end":{"line":256,"column":26,"offset":7998}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":257,"column":1,"offset":7999},"end":{"line":262,"column":4,"offset":8127}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":263,"column":1,"offset":8128},"end":{"line":263,"column":14,"offset":8141}}}],"position":{"start":{"line":263,"column":1,"offset":8128},"end":{"line":263,"column":14,"offset":8141}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":265,"column":1,"offset":8143},"end":{"line":278,"column":4,"offset":8425}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":280,"column":1,"offset":8427},"end":{"line":281,"column":5,"offset":8436}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":284,"column":7,"offset":8445},"end":{"line":284,"column":13,"offset":8451}}}],"position":{"start":{"line":284,"column":1,"offset":8439},"end":{"line":284,"column":13,"offset":8451}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":284,"column":13,"offset":8451}}}}