{"expireTime":9007200842251421000,"key":"transformer-remark-markdown-html-ast-899de1d0f64e199dd49881c08eed43cd-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833}}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847}}},{"type":"raw","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860}}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865}}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879}}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884}}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895}}},{"type":"raw","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900}}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901}}},{"type":"raw","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906}}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911}}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912}}},{"type":"raw","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916}}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043}}},{"type":"raw","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047}}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048}}},{"type":"raw","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052}}},{"type":"text","value":"\nEnvironment: The name-object pairs the interpreter keeps in memory.\n","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":34,"column":1,"offset":1121}}},{"type":"raw","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1121},"end":{"line":34,"column":5,"offset":1125}}},{"type":"text","value":"\n","position":{"start":{"line":34,"column":5,"offset":1125},"end":{"line":35,"column":1,"offset":1126}}},{"type":"raw","value":"<br>","position":{"start":{"line":35,"column":1,"offset":1126},"end":{"line":35,"column":5,"offset":1130}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":35,"column":5,"offset":1130}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Compound Procedures can be used to build on top of other Compound Procedures:\n","position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":1,"offset":1210}}},{"type":"raw","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1210},"end":{"line":38,"column":5,"offset":1214}}}],"position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":5,"offset":1214}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (sum-of-squares x y)\n(+ (square x) (square y))</code></pre></div>","position":{"start":{"line":39,"column":1,"offset":1215},"end":{"line":42,"column":4,"offset":1277}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":43,"column":1,"offset":1278},"end":{"line":43,"column":5,"offset":1282}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Compound Procedure: procedure that you make out of other procedures.","position":{"start":{"line":45,"column":1,"offset":1284},"end":{"line":45,"column":69,"offset":1352}}}],"position":{"start":{"line":45,"column":1,"offset":1284},"end":{"line":45,"column":69,"offset":1352}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Primitive Procedure: procedure built into the language ex: ","position":{"start":{"line":47,"column":1,"offset":1354},"end":{"line":47,"column":60,"offset":1413}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":47,"column":60,"offset":1413},"end":{"line":47,"column":63,"offset":1416}}},{"type":"text","value":"\n","position":{"start":{"line":47,"column":63,"offset":1416},"end":{"line":48,"column":1,"offset":1417}}},{"type":"raw","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1417},"end":{"line":48,"column":5,"offset":1421}}},{"type":"text","value":"\n","position":{"start":{"line":48,"column":5,"offset":1421},"end":{"line":49,"column":1,"offset":1422}}},{"type":"raw","value":"<br>","position":{"start":{"line":49,"column":1,"offset":1422},"end":{"line":49,"column":5,"offset":1426}}},{"type":"text","value":"\nBoth are used exactly the same.\n","position":{"start":{"line":49,"column":5,"offset":1426},"end":{"line":51,"column":1,"offset":1459}}},{"type":"raw","value":"<br>","position":{"start":{"line":51,"column":1,"offset":1459},"end":{"line":51,"column":5,"offset":1463}}}],"position":{"start":{"line":47,"column":1,"offset":1354},"end":{"line":51,"column":5,"offset":1463}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":53,"column":7,"offset":1471},"end":{"line":53,"column":10,"offset":1474}}}],"position":{"start":{"line":53,"column":1,"offset":1465},"end":{"line":53,"column":10,"offset":1474}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":54,"column":7,"offset":1481},"end":{"line":54,"column":10,"offset":1484}}}],"position":{"start":{"line":54,"column":1,"offset":1475},"end":{"line":54,"column":10,"offset":1484}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":56,"column":6,"offset":1491},"end":{"line":56,"column":14,"offset":1499}}}],"position":{"start":{"line":56,"column":1,"offset":1486},"end":{"line":56,"column":14,"offset":1499}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":57,"column":7,"offset":1506},"end":{"line":57,"column":10,"offset":1509}}}],"position":{"start":{"line":57,"column":1,"offset":1500},"end":{"line":57,"column":10,"offset":1509}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":59,"column":8,"offset":1518},"end":{"line":59,"column":30,"offset":1540}}}],"position":{"start":{"line":59,"column":1,"offset":1511},"end":{"line":59,"column":30,"offset":1540}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":61,"column":1,"offset":1542},"end":{"line":62,"column":1,"offset":1686}}},{"type":"raw","value":"<br>","position":{"start":{"line":62,"column":1,"offset":1686},"end":{"line":62,"column":5,"offset":1690}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":62,"column":5,"offset":1690},"end":{"line":62,"column":16,"offset":1701}}},{"type":"raw","value":"<br>","position":{"start":{"line":62,"column":16,"offset":1701},"end":{"line":62,"column":20,"offset":1705}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":62,"column":20,"offset":1705},"end":{"line":64,"column":1,"offset":1849}}},{"type":"raw","value":"<br>","position":{"start":{"line":64,"column":1,"offset":1849},"end":{"line":64,"column":5,"offset":1853}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":64,"column":5,"offset":1853},"end":{"line":64,"column":16,"offset":1864}}},{"type":"raw","value":"<br>","position":{"start":{"line":64,"column":16,"offset":1864},"end":{"line":64,"column":20,"offset":1868}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":64,"column":20,"offset":1868},"end":{"line":65,"column":45,"offset":1913}}},{"type":"raw","value":"<br>","position":{"start":{"line":65,"column":45,"offset":1913},"end":{"line":65,"column":49,"offset":1917}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":65,"column":49,"offset":1917},"end":{"line":65,"column":65,"offset":1933}}},{"type":"raw","value":"<br>","position":{"start":{"line":65,"column":65,"offset":1933},"end":{"line":65,"column":69,"offset":1937}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":65,"column":69,"offset":1937},"end":{"line":67,"column":1,"offset":1980}}},{"type":"raw","value":"<br>","position":{"start":{"line":67,"column":1,"offset":1980},"end":{"line":67,"column":5,"offset":1984}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":67,"column":5,"offset":1984},"end":{"line":67,"column":22,"offset":2001}}},{"type":"raw","value":"<br>","position":{"start":{"line":67,"column":22,"offset":2001},"end":{"line":67,"column":26,"offset":2005}}},{"type":"text","value":"\n","position":{"start":{"line":67,"column":26,"offset":2005},"end":{"line":68,"column":1,"offset":2006}}},{"type":"raw","value":"<br>","position":{"start":{"line":68,"column":1,"offset":2006},"end":{"line":68,"column":5,"offset":2010}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":68,"column":5,"offset":2010},"end":{"line":70,"column":1,"offset":2128}}},{"type":"raw","value":"<br>","position":{"start":{"line":70,"column":1,"offset":2128},"end":{"line":70,"column":5,"offset":2132}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":70,"column":5,"offset":2132},"end":{"line":72,"column":1,"offset":2253}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":72,"column":1,"offset":2253},"end":{"line":72,"column":12,"offset":2264}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":72,"column":12,"offset":2264},"end":{"line":72,"column":68,"offset":2320}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":72,"column":68,"offset":2320},"end":{"line":72,"column":79,"offset":2331}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":72,"column":79,"offset":2331},"end":{"line":72,"column":106,"offset":2358}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":72,"column":106,"offset":2358},"end":{"line":72,"column":109,"offset":2361}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":72,"column":109,"offset":2361},"end":{"line":72,"column":189,"offset":2441}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":72,"column":189,"offset":2441},"end":{"line":72,"column":192,"offset":2444}}},{"type":"text","value":" to get 3.","position":{"start":{"line":72,"column":192,"offset":2444},"end":{"line":72,"column":202,"offset":2454}}}],"position":{"start":{"line":61,"column":1,"offset":1542},"end":{"line":72,"column":202,"offset":2454}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":74,"column":8,"offset":2463},"end":{"line":74,"column":14,"offset":2469}}}],"position":{"start":{"line":74,"column":1,"offset":2456},"end":{"line":74,"column":14,"offset":2469}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":75,"column":1,"offset":2470},"end":{"line":75,"column":9,"offset":2478}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":75,"column":9,"offset":2478},"end":{"line":75,"column":73,"offset":2542}}}],"position":{"start":{"line":75,"column":1,"offset":2470},"end":{"line":75,"column":73,"offset":2542}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":76,"column":1,"offset":2543},"end":{"line":79,"column":4,"offset":2582}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":80,"column":1,"offset":2583},"end":{"line":80,"column":5,"offset":2587}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":82,"column":1,"offset":2589},"end":{"line":82,"column":72,"offset":2660}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":82,"column":72,"offset":2660},"end":{"line":82,"column":80,"offset":2668}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":82,"column":80,"offset":2668},"end":{"line":83,"column":1,"offset":2692}}},{"type":"raw","value":"<br>","position":{"start":{"line":83,"column":1,"offset":2692},"end":{"line":83,"column":5,"offset":2696}}},{"type":"text","value":"\n","position":{"start":{"line":83,"column":5,"offset":2696},"end":{"line":84,"column":1,"offset":2697}}},{"type":"raw","value":"<br>","position":{"start":{"line":84,"column":1,"offset":2697},"end":{"line":84,"column":5,"offset":2701}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":84,"column":5,"offset":2701},"end":{"line":85,"column":184,"offset":2885}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":85,"column":184,"offset":2885},"end":{"line":85,"column":187,"offset":2888}}},{"type":"text","value":".\n","position":{"start":{"line":85,"column":187,"offset":2888},"end":{"line":86,"column":1,"offset":2891}}},{"type":"raw","value":"<br>","position":{"start":{"line":86,"column":1,"offset":2891},"end":{"line":86,"column":5,"offset":2895}}},{"type":"text","value":"\n","position":{"start":{"line":86,"column":5,"offset":2895},"end":{"line":87,"column":1,"offset":2896}}},{"type":"raw","value":"<br>","position":{"start":{"line":87,"column":1,"offset":2896},"end":{"line":87,"column":5,"offset":2900}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":87,"column":5,"offset":2900},"end":{"line":88,"column":27,"offset":2927}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":88,"column":27,"offset":2927},"end":{"line":88,"column":35,"offset":2935}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":88,"column":35,"offset":2935},"end":{"line":88,"column":86,"offset":2986}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":88,"column":86,"offset":2986},"end":{"line":88,"column":95,"offset":2995}}},{"type":"text","value":". ","position":{"start":{"line":88,"column":95,"offset":2995},"end":{"line":88,"column":97,"offset":2997}}}],"position":{"start":{"line":82,"column":1,"offset":2589},"end":{"line":88,"column":97,"offset":2997}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":90,"column":1,"offset":2999},"end":{"line":90,"column":6,"offset":3004}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":92,"column":1,"offset":3006},"end":{"line":93,"column":1,"offset":3050}}},{"type":"raw","value":"<br>","position":{"start":{"line":93,"column":1,"offset":3050},"end":{"line":93,"column":5,"offset":3054}}},{"type":"text","value":"\n","position":{"start":{"line":93,"column":5,"offset":3054},"end":{"line":94,"column":1,"offset":3055}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":94,"column":1,"offset":3055},"end":{"line":94,"column":22,"offset":3076}}},{"type":"text","value":"\n","position":{"start":{"line":94,"column":22,"offset":3076},"end":{"line":95,"column":1,"offset":3077}}},{"type":"raw","value":"<br>","position":{"start":{"line":95,"column":1,"offset":3077},"end":{"line":95,"column":5,"offset":3081}}}],"position":{"start":{"line":92,"column":1,"offset":3006},"end":{"line":95,"column":5,"offset":3081}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":97,"column":1,"offset":3083},"end":{"line":97,"column":152,"offset":3234}}}],"position":{"start":{"line":97,"column":1,"offset":3083},"end":{"line":97,"column":152,"offset":3234}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":99,"column":8,"offset":3243},"end":{"line":99,"column":20,"offset":3255}}}],"position":{"start":{"line":99,"column":1,"offset":3236},"end":{"line":99,"column":20,"offset":3255}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":101,"column":1,"offset":3257},"end":{"line":101,"column":56,"offset":3312}}}],"position":{"start":{"line":101,"column":1,"offset":3257},"end":{"line":101,"column":56,"offset":3312}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":102,"column":1,"offset":3313},"end":{"line":107,"column":4,"offset":3404}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":108,"column":1,"offset":3405},"end":{"line":108,"column":5,"offset":3409}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":110,"column":1,"offset":3411},"end":{"line":110,"column":37,"offset":3447}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":110,"column":37,"offset":3447},"end":{"line":110,"column":41,"offset":3451}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":110,"column":41,"offset":3451},"end":{"line":111,"column":1,"offset":3468}}},{"type":"raw","value":"<br>","position":{"start":{"line":111,"column":1,"offset":3468},"end":{"line":111,"column":5,"offset":3472}}},{"type":"text","value":"\n","position":{"start":{"line":111,"column":5,"offset":3472},"end":{"line":112,"column":1,"offset":3473}}},{"type":"raw","value":"<br>","position":{"start":{"line":112,"column":1,"offset":3473},"end":{"line":112,"column":5,"offset":3477}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":112,"column":5,"offset":3477},"end":{"line":113,"column":66,"offset":3543}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":113,"column":66,"offset":3543},"end":{"line":113,"column":89,"offset":3566}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":113,"column":89,"offset":3566},"end":{"line":114,"column":1,"offset":3606}}},{"type":"raw","value":"<br>","position":{"start":{"line":114,"column":1,"offset":3606},"end":{"line":114,"column":5,"offset":3610}}},{"type":"text","value":"\n","position":{"start":{"line":114,"column":5,"offset":3610},"end":{"line":115,"column":1,"offset":3611}}},{"type":"raw","value":"<br>","position":{"start":{"line":115,"column":1,"offset":3611},"end":{"line":115,"column":5,"offset":3615}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":115,"column":5,"offset":3615},"end":{"line":116,"column":21,"offset":3636}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":116,"column":21,"offset":3636},"end":{"line":116,"column":25,"offset":3640}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":116,"column":25,"offset":3640},"end":{"line":117,"column":1,"offset":3694}}},{"type":"raw","value":"<br>","position":{"start":{"line":117,"column":1,"offset":3694},"end":{"line":117,"column":5,"offset":3698}}},{"type":"text","value":"\n","position":{"start":{"line":117,"column":5,"offset":3698},"end":{"line":118,"column":1,"offset":3699}}},{"type":"raw","value":"<br>","position":{"start":{"line":118,"column":1,"offset":3699},"end":{"line":118,"column":5,"offset":3703}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":118,"column":5,"offset":3703},"end":{"line":119,"column":21,"offset":3724}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":119,"column":21,"offset":3724},"end":{"line":119,"column":25,"offset":3728}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":119,"column":25,"offset":3728},"end":{"line":120,"column":1,"offset":3783}}},{"type":"raw","value":"<br>","position":{"start":{"line":120,"column":1,"offset":3783},"end":{"line":120,"column":5,"offset":3787}}},{"type":"text","value":"\n","position":{"start":{"line":120,"column":5,"offset":3787},"end":{"line":121,"column":1,"offset":3788}}},{"type":"raw","value":"<br>","position":{"start":{"line":121,"column":1,"offset":3788},"end":{"line":121,"column":5,"offset":3792}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":121,"column":5,"offset":3792},"end":{"line":122,"column":58,"offset":3850}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":122,"column":58,"offset":3850},"end":{"line":122,"column":61,"offset":3853}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":122,"column":61,"offset":3853},"end":{"line":122,"column":145,"offset":3937}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":122,"column":145,"offset":3937},"end":{"line":122,"column":153,"offset":3945}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":122,"column":153,"offset":3945},"end":{"line":122,"column":178,"offset":3970}}}],"position":{"start":{"line":110,"column":1,"offset":3411},"end":{"line":122,"column":178,"offset":3970}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":124,"column":7,"offset":3978},"end":{"line":124,"column":10,"offset":3981}}}],"position":{"start":{"line":124,"column":1,"offset":3972},"end":{"line":124,"column":10,"offset":3981}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":126,"column":8,"offset":3990},"end":{"line":126,"column":17,"offset":3999}}}],"position":{"start":{"line":126,"column":1,"offset":3983},"end":{"line":126,"column":17,"offset":3999}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":127,"column":1,"offset":4000},"end":{"line":138,"column":4,"offset":4199}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":139,"column":1,"offset":4200},"end":{"line":139,"column":5,"offset":4204}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":141,"column":1,"offset":4206},"end":{"line":142,"column":1,"offset":4422}}},{"type":"raw","value":"<br>","position":{"start":{"line":142,"column":1,"offset":4422},"end":{"line":142,"column":5,"offset":4426}}},{"type":"text","value":"\n","position":{"start":{"line":142,"column":5,"offset":4426},"end":{"line":143,"column":1,"offset":4427}}},{"type":"raw","value":"<br>","position":{"start":{"line":143,"column":1,"offset":4427},"end":{"line":143,"column":5,"offset":4431}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":143,"column":5,"offset":4431},"end":{"line":144,"column":72,"offset":4503}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":144,"column":72,"offset":4503},"end":{"line":144,"column":81,"offset":4512}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":144,"column":81,"offset":4512},"end":{"line":145,"column":1,"offset":4531}}},{"type":"raw","value":"<br>","position":{"start":{"line":145,"column":1,"offset":4531},"end":{"line":145,"column":5,"offset":4535}}},{"type":"text","value":"\n","position":{"start":{"line":145,"column":5,"offset":4535},"end":{"line":146,"column":1,"offset":4536}}},{"type":"raw","value":"<br>","position":{"start":{"line":146,"column":1,"offset":4536},"end":{"line":146,"column":5,"offset":4540}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":146,"column":5,"offset":4540},"end":{"line":147,"column":10,"offset":4550}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":147,"column":10,"offset":4550},"end":{"line":147,"column":16,"offset":4556}}},{"type":"text","value":" gets called with ","position":{"start":{"line":147,"column":16,"offset":4556},"end":{"line":147,"column":34,"offset":4574}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":147,"column":34,"offset":4574},"end":{"line":147,"column":42,"offset":4582}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":147,"column":42,"offset":4582},"end":{"line":148,"column":24,"offset":4607}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":148,"column":24,"offset":4607},"end":{"line":148,"column":33,"offset":4616}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":148,"column":33,"offset":4616},"end":{"line":148,"column":107,"offset":4690}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":148,"column":107,"offset":4690},"end":{"line":148,"column":116,"offset":4699}}},{"type":"text","value":" is false because ","position":{"start":{"line":148,"column":116,"offset":4699},"end":{"line":148,"column":134,"offset":4717}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":148,"column":134,"offset":4717},"end":{"line":148,"column":137,"offset":4720}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":148,"column":137,"offset":4720},"end":{"line":148,"column":161,"offset":4744}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":148,"column":161,"offset":4744},"end":{"line":148,"column":167,"offset":4750}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":148,"column":167,"offset":4750},"end":{"line":148,"column":192,"offset":4775}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":148,"column":192,"offset":4775},"end":{"line":148,"column":200,"offset":4783}}},{"type":"text","value":". This is because ","position":{"start":{"line":148,"column":200,"offset":4783},"end":{"line":148,"column":218,"offset":4801}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":148,"column":218,"offset":4801},"end":{"line":148,"column":224,"offset":4807}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":148,"column":224,"offset":4807},"end":{"line":148,"column":245,"offset":4828}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":148,"column":245,"offset":4828},"end":{"line":148,"column":252,"offset":4835}}},{"type":"text","value":" and ","position":{"start":{"line":148,"column":252,"offset":4835},"end":{"line":148,"column":257,"offset":4840}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":148,"column":257,"offset":4840},"end":{"line":148,"column":260,"offset":4843}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":148,"column":260,"offset":4843},"end":{"line":148,"column":285,"offset":4868}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":148,"column":285,"offset":4868},"end":{"line":148,"column":291,"offset":4874}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":148,"column":291,"offset":4874},"end":{"line":149,"column":96,"offset":5000}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":149,"column":96,"offset":5000},"end":{"line":149,"column":111,"offset":5015}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":149,"column":111,"offset":5015},"end":{"line":149,"column":182,"offset":5086}}}],"position":{"start":{"line":141,"column":1,"offset":4206},"end":{"line":149,"column":182,"offset":5086}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":151,"column":8,"offset":5095},"end":{"line":151,"column":19,"offset":5106}}}],"position":{"start":{"line":151,"column":1,"offset":5088},"end":{"line":151,"column":19,"offset":5106}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":152,"column":1,"offset":5107},"end":{"line":152,"column":14,"offset":5120}}}],"position":{"start":{"line":152,"column":1,"offset":5107},"end":{"line":152,"column":14,"offset":5120}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":153,"column":1,"offset":5121},"end":{"line":168,"column":4,"offset":5536}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":169,"column":1,"offset":5537},"end":{"line":169,"column":5,"offset":5541}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":171,"column":1,"offset":5543},"end":{"line":171,"column":141,"offset":5683}}}],"position":{"start":{"line":171,"column":1,"offset":5543},"end":{"line":171,"column":141,"offset":5683}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":173,"column":8,"offset":5692},"end":{"line":173,"column":30,"offset":5714}}}],"position":{"start":{"line":173,"column":1,"offset":5685},"end":{"line":173,"column":30,"offset":5714}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":174,"column":1,"offset":5715},"end":{"line":174,"column":199,"offset":5913}}}],"position":{"start":{"line":174,"column":1,"offset":5715},"end":{"line":174,"column":199,"offset":5913}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":176,"column":8,"offset":5922},"end":{"line":176,"column":30,"offset":5944}}}],"position":{"start":{"line":176,"column":1,"offset":5915},"end":{"line":176,"column":30,"offset":5944}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":178,"column":1,"offset":5946},"end":{"line":179,"column":1,"offset":6021}}},{"type":"raw","value":"<br>","position":{"start":{"line":179,"column":1,"offset":6021},"end":{"line":179,"column":5,"offset":6025}}},{"type":"text","value":"\n","position":{"start":{"line":179,"column":5,"offset":6025},"end":{"line":180,"column":1,"offset":6026}}},{"type":"raw","value":"<br>","position":{"start":{"line":180,"column":1,"offset":6026},"end":{"line":180,"column":5,"offset":6030}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":180,"column":5,"offset":6030},"end":{"line":182,"column":1,"offset":6092}}},{"type":"raw","value":"<br>","position":{"start":{"line":182,"column":1,"offset":6092},"end":{"line":182,"column":5,"offset":6096}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":182,"column":5,"offset":6096},"end":{"line":183,"column":1,"offset":6099}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":183,"column":1,"offset":6099},"end":{"line":183,"column":11,"offset":6109}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":183,"column":11,"offset":6109},"end":{"line":183,"column":19,"offset":6117}}},{"type":"text","value":" and ","position":{"start":{"line":183,"column":19,"offset":6117},"end":{"line":183,"column":24,"offset":6122}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":183,"column":24,"offset":6122},"end":{"line":183,"column":34,"offset":6132}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":183,"column":34,"offset":6132},"end":{"line":184,"column":1,"offset":6181}}},{"type":"raw","value":"<br>","position":{"start":{"line":184,"column":1,"offset":6181},"end":{"line":184,"column":5,"offset":6185}}}],"position":{"start":{"line":178,"column":1,"offset":5946},"end":{"line":184,"column":5,"offset":6185}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":186,"column":8,"offset":6194},"end":{"line":186,"column":12,"offset":6198}}}],"position":{"start":{"line":186,"column":1,"offset":6187},"end":{"line":186,"column":12,"offset":6198}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":187,"column":1,"offset":6199},"end":{"line":192,"column":4,"offset":6310}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":193,"column":1,"offset":6311},"end":{"line":194,"column":5,"offset":6320}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":196,"column":1,"offset":6322},"end":{"line":196,"column":7,"offset":6328}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":196,"column":7,"offset":6328},"end":{"line":198,"column":1,"offset":6410}}},{"type":"raw","value":"<br>","position":{"start":{"line":198,"column":1,"offset":6410},"end":{"line":198,"column":5,"offset":6414}}},{"type":"text","value":"\n","position":{"start":{"line":198,"column":5,"offset":6414},"end":{"line":199,"column":1,"offset":6415}}},{"type":"raw","value":"<br>","position":{"start":{"line":199,"column":1,"offset":6415},"end":{"line":199,"column":5,"offset":6419}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":199,"column":5,"offset":6419},"end":{"line":200,"column":10,"offset":6429}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":200,"column":10,"offset":6429},"end":{"line":200,"column":14,"offset":6433}}},{"type":"text","value":". Since ","position":{"start":{"line":200,"column":14,"offset":6433},"end":{"line":200,"column":22,"offset":6441}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":200,"column":22,"offset":6441},"end":{"line":200,"column":30,"offset":6449}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":200,"column":30,"offset":6449},"end":{"line":200,"column":50,"offset":6469}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":200,"column":50,"offset":6469},"end":{"line":200,"column":53,"offset":6472}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":200,"column":53,"offset":6472},"end":{"line":200,"column":90,"offset":6509}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":200,"column":90,"offset":6509},"end":{"line":200,"column":96,"offset":6515}}},{"type":"text","value":".\n","position":{"start":{"line":200,"column":96,"offset":6515},"end":{"line":201,"column":1,"offset":6518}}},{"type":"raw","value":"<br>","position":{"start":{"line":201,"column":1,"offset":6518},"end":{"line":201,"column":5,"offset":6522}}},{"type":"text","value":"\n","position":{"start":{"line":201,"column":5,"offset":6522},"end":{"line":202,"column":1,"offset":6523}}},{"type":"raw","value":"<br>","position":{"start":{"line":202,"column":1,"offset":6523},"end":{"line":202,"column":5,"offset":6527}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":202,"column":5,"offset":6527},"end":{"line":203,"column":14,"offset":6541}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":203,"column":14,"offset":6541},"end":{"line":203,"column":18,"offset":6545}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":203,"column":18,"offset":6545},"end":{"line":203,"column":90,"offset":6617}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":203,"column":90,"offset":6617},"end":{"line":203,"column":94,"offset":6621}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":203,"column":94,"offset":6621},"end":{"line":203,"column":125,"offset":6652}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":203,"column":125,"offset":6652},"end":{"line":203,"column":131,"offset":6658}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":203,"column":131,"offset":6658},"end":{"line":204,"column":1,"offset":6673}}},{"type":"raw","value":"<br>","position":{"start":{"line":204,"column":1,"offset":6673},"end":{"line":204,"column":5,"offset":6677}}},{"type":"text","value":"\n","position":{"start":{"line":204,"column":5,"offset":6677},"end":{"line":205,"column":1,"offset":6678}}},{"type":"raw","value":"<br>","position":{"start":{"line":205,"column":1,"offset":6678},"end":{"line":205,"column":5,"offset":6682}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":205,"column":5,"offset":6682},"end":{"line":206,"column":14,"offset":6696}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":206,"column":14,"offset":6696},"end":{"line":206,"column":18,"offset":6700}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":206,"column":18,"offset":6700},"end":{"line":206,"column":37,"offset":6719}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":206,"column":37,"offset":6719},"end":{"line":206,"column":40,"offset":6722}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":206,"column":40,"offset":6722},"end":{"line":206,"column":77,"offset":6759}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":206,"column":77,"offset":6759},"end":{"line":206,"column":81,"offset":6763}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":206,"column":81,"offset":6763},"end":{"line":206,"column":99,"offset":6781}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":206,"column":99,"offset":6781},"end":{"line":206,"column":102,"offset":6784}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":206,"column":102,"offset":6784},"end":{"line":206,"column":133,"offset":6815}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":206,"column":133,"offset":6815},"end":{"line":206,"column":139,"offset":6821}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":206,"column":139,"offset":6821},"end":{"line":206,"column":167,"offset":6849}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":206,"column":167,"offset":6849},"end":{"line":206,"column":171,"offset":6853}}},{"type":"text","value":".\n","position":{"start":{"line":206,"column":171,"offset":6853},"end":{"line":207,"column":1,"offset":6855}}},{"type":"raw","value":"<br>","position":{"start":{"line":207,"column":1,"offset":6855},"end":{"line":207,"column":5,"offset":6859}}},{"type":"text","value":"\n","position":{"start":{"line":207,"column":5,"offset":6859},"end":{"line":208,"column":1,"offset":6860}}},{"type":"raw","value":"<br>","position":{"start":{"line":208,"column":1,"offset":6860},"end":{"line":208,"column":5,"offset":6864}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":208,"column":5,"offset":6864},"end":{"line":210,"column":1,"offset":6884}}},{"type":"raw","value":"<br>","position":{"start":{"line":210,"column":1,"offset":6884},"end":{"line":210,"column":5,"offset":6888}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":210,"column":5,"offset":6888},"end":{"line":211,"column":6,"offset":6894}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":211,"column":6,"offset":6894},"end":{"line":211,"column":12,"offset":6900}}},{"type":"text","value":" does not have an ","position":{"start":{"line":211,"column":12,"offset":6900},"end":{"line":211,"column":30,"offset":6918}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":211,"column":30,"offset":6918},"end":{"line":211,"column":36,"offset":6924}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":211,"column":36,"offset":6924},"end":{"line":211,"column":62,"offset":6950}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":211,"column":62,"offset":6950},"end":{"line":211,"column":75,"offset":6963}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":211,"column":75,"offset":6963},"end":{"line":211,"column":159,"offset":7047}}}],"position":{"start":{"line":196,"column":1,"offset":6322},"end":{"line":211,"column":159,"offset":7047}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":213,"column":8,"offset":7056},"end":{"line":213,"column":41,"offset":7089}}}],"position":{"start":{"line":213,"column":1,"offset":7049},"end":{"line":213,"column":41,"offset":7089}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":214,"column":1,"offset":7090},"end":{"line":219,"column":4,"offset":7165}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":220,"column":1,"offset":7166},"end":{"line":221,"column":1,"offset":7185}}},{"type":"raw","value":"<br>","position":{"start":{"line":221,"column":1,"offset":7185},"end":{"line":221,"column":5,"offset":7189}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":221,"column":5,"offset":7189},"end":{"line":223,"column":5,"offset":7327}}},{"type":"raw","value":"<br>","position":{"start":{"line":223,"column":5,"offset":7327},"end":{"line":223,"column":9,"offset":7331}}},{"type":"text","value":"\n","position":{"start":{"line":223,"column":9,"offset":7331},"end":{"line":224,"column":5,"offset":7336}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":224,"column":5,"offset":7336},"end":{"line":224,"column":27,"offset":7358}}},{"type":"text","value":"\n","position":{"start":{"line":224,"column":27,"offset":7358},"end":{"line":225,"column":5,"offset":7363}}},{"type":"raw","value":"<br>","position":{"start":{"line":225,"column":5,"offset":7363},"end":{"line":225,"column":9,"offset":7367}}},{"type":"text","value":"\n","position":{"start":{"line":225,"column":9,"offset":7367},"end":{"line":226,"column":5,"offset":7372}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":226,"column":5,"offset":7372},"end":{"line":226,"column":12,"offset":7379}}},{"type":"text","value":" and ","position":{"start":{"line":226,"column":12,"offset":7379},"end":{"line":226,"column":17,"offset":7384}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":226,"column":17,"offset":7384},"end":{"line":226,"column":25,"offset":7392}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":226,"column":25,"offset":7392},"end":{"line":226,"column":63,"offset":7430}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":226,"column":63,"offset":7430},"end":{"line":226,"column":66,"offset":7433}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":226,"column":66,"offset":7433},"end":{"line":226,"column":86,"offset":7453}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":226,"column":86,"offset":7453},"end":{"line":226,"column":89,"offset":7456}}},{"type":"text","value":" will be called with ","position":{"start":{"line":226,"column":89,"offset":7456},"end":{"line":226,"column":110,"offset":7477}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":226,"column":110,"offset":7477},"end":{"line":226,"column":119,"offset":7486}}},{"type":"text","value":".\n","position":{"start":{"line":226,"column":119,"offset":7486},"end":{"line":227,"column":1,"offset":7488}}},{"type":"raw","value":"<br>","position":{"start":{"line":227,"column":1,"offset":7488},"end":{"line":227,"column":5,"offset":7492}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":227,"column":5,"offset":7492},"end":{"line":229,"column":1,"offset":7508}}},{"type":"raw","value":"<br>","position":{"start":{"line":229,"column":1,"offset":7508},"end":{"line":229,"column":5,"offset":7512}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":229,"column":5,"offset":7512},"end":{"line":231,"column":5,"offset":7619}}},{"type":"raw","value":"<br>","position":{"start":{"line":231,"column":5,"offset":7619},"end":{"line":231,"column":9,"offset":7623}}},{"type":"text","value":"\n","position":{"start":{"line":231,"column":9,"offset":7623},"end":{"line":232,"column":1,"offset":7624}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":232,"column":1,"offset":7624},"end":{"line":232,"column":23,"offset":7646}}},{"type":"text","value":" turns into ","position":{"start":{"line":232,"column":23,"offset":7646},"end":{"line":232,"column":35,"offset":7658}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":232,"column":35,"offset":7658},"end":{"line":232,"column":61,"offset":7684}}},{"type":"text","value":"\n","position":{"start":{"line":232,"column":61,"offset":7684},"end":{"line":233,"column":1,"offset":7685}}},{"type":"raw","value":"<br>","position":{"start":{"line":233,"column":1,"offset":7685},"end":{"line":233,"column":5,"offset":7689}}},{"type":"text","value":"\nNow ","position":{"start":{"line":233,"column":5,"offset":7689},"end":{"line":234,"column":5,"offset":7694}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":234,"column":5,"offset":7694},"end":{"line":234,"column":8,"offset":7697}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":234,"column":8,"offset":7697},"end":{"line":234,"column":58,"offset":7747}}}],"position":{"start":{"line":220,"column":1,"offset":7166},"end":{"line":234,"column":58,"offset":7747}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":236,"column":1,"offset":7749},"end":{"line":237,"column":1,"offset":7767}}},{"type":"raw","value":"<br>","position":{"start":{"line":237,"column":1,"offset":7767},"end":{"line":237,"column":5,"offset":7771}}}],"position":{"start":{"line":236,"column":1,"offset":7749},"end":{"line":237,"column":5,"offset":7771}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":238,"column":1,"offset":7772},"end":{"line":240,"column":4,"offset":7802}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":241,"column":1,"offset":7803},"end":{"line":241,"column":13,"offset":7815}}}],"position":{"start":{"line":241,"column":1,"offset":7803},"end":{"line":241,"column":13,"offset":7815}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":242,"column":1,"offset":7816},"end":{"line":248,"column":4,"offset":7895}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":249,"column":1,"offset":7896},"end":{"line":249,"column":8,"offset":7903}}}],"position":{"start":{"line":249,"column":1,"offset":7896},"end":{"line":249,"column":8,"offset":7903}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":250,"column":1,"offset":7904},"end":{"line":257,"column":4,"offset":8028}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":258,"column":1,"offset":8029},"end":{"line":259,"column":5,"offset":8038}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":261,"column":1,"offset":8040},"end":{"line":261,"column":11,"offset":8050}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":261,"column":11,"offset":8050},"end":{"line":261,"column":24,"offset":8063}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":261,"column":24,"offset":8063},"end":{"line":261,"column":107,"offset":8146}}}],"position":{"start":{"line":261,"column":1,"offset":8040},"end":{"line":261,"column":107,"offset":8146}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":263,"column":7,"offset":8154},"end":{"line":263,"column":10,"offset":8157}}}],"position":{"start":{"line":263,"column":1,"offset":8148},"end":{"line":263,"column":10,"offset":8157}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":264,"column":7,"offset":8164},"end":{"line":264,"column":10,"offset":8167}}}],"position":{"start":{"line":264,"column":1,"offset":8158},"end":{"line":264,"column":10,"offset":8167}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":266,"column":6,"offset":8174},"end":{"line":266,"column":10,"offset":8178}}}],"position":{"start":{"line":266,"column":1,"offset":8169},"end":{"line":266,"column":10,"offset":8178}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":267,"column":7,"offset":8185},"end":{"line":267,"column":13,"offset":8191}}}],"position":{"start":{"line":267,"column":1,"offset":8179},"end":{"line":267,"column":13,"offset":8191}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":268,"column":1,"offset":8192},"end":{"line":268,"column":49,"offset":8240}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":268,"column":49,"offset":8240},"end":{"line":268,"column":57,"offset":8248}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":268,"column":57,"offset":8248},"end":{"line":268,"column":133,"offset":8324}}}],"position":{"start":{"line":268,"column":1,"offset":8192},"end":{"line":268,"column":133,"offset":8324}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":269,"column":1,"offset":8325},"end":{"line":279,"column":4,"offset":8520}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":280,"column":1,"offset":8521},"end":{"line":280,"column":5,"offset":8525}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":283,"column":1,"offset":8528},"end":{"line":284,"column":1,"offset":8610}}},{"type":"raw","value":"<br>","position":{"start":{"line":284,"column":1,"offset":8610},"end":{"line":284,"column":5,"offset":8614}}},{"type":"text","value":"\n","position":{"start":{"line":284,"column":5,"offset":8614},"end":{"line":285,"column":1,"offset":8615}}},{"type":"raw","value":"<br>","position":{"start":{"line":285,"column":1,"offset":8615},"end":{"line":285,"column":5,"offset":8619}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":285,"column":5,"offset":8619},"end":{"line":286,"column":26,"offset":8645}}}],"position":{"start":{"line":283,"column":1,"offset":8528},"end":{"line":286,"column":26,"offset":8645}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":287,"column":1,"offset":8646},"end":{"line":292,"column":4,"offset":8774}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":293,"column":1,"offset":8775},"end":{"line":293,"column":14,"offset":8788}}}],"position":{"start":{"line":293,"column":1,"offset":8775},"end":{"line":293,"column":14,"offset":8788}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":295,"column":1,"offset":8790},"end":{"line":308,"column":4,"offset":9072}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":310,"column":1,"offset":9074},"end":{"line":311,"column":5,"offset":9083}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":314,"column":7,"offset":9092},"end":{"line":314,"column":13,"offset":9098}}}],"position":{"start":{"line":314,"column":1,"offset":9086},"end":{"line":314,"column":13,"offset":9098}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":314,"column":13,"offset":9098}}}}