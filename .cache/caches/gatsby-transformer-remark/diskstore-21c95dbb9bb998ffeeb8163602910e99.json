{"expireTime":9007200842248926000,"key":"transformer-remark-markdown-html-ast-a6707eb9323bf2c250fd7b6c8f807acb-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":820}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":820},"end":{"line":22,"column":5,"offset":824}}},{"type":"text","value":"\nexpression: ","position":{"start":{"line":22,"column":5,"offset":824},"end":{"line":23,"column":13,"offset":837}}},{"type":"raw","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":13,"offset":837},"end":{"line":23,"column":26,"offset":850}}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":26,"offset":850},"end":{"line":24,"column":1,"offset":851}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":1,"offset":851},"end":{"line":24,"column":5,"offset":855}}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":855},"end":{"line":25,"column":11,"offset":866}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":866},"end":{"line":25,"column":14,"offset":869}}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":869},"end":{"line":26,"column":1,"offset":870}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":1,"offset":870},"end":{"line":26,"column":5,"offset":874}}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":874},"end":{"line":27,"column":11,"offset":885}}},{"type":"raw","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":885},"end":{"line":27,"column":16,"offset":890}}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":890},"end":{"line":27,"column":17,"offset":891}}},{"type":"raw","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":891},"end":{"line":27,"column":22,"offset":896}}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":896},"end":{"line":28,"column":1,"offset":897}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":1,"offset":897},"end":{"line":28,"column":5,"offset":901}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":28,"column":5,"offset":901}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":30,"column":7,"offset":909},"end":{"line":30,"column":10,"offset":912}}}],"position":{"start":{"line":30,"column":1,"offset":903},"end":{"line":30,"column":10,"offset":912}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":31,"column":7,"offset":919},"end":{"line":31,"column":10,"offset":922}}}],"position":{"start":{"line":31,"column":1,"offset":913},"end":{"line":31,"column":10,"offset":922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":33,"column":6,"offset":929},"end":{"line":33,"column":14,"offset":937}}}],"position":{"start":{"line":33,"column":1,"offset":924},"end":{"line":33,"column":14,"offset":937}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":34,"column":7,"offset":944},"end":{"line":34,"column":10,"offset":947}}}],"position":{"start":{"line":34,"column":1,"offset":938},"end":{"line":34,"column":10,"offset":947}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":36,"column":8,"offset":956},"end":{"line":36,"column":30,"offset":978}}}],"position":{"start":{"line":36,"column":1,"offset":949},"end":{"line":36,"column":30,"offset":978}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":38,"column":1,"offset":980},"end":{"line":39,"column":1,"offset":1124}}},{"type":"raw","value":"<br>","position":{"start":{"line":39,"column":1,"offset":1124},"end":{"line":39,"column":5,"offset":1128}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":39,"column":5,"offset":1128},"end":{"line":39,"column":16,"offset":1139}}},{"type":"raw","value":"<br>","position":{"start":{"line":39,"column":16,"offset":1139},"end":{"line":39,"column":20,"offset":1143}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":39,"column":20,"offset":1143},"end":{"line":41,"column":1,"offset":1287}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":1,"offset":1287},"end":{"line":41,"column":5,"offset":1291}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":41,"column":5,"offset":1291},"end":{"line":41,"column":16,"offset":1302}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":16,"offset":1302},"end":{"line":41,"column":20,"offset":1306}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":41,"column":20,"offset":1306},"end":{"line":42,"column":45,"offset":1351}}},{"type":"raw","value":"<br>","position":{"start":{"line":42,"column":45,"offset":1351},"end":{"line":42,"column":49,"offset":1355}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":42,"column":49,"offset":1355},"end":{"line":42,"column":65,"offset":1371}}},{"type":"raw","value":"<br>","position":{"start":{"line":42,"column":65,"offset":1371},"end":{"line":42,"column":69,"offset":1375}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":42,"column":69,"offset":1375},"end":{"line":44,"column":1,"offset":1418}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1418},"end":{"line":44,"column":5,"offset":1422}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":44,"column":5,"offset":1422},"end":{"line":44,"column":22,"offset":1439}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":22,"offset":1439},"end":{"line":44,"column":26,"offset":1443}}},{"type":"text","value":"\n","position":{"start":{"line":44,"column":26,"offset":1443},"end":{"line":45,"column":1,"offset":1444}}},{"type":"raw","value":"<br>","position":{"start":{"line":45,"column":1,"offset":1444},"end":{"line":45,"column":5,"offset":1448}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":45,"column":5,"offset":1448},"end":{"line":47,"column":1,"offset":1566}}},{"type":"raw","value":"<br>","position":{"start":{"line":47,"column":1,"offset":1566},"end":{"line":47,"column":5,"offset":1570}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":47,"column":5,"offset":1570},"end":{"line":49,"column":1,"offset":1691}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":49,"column":1,"offset":1691},"end":{"line":49,"column":12,"offset":1702}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":49,"column":12,"offset":1702},"end":{"line":49,"column":68,"offset":1758}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":49,"column":68,"offset":1758},"end":{"line":49,"column":79,"offset":1769}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":49,"column":79,"offset":1769},"end":{"line":49,"column":106,"offset":1796}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":49,"column":106,"offset":1796},"end":{"line":49,"column":109,"offset":1799}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":49,"column":109,"offset":1799},"end":{"line":49,"column":189,"offset":1879}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":49,"column":189,"offset":1879},"end":{"line":49,"column":192,"offset":1882}}},{"type":"text","value":" to get 3.","position":{"start":{"line":49,"column":192,"offset":1882},"end":{"line":49,"column":202,"offset":1892}}}],"position":{"start":{"line":38,"column":1,"offset":980},"end":{"line":49,"column":202,"offset":1892}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":51,"column":8,"offset":1901},"end":{"line":51,"column":14,"offset":1907}}}],"position":{"start":{"line":51,"column":1,"offset":1894},"end":{"line":51,"column":14,"offset":1907}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":52,"column":1,"offset":1908},"end":{"line":52,"column":9,"offset":1916}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":52,"column":9,"offset":1916},"end":{"line":52,"column":73,"offset":1980}}}],"position":{"start":{"line":52,"column":1,"offset":1908},"end":{"line":52,"column":73,"offset":1980}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":53,"column":1,"offset":1981},"end":{"line":56,"column":4,"offset":2020}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":57,"column":1,"offset":2021},"end":{"line":57,"column":5,"offset":2025}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":59,"column":1,"offset":2027},"end":{"line":59,"column":72,"offset":2098}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":59,"column":72,"offset":2098},"end":{"line":59,"column":80,"offset":2106}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":59,"column":80,"offset":2106},"end":{"line":60,"column":1,"offset":2130}}},{"type":"raw","value":"<br>","position":{"start":{"line":60,"column":1,"offset":2130},"end":{"line":60,"column":5,"offset":2134}}},{"type":"text","value":"\n","position":{"start":{"line":60,"column":5,"offset":2134},"end":{"line":61,"column":1,"offset":2135}}},{"type":"raw","value":"<br>","position":{"start":{"line":61,"column":1,"offset":2135},"end":{"line":61,"column":5,"offset":2139}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":61,"column":5,"offset":2139},"end":{"line":62,"column":184,"offset":2323}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":62,"column":184,"offset":2323},"end":{"line":62,"column":187,"offset":2326}}},{"type":"text","value":".\n","position":{"start":{"line":62,"column":187,"offset":2326},"end":{"line":63,"column":1,"offset":2329}}},{"type":"raw","value":"<br>","position":{"start":{"line":63,"column":1,"offset":2329},"end":{"line":63,"column":5,"offset":2333}}},{"type":"text","value":"\n","position":{"start":{"line":63,"column":5,"offset":2333},"end":{"line":64,"column":1,"offset":2334}}},{"type":"raw","value":"<br>","position":{"start":{"line":64,"column":1,"offset":2334},"end":{"line":64,"column":5,"offset":2338}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":64,"column":5,"offset":2338},"end":{"line":65,"column":27,"offset":2365}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":65,"column":27,"offset":2365},"end":{"line":65,"column":35,"offset":2373}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":65,"column":35,"offset":2373},"end":{"line":65,"column":86,"offset":2424}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":65,"column":86,"offset":2424},"end":{"line":65,"column":95,"offset":2433}}},{"type":"text","value":". ","position":{"start":{"line":65,"column":95,"offset":2433},"end":{"line":65,"column":97,"offset":2435}}}],"position":{"start":{"line":59,"column":1,"offset":2027},"end":{"line":65,"column":97,"offset":2435}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":67,"column":1,"offset":2437},"end":{"line":67,"column":6,"offset":2442}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":69,"column":1,"offset":2444},"end":{"line":70,"column":1,"offset":2488}}},{"type":"raw","value":"<br>","position":{"start":{"line":70,"column":1,"offset":2488},"end":{"line":70,"column":5,"offset":2492}}},{"type":"text","value":"\n","position":{"start":{"line":70,"column":5,"offset":2492},"end":{"line":71,"column":1,"offset":2493}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":71,"column":1,"offset":2493},"end":{"line":71,"column":22,"offset":2514}}},{"type":"text","value":"\n","position":{"start":{"line":71,"column":22,"offset":2514},"end":{"line":72,"column":1,"offset":2515}}},{"type":"raw","value":"<br>","position":{"start":{"line":72,"column":1,"offset":2515},"end":{"line":72,"column":5,"offset":2519}}}],"position":{"start":{"line":69,"column":1,"offset":2444},"end":{"line":72,"column":5,"offset":2519}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":74,"column":1,"offset":2521},"end":{"line":74,"column":152,"offset":2672}}}],"position":{"start":{"line":74,"column":1,"offset":2521},"end":{"line":74,"column":152,"offset":2672}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":76,"column":8,"offset":2681},"end":{"line":76,"column":20,"offset":2693}}}],"position":{"start":{"line":76,"column":1,"offset":2674},"end":{"line":76,"column":20,"offset":2693}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":78,"column":1,"offset":2695},"end":{"line":78,"column":56,"offset":2750}}}],"position":{"start":{"line":78,"column":1,"offset":2695},"end":{"line":78,"column":56,"offset":2750}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":79,"column":1,"offset":2751},"end":{"line":84,"column":4,"offset":2842}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":85,"column":1,"offset":2843},"end":{"line":85,"column":5,"offset":2847}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":87,"column":1,"offset":2849},"end":{"line":87,"column":37,"offset":2885}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":87,"column":37,"offset":2885},"end":{"line":87,"column":41,"offset":2889}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":87,"column":41,"offset":2889},"end":{"line":88,"column":1,"offset":2906}}},{"type":"raw","value":"<br>","position":{"start":{"line":88,"column":1,"offset":2906},"end":{"line":88,"column":5,"offset":2910}}},{"type":"text","value":"\n","position":{"start":{"line":88,"column":5,"offset":2910},"end":{"line":89,"column":1,"offset":2911}}},{"type":"raw","value":"<br>","position":{"start":{"line":89,"column":1,"offset":2911},"end":{"line":89,"column":5,"offset":2915}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":89,"column":5,"offset":2915},"end":{"line":90,"column":66,"offset":2981}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":90,"column":66,"offset":2981},"end":{"line":90,"column":89,"offset":3004}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":90,"column":89,"offset":3004},"end":{"line":91,"column":1,"offset":3044}}},{"type":"raw","value":"<br>","position":{"start":{"line":91,"column":1,"offset":3044},"end":{"line":91,"column":5,"offset":3048}}},{"type":"text","value":"\n","position":{"start":{"line":91,"column":5,"offset":3048},"end":{"line":92,"column":1,"offset":3049}}},{"type":"raw","value":"<br>","position":{"start":{"line":92,"column":1,"offset":3049},"end":{"line":92,"column":5,"offset":3053}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":92,"column":5,"offset":3053},"end":{"line":93,"column":21,"offset":3074}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":93,"column":21,"offset":3074},"end":{"line":93,"column":25,"offset":3078}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":93,"column":25,"offset":3078},"end":{"line":94,"column":1,"offset":3132}}},{"type":"raw","value":"<br>","position":{"start":{"line":94,"column":1,"offset":3132},"end":{"line":94,"column":5,"offset":3136}}},{"type":"text","value":"\n","position":{"start":{"line":94,"column":5,"offset":3136},"end":{"line":95,"column":1,"offset":3137}}},{"type":"raw","value":"<br>","position":{"start":{"line":95,"column":1,"offset":3137},"end":{"line":95,"column":5,"offset":3141}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":95,"column":5,"offset":3141},"end":{"line":96,"column":21,"offset":3162}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":96,"column":21,"offset":3162},"end":{"line":96,"column":25,"offset":3166}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":96,"column":25,"offset":3166},"end":{"line":97,"column":1,"offset":3221}}},{"type":"raw","value":"<br>","position":{"start":{"line":97,"column":1,"offset":3221},"end":{"line":97,"column":5,"offset":3225}}},{"type":"text","value":"\n","position":{"start":{"line":97,"column":5,"offset":3225},"end":{"line":98,"column":1,"offset":3226}}},{"type":"raw","value":"<br>","position":{"start":{"line":98,"column":1,"offset":3226},"end":{"line":98,"column":5,"offset":3230}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":98,"column":5,"offset":3230},"end":{"line":99,"column":58,"offset":3288}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":99,"column":58,"offset":3288},"end":{"line":99,"column":61,"offset":3291}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":99,"column":61,"offset":3291},"end":{"line":99,"column":145,"offset":3375}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":99,"column":145,"offset":3375},"end":{"line":99,"column":153,"offset":3383}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":99,"column":153,"offset":3383},"end":{"line":99,"column":178,"offset":3408}}}],"position":{"start":{"line":87,"column":1,"offset":2849},"end":{"line":99,"column":178,"offset":3408}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":101,"column":7,"offset":3416},"end":{"line":101,"column":10,"offset":3419}}}],"position":{"start":{"line":101,"column":1,"offset":3410},"end":{"line":101,"column":10,"offset":3419}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":103,"column":8,"offset":3428},"end":{"line":103,"column":17,"offset":3437}}}],"position":{"start":{"line":103,"column":1,"offset":3421},"end":{"line":103,"column":17,"offset":3437}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":104,"column":1,"offset":3438},"end":{"line":115,"column":4,"offset":3637}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":116,"column":1,"offset":3638},"end":{"line":116,"column":5,"offset":3642}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":118,"column":1,"offset":3644},"end":{"line":119,"column":1,"offset":3860}}},{"type":"raw","value":"<br>","position":{"start":{"line":119,"column":1,"offset":3860},"end":{"line":119,"column":5,"offset":3864}}},{"type":"text","value":"\n","position":{"start":{"line":119,"column":5,"offset":3864},"end":{"line":120,"column":1,"offset":3865}}},{"type":"raw","value":"<br>","position":{"start":{"line":120,"column":1,"offset":3865},"end":{"line":120,"column":5,"offset":3869}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":120,"column":5,"offset":3869},"end":{"line":121,"column":72,"offset":3941}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":121,"column":72,"offset":3941},"end":{"line":121,"column":81,"offset":3950}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":121,"column":81,"offset":3950},"end":{"line":122,"column":1,"offset":3969}}},{"type":"raw","value":"<br>","position":{"start":{"line":122,"column":1,"offset":3969},"end":{"line":122,"column":5,"offset":3973}}},{"type":"text","value":"\n","position":{"start":{"line":122,"column":5,"offset":3973},"end":{"line":123,"column":1,"offset":3974}}},{"type":"raw","value":"<br>","position":{"start":{"line":123,"column":1,"offset":3974},"end":{"line":123,"column":5,"offset":3978}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":123,"column":5,"offset":3978},"end":{"line":124,"column":10,"offset":3988}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":124,"column":10,"offset":3988},"end":{"line":124,"column":16,"offset":3994}}},{"type":"text","value":" gets called with ","position":{"start":{"line":124,"column":16,"offset":3994},"end":{"line":124,"column":34,"offset":4012}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":124,"column":34,"offset":4012},"end":{"line":124,"column":42,"offset":4020}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":124,"column":42,"offset":4020},"end":{"line":125,"column":24,"offset":4045}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":125,"column":24,"offset":4045},"end":{"line":125,"column":33,"offset":4054}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":125,"column":33,"offset":4054},"end":{"line":125,"column":107,"offset":4128}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":125,"column":107,"offset":4128},"end":{"line":125,"column":116,"offset":4137}}},{"type":"text","value":" is false because ","position":{"start":{"line":125,"column":116,"offset":4137},"end":{"line":125,"column":134,"offset":4155}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":125,"column":134,"offset":4155},"end":{"line":125,"column":137,"offset":4158}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":125,"column":137,"offset":4158},"end":{"line":125,"column":161,"offset":4182}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":125,"column":161,"offset":4182},"end":{"line":125,"column":167,"offset":4188}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":125,"column":167,"offset":4188},"end":{"line":125,"column":192,"offset":4213}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":125,"column":192,"offset":4213},"end":{"line":125,"column":200,"offset":4221}}},{"type":"text","value":". This is because ","position":{"start":{"line":125,"column":200,"offset":4221},"end":{"line":125,"column":218,"offset":4239}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":125,"column":218,"offset":4239},"end":{"line":125,"column":224,"offset":4245}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":125,"column":224,"offset":4245},"end":{"line":125,"column":245,"offset":4266}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":125,"column":245,"offset":4266},"end":{"line":125,"column":252,"offset":4273}}},{"type":"text","value":" and ","position":{"start":{"line":125,"column":252,"offset":4273},"end":{"line":125,"column":257,"offset":4278}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":125,"column":257,"offset":4278},"end":{"line":125,"column":260,"offset":4281}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":125,"column":260,"offset":4281},"end":{"line":125,"column":285,"offset":4306}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":125,"column":285,"offset":4306},"end":{"line":125,"column":291,"offset":4312}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":125,"column":291,"offset":4312},"end":{"line":126,"column":96,"offset":4438}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":126,"column":96,"offset":4438},"end":{"line":126,"column":111,"offset":4453}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":126,"column":111,"offset":4453},"end":{"line":126,"column":182,"offset":4524}}}],"position":{"start":{"line":118,"column":1,"offset":3644},"end":{"line":126,"column":182,"offset":4524}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":128,"column":8,"offset":4533},"end":{"line":128,"column":19,"offset":4544}}}],"position":{"start":{"line":128,"column":1,"offset":4526},"end":{"line":128,"column":19,"offset":4544}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":129,"column":1,"offset":4545},"end":{"line":129,"column":14,"offset":4558}}}],"position":{"start":{"line":129,"column":1,"offset":4545},"end":{"line":129,"column":14,"offset":4558}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":130,"column":1,"offset":4559},"end":{"line":145,"column":4,"offset":4974}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":146,"column":1,"offset":4975},"end":{"line":146,"column":5,"offset":4979}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":148,"column":1,"offset":4981},"end":{"line":148,"column":141,"offset":5121}}}],"position":{"start":{"line":148,"column":1,"offset":4981},"end":{"line":148,"column":141,"offset":5121}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":150,"column":8,"offset":5130},"end":{"line":150,"column":30,"offset":5152}}}],"position":{"start":{"line":150,"column":1,"offset":5123},"end":{"line":150,"column":30,"offset":5152}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":151,"column":1,"offset":5153},"end":{"line":151,"column":199,"offset":5351}}}],"position":{"start":{"line":151,"column":1,"offset":5153},"end":{"line":151,"column":199,"offset":5351}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":153,"column":8,"offset":5360},"end":{"line":153,"column":30,"offset":5382}}}],"position":{"start":{"line":153,"column":1,"offset":5353},"end":{"line":153,"column":30,"offset":5382}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":155,"column":1,"offset":5384},"end":{"line":156,"column":1,"offset":5459}}},{"type":"raw","value":"<br>","position":{"start":{"line":156,"column":1,"offset":5459},"end":{"line":156,"column":5,"offset":5463}}},{"type":"text","value":"\n","position":{"start":{"line":156,"column":5,"offset":5463},"end":{"line":157,"column":1,"offset":5464}}},{"type":"raw","value":"<br>","position":{"start":{"line":157,"column":1,"offset":5464},"end":{"line":157,"column":5,"offset":5468}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":157,"column":5,"offset":5468},"end":{"line":159,"column":1,"offset":5530}}},{"type":"raw","value":"<br>","position":{"start":{"line":159,"column":1,"offset":5530},"end":{"line":159,"column":5,"offset":5534}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":159,"column":5,"offset":5534},"end":{"line":160,"column":1,"offset":5537}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":160,"column":1,"offset":5537},"end":{"line":160,"column":11,"offset":5547}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":160,"column":11,"offset":5547},"end":{"line":160,"column":19,"offset":5555}}},{"type":"text","value":" and ","position":{"start":{"line":160,"column":19,"offset":5555},"end":{"line":160,"column":24,"offset":5560}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":160,"column":24,"offset":5560},"end":{"line":160,"column":34,"offset":5570}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":160,"column":34,"offset":5570},"end":{"line":161,"column":1,"offset":5619}}},{"type":"raw","value":"<br>","position":{"start":{"line":161,"column":1,"offset":5619},"end":{"line":161,"column":5,"offset":5623}}}],"position":{"start":{"line":155,"column":1,"offset":5384},"end":{"line":161,"column":5,"offset":5623}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":163,"column":8,"offset":5632},"end":{"line":163,"column":12,"offset":5636}}}],"position":{"start":{"line":163,"column":1,"offset":5625},"end":{"line":163,"column":12,"offset":5636}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":164,"column":1,"offset":5637},"end":{"line":169,"column":4,"offset":5748}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":170,"column":1,"offset":5749},"end":{"line":171,"column":5,"offset":5758}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":173,"column":1,"offset":5760},"end":{"line":173,"column":7,"offset":5766}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":173,"column":7,"offset":5766},"end":{"line":175,"column":1,"offset":5848}}},{"type":"raw","value":"<br>","position":{"start":{"line":175,"column":1,"offset":5848},"end":{"line":175,"column":5,"offset":5852}}},{"type":"text","value":"\n","position":{"start":{"line":175,"column":5,"offset":5852},"end":{"line":176,"column":1,"offset":5853}}},{"type":"raw","value":"<br>","position":{"start":{"line":176,"column":1,"offset":5853},"end":{"line":176,"column":5,"offset":5857}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":176,"column":5,"offset":5857},"end":{"line":177,"column":10,"offset":5867}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":177,"column":10,"offset":5867},"end":{"line":177,"column":14,"offset":5871}}},{"type":"text","value":". Since ","position":{"start":{"line":177,"column":14,"offset":5871},"end":{"line":177,"column":22,"offset":5879}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":177,"column":22,"offset":5879},"end":{"line":177,"column":30,"offset":5887}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":177,"column":30,"offset":5887},"end":{"line":177,"column":50,"offset":5907}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":177,"column":50,"offset":5907},"end":{"line":177,"column":53,"offset":5910}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":177,"column":53,"offset":5910},"end":{"line":177,"column":90,"offset":5947}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":177,"column":90,"offset":5947},"end":{"line":177,"column":96,"offset":5953}}},{"type":"text","value":".\n","position":{"start":{"line":177,"column":96,"offset":5953},"end":{"line":178,"column":1,"offset":5956}}},{"type":"raw","value":"<br>","position":{"start":{"line":178,"column":1,"offset":5956},"end":{"line":178,"column":5,"offset":5960}}},{"type":"text","value":"\n","position":{"start":{"line":178,"column":5,"offset":5960},"end":{"line":179,"column":1,"offset":5961}}},{"type":"raw","value":"<br>","position":{"start":{"line":179,"column":1,"offset":5961},"end":{"line":179,"column":5,"offset":5965}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":179,"column":5,"offset":5965},"end":{"line":180,"column":14,"offset":5979}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":180,"column":14,"offset":5979},"end":{"line":180,"column":18,"offset":5983}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":180,"column":18,"offset":5983},"end":{"line":180,"column":90,"offset":6055}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":180,"column":90,"offset":6055},"end":{"line":180,"column":94,"offset":6059}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":180,"column":94,"offset":6059},"end":{"line":180,"column":125,"offset":6090}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":180,"column":125,"offset":6090},"end":{"line":180,"column":131,"offset":6096}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":180,"column":131,"offset":6096},"end":{"line":181,"column":1,"offset":6111}}},{"type":"raw","value":"<br>","position":{"start":{"line":181,"column":1,"offset":6111},"end":{"line":181,"column":5,"offset":6115}}},{"type":"text","value":"\n","position":{"start":{"line":181,"column":5,"offset":6115},"end":{"line":182,"column":1,"offset":6116}}},{"type":"raw","value":"<br>","position":{"start":{"line":182,"column":1,"offset":6116},"end":{"line":182,"column":5,"offset":6120}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":182,"column":5,"offset":6120},"end":{"line":183,"column":14,"offset":6134}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":183,"column":14,"offset":6134},"end":{"line":183,"column":18,"offset":6138}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":183,"column":18,"offset":6138},"end":{"line":183,"column":37,"offset":6157}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":183,"column":37,"offset":6157},"end":{"line":183,"column":40,"offset":6160}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":183,"column":40,"offset":6160},"end":{"line":183,"column":77,"offset":6197}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":183,"column":77,"offset":6197},"end":{"line":183,"column":81,"offset":6201}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":183,"column":81,"offset":6201},"end":{"line":183,"column":99,"offset":6219}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":183,"column":99,"offset":6219},"end":{"line":183,"column":102,"offset":6222}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":183,"column":102,"offset":6222},"end":{"line":183,"column":133,"offset":6253}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":183,"column":133,"offset":6253},"end":{"line":183,"column":139,"offset":6259}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":183,"column":139,"offset":6259},"end":{"line":183,"column":167,"offset":6287}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":183,"column":167,"offset":6287},"end":{"line":183,"column":171,"offset":6291}}},{"type":"text","value":".\n","position":{"start":{"line":183,"column":171,"offset":6291},"end":{"line":184,"column":1,"offset":6293}}},{"type":"raw","value":"<br>","position":{"start":{"line":184,"column":1,"offset":6293},"end":{"line":184,"column":5,"offset":6297}}},{"type":"text","value":"\n","position":{"start":{"line":184,"column":5,"offset":6297},"end":{"line":185,"column":1,"offset":6298}}},{"type":"raw","value":"<br>","position":{"start":{"line":185,"column":1,"offset":6298},"end":{"line":185,"column":5,"offset":6302}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":185,"column":5,"offset":6302},"end":{"line":187,"column":1,"offset":6322}}},{"type":"raw","value":"<br>","position":{"start":{"line":187,"column":1,"offset":6322},"end":{"line":187,"column":5,"offset":6326}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":187,"column":5,"offset":6326},"end":{"line":188,"column":6,"offset":6332}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":188,"column":6,"offset":6332},"end":{"line":188,"column":12,"offset":6338}}},{"type":"text","value":" does not have an ","position":{"start":{"line":188,"column":12,"offset":6338},"end":{"line":188,"column":30,"offset":6356}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":188,"column":30,"offset":6356},"end":{"line":188,"column":36,"offset":6362}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":188,"column":36,"offset":6362},"end":{"line":188,"column":62,"offset":6388}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":188,"column":62,"offset":6388},"end":{"line":188,"column":75,"offset":6401}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":188,"column":75,"offset":6401},"end":{"line":188,"column":159,"offset":6485}}}],"position":{"start":{"line":173,"column":1,"offset":5760},"end":{"line":188,"column":159,"offset":6485}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":190,"column":8,"offset":6494},"end":{"line":190,"column":41,"offset":6527}}}],"position":{"start":{"line":190,"column":1,"offset":6487},"end":{"line":190,"column":41,"offset":6527}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":191,"column":1,"offset":6528},"end":{"line":196,"column":4,"offset":6603}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":197,"column":1,"offset":6604},"end":{"line":198,"column":1,"offset":6623}}},{"type":"raw","value":"<br>","position":{"start":{"line":198,"column":1,"offset":6623},"end":{"line":198,"column":5,"offset":6627}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":198,"column":5,"offset":6627},"end":{"line":200,"column":5,"offset":6765}}},{"type":"raw","value":"<br>","position":{"start":{"line":200,"column":5,"offset":6765},"end":{"line":200,"column":9,"offset":6769}}},{"type":"text","value":"\n","position":{"start":{"line":200,"column":9,"offset":6769},"end":{"line":201,"column":5,"offset":6774}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":201,"column":5,"offset":6774},"end":{"line":201,"column":27,"offset":6796}}},{"type":"text","value":"\n","position":{"start":{"line":201,"column":27,"offset":6796},"end":{"line":202,"column":5,"offset":6801}}},{"type":"raw","value":"<br>","position":{"start":{"line":202,"column":5,"offset":6801},"end":{"line":202,"column":9,"offset":6805}}},{"type":"text","value":"\n","position":{"start":{"line":202,"column":9,"offset":6805},"end":{"line":203,"column":5,"offset":6810}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":203,"column":5,"offset":6810},"end":{"line":203,"column":12,"offset":6817}}},{"type":"text","value":" and ","position":{"start":{"line":203,"column":12,"offset":6817},"end":{"line":203,"column":17,"offset":6822}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":203,"column":17,"offset":6822},"end":{"line":203,"column":25,"offset":6830}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":203,"column":25,"offset":6830},"end":{"line":203,"column":63,"offset":6868}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":203,"column":63,"offset":6868},"end":{"line":203,"column":66,"offset":6871}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":203,"column":66,"offset":6871},"end":{"line":203,"column":86,"offset":6891}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":203,"column":86,"offset":6891},"end":{"line":203,"column":89,"offset":6894}}},{"type":"text","value":" will be called with ","position":{"start":{"line":203,"column":89,"offset":6894},"end":{"line":203,"column":110,"offset":6915}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":203,"column":110,"offset":6915},"end":{"line":203,"column":119,"offset":6924}}},{"type":"text","value":".\n","position":{"start":{"line":203,"column":119,"offset":6924},"end":{"line":204,"column":1,"offset":6926}}},{"type":"raw","value":"<br>","position":{"start":{"line":204,"column":1,"offset":6926},"end":{"line":204,"column":5,"offset":6930}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":204,"column":5,"offset":6930},"end":{"line":206,"column":1,"offset":6946}}},{"type":"raw","value":"<br>","position":{"start":{"line":206,"column":1,"offset":6946},"end":{"line":206,"column":5,"offset":6950}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":206,"column":5,"offset":6950},"end":{"line":208,"column":5,"offset":7057}}},{"type":"raw","value":"<br>","position":{"start":{"line":208,"column":5,"offset":7057},"end":{"line":208,"column":9,"offset":7061}}},{"type":"text","value":"\n","position":{"start":{"line":208,"column":9,"offset":7061},"end":{"line":209,"column":1,"offset":7062}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":209,"column":1,"offset":7062},"end":{"line":209,"column":23,"offset":7084}}},{"type":"text","value":" turns into ","position":{"start":{"line":209,"column":23,"offset":7084},"end":{"line":209,"column":35,"offset":7096}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":209,"column":35,"offset":7096},"end":{"line":209,"column":61,"offset":7122}}},{"type":"text","value":"\n","position":{"start":{"line":209,"column":61,"offset":7122},"end":{"line":210,"column":1,"offset":7123}}},{"type":"raw","value":"<br>","position":{"start":{"line":210,"column":1,"offset":7123},"end":{"line":210,"column":5,"offset":7127}}},{"type":"text","value":"\nNow ","position":{"start":{"line":210,"column":5,"offset":7127},"end":{"line":211,"column":5,"offset":7132}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":211,"column":5,"offset":7132},"end":{"line":211,"column":8,"offset":7135}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":211,"column":8,"offset":7135},"end":{"line":211,"column":58,"offset":7185}}}],"position":{"start":{"line":197,"column":1,"offset":6604},"end":{"line":211,"column":58,"offset":7185}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":213,"column":1,"offset":7187},"end":{"line":214,"column":1,"offset":7205}}},{"type":"raw","value":"<br>","position":{"start":{"line":214,"column":1,"offset":7205},"end":{"line":214,"column":5,"offset":7209}}}],"position":{"start":{"line":213,"column":1,"offset":7187},"end":{"line":214,"column":5,"offset":7209}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":215,"column":1,"offset":7210},"end":{"line":217,"column":4,"offset":7240}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":218,"column":1,"offset":7241},"end":{"line":218,"column":13,"offset":7253}}}],"position":{"start":{"line":218,"column":1,"offset":7241},"end":{"line":218,"column":13,"offset":7253}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":219,"column":1,"offset":7254},"end":{"line":225,"column":4,"offset":7333}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":226,"column":1,"offset":7334},"end":{"line":226,"column":8,"offset":7341}}}],"position":{"start":{"line":226,"column":1,"offset":7334},"end":{"line":226,"column":8,"offset":7341}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":227,"column":1,"offset":7342},"end":{"line":234,"column":4,"offset":7466}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":235,"column":1,"offset":7467},"end":{"line":236,"column":5,"offset":7476}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":238,"column":1,"offset":7478},"end":{"line":238,"column":11,"offset":7488}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":238,"column":11,"offset":7488},"end":{"line":238,"column":24,"offset":7501}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":238,"column":24,"offset":7501},"end":{"line":238,"column":107,"offset":7584}}}],"position":{"start":{"line":238,"column":1,"offset":7478},"end":{"line":238,"column":107,"offset":7584}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":240,"column":7,"offset":7592},"end":{"line":240,"column":10,"offset":7595}}}],"position":{"start":{"line":240,"column":1,"offset":7586},"end":{"line":240,"column":10,"offset":7595}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":241,"column":7,"offset":7602},"end":{"line":241,"column":10,"offset":7605}}}],"position":{"start":{"line":241,"column":1,"offset":7596},"end":{"line":241,"column":10,"offset":7605}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":243,"column":6,"offset":7612},"end":{"line":243,"column":10,"offset":7616}}}],"position":{"start":{"line":243,"column":1,"offset":7607},"end":{"line":243,"column":10,"offset":7616}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":244,"column":7,"offset":7623},"end":{"line":244,"column":13,"offset":7629}}}],"position":{"start":{"line":244,"column":1,"offset":7617},"end":{"line":244,"column":13,"offset":7629}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":245,"column":1,"offset":7630},"end":{"line":245,"column":49,"offset":7678}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":245,"column":49,"offset":7678},"end":{"line":245,"column":57,"offset":7686}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":245,"column":57,"offset":7686},"end":{"line":245,"column":133,"offset":7762}}}],"position":{"start":{"line":245,"column":1,"offset":7630},"end":{"line":245,"column":133,"offset":7762}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":246,"column":1,"offset":7763},"end":{"line":256,"column":4,"offset":7958}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":257,"column":1,"offset":7959},"end":{"line":257,"column":5,"offset":7963}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":260,"column":1,"offset":7966},"end":{"line":261,"column":1,"offset":8048}}},{"type":"raw","value":"<br>","position":{"start":{"line":261,"column":1,"offset":8048},"end":{"line":261,"column":5,"offset":8052}}},{"type":"text","value":"\n","position":{"start":{"line":261,"column":5,"offset":8052},"end":{"line":262,"column":1,"offset":8053}}},{"type":"raw","value":"<br>","position":{"start":{"line":262,"column":1,"offset":8053},"end":{"line":262,"column":5,"offset":8057}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":262,"column":5,"offset":8057},"end":{"line":263,"column":26,"offset":8083}}}],"position":{"start":{"line":260,"column":1,"offset":7966},"end":{"line":263,"column":26,"offset":8083}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":264,"column":1,"offset":8084},"end":{"line":269,"column":4,"offset":8212}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":270,"column":1,"offset":8213},"end":{"line":270,"column":14,"offset":8226}}}],"position":{"start":{"line":270,"column":1,"offset":8213},"end":{"line":270,"column":14,"offset":8226}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":272,"column":1,"offset":8228},"end":{"line":285,"column":4,"offset":8510}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":287,"column":1,"offset":8512},"end":{"line":288,"column":5,"offset":8521}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":291,"column":7,"offset":8530},"end":{"line":291,"column":13,"offset":8536}}}],"position":{"start":{"line":291,"column":1,"offset":8524},"end":{"line":291,"column":13,"offset":8536}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":291,"column":13,"offset":8536}}}}