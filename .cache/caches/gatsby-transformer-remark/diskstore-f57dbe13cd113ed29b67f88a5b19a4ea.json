{"expireTime":9007200842249848000,"key":"transformer-remark-markdown-ast-75cf4b688fb90b00f36dc7014611143d-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632},"indent":[]}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities. \n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705},"indent":[]}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791},"indent":[]}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833},"indent":[]}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865},"indent":[]}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884},"indent":[]}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916},"indent":[]}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052},"indent":[]}},{"type":"text","value":"\nEnvironment: The key-object pairs the interpreter keeps in memory.","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":33,"column":67,"offset":1119},"indent":[1]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":33,"column":67,"offset":1119},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":34,"column":7,"offset":1126},"end":{"line":34,"column":10,"offset":1129},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1120},"end":{"line":34,"column":10,"offset":1129},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":35,"column":7,"offset":1136},"end":{"line":35,"column":10,"offset":1139},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1130},"end":{"line":35,"column":10,"offset":1139},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":37,"column":6,"offset":1146},"end":{"line":37,"column":14,"offset":1154},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1141},"end":{"line":37,"column":14,"offset":1154},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":38,"column":7,"offset":1161},"end":{"line":38,"column":10,"offset":1164},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1155},"end":{"line":38,"column":10,"offset":1164},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":40,"column":8,"offset":1173},"end":{"line":40,"column":30,"offset":1195},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1166},"end":{"line":40,"column":30,"offset":1195},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":42,"column":1,"offset":1197},"end":{"line":43,"column":1,"offset":1341},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":43,"column":1,"offset":1341},"end":{"line":43,"column":5,"offset":1345},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":43,"column":5,"offset":1345},"end":{"line":43,"column":16,"offset":1356},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":43,"column":16,"offset":1356},"end":{"line":43,"column":20,"offset":1360},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":43,"column":20,"offset":1360},"end":{"line":45,"column":1,"offset":1504},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":45,"column":1,"offset":1504},"end":{"line":45,"column":5,"offset":1508},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":45,"column":5,"offset":1508},"end":{"line":45,"column":16,"offset":1519},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":45,"column":16,"offset":1519},"end":{"line":45,"column":20,"offset":1523},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":45,"column":20,"offset":1523},"end":{"line":46,"column":45,"offset":1568},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":46,"column":45,"offset":1568},"end":{"line":46,"column":49,"offset":1572},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":46,"column":49,"offset":1572},"end":{"line":46,"column":65,"offset":1588},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":46,"column":65,"offset":1588},"end":{"line":46,"column":69,"offset":1592},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":46,"column":69,"offset":1592},"end":{"line":48,"column":1,"offset":1635},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1635},"end":{"line":48,"column":5,"offset":1639},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":48,"column":5,"offset":1639},"end":{"line":48,"column":22,"offset":1656},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":48,"column":22,"offset":1656},"end":{"line":48,"column":26,"offset":1660},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":48,"column":26,"offset":1660},"end":{"line":49,"column":1,"offset":1661},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":49,"column":1,"offset":1661},"end":{"line":49,"column":5,"offset":1665},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":49,"column":5,"offset":1665},"end":{"line":51,"column":1,"offset":1783},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":51,"column":1,"offset":1783},"end":{"line":51,"column":5,"offset":1787},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":51,"column":5,"offset":1787},"end":{"line":53,"column":1,"offset":1908},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":53,"column":1,"offset":1908},"end":{"line":53,"column":12,"offset":1919},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":53,"column":12,"offset":1919},"end":{"line":53,"column":68,"offset":1975},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":53,"column":68,"offset":1975},"end":{"line":53,"column":79,"offset":1986},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":53,"column":79,"offset":1986},"end":{"line":53,"column":106,"offset":2013},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":53,"column":106,"offset":2013},"end":{"line":53,"column":109,"offset":2016},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":53,"column":109,"offset":2016},"end":{"line":53,"column":189,"offset":2096},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":53,"column":189,"offset":2096},"end":{"line":53,"column":192,"offset":2099},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":53,"column":192,"offset":2099},"end":{"line":53,"column":202,"offset":2109},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1197},"end":{"line":53,"column":202,"offset":2109},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":55,"column":8,"offset":2118},"end":{"line":55,"column":14,"offset":2124},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":2111},"end":{"line":55,"column":14,"offset":2124},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":56,"column":1,"offset":2125},"end":{"line":56,"column":9,"offset":2133},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":56,"column":9,"offset":2133},"end":{"line":56,"column":73,"offset":2197},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":2125},"end":{"line":56,"column":73,"offset":2197},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":57,"column":1,"offset":2198},"end":{"line":60,"column":4,"offset":2237},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":61,"column":1,"offset":2238},"end":{"line":61,"column":5,"offset":2242},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":63,"column":1,"offset":2244},"end":{"line":63,"column":72,"offset":2315},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":63,"column":72,"offset":2315},"end":{"line":63,"column":80,"offset":2323},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":63,"column":80,"offset":2323},"end":{"line":64,"column":1,"offset":2347},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":64,"column":1,"offset":2347},"end":{"line":64,"column":5,"offset":2351},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":64,"column":5,"offset":2351},"end":{"line":65,"column":1,"offset":2352},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":65,"column":1,"offset":2352},"end":{"line":65,"column":5,"offset":2356},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":65,"column":5,"offset":2356},"end":{"line":66,"column":184,"offset":2540},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":66,"column":184,"offset":2540},"end":{"line":66,"column":187,"offset":2543},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":66,"column":187,"offset":2543},"end":{"line":67,"column":1,"offset":2546},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":67,"column":1,"offset":2546},"end":{"line":67,"column":5,"offset":2550},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":67,"column":5,"offset":2550},"end":{"line":68,"column":1,"offset":2551},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":68,"column":1,"offset":2551},"end":{"line":68,"column":5,"offset":2555},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":68,"column":5,"offset":2555},"end":{"line":69,"column":27,"offset":2582},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":69,"column":27,"offset":2582},"end":{"line":69,"column":35,"offset":2590},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":69,"column":35,"offset":2590},"end":{"line":69,"column":86,"offset":2641},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":69,"column":86,"offset":2641},"end":{"line":69,"column":95,"offset":2650},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":69,"column":95,"offset":2650},"end":{"line":69,"column":97,"offset":2652},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":2244},"end":{"line":69,"column":97,"offset":2652},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":71,"column":1,"offset":2654},"end":{"line":71,"column":6,"offset":2659},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":73,"column":1,"offset":2661},"end":{"line":74,"column":1,"offset":2705},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":74,"column":1,"offset":2705},"end":{"line":74,"column":5,"offset":2709},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":74,"column":5,"offset":2709},"end":{"line":75,"column":1,"offset":2710},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":75,"column":1,"offset":2710},"end":{"line":75,"column":22,"offset":2731},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":75,"column":22,"offset":2731},"end":{"line":76,"column":1,"offset":2732},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":76,"column":1,"offset":2732},"end":{"line":76,"column":5,"offset":2736},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":2661},"end":{"line":76,"column":5,"offset":2736},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":78,"column":1,"offset":2738},"end":{"line":78,"column":152,"offset":2889},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":2738},"end":{"line":78,"column":152,"offset":2889},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":80,"column":8,"offset":2898},"end":{"line":80,"column":20,"offset":2910},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":2891},"end":{"line":80,"column":20,"offset":2910},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":82,"column":1,"offset":2912},"end":{"line":82,"column":56,"offset":2967},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":2912},"end":{"line":82,"column":56,"offset":2967},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":83,"column":1,"offset":2968},"end":{"line":88,"column":4,"offset":3059},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":89,"column":1,"offset":3060},"end":{"line":89,"column":5,"offset":3064},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":91,"column":1,"offset":3066},"end":{"line":91,"column":37,"offset":3102},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":91,"column":37,"offset":3102},"end":{"line":91,"column":41,"offset":3106},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":91,"column":41,"offset":3106},"end":{"line":92,"column":1,"offset":3123},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":92,"column":1,"offset":3123},"end":{"line":92,"column":5,"offset":3127},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":92,"column":5,"offset":3127},"end":{"line":93,"column":1,"offset":3128},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":93,"column":1,"offset":3128},"end":{"line":93,"column":5,"offset":3132},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":93,"column":5,"offset":3132},"end":{"line":94,"column":66,"offset":3198},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":94,"column":66,"offset":3198},"end":{"line":94,"column":89,"offset":3221},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":94,"column":89,"offset":3221},"end":{"line":95,"column":1,"offset":3261},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":95,"column":1,"offset":3261},"end":{"line":95,"column":5,"offset":3265},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":95,"column":5,"offset":3265},"end":{"line":96,"column":1,"offset":3266},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":96,"column":1,"offset":3266},"end":{"line":96,"column":5,"offset":3270},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":96,"column":5,"offset":3270},"end":{"line":97,"column":21,"offset":3291},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":97,"column":21,"offset":3291},"end":{"line":97,"column":25,"offset":3295},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":97,"column":25,"offset":3295},"end":{"line":98,"column":1,"offset":3349},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":98,"column":1,"offset":3349},"end":{"line":98,"column":5,"offset":3353},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":98,"column":5,"offset":3353},"end":{"line":99,"column":1,"offset":3354},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":99,"column":1,"offset":3354},"end":{"line":99,"column":5,"offset":3358},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":99,"column":5,"offset":3358},"end":{"line":100,"column":21,"offset":3379},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":100,"column":21,"offset":3379},"end":{"line":100,"column":25,"offset":3383},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":100,"column":25,"offset":3383},"end":{"line":101,"column":1,"offset":3438},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":101,"column":1,"offset":3438},"end":{"line":101,"column":5,"offset":3442},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":101,"column":5,"offset":3442},"end":{"line":102,"column":1,"offset":3443},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":102,"column":1,"offset":3443},"end":{"line":102,"column":5,"offset":3447},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":102,"column":5,"offset":3447},"end":{"line":103,"column":58,"offset":3505},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":103,"column":58,"offset":3505},"end":{"line":103,"column":61,"offset":3508},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":103,"column":61,"offset":3508},"end":{"line":103,"column":145,"offset":3592},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":103,"column":145,"offset":3592},"end":{"line":103,"column":153,"offset":3600},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":103,"column":153,"offset":3600},"end":{"line":103,"column":178,"offset":3625},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":3066},"end":{"line":103,"column":178,"offset":3625},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":105,"column":7,"offset":3633},"end":{"line":105,"column":10,"offset":3636},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":3627},"end":{"line":105,"column":10,"offset":3636},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":107,"column":8,"offset":3645},"end":{"line":107,"column":17,"offset":3654},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":3638},"end":{"line":107,"column":17,"offset":3654},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":108,"column":1,"offset":3655},"end":{"line":119,"column":4,"offset":3854},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":120,"column":1,"offset":3855},"end":{"line":120,"column":5,"offset":3859},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":122,"column":1,"offset":3861},"end":{"line":123,"column":1,"offset":4077},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":123,"column":1,"offset":4077},"end":{"line":123,"column":5,"offset":4081},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":123,"column":5,"offset":4081},"end":{"line":124,"column":1,"offset":4082},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":124,"column":1,"offset":4082},"end":{"line":124,"column":5,"offset":4086},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":124,"column":5,"offset":4086},"end":{"line":125,"column":72,"offset":4158},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":125,"column":72,"offset":4158},"end":{"line":125,"column":81,"offset":4167},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":125,"column":81,"offset":4167},"end":{"line":126,"column":1,"offset":4186},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":126,"column":1,"offset":4186},"end":{"line":126,"column":5,"offset":4190},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":126,"column":5,"offset":4190},"end":{"line":127,"column":1,"offset":4191},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":127,"column":1,"offset":4191},"end":{"line":127,"column":5,"offset":4195},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":127,"column":5,"offset":4195},"end":{"line":128,"column":10,"offset":4205},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":128,"column":10,"offset":4205},"end":{"line":128,"column":16,"offset":4211},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":128,"column":16,"offset":4211},"end":{"line":128,"column":34,"offset":4229},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":128,"column":34,"offset":4229},"end":{"line":128,"column":42,"offset":4237},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":128,"column":42,"offset":4237},"end":{"line":129,"column":24,"offset":4262},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":129,"column":24,"offset":4262},"end":{"line":129,"column":33,"offset":4271},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":129,"column":33,"offset":4271},"end":{"line":129,"column":107,"offset":4345},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":129,"column":107,"offset":4345},"end":{"line":129,"column":116,"offset":4354},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":129,"column":116,"offset":4354},"end":{"line":129,"column":134,"offset":4372},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":129,"column":134,"offset":4372},"end":{"line":129,"column":137,"offset":4375},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":129,"column":137,"offset":4375},"end":{"line":129,"column":161,"offset":4399},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":129,"column":161,"offset":4399},"end":{"line":129,"column":167,"offset":4405},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":129,"column":167,"offset":4405},"end":{"line":129,"column":192,"offset":4430},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":129,"column":192,"offset":4430},"end":{"line":129,"column":200,"offset":4438},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":129,"column":200,"offset":4438},"end":{"line":129,"column":218,"offset":4456},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":129,"column":218,"offset":4456},"end":{"line":129,"column":224,"offset":4462},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":129,"column":224,"offset":4462},"end":{"line":129,"column":245,"offset":4483},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":129,"column":245,"offset":4483},"end":{"line":129,"column":252,"offset":4490},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":129,"column":252,"offset":4490},"end":{"line":129,"column":257,"offset":4495},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":129,"column":257,"offset":4495},"end":{"line":129,"column":260,"offset":4498},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":129,"column":260,"offset":4498},"end":{"line":129,"column":285,"offset":4523},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":129,"column":285,"offset":4523},"end":{"line":129,"column":291,"offset":4529},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":129,"column":291,"offset":4529},"end":{"line":130,"column":96,"offset":4655},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":130,"column":96,"offset":4655},"end":{"line":130,"column":111,"offset":4670},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":130,"column":111,"offset":4670},"end":{"line":130,"column":182,"offset":4741},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":3861},"end":{"line":130,"column":182,"offset":4741},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":132,"column":8,"offset":4750},"end":{"line":132,"column":19,"offset":4761},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":4743},"end":{"line":132,"column":19,"offset":4761},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":133,"column":1,"offset":4762},"end":{"line":133,"column":14,"offset":4775},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":4762},"end":{"line":133,"column":14,"offset":4775},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":134,"column":1,"offset":4776},"end":{"line":149,"column":4,"offset":5191},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":150,"column":1,"offset":5192},"end":{"line":150,"column":5,"offset":5196},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":152,"column":1,"offset":5198},"end":{"line":152,"column":141,"offset":5338},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":5198},"end":{"line":152,"column":141,"offset":5338},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":154,"column":8,"offset":5347},"end":{"line":154,"column":30,"offset":5369},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":5340},"end":{"line":154,"column":30,"offset":5369},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":155,"column":1,"offset":5370},"end":{"line":155,"column":199,"offset":5568},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":5370},"end":{"line":155,"column":199,"offset":5568},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":157,"column":8,"offset":5577},"end":{"line":157,"column":30,"offset":5599},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":5570},"end":{"line":157,"column":30,"offset":5599},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":159,"column":1,"offset":5601},"end":{"line":160,"column":1,"offset":5676},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":160,"column":1,"offset":5676},"end":{"line":160,"column":5,"offset":5680},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":160,"column":5,"offset":5680},"end":{"line":161,"column":1,"offset":5681},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":161,"column":1,"offset":5681},"end":{"line":161,"column":5,"offset":5685},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":161,"column":5,"offset":5685},"end":{"line":163,"column":1,"offset":5747},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":163,"column":1,"offset":5747},"end":{"line":163,"column":5,"offset":5751},"indent":[]}},{"type":"break","position":{"start":{"line":163,"column":5,"offset":5751},"end":{"line":164,"column":1,"offset":5754},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":164,"column":1,"offset":5754},"end":{"line":164,"column":11,"offset":5764},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":164,"column":11,"offset":5764},"end":{"line":164,"column":19,"offset":5772},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":164,"column":19,"offset":5772},"end":{"line":164,"column":24,"offset":5777},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":164,"column":24,"offset":5777},"end":{"line":164,"column":34,"offset":5787},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":164,"column":34,"offset":5787},"end":{"line":165,"column":1,"offset":5836},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":165,"column":1,"offset":5836},"end":{"line":165,"column":5,"offset":5840},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":5601},"end":{"line":165,"column":5,"offset":5840},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":167,"column":8,"offset":5849},"end":{"line":167,"column":12,"offset":5853},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":5842},"end":{"line":167,"column":12,"offset":5853},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":168,"column":1,"offset":5854},"end":{"line":173,"column":4,"offset":5965},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":174,"column":1,"offset":5966},"end":{"line":175,"column":5,"offset":5975},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":177,"column":1,"offset":5977},"end":{"line":177,"column":7,"offset":5983},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":177,"column":7,"offset":5983},"end":{"line":179,"column":1,"offset":6065},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":179,"column":1,"offset":6065},"end":{"line":179,"column":5,"offset":6069},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":179,"column":5,"offset":6069},"end":{"line":180,"column":1,"offset":6070},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":180,"column":1,"offset":6070},"end":{"line":180,"column":5,"offset":6074},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":180,"column":5,"offset":6074},"end":{"line":181,"column":10,"offset":6084},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":181,"column":10,"offset":6084},"end":{"line":181,"column":14,"offset":6088},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":181,"column":14,"offset":6088},"end":{"line":181,"column":22,"offset":6096},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":181,"column":22,"offset":6096},"end":{"line":181,"column":30,"offset":6104},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":181,"column":30,"offset":6104},"end":{"line":181,"column":50,"offset":6124},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":181,"column":50,"offset":6124},"end":{"line":181,"column":53,"offset":6127},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":181,"column":53,"offset":6127},"end":{"line":181,"column":90,"offset":6164},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":181,"column":90,"offset":6164},"end":{"line":181,"column":96,"offset":6170},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":181,"column":96,"offset":6170},"end":{"line":182,"column":1,"offset":6173},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":182,"column":1,"offset":6173},"end":{"line":182,"column":5,"offset":6177},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":182,"column":5,"offset":6177},"end":{"line":183,"column":1,"offset":6178},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":183,"column":1,"offset":6178},"end":{"line":183,"column":5,"offset":6182},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":183,"column":5,"offset":6182},"end":{"line":184,"column":14,"offset":6196},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":184,"column":14,"offset":6196},"end":{"line":184,"column":18,"offset":6200},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":184,"column":18,"offset":6200},"end":{"line":184,"column":90,"offset":6272},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":184,"column":90,"offset":6272},"end":{"line":184,"column":94,"offset":6276},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":184,"column":94,"offset":6276},"end":{"line":184,"column":125,"offset":6307},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":184,"column":125,"offset":6307},"end":{"line":184,"column":131,"offset":6313},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":184,"column":131,"offset":6313},"end":{"line":185,"column":1,"offset":6328},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":185,"column":1,"offset":6328},"end":{"line":185,"column":5,"offset":6332},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":185,"column":5,"offset":6332},"end":{"line":186,"column":1,"offset":6333},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":186,"column":1,"offset":6333},"end":{"line":186,"column":5,"offset":6337},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":186,"column":5,"offset":6337},"end":{"line":187,"column":14,"offset":6351},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":187,"column":14,"offset":6351},"end":{"line":187,"column":18,"offset":6355},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":187,"column":18,"offset":6355},"end":{"line":187,"column":37,"offset":6374},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":187,"column":37,"offset":6374},"end":{"line":187,"column":40,"offset":6377},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":187,"column":40,"offset":6377},"end":{"line":187,"column":77,"offset":6414},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":187,"column":77,"offset":6414},"end":{"line":187,"column":81,"offset":6418},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":187,"column":81,"offset":6418},"end":{"line":187,"column":99,"offset":6436},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":187,"column":99,"offset":6436},"end":{"line":187,"column":102,"offset":6439},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":187,"column":102,"offset":6439},"end":{"line":187,"column":133,"offset":6470},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":187,"column":133,"offset":6470},"end":{"line":187,"column":139,"offset":6476},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":187,"column":139,"offset":6476},"end":{"line":187,"column":167,"offset":6504},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":187,"column":167,"offset":6504},"end":{"line":187,"column":171,"offset":6508},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":187,"column":171,"offset":6508},"end":{"line":188,"column":1,"offset":6510},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":188,"column":1,"offset":6510},"end":{"line":188,"column":5,"offset":6514},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":188,"column":5,"offset":6514},"end":{"line":189,"column":1,"offset":6515},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":189,"column":1,"offset":6515},"end":{"line":189,"column":5,"offset":6519},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":189,"column":5,"offset":6519},"end":{"line":191,"column":1,"offset":6539},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":191,"column":1,"offset":6539},"end":{"line":191,"column":5,"offset":6543},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":191,"column":5,"offset":6543},"end":{"line":192,"column":6,"offset":6549},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":192,"column":6,"offset":6549},"end":{"line":192,"column":12,"offset":6555},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":192,"column":12,"offset":6555},"end":{"line":192,"column":30,"offset":6573},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":192,"column":30,"offset":6573},"end":{"line":192,"column":36,"offset":6579},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":192,"column":36,"offset":6579},"end":{"line":192,"column":62,"offset":6605},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":192,"column":62,"offset":6605},"end":{"line":192,"column":75,"offset":6618},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":192,"column":75,"offset":6618},"end":{"line":192,"column":159,"offset":6702},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":5977},"end":{"line":192,"column":159,"offset":6702},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":194,"column":8,"offset":6711},"end":{"line":194,"column":41,"offset":6744},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":6704},"end":{"line":194,"column":41,"offset":6744},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":195,"column":1,"offset":6745},"end":{"line":200,"column":4,"offset":6820},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":201,"column":1,"offset":6821},"end":{"line":202,"column":1,"offset":6840},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":202,"column":1,"offset":6840},"end":{"line":202,"column":5,"offset":6844},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":202,"column":5,"offset":6844},"end":{"line":204,"column":5,"offset":6982},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":204,"column":5,"offset":6982},"end":{"line":204,"column":9,"offset":6986},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":204,"column":9,"offset":6986},"end":{"line":205,"column":5,"offset":6991},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":205,"column":5,"offset":6991},"end":{"line":205,"column":27,"offset":7013},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":205,"column":27,"offset":7013},"end":{"line":206,"column":5,"offset":7018},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":206,"column":5,"offset":7018},"end":{"line":206,"column":9,"offset":7022},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":206,"column":9,"offset":7022},"end":{"line":207,"column":5,"offset":7027},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":207,"column":5,"offset":7027},"end":{"line":207,"column":12,"offset":7034},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":207,"column":12,"offset":7034},"end":{"line":207,"column":17,"offset":7039},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":207,"column":17,"offset":7039},"end":{"line":207,"column":25,"offset":7047},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":207,"column":25,"offset":7047},"end":{"line":207,"column":63,"offset":7085},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":207,"column":63,"offset":7085},"end":{"line":207,"column":66,"offset":7088},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":207,"column":66,"offset":7088},"end":{"line":207,"column":86,"offset":7108},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":207,"column":86,"offset":7108},"end":{"line":207,"column":89,"offset":7111},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":207,"column":89,"offset":7111},"end":{"line":207,"column":110,"offset":7132},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":207,"column":110,"offset":7132},"end":{"line":207,"column":119,"offset":7141},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":207,"column":119,"offset":7141},"end":{"line":208,"column":1,"offset":7143},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":208,"column":1,"offset":7143},"end":{"line":208,"column":5,"offset":7147},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":208,"column":5,"offset":7147},"end":{"line":210,"column":1,"offset":7163},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":210,"column":1,"offset":7163},"end":{"line":210,"column":5,"offset":7167},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":210,"column":5,"offset":7167},"end":{"line":212,"column":5,"offset":7274},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":212,"column":5,"offset":7274},"end":{"line":212,"column":9,"offset":7278},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":212,"column":9,"offset":7278},"end":{"line":213,"column":1,"offset":7279},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":213,"column":1,"offset":7279},"end":{"line":213,"column":23,"offset":7301},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":213,"column":23,"offset":7301},"end":{"line":213,"column":35,"offset":7313},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":213,"column":35,"offset":7313},"end":{"line":213,"column":61,"offset":7339},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":213,"column":61,"offset":7339},"end":{"line":214,"column":1,"offset":7340},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":214,"column":1,"offset":7340},"end":{"line":214,"column":5,"offset":7344},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":214,"column":5,"offset":7344},"end":{"line":215,"column":5,"offset":7349},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":215,"column":5,"offset":7349},"end":{"line":215,"column":8,"offset":7352},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":215,"column":8,"offset":7352},"end":{"line":215,"column":58,"offset":7402},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":6821},"end":{"line":215,"column":58,"offset":7402},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":217,"column":1,"offset":7404},"end":{"line":218,"column":1,"offset":7422},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":218,"column":1,"offset":7422},"end":{"line":218,"column":5,"offset":7426},"indent":[]}}],"position":{"start":{"line":217,"column":1,"offset":7404},"end":{"line":218,"column":5,"offset":7426},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":219,"column":1,"offset":7427},"end":{"line":221,"column":4,"offset":7457},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":222,"column":1,"offset":7458},"end":{"line":222,"column":13,"offset":7470},"indent":[]}}],"position":{"start":{"line":222,"column":1,"offset":7458},"end":{"line":222,"column":13,"offset":7470},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":223,"column":1,"offset":7471},"end":{"line":229,"column":4,"offset":7550},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":230,"column":1,"offset":7551},"end":{"line":230,"column":8,"offset":7558},"indent":[]}}],"position":{"start":{"line":230,"column":1,"offset":7551},"end":{"line":230,"column":8,"offset":7558},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":231,"column":1,"offset":7559},"end":{"line":238,"column":4,"offset":7683},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":239,"column":1,"offset":7684},"end":{"line":240,"column":5,"offset":7693},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":242,"column":1,"offset":7695},"end":{"line":242,"column":11,"offset":7705},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":242,"column":11,"offset":7705},"end":{"line":242,"column":24,"offset":7718},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":242,"column":24,"offset":7718},"end":{"line":242,"column":107,"offset":7801},"indent":[]}}],"position":{"start":{"line":242,"column":1,"offset":7695},"end":{"line":242,"column":107,"offset":7801},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":244,"column":7,"offset":7809},"end":{"line":244,"column":10,"offset":7812},"indent":[]}}],"position":{"start":{"line":244,"column":1,"offset":7803},"end":{"line":244,"column":10,"offset":7812},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":245,"column":7,"offset":7819},"end":{"line":245,"column":10,"offset":7822},"indent":[]}}],"position":{"start":{"line":245,"column":1,"offset":7813},"end":{"line":245,"column":10,"offset":7822},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":247,"column":6,"offset":7829},"end":{"line":247,"column":10,"offset":7833},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":7824},"end":{"line":247,"column":10,"offset":7833},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":248,"column":7,"offset":7840},"end":{"line":248,"column":13,"offset":7846},"indent":[]}}],"position":{"start":{"line":248,"column":1,"offset":7834},"end":{"line":248,"column":13,"offset":7846},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":249,"column":1,"offset":7847},"end":{"line":249,"column":49,"offset":7895},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":249,"column":49,"offset":7895},"end":{"line":249,"column":57,"offset":7903},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":249,"column":57,"offset":7903},"end":{"line":249,"column":133,"offset":7979},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":7847},"end":{"line":249,"column":133,"offset":7979},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":250,"column":1,"offset":7980},"end":{"line":260,"column":4,"offset":8175},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":261,"column":1,"offset":8176},"end":{"line":261,"column":5,"offset":8180},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":264,"column":1,"offset":8183},"end":{"line":265,"column":1,"offset":8265},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":265,"column":1,"offset":8265},"end":{"line":265,"column":5,"offset":8269},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":265,"column":5,"offset":8269},"end":{"line":266,"column":1,"offset":8270},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":266,"column":1,"offset":8270},"end":{"line":266,"column":5,"offset":8274},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":266,"column":5,"offset":8274},"end":{"line":267,"column":26,"offset":8300},"indent":[1]}}],"position":{"start":{"line":264,"column":1,"offset":8183},"end":{"line":267,"column":26,"offset":8300},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":268,"column":1,"offset":8301},"end":{"line":273,"column":4,"offset":8429},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":274,"column":1,"offset":8430},"end":{"line":274,"column":14,"offset":8443},"indent":[]}}],"position":{"start":{"line":274,"column":1,"offset":8430},"end":{"line":274,"column":14,"offset":8443},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":276,"column":1,"offset":8445},"end":{"line":289,"column":4,"offset":8727},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":291,"column":1,"offset":8729},"end":{"line":292,"column":5,"offset":8738},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":295,"column":7,"offset":8747},"end":{"line":295,"column":13,"offset":8753},"indent":[]}}],"position":{"start":{"line":295,"column":1,"offset":8741},"end":{"line":295,"column":13,"offset":8753},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":295,"column":13,"offset":8753}}}}