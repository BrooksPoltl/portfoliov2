{"expireTime":9007200842248636000,"key":"transformer-remark-markdown-ast-b1c39a89c7c0b375f8d13137941fc738-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632},"indent":[]}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities. \n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705},"indent":[]}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":18,"column":76,"offset":781},"indent":[1]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":18,"column":76,"offset":781},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":21,"column":7,"offset":790},"end":{"line":21,"column":10,"offset":793},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":784},"end":{"line":21,"column":10,"offset":793},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":22,"column":7,"offset":800},"end":{"line":22,"column":10,"offset":803},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":794},"end":{"line":22,"column":10,"offset":803},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":24,"column":6,"offset":810},"end":{"line":24,"column":14,"offset":818},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":805},"end":{"line":24,"column":14,"offset":818},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":25,"column":7,"offset":825},"end":{"line":25,"column":10,"offset":828},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":819},"end":{"line":25,"column":10,"offset":828},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":27,"column":8,"offset":837},"end":{"line":27,"column":30,"offset":859},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":830},"end":{"line":27,"column":30,"offset":859},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":29,"column":1,"offset":861},"end":{"line":30,"column":1,"offset":1005},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":30,"column":1,"offset":1005},"end":{"line":30,"column":5,"offset":1009},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":30,"column":5,"offset":1009},"end":{"line":30,"column":16,"offset":1020},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":30,"column":16,"offset":1020},"end":{"line":30,"column":20,"offset":1024},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":30,"column":20,"offset":1024},"end":{"line":32,"column":1,"offset":1168},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1168},"end":{"line":32,"column":5,"offset":1172},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":32,"column":5,"offset":1172},"end":{"line":32,"column":16,"offset":1183},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":32,"column":16,"offset":1183},"end":{"line":32,"column":20,"offset":1187},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":32,"column":20,"offset":1187},"end":{"line":33,"column":45,"offset":1232},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":33,"column":45,"offset":1232},"end":{"line":33,"column":49,"offset":1236},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":33,"column":49,"offset":1236},"end":{"line":33,"column":65,"offset":1252},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":33,"column":65,"offset":1252},"end":{"line":33,"column":69,"offset":1256},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":33,"column":69,"offset":1256},"end":{"line":35,"column":1,"offset":1299},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":35,"column":1,"offset":1299},"end":{"line":35,"column":5,"offset":1303},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":35,"column":5,"offset":1303},"end":{"line":35,"column":22,"offset":1320},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":35,"column":22,"offset":1320},"end":{"line":35,"column":26,"offset":1324},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":35,"column":26,"offset":1324},"end":{"line":36,"column":1,"offset":1325},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":36,"column":1,"offset":1325},"end":{"line":36,"column":5,"offset":1329},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":36,"column":5,"offset":1329},"end":{"line":38,"column":1,"offset":1447},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1447},"end":{"line":38,"column":5,"offset":1451},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":38,"column":5,"offset":1451},"end":{"line":40,"column":1,"offset":1572},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":40,"column":1,"offset":1572},"end":{"line":40,"column":12,"offset":1583},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":40,"column":12,"offset":1583},"end":{"line":40,"column":68,"offset":1639},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":40,"column":68,"offset":1639},"end":{"line":40,"column":79,"offset":1650},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":40,"column":79,"offset":1650},"end":{"line":40,"column":106,"offset":1677},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":40,"column":106,"offset":1677},"end":{"line":40,"column":109,"offset":1680},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":40,"column":109,"offset":1680},"end":{"line":40,"column":189,"offset":1760},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":40,"column":189,"offset":1760},"end":{"line":40,"column":192,"offset":1763},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":40,"column":192,"offset":1763},"end":{"line":40,"column":202,"offset":1773},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":861},"end":{"line":40,"column":202,"offset":1773},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":42,"column":8,"offset":1782},"end":{"line":42,"column":14,"offset":1788},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1775},"end":{"line":42,"column":14,"offset":1788},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":43,"column":1,"offset":1789},"end":{"line":43,"column":9,"offset":1797},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":43,"column":9,"offset":1797},"end":{"line":43,"column":73,"offset":1861},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1789},"end":{"line":43,"column":73,"offset":1861},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":44,"column":1,"offset":1862},"end":{"line":47,"column":4,"offset":1901},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1902},"end":{"line":48,"column":5,"offset":1906},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":50,"column":1,"offset":1908},"end":{"line":50,"column":72,"offset":1979},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":50,"column":72,"offset":1979},"end":{"line":50,"column":80,"offset":1987},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":50,"column":80,"offset":1987},"end":{"line":51,"column":1,"offset":2011},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":51,"column":1,"offset":2011},"end":{"line":51,"column":5,"offset":2015},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":51,"column":5,"offset":2015},"end":{"line":52,"column":1,"offset":2016},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":52,"column":1,"offset":2016},"end":{"line":52,"column":5,"offset":2020},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":52,"column":5,"offset":2020},"end":{"line":53,"column":184,"offset":2204},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":53,"column":184,"offset":2204},"end":{"line":53,"column":187,"offset":2207},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":53,"column":187,"offset":2207},"end":{"line":54,"column":1,"offset":2210},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":54,"column":1,"offset":2210},"end":{"line":54,"column":5,"offset":2214},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":54,"column":5,"offset":2214},"end":{"line":55,"column":1,"offset":2215},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":55,"column":1,"offset":2215},"end":{"line":55,"column":5,"offset":2219},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":55,"column":5,"offset":2219},"end":{"line":56,"column":27,"offset":2246},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":56,"column":27,"offset":2246},"end":{"line":56,"column":35,"offset":2254},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":56,"column":35,"offset":2254},"end":{"line":56,"column":86,"offset":2305},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":56,"column":86,"offset":2305},"end":{"line":56,"column":95,"offset":2314},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":56,"column":95,"offset":2314},"end":{"line":56,"column":97,"offset":2316},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1908},"end":{"line":56,"column":97,"offset":2316},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":58,"column":1,"offset":2318},"end":{"line":58,"column":6,"offset":2323},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":60,"column":1,"offset":2325},"end":{"line":61,"column":1,"offset":2369},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":61,"column":1,"offset":2369},"end":{"line":61,"column":5,"offset":2373},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":61,"column":5,"offset":2373},"end":{"line":62,"column":1,"offset":2374},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":62,"column":1,"offset":2374},"end":{"line":62,"column":22,"offset":2395},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":62,"column":22,"offset":2395},"end":{"line":63,"column":1,"offset":2396},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":63,"column":1,"offset":2396},"end":{"line":63,"column":5,"offset":2400},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":2325},"end":{"line":63,"column":5,"offset":2400},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":65,"column":1,"offset":2402},"end":{"line":65,"column":152,"offset":2553},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":2402},"end":{"line":65,"column":152,"offset":2553},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":67,"column":8,"offset":2562},"end":{"line":67,"column":20,"offset":2574},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":2555},"end":{"line":67,"column":20,"offset":2574},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":69,"column":1,"offset":2576},"end":{"line":69,"column":56,"offset":2631},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":2576},"end":{"line":69,"column":56,"offset":2631},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":70,"column":1,"offset":2632},"end":{"line":75,"column":4,"offset":2723},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":76,"column":1,"offset":2724},"end":{"line":76,"column":5,"offset":2728},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":78,"column":1,"offset":2730},"end":{"line":78,"column":37,"offset":2766},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":78,"column":37,"offset":2766},"end":{"line":78,"column":41,"offset":2770},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":78,"column":41,"offset":2770},"end":{"line":79,"column":1,"offset":2787},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":79,"column":1,"offset":2787},"end":{"line":79,"column":5,"offset":2791},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":79,"column":5,"offset":2791},"end":{"line":80,"column":1,"offset":2792},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":80,"column":1,"offset":2792},"end":{"line":80,"column":5,"offset":2796},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":80,"column":5,"offset":2796},"end":{"line":81,"column":66,"offset":2862},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":81,"column":66,"offset":2862},"end":{"line":81,"column":89,"offset":2885},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":81,"column":89,"offset":2885},"end":{"line":82,"column":1,"offset":2925},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":82,"column":1,"offset":2925},"end":{"line":82,"column":5,"offset":2929},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":82,"column":5,"offset":2929},"end":{"line":83,"column":1,"offset":2930},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":83,"column":1,"offset":2930},"end":{"line":83,"column":5,"offset":2934},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":83,"column":5,"offset":2934},"end":{"line":84,"column":21,"offset":2955},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":84,"column":21,"offset":2955},"end":{"line":84,"column":25,"offset":2959},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":84,"column":25,"offset":2959},"end":{"line":85,"column":1,"offset":3013},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":85,"column":1,"offset":3013},"end":{"line":85,"column":5,"offset":3017},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":85,"column":5,"offset":3017},"end":{"line":86,"column":1,"offset":3018},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":86,"column":1,"offset":3018},"end":{"line":86,"column":5,"offset":3022},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":86,"column":5,"offset":3022},"end":{"line":87,"column":21,"offset":3043},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":87,"column":21,"offset":3043},"end":{"line":87,"column":25,"offset":3047},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":87,"column":25,"offset":3047},"end":{"line":88,"column":1,"offset":3102},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":88,"column":1,"offset":3102},"end":{"line":88,"column":5,"offset":3106},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":88,"column":5,"offset":3106},"end":{"line":89,"column":1,"offset":3107},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":89,"column":1,"offset":3107},"end":{"line":89,"column":5,"offset":3111},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":89,"column":5,"offset":3111},"end":{"line":90,"column":58,"offset":3169},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":90,"column":58,"offset":3169},"end":{"line":90,"column":61,"offset":3172},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":90,"column":61,"offset":3172},"end":{"line":90,"column":145,"offset":3256},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":90,"column":145,"offset":3256},"end":{"line":90,"column":153,"offset":3264},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":90,"column":153,"offset":3264},"end":{"line":90,"column":178,"offset":3289},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":2730},"end":{"line":90,"column":178,"offset":3289},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":92,"column":7,"offset":3297},"end":{"line":92,"column":10,"offset":3300},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":3291},"end":{"line":92,"column":10,"offset":3300},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":94,"column":8,"offset":3309},"end":{"line":94,"column":17,"offset":3318},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":3302},"end":{"line":94,"column":17,"offset":3318},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":95,"column":1,"offset":3319},"end":{"line":106,"column":4,"offset":3518},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":107,"column":1,"offset":3519},"end":{"line":107,"column":5,"offset":3523},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":109,"column":1,"offset":3525},"end":{"line":110,"column":1,"offset":3741},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":110,"column":1,"offset":3741},"end":{"line":110,"column":5,"offset":3745},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":110,"column":5,"offset":3745},"end":{"line":111,"column":1,"offset":3746},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":111,"column":1,"offset":3746},"end":{"line":111,"column":5,"offset":3750},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":111,"column":5,"offset":3750},"end":{"line":112,"column":72,"offset":3822},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":112,"column":72,"offset":3822},"end":{"line":112,"column":81,"offset":3831},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":112,"column":81,"offset":3831},"end":{"line":113,"column":1,"offset":3850},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":113,"column":1,"offset":3850},"end":{"line":113,"column":5,"offset":3854},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":113,"column":5,"offset":3854},"end":{"line":114,"column":1,"offset":3855},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":114,"column":1,"offset":3855},"end":{"line":114,"column":5,"offset":3859},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":114,"column":5,"offset":3859},"end":{"line":115,"column":10,"offset":3869},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":115,"column":10,"offset":3869},"end":{"line":115,"column":16,"offset":3875},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":115,"column":16,"offset":3875},"end":{"line":115,"column":34,"offset":3893},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":115,"column":34,"offset":3893},"end":{"line":115,"column":42,"offset":3901},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":115,"column":42,"offset":3901},"end":{"line":116,"column":24,"offset":3926},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":116,"column":24,"offset":3926},"end":{"line":116,"column":33,"offset":3935},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":116,"column":33,"offset":3935},"end":{"line":116,"column":107,"offset":4009},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":116,"column":107,"offset":4009},"end":{"line":116,"column":116,"offset":4018},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":116,"column":116,"offset":4018},"end":{"line":116,"column":134,"offset":4036},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":116,"column":134,"offset":4036},"end":{"line":116,"column":137,"offset":4039},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":116,"column":137,"offset":4039},"end":{"line":116,"column":161,"offset":4063},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":116,"column":161,"offset":4063},"end":{"line":116,"column":167,"offset":4069},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":116,"column":167,"offset":4069},"end":{"line":116,"column":192,"offset":4094},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":116,"column":192,"offset":4094},"end":{"line":116,"column":200,"offset":4102},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":116,"column":200,"offset":4102},"end":{"line":116,"column":218,"offset":4120},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":116,"column":218,"offset":4120},"end":{"line":116,"column":224,"offset":4126},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":116,"column":224,"offset":4126},"end":{"line":116,"column":245,"offset":4147},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":116,"column":245,"offset":4147},"end":{"line":116,"column":252,"offset":4154},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":116,"column":252,"offset":4154},"end":{"line":116,"column":257,"offset":4159},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":116,"column":257,"offset":4159},"end":{"line":116,"column":260,"offset":4162},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":116,"column":260,"offset":4162},"end":{"line":116,"column":285,"offset":4187},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":116,"column":285,"offset":4187},"end":{"line":116,"column":291,"offset":4193},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":116,"column":291,"offset":4193},"end":{"line":117,"column":96,"offset":4319},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":117,"column":96,"offset":4319},"end":{"line":117,"column":111,"offset":4334},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":117,"column":111,"offset":4334},"end":{"line":117,"column":182,"offset":4405},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":3525},"end":{"line":117,"column":182,"offset":4405},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":119,"column":8,"offset":4414},"end":{"line":119,"column":19,"offset":4425},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":4407},"end":{"line":119,"column":19,"offset":4425},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":120,"column":1,"offset":4426},"end":{"line":120,"column":14,"offset":4439},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":4426},"end":{"line":120,"column":14,"offset":4439},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":121,"column":1,"offset":4440},"end":{"line":136,"column":4,"offset":4855},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":137,"column":1,"offset":4856},"end":{"line":137,"column":5,"offset":4860},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":139,"column":1,"offset":4862},"end":{"line":139,"column":141,"offset":5002},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":4862},"end":{"line":139,"column":141,"offset":5002},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":141,"column":8,"offset":5011},"end":{"line":141,"column":30,"offset":5033},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":5004},"end":{"line":141,"column":30,"offset":5033},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":142,"column":1,"offset":5034},"end":{"line":142,"column":199,"offset":5232},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":5034},"end":{"line":142,"column":199,"offset":5232},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":144,"column":8,"offset":5241},"end":{"line":144,"column":30,"offset":5263},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":5234},"end":{"line":144,"column":30,"offset":5263},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":146,"column":1,"offset":5265},"end":{"line":147,"column":1,"offset":5340},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":147,"column":1,"offset":5340},"end":{"line":147,"column":5,"offset":5344},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":147,"column":5,"offset":5344},"end":{"line":148,"column":1,"offset":5345},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":148,"column":1,"offset":5345},"end":{"line":148,"column":5,"offset":5349},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":148,"column":5,"offset":5349},"end":{"line":150,"column":1,"offset":5411},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":150,"column":1,"offset":5411},"end":{"line":150,"column":5,"offset":5415},"indent":[]}},{"type":"break","position":{"start":{"line":150,"column":5,"offset":5415},"end":{"line":151,"column":1,"offset":5418},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":151,"column":1,"offset":5418},"end":{"line":151,"column":11,"offset":5428},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":151,"column":11,"offset":5428},"end":{"line":151,"column":19,"offset":5436},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":151,"column":19,"offset":5436},"end":{"line":151,"column":24,"offset":5441},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":151,"column":24,"offset":5441},"end":{"line":151,"column":34,"offset":5451},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":151,"column":34,"offset":5451},"end":{"line":152,"column":1,"offset":5500},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":152,"column":1,"offset":5500},"end":{"line":152,"column":5,"offset":5504},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":5265},"end":{"line":152,"column":5,"offset":5504},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":154,"column":8,"offset":5513},"end":{"line":154,"column":12,"offset":5517},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":5506},"end":{"line":154,"column":12,"offset":5517},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":155,"column":1,"offset":5518},"end":{"line":160,"column":4,"offset":5629},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":161,"column":1,"offset":5630},"end":{"line":162,"column":5,"offset":5639},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":164,"column":1,"offset":5641},"end":{"line":164,"column":7,"offset":5647},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":164,"column":7,"offset":5647},"end":{"line":166,"column":1,"offset":5729},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":166,"column":1,"offset":5729},"end":{"line":166,"column":5,"offset":5733},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":166,"column":5,"offset":5733},"end":{"line":167,"column":1,"offset":5734},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":167,"column":1,"offset":5734},"end":{"line":167,"column":5,"offset":5738},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":167,"column":5,"offset":5738},"end":{"line":168,"column":10,"offset":5748},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":168,"column":10,"offset":5748},"end":{"line":168,"column":14,"offset":5752},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":168,"column":14,"offset":5752},"end":{"line":168,"column":22,"offset":5760},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":168,"column":22,"offset":5760},"end":{"line":168,"column":30,"offset":5768},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":168,"column":30,"offset":5768},"end":{"line":168,"column":50,"offset":5788},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":168,"column":50,"offset":5788},"end":{"line":168,"column":53,"offset":5791},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":168,"column":53,"offset":5791},"end":{"line":168,"column":90,"offset":5828},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":168,"column":90,"offset":5828},"end":{"line":168,"column":96,"offset":5834},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":168,"column":96,"offset":5834},"end":{"line":169,"column":1,"offset":5837},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":169,"column":1,"offset":5837},"end":{"line":169,"column":5,"offset":5841},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":169,"column":5,"offset":5841},"end":{"line":170,"column":1,"offset":5842},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":170,"column":1,"offset":5842},"end":{"line":170,"column":5,"offset":5846},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":170,"column":5,"offset":5846},"end":{"line":171,"column":14,"offset":5860},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":171,"column":14,"offset":5860},"end":{"line":171,"column":18,"offset":5864},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":171,"column":18,"offset":5864},"end":{"line":171,"column":90,"offset":5936},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":171,"column":90,"offset":5936},"end":{"line":171,"column":94,"offset":5940},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":171,"column":94,"offset":5940},"end":{"line":171,"column":125,"offset":5971},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":171,"column":125,"offset":5971},"end":{"line":171,"column":131,"offset":5977},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":171,"column":131,"offset":5977},"end":{"line":172,"column":1,"offset":5992},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":172,"column":1,"offset":5992},"end":{"line":172,"column":5,"offset":5996},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":172,"column":5,"offset":5996},"end":{"line":173,"column":1,"offset":5997},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":173,"column":1,"offset":5997},"end":{"line":173,"column":5,"offset":6001},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":173,"column":5,"offset":6001},"end":{"line":174,"column":14,"offset":6015},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":174,"column":14,"offset":6015},"end":{"line":174,"column":18,"offset":6019},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":174,"column":18,"offset":6019},"end":{"line":174,"column":37,"offset":6038},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":174,"column":37,"offset":6038},"end":{"line":174,"column":40,"offset":6041},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":174,"column":40,"offset":6041},"end":{"line":174,"column":77,"offset":6078},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":174,"column":77,"offset":6078},"end":{"line":174,"column":81,"offset":6082},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":174,"column":81,"offset":6082},"end":{"line":174,"column":99,"offset":6100},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":174,"column":99,"offset":6100},"end":{"line":174,"column":102,"offset":6103},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":174,"column":102,"offset":6103},"end":{"line":174,"column":133,"offset":6134},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":174,"column":133,"offset":6134},"end":{"line":174,"column":139,"offset":6140},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":174,"column":139,"offset":6140},"end":{"line":174,"column":167,"offset":6168},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":174,"column":167,"offset":6168},"end":{"line":174,"column":171,"offset":6172},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":174,"column":171,"offset":6172},"end":{"line":175,"column":1,"offset":6174},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":175,"column":1,"offset":6174},"end":{"line":175,"column":5,"offset":6178},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":175,"column":5,"offset":6178},"end":{"line":176,"column":1,"offset":6179},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":176,"column":1,"offset":6179},"end":{"line":176,"column":5,"offset":6183},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":176,"column":5,"offset":6183},"end":{"line":178,"column":1,"offset":6203},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":178,"column":1,"offset":6203},"end":{"line":178,"column":5,"offset":6207},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":178,"column":5,"offset":6207},"end":{"line":179,"column":6,"offset":6213},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":179,"column":6,"offset":6213},"end":{"line":179,"column":12,"offset":6219},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":179,"column":12,"offset":6219},"end":{"line":179,"column":30,"offset":6237},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":179,"column":30,"offset":6237},"end":{"line":179,"column":36,"offset":6243},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":179,"column":36,"offset":6243},"end":{"line":179,"column":62,"offset":6269},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":179,"column":62,"offset":6269},"end":{"line":179,"column":75,"offset":6282},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":179,"column":75,"offset":6282},"end":{"line":179,"column":159,"offset":6366},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":5641},"end":{"line":179,"column":159,"offset":6366},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":181,"column":8,"offset":6375},"end":{"line":181,"column":41,"offset":6408},"indent":[]}}],"position":{"start":{"line":181,"column":1,"offset":6368},"end":{"line":181,"column":41,"offset":6408},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":182,"column":1,"offset":6409},"end":{"line":187,"column":4,"offset":6484},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":188,"column":1,"offset":6485},"end":{"line":189,"column":1,"offset":6504},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":189,"column":1,"offset":6504},"end":{"line":189,"column":5,"offset":6508},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":189,"column":5,"offset":6508},"end":{"line":191,"column":5,"offset":6646},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":191,"column":5,"offset":6646},"end":{"line":191,"column":9,"offset":6650},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":191,"column":9,"offset":6650},"end":{"line":192,"column":5,"offset":6655},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":192,"column":5,"offset":6655},"end":{"line":192,"column":27,"offset":6677},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":192,"column":27,"offset":6677},"end":{"line":193,"column":5,"offset":6682},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":193,"column":5,"offset":6682},"end":{"line":193,"column":9,"offset":6686},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":193,"column":9,"offset":6686},"end":{"line":194,"column":5,"offset":6691},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":194,"column":5,"offset":6691},"end":{"line":194,"column":12,"offset":6698},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":194,"column":12,"offset":6698},"end":{"line":194,"column":17,"offset":6703},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":194,"column":17,"offset":6703},"end":{"line":194,"column":25,"offset":6711},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":194,"column":25,"offset":6711},"end":{"line":194,"column":63,"offset":6749},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":194,"column":63,"offset":6749},"end":{"line":194,"column":66,"offset":6752},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":194,"column":66,"offset":6752},"end":{"line":194,"column":86,"offset":6772},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":194,"column":86,"offset":6772},"end":{"line":194,"column":89,"offset":6775},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":194,"column":89,"offset":6775},"end":{"line":194,"column":110,"offset":6796},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":194,"column":110,"offset":6796},"end":{"line":194,"column":119,"offset":6805},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":194,"column":119,"offset":6805},"end":{"line":195,"column":1,"offset":6807},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":195,"column":1,"offset":6807},"end":{"line":195,"column":5,"offset":6811},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":195,"column":5,"offset":6811},"end":{"line":197,"column":1,"offset":6827},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":197,"column":1,"offset":6827},"end":{"line":197,"column":5,"offset":6831},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":197,"column":5,"offset":6831},"end":{"line":199,"column":5,"offset":6938},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":199,"column":5,"offset":6938},"end":{"line":199,"column":9,"offset":6942},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":199,"column":9,"offset":6942},"end":{"line":200,"column":1,"offset":6943},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":200,"column":1,"offset":6943},"end":{"line":200,"column":23,"offset":6965},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":200,"column":23,"offset":6965},"end":{"line":200,"column":35,"offset":6977},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":200,"column":35,"offset":6977},"end":{"line":200,"column":61,"offset":7003},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":200,"column":61,"offset":7003},"end":{"line":201,"column":1,"offset":7004},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":201,"column":1,"offset":7004},"end":{"line":201,"column":5,"offset":7008},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":201,"column":5,"offset":7008},"end":{"line":202,"column":5,"offset":7013},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":202,"column":5,"offset":7013},"end":{"line":202,"column":8,"offset":7016},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":202,"column":8,"offset":7016},"end":{"line":202,"column":58,"offset":7066},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":6485},"end":{"line":202,"column":58,"offset":7066},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":204,"column":1,"offset":7068},"end":{"line":205,"column":1,"offset":7086},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":205,"column":1,"offset":7086},"end":{"line":205,"column":5,"offset":7090},"indent":[]}}],"position":{"start":{"line":204,"column":1,"offset":7068},"end":{"line":205,"column":5,"offset":7090},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":206,"column":1,"offset":7091},"end":{"line":208,"column":4,"offset":7121},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":209,"column":1,"offset":7122},"end":{"line":209,"column":13,"offset":7134},"indent":[]}}],"position":{"start":{"line":209,"column":1,"offset":7122},"end":{"line":209,"column":13,"offset":7134},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":210,"column":1,"offset":7135},"end":{"line":216,"column":4,"offset":7214},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":217,"column":1,"offset":7215},"end":{"line":217,"column":8,"offset":7222},"indent":[]}}],"position":{"start":{"line":217,"column":1,"offset":7215},"end":{"line":217,"column":8,"offset":7222},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":218,"column":1,"offset":7223},"end":{"line":225,"column":4,"offset":7347},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":226,"column":1,"offset":7348},"end":{"line":227,"column":5,"offset":7357},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":229,"column":1,"offset":7359},"end":{"line":229,"column":11,"offset":7369},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":229,"column":11,"offset":7369},"end":{"line":229,"column":24,"offset":7382},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":229,"column":24,"offset":7382},"end":{"line":229,"column":107,"offset":7465},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":7359},"end":{"line":229,"column":107,"offset":7465},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":231,"column":7,"offset":7473},"end":{"line":231,"column":10,"offset":7476},"indent":[]}}],"position":{"start":{"line":231,"column":1,"offset":7467},"end":{"line":231,"column":10,"offset":7476},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":232,"column":7,"offset":7483},"end":{"line":232,"column":10,"offset":7486},"indent":[]}}],"position":{"start":{"line":232,"column":1,"offset":7477},"end":{"line":232,"column":10,"offset":7486},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":234,"column":6,"offset":7493},"end":{"line":234,"column":10,"offset":7497},"indent":[]}}],"position":{"start":{"line":234,"column":1,"offset":7488},"end":{"line":234,"column":10,"offset":7497},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":235,"column":7,"offset":7504},"end":{"line":235,"column":13,"offset":7510},"indent":[]}}],"position":{"start":{"line":235,"column":1,"offset":7498},"end":{"line":235,"column":13,"offset":7510},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":236,"column":1,"offset":7511},"end":{"line":236,"column":49,"offset":7559},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":236,"column":49,"offset":7559},"end":{"line":236,"column":57,"offset":7567},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":236,"column":57,"offset":7567},"end":{"line":236,"column":133,"offset":7643},"indent":[]}}],"position":{"start":{"line":236,"column":1,"offset":7511},"end":{"line":236,"column":133,"offset":7643},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":237,"column":1,"offset":7644},"end":{"line":247,"column":4,"offset":7839},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":248,"column":1,"offset":7840},"end":{"line":248,"column":5,"offset":7844},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":251,"column":1,"offset":7847},"end":{"line":252,"column":1,"offset":7929},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":252,"column":1,"offset":7929},"end":{"line":252,"column":5,"offset":7933},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":252,"column":5,"offset":7933},"end":{"line":253,"column":1,"offset":7934},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":253,"column":1,"offset":7934},"end":{"line":253,"column":5,"offset":7938},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":253,"column":5,"offset":7938},"end":{"line":254,"column":26,"offset":7964},"indent":[1]}}],"position":{"start":{"line":251,"column":1,"offset":7847},"end":{"line":254,"column":26,"offset":7964},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":255,"column":1,"offset":7965},"end":{"line":260,"column":4,"offset":8093},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":261,"column":1,"offset":8094},"end":{"line":261,"column":14,"offset":8107},"indent":[]}}],"position":{"start":{"line":261,"column":1,"offset":8094},"end":{"line":261,"column":14,"offset":8107},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":263,"column":1,"offset":8109},"end":{"line":276,"column":4,"offset":8391},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":278,"column":1,"offset":8393},"end":{"line":279,"column":5,"offset":8402},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":282,"column":7,"offset":8411},"end":{"line":282,"column":13,"offset":8417},"indent":[]}}],"position":{"start":{"line":282,"column":1,"offset":8405},"end":{"line":282,"column":13,"offset":8417},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":282,"column":13,"offset":8417}}}}