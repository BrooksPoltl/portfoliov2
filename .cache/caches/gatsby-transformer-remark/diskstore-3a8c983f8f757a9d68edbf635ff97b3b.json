{"expireTime":9007200842248519000,"key":"transformer-remark-markdown-ast-5a81047189095ab144a991b1767f2713-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":13,"column":5,"offset":627},"indent":[1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"means of combination: The ability to combine simplest entities. ","position":{"start":{"line":14,"column":3,"offset":630},"end":{"line":14,"column":67,"offset":694},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":630},"end":{"line":14,"column":67,"offset":694},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":15,"column":3,"offset":697},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"means of abstraction","position":{"start":{"line":16,"column":3,"offset":700},"end":{"line":16,"column":23,"offset":720},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":700},"end":{"line":16,"column":23,"offset":720},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":17,"column":7,"offset":727},"end":{"line":17,"column":10,"offset":730},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":721},"end":{"line":17,"column":10,"offset":730},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":18,"column":7,"offset":737},"end":{"line":18,"column":10,"offset":740},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":731},"end":{"line":18,"column":10,"offset":740},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":698},"end":{"line":18,"column":10,"offset":740},"indent":[1,1]}}],"position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":18,"column":10,"offset":740},"indent":[1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":20,"column":6,"offset":747},"end":{"line":20,"column":14,"offset":755},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":742},"end":{"line":20,"column":14,"offset":755},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":21,"column":7,"offset":762},"end":{"line":21,"column":10,"offset":765},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":756},"end":{"line":21,"column":10,"offset":765},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":23,"column":8,"offset":774},"end":{"line":23,"column":30,"offset":796},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":767},"end":{"line":23,"column":30,"offset":796},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":25,"column":1,"offset":798},"end":{"line":26,"column":1,"offset":942},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":26,"column":1,"offset":942},"end":{"line":26,"column":5,"offset":946},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":26,"column":5,"offset":946},"end":{"line":26,"column":16,"offset":957},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":26,"column":16,"offset":957},"end":{"line":26,"column":20,"offset":961},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":26,"column":20,"offset":961},"end":{"line":28,"column":1,"offset":1105},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":1,"offset":1105},"end":{"line":28,"column":5,"offset":1109},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":28,"column":5,"offset":1109},"end":{"line":28,"column":16,"offset":1120},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":16,"offset":1120},"end":{"line":28,"column":20,"offset":1124},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":28,"column":20,"offset":1124},"end":{"line":29,"column":45,"offset":1169},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":29,"column":45,"offset":1169},"end":{"line":29,"column":49,"offset":1173},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":29,"column":49,"offset":1173},"end":{"line":29,"column":65,"offset":1189},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":29,"column":65,"offset":1189},"end":{"line":29,"column":69,"offset":1193},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":29,"column":69,"offset":1193},"end":{"line":31,"column":1,"offset":1236},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1236},"end":{"line":31,"column":5,"offset":1240},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":31,"column":5,"offset":1240},"end":{"line":31,"column":22,"offset":1257},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":22,"offset":1257},"end":{"line":31,"column":26,"offset":1261},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":26,"offset":1261},"end":{"line":32,"column":1,"offset":1262},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1262},"end":{"line":32,"column":5,"offset":1266},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":32,"column":5,"offset":1266},"end":{"line":34,"column":1,"offset":1384},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1384},"end":{"line":34,"column":5,"offset":1388},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":34,"column":5,"offset":1388},"end":{"line":36,"column":1,"offset":1509},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":36,"column":1,"offset":1509},"end":{"line":36,"column":12,"offset":1520},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":36,"column":12,"offset":1520},"end":{"line":36,"column":68,"offset":1576},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":36,"column":68,"offset":1576},"end":{"line":36,"column":79,"offset":1587},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":36,"column":79,"offset":1587},"end":{"line":36,"column":106,"offset":1614},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":36,"column":106,"offset":1614},"end":{"line":36,"column":109,"offset":1617},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":36,"column":109,"offset":1617},"end":{"line":36,"column":189,"offset":1697},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":36,"column":189,"offset":1697},"end":{"line":36,"column":192,"offset":1700},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":36,"column":192,"offset":1700},"end":{"line":36,"column":202,"offset":1710},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":798},"end":{"line":36,"column":202,"offset":1710},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":38,"column":8,"offset":1719},"end":{"line":38,"column":14,"offset":1725},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1712},"end":{"line":38,"column":14,"offset":1725},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":39,"column":1,"offset":1726},"end":{"line":39,"column":9,"offset":1734},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":39,"column":9,"offset":1734},"end":{"line":39,"column":73,"offset":1798},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1726},"end":{"line":39,"column":73,"offset":1798},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":40,"column":1,"offset":1799},"end":{"line":43,"column":4,"offset":1838},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1839},"end":{"line":44,"column":5,"offset":1843},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":46,"column":1,"offset":1845},"end":{"line":46,"column":72,"offset":1916},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":46,"column":72,"offset":1916},"end":{"line":46,"column":80,"offset":1924},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":46,"column":80,"offset":1924},"end":{"line":47,"column":1,"offset":1948},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":47,"column":1,"offset":1948},"end":{"line":47,"column":5,"offset":1952},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":47,"column":5,"offset":1952},"end":{"line":48,"column":1,"offset":1953},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1953},"end":{"line":48,"column":5,"offset":1957},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":48,"column":5,"offset":1957},"end":{"line":49,"column":184,"offset":2141},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":49,"column":184,"offset":2141},"end":{"line":49,"column":187,"offset":2144},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":49,"column":187,"offset":2144},"end":{"line":50,"column":1,"offset":2147},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":50,"column":1,"offset":2147},"end":{"line":50,"column":5,"offset":2151},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":50,"column":5,"offset":2151},"end":{"line":51,"column":1,"offset":2152},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":51,"column":1,"offset":2152},"end":{"line":51,"column":5,"offset":2156},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":51,"column":5,"offset":2156},"end":{"line":52,"column":27,"offset":2183},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":52,"column":27,"offset":2183},"end":{"line":52,"column":35,"offset":2191},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":52,"column":35,"offset":2191},"end":{"line":52,"column":86,"offset":2242},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":52,"column":86,"offset":2242},"end":{"line":52,"column":95,"offset":2251},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":52,"column":95,"offset":2251},"end":{"line":52,"column":97,"offset":2253},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":1845},"end":{"line":52,"column":97,"offset":2253},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":54,"column":1,"offset":2255},"end":{"line":54,"column":6,"offset":2260},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":56,"column":1,"offset":2262},"end":{"line":57,"column":1,"offset":2306},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":57,"column":1,"offset":2306},"end":{"line":57,"column":5,"offset":2310},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":57,"column":5,"offset":2310},"end":{"line":58,"column":1,"offset":2311},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":58,"column":1,"offset":2311},"end":{"line":58,"column":22,"offset":2332},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":58,"column":22,"offset":2332},"end":{"line":59,"column":1,"offset":2333},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":59,"column":1,"offset":2333},"end":{"line":59,"column":5,"offset":2337},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":2262},"end":{"line":59,"column":5,"offset":2337},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":61,"column":1,"offset":2339},"end":{"line":61,"column":152,"offset":2490},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":2339},"end":{"line":61,"column":152,"offset":2490},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":63,"column":8,"offset":2499},"end":{"line":63,"column":20,"offset":2511},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":2492},"end":{"line":63,"column":20,"offset":2511},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":65,"column":1,"offset":2513},"end":{"line":65,"column":56,"offset":2568},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":2513},"end":{"line":65,"column":56,"offset":2568},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":66,"column":1,"offset":2569},"end":{"line":71,"column":4,"offset":2660},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":72,"column":1,"offset":2661},"end":{"line":72,"column":5,"offset":2665},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":74,"column":1,"offset":2667},"end":{"line":74,"column":37,"offset":2703},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":74,"column":37,"offset":2703},"end":{"line":74,"column":41,"offset":2707},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":74,"column":41,"offset":2707},"end":{"line":75,"column":1,"offset":2724},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2724},"end":{"line":75,"column":5,"offset":2728},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":75,"column":5,"offset":2728},"end":{"line":76,"column":1,"offset":2729},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":76,"column":1,"offset":2729},"end":{"line":76,"column":5,"offset":2733},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":76,"column":5,"offset":2733},"end":{"line":77,"column":66,"offset":2799},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":77,"column":66,"offset":2799},"end":{"line":77,"column":89,"offset":2822},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":77,"column":89,"offset":2822},"end":{"line":78,"column":1,"offset":2862},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2862},"end":{"line":78,"column":5,"offset":2866},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":78,"column":5,"offset":2866},"end":{"line":79,"column":1,"offset":2867},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":79,"column":1,"offset":2867},"end":{"line":79,"column":5,"offset":2871},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":79,"column":5,"offset":2871},"end":{"line":80,"column":21,"offset":2892},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":80,"column":21,"offset":2892},"end":{"line":80,"column":25,"offset":2896},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":80,"column":25,"offset":2896},"end":{"line":81,"column":1,"offset":2950},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":81,"column":1,"offset":2950},"end":{"line":81,"column":5,"offset":2954},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":81,"column":5,"offset":2954},"end":{"line":82,"column":1,"offset":2955},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":82,"column":1,"offset":2955},"end":{"line":82,"column":5,"offset":2959},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":82,"column":5,"offset":2959},"end":{"line":83,"column":21,"offset":2980},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":83,"column":21,"offset":2980},"end":{"line":83,"column":25,"offset":2984},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":83,"column":25,"offset":2984},"end":{"line":84,"column":1,"offset":3039},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":84,"column":1,"offset":3039},"end":{"line":84,"column":5,"offset":3043},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":84,"column":5,"offset":3043},"end":{"line":85,"column":1,"offset":3044},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":85,"column":1,"offset":3044},"end":{"line":85,"column":5,"offset":3048},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":85,"column":5,"offset":3048},"end":{"line":86,"column":58,"offset":3106},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":86,"column":58,"offset":3106},"end":{"line":86,"column":61,"offset":3109},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":86,"column":61,"offset":3109},"end":{"line":86,"column":145,"offset":3193},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":86,"column":145,"offset":3193},"end":{"line":86,"column":153,"offset":3201},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":86,"column":153,"offset":3201},"end":{"line":86,"column":178,"offset":3226},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":2667},"end":{"line":86,"column":178,"offset":3226},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":88,"column":7,"offset":3234},"end":{"line":88,"column":10,"offset":3237},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":3228},"end":{"line":88,"column":10,"offset":3237},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":90,"column":8,"offset":3246},"end":{"line":90,"column":17,"offset":3255},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":3239},"end":{"line":90,"column":17,"offset":3255},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":91,"column":1,"offset":3256},"end":{"line":102,"column":4,"offset":3455},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":103,"column":1,"offset":3456},"end":{"line":103,"column":5,"offset":3460},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":105,"column":1,"offset":3462},"end":{"line":106,"column":1,"offset":3678},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":106,"column":1,"offset":3678},"end":{"line":106,"column":5,"offset":3682},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":106,"column":5,"offset":3682},"end":{"line":107,"column":1,"offset":3683},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":107,"column":1,"offset":3683},"end":{"line":107,"column":5,"offset":3687},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":107,"column":5,"offset":3687},"end":{"line":108,"column":72,"offset":3759},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":108,"column":72,"offset":3759},"end":{"line":108,"column":81,"offset":3768},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":108,"column":81,"offset":3768},"end":{"line":109,"column":1,"offset":3787},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":109,"column":1,"offset":3787},"end":{"line":109,"column":5,"offset":3791},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":109,"column":5,"offset":3791},"end":{"line":110,"column":1,"offset":3792},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":110,"column":1,"offset":3792},"end":{"line":110,"column":5,"offset":3796},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":110,"column":5,"offset":3796},"end":{"line":111,"column":10,"offset":3806},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":111,"column":10,"offset":3806},"end":{"line":111,"column":16,"offset":3812},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":111,"column":16,"offset":3812},"end":{"line":111,"column":34,"offset":3830},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":111,"column":34,"offset":3830},"end":{"line":111,"column":42,"offset":3838},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":111,"column":42,"offset":3838},"end":{"line":112,"column":24,"offset":3863},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":112,"column":24,"offset":3863},"end":{"line":112,"column":33,"offset":3872},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":112,"column":33,"offset":3872},"end":{"line":112,"column":107,"offset":3946},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":112,"column":107,"offset":3946},"end":{"line":112,"column":116,"offset":3955},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":112,"column":116,"offset":3955},"end":{"line":112,"column":134,"offset":3973},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":112,"column":134,"offset":3973},"end":{"line":112,"column":137,"offset":3976},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":112,"column":137,"offset":3976},"end":{"line":112,"column":161,"offset":4000},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":112,"column":161,"offset":4000},"end":{"line":112,"column":167,"offset":4006},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":112,"column":167,"offset":4006},"end":{"line":112,"column":192,"offset":4031},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":112,"column":192,"offset":4031},"end":{"line":112,"column":200,"offset":4039},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":112,"column":200,"offset":4039},"end":{"line":112,"column":218,"offset":4057},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":112,"column":218,"offset":4057},"end":{"line":112,"column":224,"offset":4063},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":112,"column":224,"offset":4063},"end":{"line":112,"column":245,"offset":4084},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":112,"column":245,"offset":4084},"end":{"line":112,"column":252,"offset":4091},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":112,"column":252,"offset":4091},"end":{"line":112,"column":257,"offset":4096},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":112,"column":257,"offset":4096},"end":{"line":112,"column":260,"offset":4099},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":112,"column":260,"offset":4099},"end":{"line":112,"column":285,"offset":4124},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":112,"column":285,"offset":4124},"end":{"line":112,"column":291,"offset":4130},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":112,"column":291,"offset":4130},"end":{"line":113,"column":96,"offset":4256},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":113,"column":96,"offset":4256},"end":{"line":113,"column":111,"offset":4271},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":113,"column":111,"offset":4271},"end":{"line":113,"column":182,"offset":4342},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":3462},"end":{"line":113,"column":182,"offset":4342},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":115,"column":8,"offset":4351},"end":{"line":115,"column":19,"offset":4362},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":4344},"end":{"line":115,"column":19,"offset":4362},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":116,"column":1,"offset":4363},"end":{"line":116,"column":14,"offset":4376},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":4363},"end":{"line":116,"column":14,"offset":4376},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":117,"column":1,"offset":4377},"end":{"line":132,"column":4,"offset":4792},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":133,"column":1,"offset":4793},"end":{"line":133,"column":5,"offset":4797},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":135,"column":1,"offset":4799},"end":{"line":135,"column":141,"offset":4939},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":4799},"end":{"line":135,"column":141,"offset":4939},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":137,"column":8,"offset":4948},"end":{"line":137,"column":30,"offset":4970},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":4941},"end":{"line":137,"column":30,"offset":4970},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":138,"column":1,"offset":4971},"end":{"line":138,"column":199,"offset":5169},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":4971},"end":{"line":138,"column":199,"offset":5169},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":140,"column":8,"offset":5178},"end":{"line":140,"column":30,"offset":5200},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":5171},"end":{"line":140,"column":30,"offset":5200},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":142,"column":1,"offset":5202},"end":{"line":143,"column":1,"offset":5277},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":143,"column":1,"offset":5277},"end":{"line":143,"column":5,"offset":5281},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":143,"column":5,"offset":5281},"end":{"line":144,"column":1,"offset":5282},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":144,"column":1,"offset":5282},"end":{"line":144,"column":5,"offset":5286},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":144,"column":5,"offset":5286},"end":{"line":146,"column":1,"offset":5348},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":146,"column":1,"offset":5348},"end":{"line":146,"column":5,"offset":5352},"indent":[]}},{"type":"break","position":{"start":{"line":146,"column":5,"offset":5352},"end":{"line":147,"column":1,"offset":5355},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":147,"column":1,"offset":5355},"end":{"line":147,"column":11,"offset":5365},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":147,"column":11,"offset":5365},"end":{"line":147,"column":19,"offset":5373},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":147,"column":19,"offset":5373},"end":{"line":147,"column":24,"offset":5378},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":147,"column":24,"offset":5378},"end":{"line":147,"column":34,"offset":5388},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":147,"column":34,"offset":5388},"end":{"line":148,"column":1,"offset":5437},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":148,"column":1,"offset":5437},"end":{"line":148,"column":5,"offset":5441},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":5202},"end":{"line":148,"column":5,"offset":5441},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":150,"column":8,"offset":5450},"end":{"line":150,"column":12,"offset":5454},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":5443},"end":{"line":150,"column":12,"offset":5454},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":151,"column":1,"offset":5455},"end":{"line":156,"column":4,"offset":5566},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":157,"column":1,"offset":5567},"end":{"line":158,"column":5,"offset":5576},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":160,"column":1,"offset":5578},"end":{"line":160,"column":7,"offset":5584},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":160,"column":7,"offset":5584},"end":{"line":162,"column":1,"offset":5666},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":162,"column":1,"offset":5666},"end":{"line":162,"column":5,"offset":5670},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":162,"column":5,"offset":5670},"end":{"line":163,"column":1,"offset":5671},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":163,"column":1,"offset":5671},"end":{"line":163,"column":5,"offset":5675},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":163,"column":5,"offset":5675},"end":{"line":164,"column":10,"offset":5685},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":164,"column":10,"offset":5685},"end":{"line":164,"column":14,"offset":5689},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":164,"column":14,"offset":5689},"end":{"line":164,"column":22,"offset":5697},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":164,"column":22,"offset":5697},"end":{"line":164,"column":30,"offset":5705},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":164,"column":30,"offset":5705},"end":{"line":164,"column":50,"offset":5725},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":164,"column":50,"offset":5725},"end":{"line":164,"column":53,"offset":5728},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":164,"column":53,"offset":5728},"end":{"line":164,"column":90,"offset":5765},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":164,"column":90,"offset":5765},"end":{"line":164,"column":96,"offset":5771},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":164,"column":96,"offset":5771},"end":{"line":165,"column":1,"offset":5774},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":165,"column":1,"offset":5774},"end":{"line":165,"column":5,"offset":5778},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":165,"column":5,"offset":5778},"end":{"line":166,"column":1,"offset":5779},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":166,"column":1,"offset":5779},"end":{"line":166,"column":5,"offset":5783},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":166,"column":5,"offset":5783},"end":{"line":167,"column":14,"offset":5797},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":167,"column":14,"offset":5797},"end":{"line":167,"column":18,"offset":5801},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":167,"column":18,"offset":5801},"end":{"line":167,"column":90,"offset":5873},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":167,"column":90,"offset":5873},"end":{"line":167,"column":94,"offset":5877},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":167,"column":94,"offset":5877},"end":{"line":167,"column":125,"offset":5908},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":167,"column":125,"offset":5908},"end":{"line":167,"column":131,"offset":5914},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":167,"column":131,"offset":5914},"end":{"line":168,"column":1,"offset":5929},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":168,"column":1,"offset":5929},"end":{"line":168,"column":5,"offset":5933},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":168,"column":5,"offset":5933},"end":{"line":169,"column":1,"offset":5934},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":169,"column":1,"offset":5934},"end":{"line":169,"column":5,"offset":5938},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":169,"column":5,"offset":5938},"end":{"line":170,"column":14,"offset":5952},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":170,"column":14,"offset":5952},"end":{"line":170,"column":18,"offset":5956},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":170,"column":18,"offset":5956},"end":{"line":170,"column":37,"offset":5975},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":170,"column":37,"offset":5975},"end":{"line":170,"column":40,"offset":5978},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":170,"column":40,"offset":5978},"end":{"line":170,"column":77,"offset":6015},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":170,"column":77,"offset":6015},"end":{"line":170,"column":81,"offset":6019},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":170,"column":81,"offset":6019},"end":{"line":170,"column":99,"offset":6037},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":170,"column":99,"offset":6037},"end":{"line":170,"column":102,"offset":6040},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":170,"column":102,"offset":6040},"end":{"line":170,"column":133,"offset":6071},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":170,"column":133,"offset":6071},"end":{"line":170,"column":139,"offset":6077},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":170,"column":139,"offset":6077},"end":{"line":170,"column":167,"offset":6105},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":170,"column":167,"offset":6105},"end":{"line":170,"column":171,"offset":6109},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":170,"column":171,"offset":6109},"end":{"line":171,"column":1,"offset":6111},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":171,"column":1,"offset":6111},"end":{"line":171,"column":5,"offset":6115},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":171,"column":5,"offset":6115},"end":{"line":172,"column":1,"offset":6116},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":172,"column":1,"offset":6116},"end":{"line":172,"column":5,"offset":6120},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":172,"column":5,"offset":6120},"end":{"line":174,"column":1,"offset":6140},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":174,"column":1,"offset":6140},"end":{"line":174,"column":5,"offset":6144},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":174,"column":5,"offset":6144},"end":{"line":175,"column":6,"offset":6150},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":175,"column":6,"offset":6150},"end":{"line":175,"column":12,"offset":6156},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":175,"column":12,"offset":6156},"end":{"line":175,"column":30,"offset":6174},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":175,"column":30,"offset":6174},"end":{"line":175,"column":36,"offset":6180},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":175,"column":36,"offset":6180},"end":{"line":175,"column":62,"offset":6206},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":175,"column":62,"offset":6206},"end":{"line":175,"column":75,"offset":6219},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":175,"column":75,"offset":6219},"end":{"line":175,"column":159,"offset":6303},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":5578},"end":{"line":175,"column":159,"offset":6303},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":177,"column":8,"offset":6312},"end":{"line":177,"column":41,"offset":6345},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":6305},"end":{"line":177,"column":41,"offset":6345},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":178,"column":1,"offset":6346},"end":{"line":183,"column":4,"offset":6421},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":184,"column":1,"offset":6422},"end":{"line":185,"column":1,"offset":6441},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":185,"column":1,"offset":6441},"end":{"line":185,"column":5,"offset":6445},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":185,"column":5,"offset":6445},"end":{"line":187,"column":5,"offset":6583},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":187,"column":5,"offset":6583},"end":{"line":187,"column":9,"offset":6587},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":187,"column":9,"offset":6587},"end":{"line":188,"column":5,"offset":6592},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":188,"column":5,"offset":6592},"end":{"line":188,"column":27,"offset":6614},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":188,"column":27,"offset":6614},"end":{"line":189,"column":5,"offset":6619},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":189,"column":5,"offset":6619},"end":{"line":189,"column":9,"offset":6623},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":189,"column":9,"offset":6623},"end":{"line":190,"column":5,"offset":6628},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":190,"column":5,"offset":6628},"end":{"line":190,"column":12,"offset":6635},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":190,"column":12,"offset":6635},"end":{"line":190,"column":17,"offset":6640},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":190,"column":17,"offset":6640},"end":{"line":190,"column":25,"offset":6648},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":190,"column":25,"offset":6648},"end":{"line":190,"column":63,"offset":6686},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":190,"column":63,"offset":6686},"end":{"line":190,"column":66,"offset":6689},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":190,"column":66,"offset":6689},"end":{"line":190,"column":86,"offset":6709},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":190,"column":86,"offset":6709},"end":{"line":190,"column":89,"offset":6712},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":190,"column":89,"offset":6712},"end":{"line":190,"column":110,"offset":6733},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":190,"column":110,"offset":6733},"end":{"line":190,"column":119,"offset":6742},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":190,"column":119,"offset":6742},"end":{"line":191,"column":1,"offset":6744},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":191,"column":1,"offset":6744},"end":{"line":191,"column":5,"offset":6748},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":191,"column":5,"offset":6748},"end":{"line":193,"column":1,"offset":6764},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":193,"column":1,"offset":6764},"end":{"line":193,"column":5,"offset":6768},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":193,"column":5,"offset":6768},"end":{"line":195,"column":5,"offset":6875},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":195,"column":5,"offset":6875},"end":{"line":195,"column":9,"offset":6879},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":195,"column":9,"offset":6879},"end":{"line":196,"column":1,"offset":6880},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":196,"column":1,"offset":6880},"end":{"line":196,"column":23,"offset":6902},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":196,"column":23,"offset":6902},"end":{"line":196,"column":35,"offset":6914},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":196,"column":35,"offset":6914},"end":{"line":196,"column":61,"offset":6940},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":196,"column":61,"offset":6940},"end":{"line":197,"column":1,"offset":6941},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":197,"column":1,"offset":6941},"end":{"line":197,"column":5,"offset":6945},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":197,"column":5,"offset":6945},"end":{"line":198,"column":5,"offset":6950},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":198,"column":5,"offset":6950},"end":{"line":198,"column":8,"offset":6953},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":198,"column":8,"offset":6953},"end":{"line":198,"column":58,"offset":7003},"indent":[]}}],"position":{"start":{"line":184,"column":1,"offset":6422},"end":{"line":198,"column":58,"offset":7003},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":200,"column":1,"offset":7005},"end":{"line":201,"column":1,"offset":7023},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":201,"column":1,"offset":7023},"end":{"line":201,"column":5,"offset":7027},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":7005},"end":{"line":201,"column":5,"offset":7027},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":202,"column":1,"offset":7028},"end":{"line":204,"column":4,"offset":7058},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":205,"column":1,"offset":7059},"end":{"line":205,"column":13,"offset":7071},"indent":[]}}],"position":{"start":{"line":205,"column":1,"offset":7059},"end":{"line":205,"column":13,"offset":7071},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":206,"column":1,"offset":7072},"end":{"line":212,"column":4,"offset":7151},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":213,"column":1,"offset":7152},"end":{"line":213,"column":8,"offset":7159},"indent":[]}}],"position":{"start":{"line":213,"column":1,"offset":7152},"end":{"line":213,"column":8,"offset":7159},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":214,"column":1,"offset":7160},"end":{"line":221,"column":4,"offset":7284},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":222,"column":1,"offset":7285},"end":{"line":223,"column":5,"offset":7294},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":225,"column":1,"offset":7296},"end":{"line":225,"column":11,"offset":7306},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":225,"column":11,"offset":7306},"end":{"line":225,"column":24,"offset":7319},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":225,"column":24,"offset":7319},"end":{"line":225,"column":107,"offset":7402},"indent":[]}}],"position":{"start":{"line":225,"column":1,"offset":7296},"end":{"line":225,"column":107,"offset":7402},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":227,"column":7,"offset":7410},"end":{"line":227,"column":10,"offset":7413},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":7404},"end":{"line":227,"column":10,"offset":7413},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":228,"column":7,"offset":7420},"end":{"line":228,"column":10,"offset":7423},"indent":[]}}],"position":{"start":{"line":228,"column":1,"offset":7414},"end":{"line":228,"column":10,"offset":7423},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":230,"column":6,"offset":7430},"end":{"line":230,"column":10,"offset":7434},"indent":[]}}],"position":{"start":{"line":230,"column":1,"offset":7425},"end":{"line":230,"column":10,"offset":7434},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":231,"column":7,"offset":7441},"end":{"line":231,"column":13,"offset":7447},"indent":[]}}],"position":{"start":{"line":231,"column":1,"offset":7435},"end":{"line":231,"column":13,"offset":7447},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":232,"column":1,"offset":7448},"end":{"line":232,"column":49,"offset":7496},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":232,"column":49,"offset":7496},"end":{"line":232,"column":57,"offset":7504},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":232,"column":57,"offset":7504},"end":{"line":232,"column":133,"offset":7580},"indent":[]}}],"position":{"start":{"line":232,"column":1,"offset":7448},"end":{"line":232,"column":133,"offset":7580},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":233,"column":1,"offset":7581},"end":{"line":243,"column":4,"offset":7776},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":244,"column":1,"offset":7777},"end":{"line":244,"column":5,"offset":7781},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":247,"column":1,"offset":7784},"end":{"line":248,"column":1,"offset":7866},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":248,"column":1,"offset":7866},"end":{"line":248,"column":5,"offset":7870},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":248,"column":5,"offset":7870},"end":{"line":249,"column":1,"offset":7871},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":249,"column":1,"offset":7871},"end":{"line":249,"column":5,"offset":7875},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":249,"column":5,"offset":7875},"end":{"line":250,"column":26,"offset":7901},"indent":[1]}}],"position":{"start":{"line":247,"column":1,"offset":7784},"end":{"line":250,"column":26,"offset":7901},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":251,"column":1,"offset":7902},"end":{"line":256,"column":4,"offset":8030},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":257,"column":1,"offset":8031},"end":{"line":257,"column":14,"offset":8044},"indent":[]}}],"position":{"start":{"line":257,"column":1,"offset":8031},"end":{"line":257,"column":14,"offset":8044},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":259,"column":1,"offset":8046},"end":{"line":272,"column":4,"offset":8328},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":274,"column":1,"offset":8330},"end":{"line":275,"column":5,"offset":8339},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":278,"column":7,"offset":8348},"end":{"line":278,"column":13,"offset":8354},"indent":[]}}],"position":{"start":{"line":278,"column":1,"offset":8342},"end":{"line":278,"column":13,"offset":8354},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":278,"column":13,"offset":8354}}}}