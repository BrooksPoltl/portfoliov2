{"expireTime":9007200842248459000,"key":"transformer-remark-markdown-ast-1183101613c44fbb9c73cbae7517c576-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":5,"offset":562},"indent":[1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":12,"column":1,"offset":563},"end":{"line":12,"column":5,"offset":567},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"primitive expressions","position":{"start":{"line":14,"column":3,"offset":571},"end":{"line":14,"column":24,"offset":592},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":571},"end":{"line":14,"column":24,"offset":592},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"means of combination","position":{"start":{"line":16,"column":5,"offset":600},"end":{"line":16,"column":25,"offset":620},"indent":[]}}],"position":{"start":{"line":16,"column":5,"offset":600},"end":{"line":16,"column":25,"offset":620},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":598},"end":{"line":16,"column":25,"offset":620},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":598},"end":{"line":16,"column":25,"offset":620},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":569},"end":{"line":17,"column":3,"offset":623},"indent":[1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"means of abstraction","position":{"start":{"line":18,"column":3,"offset":626},"end":{"line":18,"column":23,"offset":646},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":626},"end":{"line":18,"column":23,"offset":646},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":19,"column":7,"offset":653},"end":{"line":19,"column":10,"offset":656},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":647},"end":{"line":19,"column":10,"offset":656},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":20,"column":7,"offset":663},"end":{"line":20,"column":10,"offset":666},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":657},"end":{"line":20,"column":10,"offset":666},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":624},"end":{"line":20,"column":10,"offset":666},"indent":[1,1]}}],"position":{"start":{"line":14,"column":1,"offset":569},"end":{"line":20,"column":10,"offset":666},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":22,"column":6,"offset":673},"end":{"line":22,"column":14,"offset":681},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":668},"end":{"line":22,"column":14,"offset":681},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":23,"column":7,"offset":688},"end":{"line":23,"column":10,"offset":691},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":682},"end":{"line":23,"column":10,"offset":691},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":25,"column":8,"offset":700},"end":{"line":25,"column":30,"offset":722},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":693},"end":{"line":25,"column":30,"offset":722},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":27,"column":1,"offset":724},"end":{"line":28,"column":1,"offset":868},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":1,"offset":868},"end":{"line":28,"column":5,"offset":872},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":28,"column":5,"offset":872},"end":{"line":28,"column":16,"offset":883},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":16,"offset":883},"end":{"line":28,"column":20,"offset":887},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":28,"column":20,"offset":887},"end":{"line":30,"column":1,"offset":1031},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":30,"column":1,"offset":1031},"end":{"line":30,"column":5,"offset":1035},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":30,"column":5,"offset":1035},"end":{"line":30,"column":16,"offset":1046},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":30,"column":16,"offset":1046},"end":{"line":30,"column":20,"offset":1050},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":30,"column":20,"offset":1050},"end":{"line":31,"column":45,"offset":1095},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":45,"offset":1095},"end":{"line":31,"column":49,"offset":1099},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":31,"column":49,"offset":1099},"end":{"line":31,"column":65,"offset":1115},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":65,"offset":1115},"end":{"line":31,"column":69,"offset":1119},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":31,"column":69,"offset":1119},"end":{"line":33,"column":1,"offset":1162},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":33,"column":1,"offset":1162},"end":{"line":33,"column":5,"offset":1166},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":33,"column":5,"offset":1166},"end":{"line":33,"column":22,"offset":1183},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":33,"column":22,"offset":1183},"end":{"line":33,"column":26,"offset":1187},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":33,"column":26,"offset":1187},"end":{"line":34,"column":1,"offset":1188},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1188},"end":{"line":34,"column":5,"offset":1192},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":34,"column":5,"offset":1192},"end":{"line":36,"column":1,"offset":1310},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":36,"column":1,"offset":1310},"end":{"line":36,"column":5,"offset":1314},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":36,"column":5,"offset":1314},"end":{"line":38,"column":1,"offset":1435},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":38,"column":1,"offset":1435},"end":{"line":38,"column":12,"offset":1446},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":38,"column":12,"offset":1446},"end":{"line":38,"column":68,"offset":1502},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":38,"column":68,"offset":1502},"end":{"line":38,"column":79,"offset":1513},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":38,"column":79,"offset":1513},"end":{"line":38,"column":106,"offset":1540},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":38,"column":106,"offset":1540},"end":{"line":38,"column":109,"offset":1543},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":38,"column":109,"offset":1543},"end":{"line":38,"column":189,"offset":1623},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":38,"column":189,"offset":1623},"end":{"line":38,"column":192,"offset":1626},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":38,"column":192,"offset":1626},"end":{"line":38,"column":202,"offset":1636},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":724},"end":{"line":38,"column":202,"offset":1636},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":40,"column":8,"offset":1645},"end":{"line":40,"column":14,"offset":1651},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1638},"end":{"line":40,"column":14,"offset":1651},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":41,"column":1,"offset":1652},"end":{"line":41,"column":9,"offset":1660},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":41,"column":9,"offset":1660},"end":{"line":41,"column":73,"offset":1724},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1652},"end":{"line":41,"column":73,"offset":1724},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":42,"column":1,"offset":1725},"end":{"line":45,"column":4,"offset":1764},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":46,"column":1,"offset":1765},"end":{"line":46,"column":5,"offset":1769},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":48,"column":1,"offset":1771},"end":{"line":48,"column":72,"offset":1842},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":48,"column":72,"offset":1842},"end":{"line":48,"column":80,"offset":1850},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":48,"column":80,"offset":1850},"end":{"line":49,"column":1,"offset":1874},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":49,"column":1,"offset":1874},"end":{"line":49,"column":5,"offset":1878},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":49,"column":5,"offset":1878},"end":{"line":50,"column":1,"offset":1879},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":50,"column":1,"offset":1879},"end":{"line":50,"column":5,"offset":1883},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":50,"column":5,"offset":1883},"end":{"line":51,"column":184,"offset":2067},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":51,"column":184,"offset":2067},"end":{"line":51,"column":187,"offset":2070},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":51,"column":187,"offset":2070},"end":{"line":52,"column":1,"offset":2073},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":52,"column":1,"offset":2073},"end":{"line":52,"column":5,"offset":2077},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":52,"column":5,"offset":2077},"end":{"line":53,"column":1,"offset":2078},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":53,"column":1,"offset":2078},"end":{"line":53,"column":5,"offset":2082},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":53,"column":5,"offset":2082},"end":{"line":54,"column":27,"offset":2109},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":54,"column":27,"offset":2109},"end":{"line":54,"column":35,"offset":2117},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":54,"column":35,"offset":2117},"end":{"line":54,"column":86,"offset":2168},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":54,"column":86,"offset":2168},"end":{"line":54,"column":95,"offset":2177},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":54,"column":95,"offset":2177},"end":{"line":54,"column":97,"offset":2179},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1771},"end":{"line":54,"column":97,"offset":2179},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":56,"column":1,"offset":2181},"end":{"line":56,"column":6,"offset":2186},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":58,"column":1,"offset":2188},"end":{"line":59,"column":1,"offset":2232},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":59,"column":1,"offset":2232},"end":{"line":59,"column":5,"offset":2236},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":59,"column":5,"offset":2236},"end":{"line":60,"column":1,"offset":2237},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":60,"column":1,"offset":2237},"end":{"line":60,"column":22,"offset":2258},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":60,"column":22,"offset":2258},"end":{"line":61,"column":1,"offset":2259},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":61,"column":1,"offset":2259},"end":{"line":61,"column":5,"offset":2263},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":2188},"end":{"line":61,"column":5,"offset":2263},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":63,"column":1,"offset":2265},"end":{"line":63,"column":152,"offset":2416},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":2265},"end":{"line":63,"column":152,"offset":2416},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":65,"column":8,"offset":2425},"end":{"line":65,"column":20,"offset":2437},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":2418},"end":{"line":65,"column":20,"offset":2437},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":67,"column":1,"offset":2439},"end":{"line":67,"column":56,"offset":2494},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":2439},"end":{"line":67,"column":56,"offset":2494},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":68,"column":1,"offset":2495},"end":{"line":73,"column":4,"offset":2586},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":74,"column":1,"offset":2587},"end":{"line":74,"column":5,"offset":2591},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":76,"column":1,"offset":2593},"end":{"line":76,"column":37,"offset":2629},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":76,"column":37,"offset":2629},"end":{"line":76,"column":41,"offset":2633},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":76,"column":41,"offset":2633},"end":{"line":77,"column":1,"offset":2650},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":77,"column":1,"offset":2650},"end":{"line":77,"column":5,"offset":2654},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":77,"column":5,"offset":2654},"end":{"line":78,"column":1,"offset":2655},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2655},"end":{"line":78,"column":5,"offset":2659},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":78,"column":5,"offset":2659},"end":{"line":79,"column":66,"offset":2725},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":79,"column":66,"offset":2725},"end":{"line":79,"column":89,"offset":2748},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":79,"column":89,"offset":2748},"end":{"line":80,"column":1,"offset":2788},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":80,"column":1,"offset":2788},"end":{"line":80,"column":5,"offset":2792},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":80,"column":5,"offset":2792},"end":{"line":81,"column":1,"offset":2793},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":81,"column":1,"offset":2793},"end":{"line":81,"column":5,"offset":2797},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":81,"column":5,"offset":2797},"end":{"line":82,"column":21,"offset":2818},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":82,"column":21,"offset":2818},"end":{"line":82,"column":25,"offset":2822},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":82,"column":25,"offset":2822},"end":{"line":83,"column":1,"offset":2876},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":83,"column":1,"offset":2876},"end":{"line":83,"column":5,"offset":2880},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":83,"column":5,"offset":2880},"end":{"line":84,"column":1,"offset":2881},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":84,"column":1,"offset":2881},"end":{"line":84,"column":5,"offset":2885},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":84,"column":5,"offset":2885},"end":{"line":85,"column":21,"offset":2906},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":85,"column":21,"offset":2906},"end":{"line":85,"column":25,"offset":2910},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":85,"column":25,"offset":2910},"end":{"line":86,"column":1,"offset":2965},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":86,"column":1,"offset":2965},"end":{"line":86,"column":5,"offset":2969},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":86,"column":5,"offset":2969},"end":{"line":87,"column":1,"offset":2970},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":87,"column":1,"offset":2970},"end":{"line":87,"column":5,"offset":2974},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":87,"column":5,"offset":2974},"end":{"line":88,"column":58,"offset":3032},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":88,"column":58,"offset":3032},"end":{"line":88,"column":61,"offset":3035},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":88,"column":61,"offset":3035},"end":{"line":88,"column":145,"offset":3119},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":88,"column":145,"offset":3119},"end":{"line":88,"column":153,"offset":3127},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":88,"column":153,"offset":3127},"end":{"line":88,"column":178,"offset":3152},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":2593},"end":{"line":88,"column":178,"offset":3152},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":90,"column":7,"offset":3160},"end":{"line":90,"column":10,"offset":3163},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":3154},"end":{"line":90,"column":10,"offset":3163},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":92,"column":8,"offset":3172},"end":{"line":92,"column":17,"offset":3181},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":3165},"end":{"line":92,"column":17,"offset":3181},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":93,"column":1,"offset":3182},"end":{"line":104,"column":4,"offset":3381},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":105,"column":1,"offset":3382},"end":{"line":105,"column":5,"offset":3386},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":107,"column":1,"offset":3388},"end":{"line":108,"column":1,"offset":3604},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":108,"column":1,"offset":3604},"end":{"line":108,"column":5,"offset":3608},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":108,"column":5,"offset":3608},"end":{"line":109,"column":1,"offset":3609},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":109,"column":1,"offset":3609},"end":{"line":109,"column":5,"offset":3613},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":109,"column":5,"offset":3613},"end":{"line":110,"column":72,"offset":3685},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":110,"column":72,"offset":3685},"end":{"line":110,"column":81,"offset":3694},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":110,"column":81,"offset":3694},"end":{"line":111,"column":1,"offset":3713},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":111,"column":1,"offset":3713},"end":{"line":111,"column":5,"offset":3717},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":111,"column":5,"offset":3717},"end":{"line":112,"column":1,"offset":3718},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":112,"column":1,"offset":3718},"end":{"line":112,"column":5,"offset":3722},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":112,"column":5,"offset":3722},"end":{"line":113,"column":10,"offset":3732},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":113,"column":10,"offset":3732},"end":{"line":113,"column":16,"offset":3738},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":113,"column":16,"offset":3738},"end":{"line":113,"column":34,"offset":3756},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":113,"column":34,"offset":3756},"end":{"line":113,"column":42,"offset":3764},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":113,"column":42,"offset":3764},"end":{"line":114,"column":24,"offset":3789},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":114,"column":24,"offset":3789},"end":{"line":114,"column":33,"offset":3798},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":114,"column":33,"offset":3798},"end":{"line":114,"column":107,"offset":3872},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":114,"column":107,"offset":3872},"end":{"line":114,"column":116,"offset":3881},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":114,"column":116,"offset":3881},"end":{"line":114,"column":134,"offset":3899},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":114,"column":134,"offset":3899},"end":{"line":114,"column":137,"offset":3902},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":114,"column":137,"offset":3902},"end":{"line":114,"column":161,"offset":3926},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":114,"column":161,"offset":3926},"end":{"line":114,"column":167,"offset":3932},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":114,"column":167,"offset":3932},"end":{"line":114,"column":192,"offset":3957},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":114,"column":192,"offset":3957},"end":{"line":114,"column":200,"offset":3965},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":114,"column":200,"offset":3965},"end":{"line":114,"column":218,"offset":3983},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":114,"column":218,"offset":3983},"end":{"line":114,"column":224,"offset":3989},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":114,"column":224,"offset":3989},"end":{"line":114,"column":245,"offset":4010},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":114,"column":245,"offset":4010},"end":{"line":114,"column":252,"offset":4017},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":114,"column":252,"offset":4017},"end":{"line":114,"column":257,"offset":4022},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":114,"column":257,"offset":4022},"end":{"line":114,"column":260,"offset":4025},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":114,"column":260,"offset":4025},"end":{"line":114,"column":285,"offset":4050},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":114,"column":285,"offset":4050},"end":{"line":114,"column":291,"offset":4056},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":114,"column":291,"offset":4056},"end":{"line":115,"column":96,"offset":4182},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":115,"column":96,"offset":4182},"end":{"line":115,"column":111,"offset":4197},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":115,"column":111,"offset":4197},"end":{"line":115,"column":182,"offset":4268},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":3388},"end":{"line":115,"column":182,"offset":4268},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":117,"column":8,"offset":4277},"end":{"line":117,"column":19,"offset":4288},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":4270},"end":{"line":117,"column":19,"offset":4288},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":118,"column":1,"offset":4289},"end":{"line":118,"column":14,"offset":4302},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":4289},"end":{"line":118,"column":14,"offset":4302},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":119,"column":1,"offset":4303},"end":{"line":134,"column":4,"offset":4718},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":135,"column":1,"offset":4719},"end":{"line":135,"column":5,"offset":4723},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":137,"column":1,"offset":4725},"end":{"line":137,"column":141,"offset":4865},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":4725},"end":{"line":137,"column":141,"offset":4865},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":139,"column":8,"offset":4874},"end":{"line":139,"column":30,"offset":4896},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":4867},"end":{"line":139,"column":30,"offset":4896},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":140,"column":1,"offset":4897},"end":{"line":140,"column":199,"offset":5095},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":4897},"end":{"line":140,"column":199,"offset":5095},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":142,"column":8,"offset":5104},"end":{"line":142,"column":30,"offset":5126},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":5097},"end":{"line":142,"column":30,"offset":5126},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":144,"column":1,"offset":5128},"end":{"line":145,"column":1,"offset":5203},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":145,"column":1,"offset":5203},"end":{"line":145,"column":5,"offset":5207},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":145,"column":5,"offset":5207},"end":{"line":146,"column":1,"offset":5208},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":146,"column":1,"offset":5208},"end":{"line":146,"column":5,"offset":5212},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":146,"column":5,"offset":5212},"end":{"line":148,"column":1,"offset":5274},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":148,"column":1,"offset":5274},"end":{"line":148,"column":5,"offset":5278},"indent":[]}},{"type":"break","position":{"start":{"line":148,"column":5,"offset":5278},"end":{"line":149,"column":1,"offset":5281},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":149,"column":1,"offset":5281},"end":{"line":149,"column":11,"offset":5291},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":149,"column":11,"offset":5291},"end":{"line":149,"column":19,"offset":5299},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":149,"column":19,"offset":5299},"end":{"line":149,"column":24,"offset":5304},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":149,"column":24,"offset":5304},"end":{"line":149,"column":34,"offset":5314},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":149,"column":34,"offset":5314},"end":{"line":150,"column":1,"offset":5363},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":150,"column":1,"offset":5363},"end":{"line":150,"column":5,"offset":5367},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":5128},"end":{"line":150,"column":5,"offset":5367},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":152,"column":8,"offset":5376},"end":{"line":152,"column":12,"offset":5380},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":5369},"end":{"line":152,"column":12,"offset":5380},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":153,"column":1,"offset":5381},"end":{"line":158,"column":4,"offset":5492},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":159,"column":1,"offset":5493},"end":{"line":160,"column":5,"offset":5502},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":162,"column":1,"offset":5504},"end":{"line":162,"column":7,"offset":5510},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":162,"column":7,"offset":5510},"end":{"line":164,"column":1,"offset":5592},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":164,"column":1,"offset":5592},"end":{"line":164,"column":5,"offset":5596},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":164,"column":5,"offset":5596},"end":{"line":165,"column":1,"offset":5597},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":165,"column":1,"offset":5597},"end":{"line":165,"column":5,"offset":5601},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":165,"column":5,"offset":5601},"end":{"line":166,"column":10,"offset":5611},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":166,"column":10,"offset":5611},"end":{"line":166,"column":14,"offset":5615},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":166,"column":14,"offset":5615},"end":{"line":166,"column":22,"offset":5623},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":166,"column":22,"offset":5623},"end":{"line":166,"column":30,"offset":5631},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":166,"column":30,"offset":5631},"end":{"line":166,"column":50,"offset":5651},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":166,"column":50,"offset":5651},"end":{"line":166,"column":53,"offset":5654},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":166,"column":53,"offset":5654},"end":{"line":166,"column":90,"offset":5691},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":166,"column":90,"offset":5691},"end":{"line":166,"column":96,"offset":5697},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":166,"column":96,"offset":5697},"end":{"line":167,"column":1,"offset":5700},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":167,"column":1,"offset":5700},"end":{"line":167,"column":5,"offset":5704},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":167,"column":5,"offset":5704},"end":{"line":168,"column":1,"offset":5705},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":168,"column":1,"offset":5705},"end":{"line":168,"column":5,"offset":5709},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":168,"column":5,"offset":5709},"end":{"line":169,"column":14,"offset":5723},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":169,"column":14,"offset":5723},"end":{"line":169,"column":18,"offset":5727},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":169,"column":18,"offset":5727},"end":{"line":169,"column":90,"offset":5799},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":169,"column":90,"offset":5799},"end":{"line":169,"column":94,"offset":5803},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":169,"column":94,"offset":5803},"end":{"line":169,"column":125,"offset":5834},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":169,"column":125,"offset":5834},"end":{"line":169,"column":131,"offset":5840},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":169,"column":131,"offset":5840},"end":{"line":170,"column":1,"offset":5855},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":170,"column":1,"offset":5855},"end":{"line":170,"column":5,"offset":5859},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":170,"column":5,"offset":5859},"end":{"line":171,"column":1,"offset":5860},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":171,"column":1,"offset":5860},"end":{"line":171,"column":5,"offset":5864},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":171,"column":5,"offset":5864},"end":{"line":172,"column":14,"offset":5878},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":172,"column":14,"offset":5878},"end":{"line":172,"column":18,"offset":5882},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":172,"column":18,"offset":5882},"end":{"line":172,"column":37,"offset":5901},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":172,"column":37,"offset":5901},"end":{"line":172,"column":40,"offset":5904},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":172,"column":40,"offset":5904},"end":{"line":172,"column":77,"offset":5941},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":172,"column":77,"offset":5941},"end":{"line":172,"column":81,"offset":5945},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":172,"column":81,"offset":5945},"end":{"line":172,"column":99,"offset":5963},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":172,"column":99,"offset":5963},"end":{"line":172,"column":102,"offset":5966},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":172,"column":102,"offset":5966},"end":{"line":172,"column":133,"offset":5997},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":172,"column":133,"offset":5997},"end":{"line":172,"column":139,"offset":6003},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":172,"column":139,"offset":6003},"end":{"line":172,"column":167,"offset":6031},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":172,"column":167,"offset":6031},"end":{"line":172,"column":171,"offset":6035},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":172,"column":171,"offset":6035},"end":{"line":173,"column":1,"offset":6037},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":173,"column":1,"offset":6037},"end":{"line":173,"column":5,"offset":6041},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":173,"column":5,"offset":6041},"end":{"line":174,"column":1,"offset":6042},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":174,"column":1,"offset":6042},"end":{"line":174,"column":5,"offset":6046},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":174,"column":5,"offset":6046},"end":{"line":176,"column":1,"offset":6066},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":176,"column":1,"offset":6066},"end":{"line":176,"column":5,"offset":6070},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":176,"column":5,"offset":6070},"end":{"line":177,"column":6,"offset":6076},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":177,"column":6,"offset":6076},"end":{"line":177,"column":12,"offset":6082},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":177,"column":12,"offset":6082},"end":{"line":177,"column":30,"offset":6100},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":177,"column":30,"offset":6100},"end":{"line":177,"column":36,"offset":6106},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":177,"column":36,"offset":6106},"end":{"line":177,"column":62,"offset":6132},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":177,"column":62,"offset":6132},"end":{"line":177,"column":75,"offset":6145},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":177,"column":75,"offset":6145},"end":{"line":177,"column":159,"offset":6229},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":5504},"end":{"line":177,"column":159,"offset":6229},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":179,"column":8,"offset":6238},"end":{"line":179,"column":41,"offset":6271},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":6231},"end":{"line":179,"column":41,"offset":6271},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":180,"column":1,"offset":6272},"end":{"line":185,"column":4,"offset":6347},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":186,"column":1,"offset":6348},"end":{"line":187,"column":1,"offset":6367},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":187,"column":1,"offset":6367},"end":{"line":187,"column":5,"offset":6371},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":187,"column":5,"offset":6371},"end":{"line":189,"column":5,"offset":6509},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":189,"column":5,"offset":6509},"end":{"line":189,"column":9,"offset":6513},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":189,"column":9,"offset":6513},"end":{"line":190,"column":5,"offset":6518},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":190,"column":5,"offset":6518},"end":{"line":190,"column":27,"offset":6540},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":190,"column":27,"offset":6540},"end":{"line":191,"column":5,"offset":6545},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":191,"column":5,"offset":6545},"end":{"line":191,"column":9,"offset":6549},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":191,"column":9,"offset":6549},"end":{"line":192,"column":5,"offset":6554},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":192,"column":5,"offset":6554},"end":{"line":192,"column":12,"offset":6561},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":192,"column":12,"offset":6561},"end":{"line":192,"column":17,"offset":6566},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":192,"column":17,"offset":6566},"end":{"line":192,"column":25,"offset":6574},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":192,"column":25,"offset":6574},"end":{"line":192,"column":63,"offset":6612},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":192,"column":63,"offset":6612},"end":{"line":192,"column":66,"offset":6615},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":192,"column":66,"offset":6615},"end":{"line":192,"column":86,"offset":6635},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":192,"column":86,"offset":6635},"end":{"line":192,"column":89,"offset":6638},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":192,"column":89,"offset":6638},"end":{"line":192,"column":110,"offset":6659},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":192,"column":110,"offset":6659},"end":{"line":192,"column":119,"offset":6668},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":192,"column":119,"offset":6668},"end":{"line":193,"column":1,"offset":6670},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":193,"column":1,"offset":6670},"end":{"line":193,"column":5,"offset":6674},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":193,"column":5,"offset":6674},"end":{"line":195,"column":1,"offset":6690},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":195,"column":1,"offset":6690},"end":{"line":195,"column":5,"offset":6694},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":195,"column":5,"offset":6694},"end":{"line":197,"column":5,"offset":6801},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":197,"column":5,"offset":6801},"end":{"line":197,"column":9,"offset":6805},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":197,"column":9,"offset":6805},"end":{"line":198,"column":1,"offset":6806},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":198,"column":1,"offset":6806},"end":{"line":198,"column":23,"offset":6828},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":198,"column":23,"offset":6828},"end":{"line":198,"column":35,"offset":6840},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":198,"column":35,"offset":6840},"end":{"line":198,"column":61,"offset":6866},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":198,"column":61,"offset":6866},"end":{"line":199,"column":1,"offset":6867},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":199,"column":1,"offset":6867},"end":{"line":199,"column":5,"offset":6871},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":199,"column":5,"offset":6871},"end":{"line":200,"column":5,"offset":6876},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":200,"column":5,"offset":6876},"end":{"line":200,"column":8,"offset":6879},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":200,"column":8,"offset":6879},"end":{"line":200,"column":58,"offset":6929},"indent":[]}}],"position":{"start":{"line":186,"column":1,"offset":6348},"end":{"line":200,"column":58,"offset":6929},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":202,"column":1,"offset":6931},"end":{"line":203,"column":1,"offset":6949},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":203,"column":1,"offset":6949},"end":{"line":203,"column":5,"offset":6953},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":6931},"end":{"line":203,"column":5,"offset":6953},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":204,"column":1,"offset":6954},"end":{"line":206,"column":4,"offset":6984},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":207,"column":1,"offset":6985},"end":{"line":207,"column":13,"offset":6997},"indent":[]}}],"position":{"start":{"line":207,"column":1,"offset":6985},"end":{"line":207,"column":13,"offset":6997},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":208,"column":1,"offset":6998},"end":{"line":214,"column":4,"offset":7077},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":215,"column":1,"offset":7078},"end":{"line":215,"column":8,"offset":7085},"indent":[]}}],"position":{"start":{"line":215,"column":1,"offset":7078},"end":{"line":215,"column":8,"offset":7085},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":216,"column":1,"offset":7086},"end":{"line":223,"column":4,"offset":7210},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":224,"column":1,"offset":7211},"end":{"line":225,"column":5,"offset":7220},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":227,"column":1,"offset":7222},"end":{"line":227,"column":11,"offset":7232},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":227,"column":11,"offset":7232},"end":{"line":227,"column":24,"offset":7245},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":227,"column":24,"offset":7245},"end":{"line":227,"column":107,"offset":7328},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":7222},"end":{"line":227,"column":107,"offset":7328},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":229,"column":7,"offset":7336},"end":{"line":229,"column":10,"offset":7339},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":7330},"end":{"line":229,"column":10,"offset":7339},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":230,"column":7,"offset":7346},"end":{"line":230,"column":10,"offset":7349},"indent":[]}}],"position":{"start":{"line":230,"column":1,"offset":7340},"end":{"line":230,"column":10,"offset":7349},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":232,"column":6,"offset":7356},"end":{"line":232,"column":10,"offset":7360},"indent":[]}}],"position":{"start":{"line":232,"column":1,"offset":7351},"end":{"line":232,"column":10,"offset":7360},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":233,"column":7,"offset":7367},"end":{"line":233,"column":13,"offset":7373},"indent":[]}}],"position":{"start":{"line":233,"column":1,"offset":7361},"end":{"line":233,"column":13,"offset":7373},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":234,"column":1,"offset":7374},"end":{"line":234,"column":49,"offset":7422},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":234,"column":49,"offset":7422},"end":{"line":234,"column":57,"offset":7430},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":234,"column":57,"offset":7430},"end":{"line":234,"column":133,"offset":7506},"indent":[]}}],"position":{"start":{"line":234,"column":1,"offset":7374},"end":{"line":234,"column":133,"offset":7506},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":235,"column":1,"offset":7507},"end":{"line":245,"column":4,"offset":7702},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":246,"column":1,"offset":7703},"end":{"line":246,"column":5,"offset":7707},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":249,"column":1,"offset":7710},"end":{"line":250,"column":1,"offset":7792},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":250,"column":1,"offset":7792},"end":{"line":250,"column":5,"offset":7796},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":250,"column":5,"offset":7796},"end":{"line":251,"column":1,"offset":7797},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":251,"column":1,"offset":7797},"end":{"line":251,"column":5,"offset":7801},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":251,"column":5,"offset":7801},"end":{"line":252,"column":26,"offset":7827},"indent":[1]}}],"position":{"start":{"line":249,"column":1,"offset":7710},"end":{"line":252,"column":26,"offset":7827},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":253,"column":1,"offset":7828},"end":{"line":258,"column":4,"offset":7956},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":259,"column":1,"offset":7957},"end":{"line":259,"column":14,"offset":7970},"indent":[]}}],"position":{"start":{"line":259,"column":1,"offset":7957},"end":{"line":259,"column":14,"offset":7970},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":261,"column":1,"offset":7972},"end":{"line":274,"column":4,"offset":8254},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":276,"column":1,"offset":8256},"end":{"line":277,"column":5,"offset":8265},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":280,"column":7,"offset":8274},"end":{"line":280,"column":13,"offset":8280},"indent":[]}}],"position":{"start":{"line":280,"column":1,"offset":8268},"end":{"line":280,"column":13,"offset":8280},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":280,"column":13,"offset":8280}}}}