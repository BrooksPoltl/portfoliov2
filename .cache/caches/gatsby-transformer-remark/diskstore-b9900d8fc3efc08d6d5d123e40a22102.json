{"expireTime":9007200842155642000,"key":"transformer-remark-markdown-html-ast-2db8e1e90ebdf61a04e85d28dab7801a-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":7,"offset":239},"end":{"line":4,"column":12,"offset":244}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":12,"offset":244}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"LECTURE","position":{"start":{"line":5,"column":7,"offset":251},"end":{"line":5,"column":14,"offset":258}}}],"position":{"start":{"line":5,"column":1,"offset":245},"end":{"line":5,"column":14,"offset":258}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":6,"column":8,"offset":266},"end":{"line":6,"column":11,"offset":269}}}],"position":{"start":{"line":6,"column":1,"offset":259},"end":{"line":6,"column":11,"offset":269}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"####### Mathmatical Operations\nClass starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":7,"column":1,"offset":270},"end":{"line":9,"column":1,"offset":445}}},{"type":"raw","value":"<br>","position":{"start":{"line":9,"column":1,"offset":445},"end":{"line":9,"column":5,"offset":449}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":9,"column":5,"offset":449},"end":{"line":9,"column":16,"offset":460}}},{"type":"raw","value":"<br>","position":{"start":{"line":9,"column":16,"offset":460},"end":{"line":9,"column":20,"offset":464}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":9,"column":20,"offset":464},"end":{"line":11,"column":1,"offset":608}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":608},"end":{"line":11,"column":5,"offset":612}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":11,"column":5,"offset":612},"end":{"line":11,"column":16,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":16,"offset":623},"end":{"line":11,"column":20,"offset":627}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":11,"column":20,"offset":627},"end":{"line":12,"column":45,"offset":672}}},{"type":"raw","value":"<br>","position":{"start":{"line":12,"column":45,"offset":672},"end":{"line":12,"column":49,"offset":676}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":12,"column":49,"offset":676},"end":{"line":12,"column":65,"offset":692}}},{"type":"raw","value":"<br>","position":{"start":{"line":12,"column":65,"offset":692},"end":{"line":12,"column":69,"offset":696}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":12,"column":69,"offset":696},"end":{"line":14,"column":1,"offset":739}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":739},"end":{"line":14,"column":5,"offset":743}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":14,"column":5,"offset":743},"end":{"line":14,"column":22,"offset":760}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":22,"offset":760},"end":{"line":14,"column":26,"offset":764}}},{"type":"text","value":"\n","position":{"start":{"line":14,"column":26,"offset":764},"end":{"line":15,"column":1,"offset":765}}},{"type":"raw","value":"<br>","position":{"start":{"line":15,"column":1,"offset":765},"end":{"line":15,"column":5,"offset":769}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. Scheme takes the arguments and then computes the functions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":15,"column":5,"offset":769},"end":{"line":17,"column":1,"offset":1004}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":17,"column":1,"offset":1004},"end":{"line":17,"column":12,"offset":1015}}},{"type":"text","value":" is a function and not a primitive value, so it calls ","position":{"start":{"line":17,"column":12,"offset":1015},"end":{"line":17,"column":66,"offset":1069}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":17,"column":66,"offset":1069},"end":{"line":17,"column":77,"offset":1080}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":17,"column":77,"offset":1080},"end":{"line":17,"column":104,"offset":1107}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":17,"column":104,"offset":1107},"end":{"line":17,"column":107,"offset":1110}}},{"type":"text","value":" is now 7 and it has 2 primitive values, meaning it can calculate the ","position":{"start":{"line":17,"column":107,"offset":1110},"end":{"line":17,"column":177,"offset":1180}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":17,"column":177,"offset":1180},"end":{"line":17,"column":180,"offset":1183}}},{"type":"text","value":" to get 3.","position":{"start":{"line":17,"column":180,"offset":1183},"end":{"line":17,"column":190,"offset":1193}}}],"position":{"start":{"line":7,"column":1,"offset":270},"end":{"line":17,"column":190,"offset":1193}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Defining function","position":{"start":{"line":19,"column":8,"offset":1202},"end":{"line":19,"column":25,"offset":1219}}}],"position":{"start":{"line":19,"column":1,"offset":1195},"end":{"line":19,"column":26,"offset":1220}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":21,"column":8,"offset":1230},"end":{"line":21,"column":11,"offset":1233}}}],"position":{"start":{"line":21,"column":1,"offset":1223},"end":{"line":21,"column":11,"offset":1233}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"BOOK","position":{"start":{"line":22,"column":7,"offset":1240},"end":{"line":22,"column":11,"offset":1244}}}],"position":{"start":{"line":22,"column":1,"offset":1234},"end":{"line":22,"column":11,"offset":1244}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"1.1","position":{"start":{"line":23,"column":8,"offset":1252},"end":{"line":23,"column":11,"offset":1255}}}],"position":{"start":{"line":23,"column":1,"offset":1245},"end":{"line":23,"column":11,"offset":1255}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":24,"column":8,"offset":1263},"end":{"line":24,"column":11,"offset":1266}}}],"position":{"start":{"line":24,"column":1,"offset":1256},"end":{"line":24,"column":11,"offset":1266}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":25,"column":8,"offset":1274},"end":{"line":25,"column":11,"offset":1277}}}],"position":{"start":{"line":25,"column":1,"offset":1267},"end":{"line":25,"column":11,"offset":1277}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":26,"column":7,"offset":1284},"end":{"line":26,"column":11,"offset":1288}}}],"position":{"start":{"line":26,"column":1,"offset":1278},"end":{"line":26,"column":11,"offset":1288}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Lab 1","position":{"start":{"line":27,"column":8,"offset":1296},"end":{"line":27,"column":13,"offset":1301}}}],"position":{"start":{"line":27,"column":1,"offset":1289},"end":{"line":27,"column":14,"offset":1302}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Lab 2","position":{"start":{"line":28,"column":8,"offset":1310},"end":{"line":28,"column":13,"offset":1315}}}],"position":{"start":{"line":28,"column":1,"offset":1303},"end":{"line":28,"column":14,"offset":1316}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":28,"column":14,"offset":1316}}}}