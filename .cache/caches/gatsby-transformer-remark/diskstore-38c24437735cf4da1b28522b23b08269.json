{"expireTime":9007200842250872000,"key":"transformer-remark-markdown-ast-52906921798a6424b331bdc3965ab7e5-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632},"indent":[]}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities. \n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705},"indent":[]}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791},"indent":[]}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833},"indent":[]}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865},"indent":[]}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884},"indent":[]}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916},"indent":[]}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052},"indent":[]}},{"type":"text","value":"\nEnvironment: The name-object pairs the interpreter keeps in memory.\n","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":34,"column":1,"offset":1121},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1121},"end":{"line":34,"column":5,"offset":1125},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":34,"column":5,"offset":1125},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Procedures can be used to build ontop of other procedures:\n","position":{"start":{"line":36,"column":1,"offset":1127},"end":{"line":37,"column":1,"offset":1186},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":37,"column":1,"offset":1186},"end":{"line":37,"column":5,"offset":1190},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1127},"end":{"line":37,"column":5,"offset":1190},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":39,"column":1,"offset":1192},"end":{"line":39,"column":5,"offset":1196},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":41,"column":7,"offset":1204},"end":{"line":41,"column":10,"offset":1207},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1198},"end":{"line":41,"column":10,"offset":1207},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":42,"column":7,"offset":1214},"end":{"line":42,"column":10,"offset":1217},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1208},"end":{"line":42,"column":10,"offset":1217},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":44,"column":6,"offset":1224},"end":{"line":44,"column":14,"offset":1232},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1219},"end":{"line":44,"column":14,"offset":1232},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":45,"column":7,"offset":1239},"end":{"line":45,"column":10,"offset":1242},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1233},"end":{"line":45,"column":10,"offset":1242},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":47,"column":8,"offset":1251},"end":{"line":47,"column":30,"offset":1273},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1244},"end":{"line":47,"column":30,"offset":1273},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":49,"column":1,"offset":1275},"end":{"line":50,"column":1,"offset":1419},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":50,"column":1,"offset":1419},"end":{"line":50,"column":5,"offset":1423},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":50,"column":5,"offset":1423},"end":{"line":50,"column":16,"offset":1434},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":50,"column":16,"offset":1434},"end":{"line":50,"column":20,"offset":1438},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":50,"column":20,"offset":1438},"end":{"line":52,"column":1,"offset":1582},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":52,"column":1,"offset":1582},"end":{"line":52,"column":5,"offset":1586},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":52,"column":5,"offset":1586},"end":{"line":52,"column":16,"offset":1597},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":52,"column":16,"offset":1597},"end":{"line":52,"column":20,"offset":1601},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":52,"column":20,"offset":1601},"end":{"line":53,"column":45,"offset":1646},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":53,"column":45,"offset":1646},"end":{"line":53,"column":49,"offset":1650},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":53,"column":49,"offset":1650},"end":{"line":53,"column":65,"offset":1666},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":53,"column":65,"offset":1666},"end":{"line":53,"column":69,"offset":1670},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":53,"column":69,"offset":1670},"end":{"line":55,"column":1,"offset":1713},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":55,"column":1,"offset":1713},"end":{"line":55,"column":5,"offset":1717},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":55,"column":5,"offset":1717},"end":{"line":55,"column":22,"offset":1734},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":55,"column":22,"offset":1734},"end":{"line":55,"column":26,"offset":1738},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":55,"column":26,"offset":1738},"end":{"line":56,"column":1,"offset":1739},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":56,"column":1,"offset":1739},"end":{"line":56,"column":5,"offset":1743},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":56,"column":5,"offset":1743},"end":{"line":58,"column":1,"offset":1861},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":58,"column":1,"offset":1861},"end":{"line":58,"column":5,"offset":1865},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":58,"column":5,"offset":1865},"end":{"line":60,"column":1,"offset":1986},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":60,"column":1,"offset":1986},"end":{"line":60,"column":12,"offset":1997},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":60,"column":12,"offset":1997},"end":{"line":60,"column":68,"offset":2053},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":60,"column":68,"offset":2053},"end":{"line":60,"column":79,"offset":2064},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":60,"column":79,"offset":2064},"end":{"line":60,"column":106,"offset":2091},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":60,"column":106,"offset":2091},"end":{"line":60,"column":109,"offset":2094},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":60,"column":109,"offset":2094},"end":{"line":60,"column":189,"offset":2174},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":60,"column":189,"offset":2174},"end":{"line":60,"column":192,"offset":2177},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":60,"column":192,"offset":2177},"end":{"line":60,"column":202,"offset":2187},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1275},"end":{"line":60,"column":202,"offset":2187},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":62,"column":8,"offset":2196},"end":{"line":62,"column":14,"offset":2202},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":2189},"end":{"line":62,"column":14,"offset":2202},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":63,"column":1,"offset":2203},"end":{"line":63,"column":9,"offset":2211},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":63,"column":9,"offset":2211},"end":{"line":63,"column":73,"offset":2275},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":2203},"end":{"line":63,"column":73,"offset":2275},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":64,"column":1,"offset":2276},"end":{"line":67,"column":4,"offset":2315},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":68,"column":1,"offset":2316},"end":{"line":68,"column":5,"offset":2320},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":70,"column":1,"offset":2322},"end":{"line":70,"column":72,"offset":2393},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":70,"column":72,"offset":2393},"end":{"line":70,"column":80,"offset":2401},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":70,"column":80,"offset":2401},"end":{"line":71,"column":1,"offset":2425},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":71,"column":1,"offset":2425},"end":{"line":71,"column":5,"offset":2429},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":71,"column":5,"offset":2429},"end":{"line":72,"column":1,"offset":2430},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":72,"column":1,"offset":2430},"end":{"line":72,"column":5,"offset":2434},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":72,"column":5,"offset":2434},"end":{"line":73,"column":184,"offset":2618},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":73,"column":184,"offset":2618},"end":{"line":73,"column":187,"offset":2621},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":73,"column":187,"offset":2621},"end":{"line":74,"column":1,"offset":2624},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":74,"column":1,"offset":2624},"end":{"line":74,"column":5,"offset":2628},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":74,"column":5,"offset":2628},"end":{"line":75,"column":1,"offset":2629},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2629},"end":{"line":75,"column":5,"offset":2633},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":75,"column":5,"offset":2633},"end":{"line":76,"column":27,"offset":2660},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":76,"column":27,"offset":2660},"end":{"line":76,"column":35,"offset":2668},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":76,"column":35,"offset":2668},"end":{"line":76,"column":86,"offset":2719},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":76,"column":86,"offset":2719},"end":{"line":76,"column":95,"offset":2728},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":76,"column":95,"offset":2728},"end":{"line":76,"column":97,"offset":2730},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":2322},"end":{"line":76,"column":97,"offset":2730},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":78,"column":1,"offset":2732},"end":{"line":78,"column":6,"offset":2737},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":80,"column":1,"offset":2739},"end":{"line":81,"column":1,"offset":2783},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":81,"column":1,"offset":2783},"end":{"line":81,"column":5,"offset":2787},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":81,"column":5,"offset":2787},"end":{"line":82,"column":1,"offset":2788},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":82,"column":1,"offset":2788},"end":{"line":82,"column":22,"offset":2809},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":82,"column":22,"offset":2809},"end":{"line":83,"column":1,"offset":2810},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":83,"column":1,"offset":2810},"end":{"line":83,"column":5,"offset":2814},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":2739},"end":{"line":83,"column":5,"offset":2814},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":85,"column":1,"offset":2816},"end":{"line":85,"column":152,"offset":2967},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":2816},"end":{"line":85,"column":152,"offset":2967},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":87,"column":8,"offset":2976},"end":{"line":87,"column":20,"offset":2988},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":2969},"end":{"line":87,"column":20,"offset":2988},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":89,"column":1,"offset":2990},"end":{"line":89,"column":56,"offset":3045},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":2990},"end":{"line":89,"column":56,"offset":3045},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":90,"column":1,"offset":3046},"end":{"line":95,"column":4,"offset":3137},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":96,"column":1,"offset":3138},"end":{"line":96,"column":5,"offset":3142},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":98,"column":1,"offset":3144},"end":{"line":98,"column":37,"offset":3180},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":98,"column":37,"offset":3180},"end":{"line":98,"column":41,"offset":3184},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":98,"column":41,"offset":3184},"end":{"line":99,"column":1,"offset":3201},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":99,"column":1,"offset":3201},"end":{"line":99,"column":5,"offset":3205},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":99,"column":5,"offset":3205},"end":{"line":100,"column":1,"offset":3206},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":100,"column":1,"offset":3206},"end":{"line":100,"column":5,"offset":3210},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":100,"column":5,"offset":3210},"end":{"line":101,"column":66,"offset":3276},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":101,"column":66,"offset":3276},"end":{"line":101,"column":89,"offset":3299},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":101,"column":89,"offset":3299},"end":{"line":102,"column":1,"offset":3339},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":102,"column":1,"offset":3339},"end":{"line":102,"column":5,"offset":3343},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":102,"column":5,"offset":3343},"end":{"line":103,"column":1,"offset":3344},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":103,"column":1,"offset":3344},"end":{"line":103,"column":5,"offset":3348},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":103,"column":5,"offset":3348},"end":{"line":104,"column":21,"offset":3369},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":104,"column":21,"offset":3369},"end":{"line":104,"column":25,"offset":3373},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":104,"column":25,"offset":3373},"end":{"line":105,"column":1,"offset":3427},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":105,"column":1,"offset":3427},"end":{"line":105,"column":5,"offset":3431},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":105,"column":5,"offset":3431},"end":{"line":106,"column":1,"offset":3432},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":106,"column":1,"offset":3432},"end":{"line":106,"column":5,"offset":3436},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":106,"column":5,"offset":3436},"end":{"line":107,"column":21,"offset":3457},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":107,"column":21,"offset":3457},"end":{"line":107,"column":25,"offset":3461},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":107,"column":25,"offset":3461},"end":{"line":108,"column":1,"offset":3516},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":108,"column":1,"offset":3516},"end":{"line":108,"column":5,"offset":3520},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":108,"column":5,"offset":3520},"end":{"line":109,"column":1,"offset":3521},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":109,"column":1,"offset":3521},"end":{"line":109,"column":5,"offset":3525},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":109,"column":5,"offset":3525},"end":{"line":110,"column":58,"offset":3583},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":110,"column":58,"offset":3583},"end":{"line":110,"column":61,"offset":3586},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":110,"column":61,"offset":3586},"end":{"line":110,"column":145,"offset":3670},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":110,"column":145,"offset":3670},"end":{"line":110,"column":153,"offset":3678},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":110,"column":153,"offset":3678},"end":{"line":110,"column":178,"offset":3703},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":3144},"end":{"line":110,"column":178,"offset":3703},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":112,"column":7,"offset":3711},"end":{"line":112,"column":10,"offset":3714},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":3705},"end":{"line":112,"column":10,"offset":3714},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":114,"column":8,"offset":3723},"end":{"line":114,"column":17,"offset":3732},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":3716},"end":{"line":114,"column":17,"offset":3732},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":115,"column":1,"offset":3733},"end":{"line":126,"column":4,"offset":3932},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":127,"column":1,"offset":3933},"end":{"line":127,"column":5,"offset":3937},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":129,"column":1,"offset":3939},"end":{"line":130,"column":1,"offset":4155},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":130,"column":1,"offset":4155},"end":{"line":130,"column":5,"offset":4159},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":130,"column":5,"offset":4159},"end":{"line":131,"column":1,"offset":4160},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":131,"column":1,"offset":4160},"end":{"line":131,"column":5,"offset":4164},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":131,"column":5,"offset":4164},"end":{"line":132,"column":72,"offset":4236},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":132,"column":72,"offset":4236},"end":{"line":132,"column":81,"offset":4245},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":132,"column":81,"offset":4245},"end":{"line":133,"column":1,"offset":4264},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":133,"column":1,"offset":4264},"end":{"line":133,"column":5,"offset":4268},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":133,"column":5,"offset":4268},"end":{"line":134,"column":1,"offset":4269},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":134,"column":1,"offset":4269},"end":{"line":134,"column":5,"offset":4273},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":134,"column":5,"offset":4273},"end":{"line":135,"column":10,"offset":4283},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":135,"column":10,"offset":4283},"end":{"line":135,"column":16,"offset":4289},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":135,"column":16,"offset":4289},"end":{"line":135,"column":34,"offset":4307},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":135,"column":34,"offset":4307},"end":{"line":135,"column":42,"offset":4315},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":135,"column":42,"offset":4315},"end":{"line":136,"column":24,"offset":4340},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":136,"column":24,"offset":4340},"end":{"line":136,"column":33,"offset":4349},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":136,"column":33,"offset":4349},"end":{"line":136,"column":107,"offset":4423},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":136,"column":107,"offset":4423},"end":{"line":136,"column":116,"offset":4432},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":136,"column":116,"offset":4432},"end":{"line":136,"column":134,"offset":4450},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":136,"column":134,"offset":4450},"end":{"line":136,"column":137,"offset":4453},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":136,"column":137,"offset":4453},"end":{"line":136,"column":161,"offset":4477},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":136,"column":161,"offset":4477},"end":{"line":136,"column":167,"offset":4483},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":136,"column":167,"offset":4483},"end":{"line":136,"column":192,"offset":4508},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":136,"column":192,"offset":4508},"end":{"line":136,"column":200,"offset":4516},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":136,"column":200,"offset":4516},"end":{"line":136,"column":218,"offset":4534},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":136,"column":218,"offset":4534},"end":{"line":136,"column":224,"offset":4540},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":136,"column":224,"offset":4540},"end":{"line":136,"column":245,"offset":4561},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":136,"column":245,"offset":4561},"end":{"line":136,"column":252,"offset":4568},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":136,"column":252,"offset":4568},"end":{"line":136,"column":257,"offset":4573},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":136,"column":257,"offset":4573},"end":{"line":136,"column":260,"offset":4576},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":136,"column":260,"offset":4576},"end":{"line":136,"column":285,"offset":4601},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":136,"column":285,"offset":4601},"end":{"line":136,"column":291,"offset":4607},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":136,"column":291,"offset":4607},"end":{"line":137,"column":96,"offset":4733},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":137,"column":96,"offset":4733},"end":{"line":137,"column":111,"offset":4748},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":137,"column":111,"offset":4748},"end":{"line":137,"column":182,"offset":4819},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":3939},"end":{"line":137,"column":182,"offset":4819},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":139,"column":8,"offset":4828},"end":{"line":139,"column":19,"offset":4839},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":4821},"end":{"line":139,"column":19,"offset":4839},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":140,"column":1,"offset":4840},"end":{"line":140,"column":14,"offset":4853},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":4840},"end":{"line":140,"column":14,"offset":4853},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":141,"column":1,"offset":4854},"end":{"line":156,"column":4,"offset":5269},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":157,"column":1,"offset":5270},"end":{"line":157,"column":5,"offset":5274},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":159,"column":1,"offset":5276},"end":{"line":159,"column":141,"offset":5416},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":5276},"end":{"line":159,"column":141,"offset":5416},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":161,"column":8,"offset":5425},"end":{"line":161,"column":30,"offset":5447},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":5418},"end":{"line":161,"column":30,"offset":5447},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":162,"column":1,"offset":5448},"end":{"line":162,"column":199,"offset":5646},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":5448},"end":{"line":162,"column":199,"offset":5646},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":164,"column":8,"offset":5655},"end":{"line":164,"column":30,"offset":5677},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":5648},"end":{"line":164,"column":30,"offset":5677},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":166,"column":1,"offset":5679},"end":{"line":167,"column":1,"offset":5754},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":167,"column":1,"offset":5754},"end":{"line":167,"column":5,"offset":5758},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":167,"column":5,"offset":5758},"end":{"line":168,"column":1,"offset":5759},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":168,"column":1,"offset":5759},"end":{"line":168,"column":5,"offset":5763},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":168,"column":5,"offset":5763},"end":{"line":170,"column":1,"offset":5825},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":170,"column":1,"offset":5825},"end":{"line":170,"column":5,"offset":5829},"indent":[]}},{"type":"break","position":{"start":{"line":170,"column":5,"offset":5829},"end":{"line":171,"column":1,"offset":5832},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":171,"column":1,"offset":5832},"end":{"line":171,"column":11,"offset":5842},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":171,"column":11,"offset":5842},"end":{"line":171,"column":19,"offset":5850},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":171,"column":19,"offset":5850},"end":{"line":171,"column":24,"offset":5855},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":171,"column":24,"offset":5855},"end":{"line":171,"column":34,"offset":5865},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":171,"column":34,"offset":5865},"end":{"line":172,"column":1,"offset":5914},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":172,"column":1,"offset":5914},"end":{"line":172,"column":5,"offset":5918},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":5679},"end":{"line":172,"column":5,"offset":5918},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":174,"column":8,"offset":5927},"end":{"line":174,"column":12,"offset":5931},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":5920},"end":{"line":174,"column":12,"offset":5931},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":175,"column":1,"offset":5932},"end":{"line":180,"column":4,"offset":6043},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":181,"column":1,"offset":6044},"end":{"line":182,"column":5,"offset":6053},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":184,"column":1,"offset":6055},"end":{"line":184,"column":7,"offset":6061},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":184,"column":7,"offset":6061},"end":{"line":186,"column":1,"offset":6143},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":186,"column":1,"offset":6143},"end":{"line":186,"column":5,"offset":6147},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":186,"column":5,"offset":6147},"end":{"line":187,"column":1,"offset":6148},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":187,"column":1,"offset":6148},"end":{"line":187,"column":5,"offset":6152},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":187,"column":5,"offset":6152},"end":{"line":188,"column":10,"offset":6162},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":188,"column":10,"offset":6162},"end":{"line":188,"column":14,"offset":6166},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":188,"column":14,"offset":6166},"end":{"line":188,"column":22,"offset":6174},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":188,"column":22,"offset":6174},"end":{"line":188,"column":30,"offset":6182},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":188,"column":30,"offset":6182},"end":{"line":188,"column":50,"offset":6202},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":188,"column":50,"offset":6202},"end":{"line":188,"column":53,"offset":6205},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":188,"column":53,"offset":6205},"end":{"line":188,"column":90,"offset":6242},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":188,"column":90,"offset":6242},"end":{"line":188,"column":96,"offset":6248},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":188,"column":96,"offset":6248},"end":{"line":189,"column":1,"offset":6251},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":189,"column":1,"offset":6251},"end":{"line":189,"column":5,"offset":6255},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":189,"column":5,"offset":6255},"end":{"line":190,"column":1,"offset":6256},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":190,"column":1,"offset":6256},"end":{"line":190,"column":5,"offset":6260},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":190,"column":5,"offset":6260},"end":{"line":191,"column":14,"offset":6274},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":191,"column":14,"offset":6274},"end":{"line":191,"column":18,"offset":6278},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":191,"column":18,"offset":6278},"end":{"line":191,"column":90,"offset":6350},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":191,"column":90,"offset":6350},"end":{"line":191,"column":94,"offset":6354},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":191,"column":94,"offset":6354},"end":{"line":191,"column":125,"offset":6385},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":191,"column":125,"offset":6385},"end":{"line":191,"column":131,"offset":6391},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":191,"column":131,"offset":6391},"end":{"line":192,"column":1,"offset":6406},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":192,"column":1,"offset":6406},"end":{"line":192,"column":5,"offset":6410},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":192,"column":5,"offset":6410},"end":{"line":193,"column":1,"offset":6411},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":193,"column":1,"offset":6411},"end":{"line":193,"column":5,"offset":6415},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":193,"column":5,"offset":6415},"end":{"line":194,"column":14,"offset":6429},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":194,"column":14,"offset":6429},"end":{"line":194,"column":18,"offset":6433},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":194,"column":18,"offset":6433},"end":{"line":194,"column":37,"offset":6452},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":194,"column":37,"offset":6452},"end":{"line":194,"column":40,"offset":6455},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":194,"column":40,"offset":6455},"end":{"line":194,"column":77,"offset":6492},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":194,"column":77,"offset":6492},"end":{"line":194,"column":81,"offset":6496},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":194,"column":81,"offset":6496},"end":{"line":194,"column":99,"offset":6514},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":194,"column":99,"offset":6514},"end":{"line":194,"column":102,"offset":6517},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":194,"column":102,"offset":6517},"end":{"line":194,"column":133,"offset":6548},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":194,"column":133,"offset":6548},"end":{"line":194,"column":139,"offset":6554},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":194,"column":139,"offset":6554},"end":{"line":194,"column":167,"offset":6582},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":194,"column":167,"offset":6582},"end":{"line":194,"column":171,"offset":6586},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":194,"column":171,"offset":6586},"end":{"line":195,"column":1,"offset":6588},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":195,"column":1,"offset":6588},"end":{"line":195,"column":5,"offset":6592},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":195,"column":5,"offset":6592},"end":{"line":196,"column":1,"offset":6593},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":196,"column":1,"offset":6593},"end":{"line":196,"column":5,"offset":6597},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":196,"column":5,"offset":6597},"end":{"line":198,"column":1,"offset":6617},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":198,"column":1,"offset":6617},"end":{"line":198,"column":5,"offset":6621},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":198,"column":5,"offset":6621},"end":{"line":199,"column":6,"offset":6627},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":199,"column":6,"offset":6627},"end":{"line":199,"column":12,"offset":6633},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":199,"column":12,"offset":6633},"end":{"line":199,"column":30,"offset":6651},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":199,"column":30,"offset":6651},"end":{"line":199,"column":36,"offset":6657},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":199,"column":36,"offset":6657},"end":{"line":199,"column":62,"offset":6683},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":199,"column":62,"offset":6683},"end":{"line":199,"column":75,"offset":6696},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":199,"column":75,"offset":6696},"end":{"line":199,"column":159,"offset":6780},"indent":[]}}],"position":{"start":{"line":184,"column":1,"offset":6055},"end":{"line":199,"column":159,"offset":6780},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":201,"column":8,"offset":6789},"end":{"line":201,"column":41,"offset":6822},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":6782},"end":{"line":201,"column":41,"offset":6822},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":202,"column":1,"offset":6823},"end":{"line":207,"column":4,"offset":6898},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":208,"column":1,"offset":6899},"end":{"line":209,"column":1,"offset":6918},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":209,"column":1,"offset":6918},"end":{"line":209,"column":5,"offset":6922},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":209,"column":5,"offset":6922},"end":{"line":211,"column":5,"offset":7060},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":211,"column":5,"offset":7060},"end":{"line":211,"column":9,"offset":7064},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":211,"column":9,"offset":7064},"end":{"line":212,"column":5,"offset":7069},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":212,"column":5,"offset":7069},"end":{"line":212,"column":27,"offset":7091},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":212,"column":27,"offset":7091},"end":{"line":213,"column":5,"offset":7096},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":213,"column":5,"offset":7096},"end":{"line":213,"column":9,"offset":7100},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":213,"column":9,"offset":7100},"end":{"line":214,"column":5,"offset":7105},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":214,"column":5,"offset":7105},"end":{"line":214,"column":12,"offset":7112},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":214,"column":12,"offset":7112},"end":{"line":214,"column":17,"offset":7117},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":214,"column":17,"offset":7117},"end":{"line":214,"column":25,"offset":7125},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":214,"column":25,"offset":7125},"end":{"line":214,"column":63,"offset":7163},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":214,"column":63,"offset":7163},"end":{"line":214,"column":66,"offset":7166},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":214,"column":66,"offset":7166},"end":{"line":214,"column":86,"offset":7186},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":214,"column":86,"offset":7186},"end":{"line":214,"column":89,"offset":7189},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":214,"column":89,"offset":7189},"end":{"line":214,"column":110,"offset":7210},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":214,"column":110,"offset":7210},"end":{"line":214,"column":119,"offset":7219},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":214,"column":119,"offset":7219},"end":{"line":215,"column":1,"offset":7221},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":215,"column":1,"offset":7221},"end":{"line":215,"column":5,"offset":7225},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":215,"column":5,"offset":7225},"end":{"line":217,"column":1,"offset":7241},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":217,"column":1,"offset":7241},"end":{"line":217,"column":5,"offset":7245},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":217,"column":5,"offset":7245},"end":{"line":219,"column":5,"offset":7352},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":219,"column":5,"offset":7352},"end":{"line":219,"column":9,"offset":7356},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":219,"column":9,"offset":7356},"end":{"line":220,"column":1,"offset":7357},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":220,"column":1,"offset":7357},"end":{"line":220,"column":23,"offset":7379},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":220,"column":23,"offset":7379},"end":{"line":220,"column":35,"offset":7391},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":220,"column":35,"offset":7391},"end":{"line":220,"column":61,"offset":7417},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":220,"column":61,"offset":7417},"end":{"line":221,"column":1,"offset":7418},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":221,"column":1,"offset":7418},"end":{"line":221,"column":5,"offset":7422},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":221,"column":5,"offset":7422},"end":{"line":222,"column":5,"offset":7427},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":222,"column":5,"offset":7427},"end":{"line":222,"column":8,"offset":7430},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":222,"column":8,"offset":7430},"end":{"line":222,"column":58,"offset":7480},"indent":[]}}],"position":{"start":{"line":208,"column":1,"offset":6899},"end":{"line":222,"column":58,"offset":7480},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":224,"column":1,"offset":7482},"end":{"line":225,"column":1,"offset":7500},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":225,"column":1,"offset":7500},"end":{"line":225,"column":5,"offset":7504},"indent":[]}}],"position":{"start":{"line":224,"column":1,"offset":7482},"end":{"line":225,"column":5,"offset":7504},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":226,"column":1,"offset":7505},"end":{"line":228,"column":4,"offset":7535},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":229,"column":1,"offset":7536},"end":{"line":229,"column":13,"offset":7548},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":7536},"end":{"line":229,"column":13,"offset":7548},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":230,"column":1,"offset":7549},"end":{"line":236,"column":4,"offset":7628},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":237,"column":1,"offset":7629},"end":{"line":237,"column":8,"offset":7636},"indent":[]}}],"position":{"start":{"line":237,"column":1,"offset":7629},"end":{"line":237,"column":8,"offset":7636},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":238,"column":1,"offset":7637},"end":{"line":245,"column":4,"offset":7761},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":246,"column":1,"offset":7762},"end":{"line":247,"column":5,"offset":7771},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":249,"column":1,"offset":7773},"end":{"line":249,"column":11,"offset":7783},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":249,"column":11,"offset":7783},"end":{"line":249,"column":24,"offset":7796},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":249,"column":24,"offset":7796},"end":{"line":249,"column":107,"offset":7879},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":7773},"end":{"line":249,"column":107,"offset":7879},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":251,"column":7,"offset":7887},"end":{"line":251,"column":10,"offset":7890},"indent":[]}}],"position":{"start":{"line":251,"column":1,"offset":7881},"end":{"line":251,"column":10,"offset":7890},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":252,"column":7,"offset":7897},"end":{"line":252,"column":10,"offset":7900},"indent":[]}}],"position":{"start":{"line":252,"column":1,"offset":7891},"end":{"line":252,"column":10,"offset":7900},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":254,"column":6,"offset":7907},"end":{"line":254,"column":10,"offset":7911},"indent":[]}}],"position":{"start":{"line":254,"column":1,"offset":7902},"end":{"line":254,"column":10,"offset":7911},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":255,"column":7,"offset":7918},"end":{"line":255,"column":13,"offset":7924},"indent":[]}}],"position":{"start":{"line":255,"column":1,"offset":7912},"end":{"line":255,"column":13,"offset":7924},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":256,"column":1,"offset":7925},"end":{"line":256,"column":49,"offset":7973},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":256,"column":49,"offset":7973},"end":{"line":256,"column":57,"offset":7981},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":256,"column":57,"offset":7981},"end":{"line":256,"column":133,"offset":8057},"indent":[]}}],"position":{"start":{"line":256,"column":1,"offset":7925},"end":{"line":256,"column":133,"offset":8057},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":257,"column":1,"offset":8058},"end":{"line":267,"column":4,"offset":8253},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":268,"column":1,"offset":8254},"end":{"line":268,"column":5,"offset":8258},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":271,"column":1,"offset":8261},"end":{"line":272,"column":1,"offset":8343},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":272,"column":1,"offset":8343},"end":{"line":272,"column":5,"offset":8347},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":272,"column":5,"offset":8347},"end":{"line":273,"column":1,"offset":8348},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":273,"column":1,"offset":8348},"end":{"line":273,"column":5,"offset":8352},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":273,"column":5,"offset":8352},"end":{"line":274,"column":26,"offset":8378},"indent":[1]}}],"position":{"start":{"line":271,"column":1,"offset":8261},"end":{"line":274,"column":26,"offset":8378},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":275,"column":1,"offset":8379},"end":{"line":280,"column":4,"offset":8507},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":281,"column":1,"offset":8508},"end":{"line":281,"column":14,"offset":8521},"indent":[]}}],"position":{"start":{"line":281,"column":1,"offset":8508},"end":{"line":281,"column":14,"offset":8521},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":283,"column":1,"offset":8523},"end":{"line":296,"column":4,"offset":8805},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":298,"column":1,"offset":8807},"end":{"line":299,"column":5,"offset":8816},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":302,"column":7,"offset":8825},"end":{"line":302,"column":13,"offset":8831},"indent":[]}}],"position":{"start":{"line":302,"column":1,"offset":8819},"end":{"line":302,"column":13,"offset":8831},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":302,"column":13,"offset":8831}}}}