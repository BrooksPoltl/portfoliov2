{"expireTime":9007200842159045000,"key":"transformer-remark-markdown-html-ast-254367d523b30da6dea020abc4cc37a1-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":10,"offset":421}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":10,"offset":421}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":10,"column":7,"offset":428},"end":{"line":10,"column":10,"offset":431}}}],"position":{"start":{"line":10,"column":1,"offset":422},"end":{"line":10,"column":10,"offset":431}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":11,"column":7,"offset":438},"end":{"line":11,"column":10,"offset":441}}}],"position":{"start":{"line":11,"column":1,"offset":432},"end":{"line":11,"column":10,"offset":441}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":13,"column":6,"offset":448},"end":{"line":13,"column":14,"offset":456}}}],"position":{"start":{"line":13,"column":1,"offset":443},"end":{"line":13,"column":14,"offset":456}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":14,"column":7,"offset":463},"end":{"line":14,"column":10,"offset":466}}}],"position":{"start":{"line":14,"column":1,"offset":457},"end":{"line":14,"column":10,"offset":466}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":16,"column":8,"offset":475},"end":{"line":16,"column":30,"offset":497}}}],"position":{"start":{"line":16,"column":1,"offset":468},"end":{"line":16,"column":30,"offset":497}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":18,"column":1,"offset":499},"end":{"line":19,"column":1,"offset":643}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":643},"end":{"line":19,"column":5,"offset":647}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":19,"column":5,"offset":647},"end":{"line":19,"column":16,"offset":658}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":16,"offset":658},"end":{"line":19,"column":20,"offset":662}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":19,"column":20,"offset":662},"end":{"line":21,"column":1,"offset":806}}},{"type":"raw","value":"<br>","position":{"start":{"line":21,"column":1,"offset":806},"end":{"line":21,"column":5,"offset":810}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":21,"column":5,"offset":810},"end":{"line":21,"column":16,"offset":821}}},{"type":"raw","value":"<br>","position":{"start":{"line":21,"column":16,"offset":821},"end":{"line":21,"column":20,"offset":825}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":21,"column":20,"offset":825},"end":{"line":22,"column":45,"offset":870}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":45,"offset":870},"end":{"line":22,"column":49,"offset":874}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":22,"column":49,"offset":874},"end":{"line":22,"column":65,"offset":890}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":65,"offset":890},"end":{"line":22,"column":69,"offset":894}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":22,"column":69,"offset":894},"end":{"line":24,"column":1,"offset":937}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":1,"offset":937},"end":{"line":24,"column":5,"offset":941}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":24,"column":5,"offset":941},"end":{"line":24,"column":22,"offset":958}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":22,"offset":958},"end":{"line":24,"column":26,"offset":962}}},{"type":"text","value":"\n","position":{"start":{"line":24,"column":26,"offset":962},"end":{"line":25,"column":1,"offset":963}}},{"type":"raw","value":"<br>","position":{"start":{"line":25,"column":1,"offset":963},"end":{"line":25,"column":5,"offset":967}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. Scheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":25,"column":5,"offset":967},"end":{"line":27,"column":1,"offset":1204}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":27,"column":1,"offset":1204},"end":{"line":27,"column":12,"offset":1215}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":27,"column":12,"offset":1215},"end":{"line":27,"column":68,"offset":1271}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":27,"column":68,"offset":1271},"end":{"line":27,"column":79,"offset":1282}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":27,"column":79,"offset":1282},"end":{"line":27,"column":106,"offset":1309}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":27,"column":106,"offset":1309},"end":{"line":27,"column":109,"offset":1312}}},{"type":"text","value":" is now 7 and it has 2 primitive values, meaning it can calculate the ","position":{"start":{"line":27,"column":109,"offset":1312},"end":{"line":27,"column":179,"offset":1382}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":27,"column":179,"offset":1382},"end":{"line":27,"column":182,"offset":1385}}},{"type":"text","value":" to get 3.","position":{"start":{"line":27,"column":182,"offset":1385},"end":{"line":27,"column":192,"offset":1395}}}],"position":{"start":{"line":18,"column":1,"offset":499},"end":{"line":27,"column":192,"offset":1395}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":29,"column":8,"offset":1404},"end":{"line":29,"column":14,"offset":1410}}}],"position":{"start":{"line":29,"column":1,"offset":1397},"end":{"line":29,"column":14,"offset":1410}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":30,"column":1,"offset":1411},"end":{"line":30,"column":9,"offset":1419}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":30,"column":9,"offset":1419},"end":{"line":30,"column":73,"offset":1483}}}],"position":{"start":{"line":30,"column":1,"offset":1411},"end":{"line":30,"column":73,"offset":1483}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":31,"column":1,"offset":1484},"end":{"line":34,"column":4,"offset":1523}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":35,"column":1,"offset":1524},"end":{"line":35,"column":5,"offset":1528}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":37,"column":1,"offset":1530},"end":{"line":37,"column":72,"offset":1601}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":37,"column":72,"offset":1601},"end":{"line":37,"column":80,"offset":1609}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":37,"column":80,"offset":1609},"end":{"line":38,"column":1,"offset":1633}}},{"type":"raw","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1633},"end":{"line":38,"column":5,"offset":1637}}},{"type":"text","value":"\n","position":{"start":{"line":38,"column":5,"offset":1637},"end":{"line":39,"column":1,"offset":1638}}},{"type":"raw","value":"<br>","position":{"start":{"line":39,"column":1,"offset":1638},"end":{"line":39,"column":5,"offset":1642}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":39,"column":5,"offset":1642},"end":{"line":40,"column":184,"offset":1826}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":40,"column":184,"offset":1826},"end":{"line":40,"column":187,"offset":1829}}},{"type":"text","value":".\n","position":{"start":{"line":40,"column":187,"offset":1829},"end":{"line":41,"column":1,"offset":1832}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":1,"offset":1832},"end":{"line":41,"column":5,"offset":1836}}},{"type":"text","value":"\n","position":{"start":{"line":41,"column":5,"offset":1836},"end":{"line":42,"column":1,"offset":1837}}},{"type":"raw","value":"<br>","position":{"start":{"line":42,"column":1,"offset":1837},"end":{"line":42,"column":5,"offset":1841}}},{"type":"text","value":"\nThe second parameter that define takes in is the body that the procedure will call ","position":{"start":{"line":42,"column":5,"offset":1841},"end":{"line":43,"column":84,"offset":1925}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":43,"column":84,"offset":1925},"end":{"line":43,"column":93,"offset":1934}}},{"type":"text","value":". ","position":{"start":{"line":43,"column":93,"offset":1934},"end":{"line":43,"column":95,"offset":1936}}}],"position":{"start":{"line":37,"column":1,"offset":1530},"end":{"line":43,"column":95,"offset":1936}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":45,"column":1,"offset":1938},"end":{"line":45,"column":6,"offset":1943}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":47,"column":1,"offset":1945},"end":{"line":48,"column":1,"offset":1989}}},{"type":"raw","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1989},"end":{"line":48,"column":5,"offset":1993}}},{"type":"text","value":"\n","position":{"start":{"line":48,"column":5,"offset":1993},"end":{"line":49,"column":1,"offset":1994}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":49,"column":1,"offset":1994},"end":{"line":49,"column":22,"offset":2015}}},{"type":"text","value":"\n","position":{"start":{"line":49,"column":22,"offset":2015},"end":{"line":50,"column":1,"offset":2016}}},{"type":"raw","value":"<br>","position":{"start":{"line":50,"column":1,"offset":2016},"end":{"line":50,"column":5,"offset":2020}}}],"position":{"start":{"line":47,"column":1,"offset":1945},"end":{"line":50,"column":5,"offset":2020}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no body needs to be called for the second parameter.","position":{"start":{"line":52,"column":1,"offset":2022},"end":{"line":52,"column":143,"offset":2164}}}],"position":{"start":{"line":52,"column":1,"offset":2022},"end":{"line":52,"column":143,"offset":2164}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":54,"column":7,"offset":2172},"end":{"line":54,"column":10,"offset":2175}}}],"position":{"start":{"line":54,"column":1,"offset":2166},"end":{"line":54,"column":10,"offset":2175}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":55,"column":7,"offset":2182},"end":{"line":55,"column":10,"offset":2185}}}],"position":{"start":{"line":55,"column":1,"offset":2176},"end":{"line":55,"column":10,"offset":2185}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":56,"column":7,"offset":2192},"end":{"line":56,"column":10,"offset":2195}}}],"position":{"start":{"line":56,"column":1,"offset":2186},"end":{"line":56,"column":10,"offset":2195}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":58,"column":6,"offset":2202},"end":{"line":58,"column":10,"offset":2206}}}],"position":{"start":{"line":58,"column":1,"offset":2197},"end":{"line":58,"column":10,"offset":2206}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1","position":{"start":{"line":59,"column":7,"offset":2213},"end":{"line":59,"column":12,"offset":2218}}}],"position":{"start":{"line":59,"column":1,"offset":2207},"end":{"line":59,"column":13,"offset":2219}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 2","position":{"start":{"line":60,"column":7,"offset":2226},"end":{"line":60,"column":12,"offset":2231}}}],"position":{"start":{"line":60,"column":1,"offset":2220},"end":{"line":60,"column":13,"offset":2232}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":60,"column":13,"offset":2232}}}}