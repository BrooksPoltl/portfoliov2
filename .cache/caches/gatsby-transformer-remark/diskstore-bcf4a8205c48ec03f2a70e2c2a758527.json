{"expireTime":9007200842250894000,"key":"transformer-remark-markdown-ast-f22170527d903e3151b314aaa0f1aaac-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632},"indent":[]}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities. \n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705},"indent":[]}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791},"indent":[]}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833},"indent":[]}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865},"indent":[]}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884},"indent":[]}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916},"indent":[]}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052},"indent":[]}},{"type":"text","value":"\nEnvironment: The name-object pairs the interpreter keeps in memory.\n","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":34,"column":1,"offset":1121},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1121},"end":{"line":34,"column":5,"offset":1125},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":34,"column":5,"offset":1125},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Procedures can be used to build ontop of other procedures:\n","position":{"start":{"line":36,"column":1,"offset":1127},"end":{"line":37,"column":1,"offset":1186},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":37,"column":1,"offset":1186},"end":{"line":37,"column":5,"offset":1190},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1127},"end":{"line":37,"column":5,"offset":1190},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>","position":{"start":{"line":38,"column":1,"offset":1191},"end":{"line":40,"column":4,"offset":1199},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":42,"column":1,"offset":1201},"end":{"line":42,"column":5,"offset":1205},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":44,"column":7,"offset":1213},"end":{"line":44,"column":10,"offset":1216},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1207},"end":{"line":44,"column":10,"offset":1216},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":45,"column":7,"offset":1223},"end":{"line":45,"column":10,"offset":1226},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1217},"end":{"line":45,"column":10,"offset":1226},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":47,"column":6,"offset":1233},"end":{"line":47,"column":14,"offset":1241},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1228},"end":{"line":47,"column":14,"offset":1241},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":48,"column":7,"offset":1248},"end":{"line":48,"column":10,"offset":1251},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1242},"end":{"line":48,"column":10,"offset":1251},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":50,"column":8,"offset":1260},"end":{"line":50,"column":30,"offset":1282},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1253},"end":{"line":50,"column":30,"offset":1282},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":52,"column":1,"offset":1284},"end":{"line":53,"column":1,"offset":1428},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":53,"column":1,"offset":1428},"end":{"line":53,"column":5,"offset":1432},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":53,"column":5,"offset":1432},"end":{"line":53,"column":16,"offset":1443},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":53,"column":16,"offset":1443},"end":{"line":53,"column":20,"offset":1447},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":53,"column":20,"offset":1447},"end":{"line":55,"column":1,"offset":1591},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":55,"column":1,"offset":1591},"end":{"line":55,"column":5,"offset":1595},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":55,"column":5,"offset":1595},"end":{"line":55,"column":16,"offset":1606},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":55,"column":16,"offset":1606},"end":{"line":55,"column":20,"offset":1610},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":55,"column":20,"offset":1610},"end":{"line":56,"column":45,"offset":1655},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":56,"column":45,"offset":1655},"end":{"line":56,"column":49,"offset":1659},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":56,"column":49,"offset":1659},"end":{"line":56,"column":65,"offset":1675},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":56,"column":65,"offset":1675},"end":{"line":56,"column":69,"offset":1679},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":56,"column":69,"offset":1679},"end":{"line":58,"column":1,"offset":1722},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":58,"column":1,"offset":1722},"end":{"line":58,"column":5,"offset":1726},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":58,"column":5,"offset":1726},"end":{"line":58,"column":22,"offset":1743},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":58,"column":22,"offset":1743},"end":{"line":58,"column":26,"offset":1747},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":58,"column":26,"offset":1747},"end":{"line":59,"column":1,"offset":1748},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":59,"column":1,"offset":1748},"end":{"line":59,"column":5,"offset":1752},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":59,"column":5,"offset":1752},"end":{"line":61,"column":1,"offset":1870},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":61,"column":1,"offset":1870},"end":{"line":61,"column":5,"offset":1874},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":61,"column":5,"offset":1874},"end":{"line":63,"column":1,"offset":1995},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":63,"column":1,"offset":1995},"end":{"line":63,"column":12,"offset":2006},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":63,"column":12,"offset":2006},"end":{"line":63,"column":68,"offset":2062},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":63,"column":68,"offset":2062},"end":{"line":63,"column":79,"offset":2073},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":63,"column":79,"offset":2073},"end":{"line":63,"column":106,"offset":2100},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":63,"column":106,"offset":2100},"end":{"line":63,"column":109,"offset":2103},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":63,"column":109,"offset":2103},"end":{"line":63,"column":189,"offset":2183},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":63,"column":189,"offset":2183},"end":{"line":63,"column":192,"offset":2186},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":63,"column":192,"offset":2186},"end":{"line":63,"column":202,"offset":2196},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1284},"end":{"line":63,"column":202,"offset":2196},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":65,"column":8,"offset":2205},"end":{"line":65,"column":14,"offset":2211},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":2198},"end":{"line":65,"column":14,"offset":2211},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":66,"column":1,"offset":2212},"end":{"line":66,"column":9,"offset":2220},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":66,"column":9,"offset":2220},"end":{"line":66,"column":73,"offset":2284},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":2212},"end":{"line":66,"column":73,"offset":2284},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":67,"column":1,"offset":2285},"end":{"line":70,"column":4,"offset":2324},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":71,"column":1,"offset":2325},"end":{"line":71,"column":5,"offset":2329},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":73,"column":1,"offset":2331},"end":{"line":73,"column":72,"offset":2402},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":73,"column":72,"offset":2402},"end":{"line":73,"column":80,"offset":2410},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":73,"column":80,"offset":2410},"end":{"line":74,"column":1,"offset":2434},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":74,"column":1,"offset":2434},"end":{"line":74,"column":5,"offset":2438},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":74,"column":5,"offset":2438},"end":{"line":75,"column":1,"offset":2439},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2439},"end":{"line":75,"column":5,"offset":2443},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":75,"column":5,"offset":2443},"end":{"line":76,"column":184,"offset":2627},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":76,"column":184,"offset":2627},"end":{"line":76,"column":187,"offset":2630},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":76,"column":187,"offset":2630},"end":{"line":77,"column":1,"offset":2633},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":77,"column":1,"offset":2633},"end":{"line":77,"column":5,"offset":2637},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":77,"column":5,"offset":2637},"end":{"line":78,"column":1,"offset":2638},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2638},"end":{"line":78,"column":5,"offset":2642},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":78,"column":5,"offset":2642},"end":{"line":79,"column":27,"offset":2669},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":79,"column":27,"offset":2669},"end":{"line":79,"column":35,"offset":2677},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":79,"column":35,"offset":2677},"end":{"line":79,"column":86,"offset":2728},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":79,"column":86,"offset":2728},"end":{"line":79,"column":95,"offset":2737},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":79,"column":95,"offset":2737},"end":{"line":79,"column":97,"offset":2739},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":2331},"end":{"line":79,"column":97,"offset":2739},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":81,"column":1,"offset":2741},"end":{"line":81,"column":6,"offset":2746},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":83,"column":1,"offset":2748},"end":{"line":84,"column":1,"offset":2792},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":84,"column":1,"offset":2792},"end":{"line":84,"column":5,"offset":2796},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":84,"column":5,"offset":2796},"end":{"line":85,"column":1,"offset":2797},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":85,"column":1,"offset":2797},"end":{"line":85,"column":22,"offset":2818},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":85,"column":22,"offset":2818},"end":{"line":86,"column":1,"offset":2819},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":86,"column":1,"offset":2819},"end":{"line":86,"column":5,"offset":2823},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":2748},"end":{"line":86,"column":5,"offset":2823},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":88,"column":1,"offset":2825},"end":{"line":88,"column":152,"offset":2976},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":2825},"end":{"line":88,"column":152,"offset":2976},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":90,"column":8,"offset":2985},"end":{"line":90,"column":20,"offset":2997},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":2978},"end":{"line":90,"column":20,"offset":2997},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":92,"column":1,"offset":2999},"end":{"line":92,"column":56,"offset":3054},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2999},"end":{"line":92,"column":56,"offset":3054},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":93,"column":1,"offset":3055},"end":{"line":98,"column":4,"offset":3146},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":99,"column":1,"offset":3147},"end":{"line":99,"column":5,"offset":3151},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":101,"column":1,"offset":3153},"end":{"line":101,"column":37,"offset":3189},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":101,"column":37,"offset":3189},"end":{"line":101,"column":41,"offset":3193},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":101,"column":41,"offset":3193},"end":{"line":102,"column":1,"offset":3210},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":102,"column":1,"offset":3210},"end":{"line":102,"column":5,"offset":3214},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":102,"column":5,"offset":3214},"end":{"line":103,"column":1,"offset":3215},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":103,"column":1,"offset":3215},"end":{"line":103,"column":5,"offset":3219},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":103,"column":5,"offset":3219},"end":{"line":104,"column":66,"offset":3285},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":104,"column":66,"offset":3285},"end":{"line":104,"column":89,"offset":3308},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":104,"column":89,"offset":3308},"end":{"line":105,"column":1,"offset":3348},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":105,"column":1,"offset":3348},"end":{"line":105,"column":5,"offset":3352},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":105,"column":5,"offset":3352},"end":{"line":106,"column":1,"offset":3353},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":106,"column":1,"offset":3353},"end":{"line":106,"column":5,"offset":3357},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":106,"column":5,"offset":3357},"end":{"line":107,"column":21,"offset":3378},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":107,"column":21,"offset":3378},"end":{"line":107,"column":25,"offset":3382},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":107,"column":25,"offset":3382},"end":{"line":108,"column":1,"offset":3436},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":108,"column":1,"offset":3436},"end":{"line":108,"column":5,"offset":3440},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":108,"column":5,"offset":3440},"end":{"line":109,"column":1,"offset":3441},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":109,"column":1,"offset":3441},"end":{"line":109,"column":5,"offset":3445},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":109,"column":5,"offset":3445},"end":{"line":110,"column":21,"offset":3466},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":110,"column":21,"offset":3466},"end":{"line":110,"column":25,"offset":3470},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":110,"column":25,"offset":3470},"end":{"line":111,"column":1,"offset":3525},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":111,"column":1,"offset":3525},"end":{"line":111,"column":5,"offset":3529},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":111,"column":5,"offset":3529},"end":{"line":112,"column":1,"offset":3530},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":112,"column":1,"offset":3530},"end":{"line":112,"column":5,"offset":3534},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":112,"column":5,"offset":3534},"end":{"line":113,"column":58,"offset":3592},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":113,"column":58,"offset":3592},"end":{"line":113,"column":61,"offset":3595},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":113,"column":61,"offset":3595},"end":{"line":113,"column":145,"offset":3679},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":113,"column":145,"offset":3679},"end":{"line":113,"column":153,"offset":3687},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":113,"column":153,"offset":3687},"end":{"line":113,"column":178,"offset":3712},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":3153},"end":{"line":113,"column":178,"offset":3712},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":115,"column":7,"offset":3720},"end":{"line":115,"column":10,"offset":3723},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":3714},"end":{"line":115,"column":10,"offset":3723},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":117,"column":8,"offset":3732},"end":{"line":117,"column":17,"offset":3741},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":3725},"end":{"line":117,"column":17,"offset":3741},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":118,"column":1,"offset":3742},"end":{"line":129,"column":4,"offset":3941},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":130,"column":1,"offset":3942},"end":{"line":130,"column":5,"offset":3946},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":132,"column":1,"offset":3948},"end":{"line":133,"column":1,"offset":4164},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":133,"column":1,"offset":4164},"end":{"line":133,"column":5,"offset":4168},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":133,"column":5,"offset":4168},"end":{"line":134,"column":1,"offset":4169},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":134,"column":1,"offset":4169},"end":{"line":134,"column":5,"offset":4173},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":134,"column":5,"offset":4173},"end":{"line":135,"column":72,"offset":4245},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":135,"column":72,"offset":4245},"end":{"line":135,"column":81,"offset":4254},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":135,"column":81,"offset":4254},"end":{"line":136,"column":1,"offset":4273},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":136,"column":1,"offset":4273},"end":{"line":136,"column":5,"offset":4277},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":136,"column":5,"offset":4277},"end":{"line":137,"column":1,"offset":4278},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":137,"column":1,"offset":4278},"end":{"line":137,"column":5,"offset":4282},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":137,"column":5,"offset":4282},"end":{"line":138,"column":10,"offset":4292},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":138,"column":10,"offset":4292},"end":{"line":138,"column":16,"offset":4298},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":138,"column":16,"offset":4298},"end":{"line":138,"column":34,"offset":4316},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":138,"column":34,"offset":4316},"end":{"line":138,"column":42,"offset":4324},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":138,"column":42,"offset":4324},"end":{"line":139,"column":24,"offset":4349},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":139,"column":24,"offset":4349},"end":{"line":139,"column":33,"offset":4358},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":139,"column":33,"offset":4358},"end":{"line":139,"column":107,"offset":4432},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":139,"column":107,"offset":4432},"end":{"line":139,"column":116,"offset":4441},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":139,"column":116,"offset":4441},"end":{"line":139,"column":134,"offset":4459},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":139,"column":134,"offset":4459},"end":{"line":139,"column":137,"offset":4462},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":139,"column":137,"offset":4462},"end":{"line":139,"column":161,"offset":4486},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":139,"column":161,"offset":4486},"end":{"line":139,"column":167,"offset":4492},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":139,"column":167,"offset":4492},"end":{"line":139,"column":192,"offset":4517},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":139,"column":192,"offset":4517},"end":{"line":139,"column":200,"offset":4525},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":139,"column":200,"offset":4525},"end":{"line":139,"column":218,"offset":4543},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":139,"column":218,"offset":4543},"end":{"line":139,"column":224,"offset":4549},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":139,"column":224,"offset":4549},"end":{"line":139,"column":245,"offset":4570},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":139,"column":245,"offset":4570},"end":{"line":139,"column":252,"offset":4577},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":139,"column":252,"offset":4577},"end":{"line":139,"column":257,"offset":4582},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":139,"column":257,"offset":4582},"end":{"line":139,"column":260,"offset":4585},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":139,"column":260,"offset":4585},"end":{"line":139,"column":285,"offset":4610},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":139,"column":285,"offset":4610},"end":{"line":139,"column":291,"offset":4616},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":139,"column":291,"offset":4616},"end":{"line":140,"column":96,"offset":4742},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":140,"column":96,"offset":4742},"end":{"line":140,"column":111,"offset":4757},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":140,"column":111,"offset":4757},"end":{"line":140,"column":182,"offset":4828},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":3948},"end":{"line":140,"column":182,"offset":4828},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":142,"column":8,"offset":4837},"end":{"line":142,"column":19,"offset":4848},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":4830},"end":{"line":142,"column":19,"offset":4848},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":143,"column":1,"offset":4849},"end":{"line":143,"column":14,"offset":4862},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":4849},"end":{"line":143,"column":14,"offset":4862},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":144,"column":1,"offset":4863},"end":{"line":159,"column":4,"offset":5278},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":160,"column":1,"offset":5279},"end":{"line":160,"column":5,"offset":5283},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":162,"column":1,"offset":5285},"end":{"line":162,"column":141,"offset":5425},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":5285},"end":{"line":162,"column":141,"offset":5425},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":164,"column":8,"offset":5434},"end":{"line":164,"column":30,"offset":5456},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":5427},"end":{"line":164,"column":30,"offset":5456},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":165,"column":1,"offset":5457},"end":{"line":165,"column":199,"offset":5655},"indent":[]}}],"position":{"start":{"line":165,"column":1,"offset":5457},"end":{"line":165,"column":199,"offset":5655},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":167,"column":8,"offset":5664},"end":{"line":167,"column":30,"offset":5686},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":5657},"end":{"line":167,"column":30,"offset":5686},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":169,"column":1,"offset":5688},"end":{"line":170,"column":1,"offset":5763},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":170,"column":1,"offset":5763},"end":{"line":170,"column":5,"offset":5767},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":170,"column":5,"offset":5767},"end":{"line":171,"column":1,"offset":5768},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":171,"column":1,"offset":5768},"end":{"line":171,"column":5,"offset":5772},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":171,"column":5,"offset":5772},"end":{"line":173,"column":1,"offset":5834},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":173,"column":1,"offset":5834},"end":{"line":173,"column":5,"offset":5838},"indent":[]}},{"type":"break","position":{"start":{"line":173,"column":5,"offset":5838},"end":{"line":174,"column":1,"offset":5841},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":174,"column":1,"offset":5841},"end":{"line":174,"column":11,"offset":5851},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":174,"column":11,"offset":5851},"end":{"line":174,"column":19,"offset":5859},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":174,"column":19,"offset":5859},"end":{"line":174,"column":24,"offset":5864},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":174,"column":24,"offset":5864},"end":{"line":174,"column":34,"offset":5874},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":174,"column":34,"offset":5874},"end":{"line":175,"column":1,"offset":5923},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":175,"column":1,"offset":5923},"end":{"line":175,"column":5,"offset":5927},"indent":[]}}],"position":{"start":{"line":169,"column":1,"offset":5688},"end":{"line":175,"column":5,"offset":5927},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":177,"column":8,"offset":5936},"end":{"line":177,"column":12,"offset":5940},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":5929},"end":{"line":177,"column":12,"offset":5940},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":178,"column":1,"offset":5941},"end":{"line":183,"column":4,"offset":6052},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":184,"column":1,"offset":6053},"end":{"line":185,"column":5,"offset":6062},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":187,"column":1,"offset":6064},"end":{"line":187,"column":7,"offset":6070},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":187,"column":7,"offset":6070},"end":{"line":189,"column":1,"offset":6152},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":189,"column":1,"offset":6152},"end":{"line":189,"column":5,"offset":6156},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":189,"column":5,"offset":6156},"end":{"line":190,"column":1,"offset":6157},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":190,"column":1,"offset":6157},"end":{"line":190,"column":5,"offset":6161},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":190,"column":5,"offset":6161},"end":{"line":191,"column":10,"offset":6171},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":191,"column":10,"offset":6171},"end":{"line":191,"column":14,"offset":6175},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":191,"column":14,"offset":6175},"end":{"line":191,"column":22,"offset":6183},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":191,"column":22,"offset":6183},"end":{"line":191,"column":30,"offset":6191},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":191,"column":30,"offset":6191},"end":{"line":191,"column":50,"offset":6211},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":191,"column":50,"offset":6211},"end":{"line":191,"column":53,"offset":6214},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":191,"column":53,"offset":6214},"end":{"line":191,"column":90,"offset":6251},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":191,"column":90,"offset":6251},"end":{"line":191,"column":96,"offset":6257},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":191,"column":96,"offset":6257},"end":{"line":192,"column":1,"offset":6260},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":192,"column":1,"offset":6260},"end":{"line":192,"column":5,"offset":6264},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":192,"column":5,"offset":6264},"end":{"line":193,"column":1,"offset":6265},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":193,"column":1,"offset":6265},"end":{"line":193,"column":5,"offset":6269},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":193,"column":5,"offset":6269},"end":{"line":194,"column":14,"offset":6283},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":194,"column":14,"offset":6283},"end":{"line":194,"column":18,"offset":6287},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":194,"column":18,"offset":6287},"end":{"line":194,"column":90,"offset":6359},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":194,"column":90,"offset":6359},"end":{"line":194,"column":94,"offset":6363},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":194,"column":94,"offset":6363},"end":{"line":194,"column":125,"offset":6394},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":194,"column":125,"offset":6394},"end":{"line":194,"column":131,"offset":6400},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":194,"column":131,"offset":6400},"end":{"line":195,"column":1,"offset":6415},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":195,"column":1,"offset":6415},"end":{"line":195,"column":5,"offset":6419},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":195,"column":5,"offset":6419},"end":{"line":196,"column":1,"offset":6420},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":196,"column":1,"offset":6420},"end":{"line":196,"column":5,"offset":6424},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":196,"column":5,"offset":6424},"end":{"line":197,"column":14,"offset":6438},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":197,"column":14,"offset":6438},"end":{"line":197,"column":18,"offset":6442},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":197,"column":18,"offset":6442},"end":{"line":197,"column":37,"offset":6461},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":197,"column":37,"offset":6461},"end":{"line":197,"column":40,"offset":6464},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":197,"column":40,"offset":6464},"end":{"line":197,"column":77,"offset":6501},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":197,"column":77,"offset":6501},"end":{"line":197,"column":81,"offset":6505},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":197,"column":81,"offset":6505},"end":{"line":197,"column":99,"offset":6523},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":197,"column":99,"offset":6523},"end":{"line":197,"column":102,"offset":6526},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":197,"column":102,"offset":6526},"end":{"line":197,"column":133,"offset":6557},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":197,"column":133,"offset":6557},"end":{"line":197,"column":139,"offset":6563},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":197,"column":139,"offset":6563},"end":{"line":197,"column":167,"offset":6591},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":197,"column":167,"offset":6591},"end":{"line":197,"column":171,"offset":6595},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":197,"column":171,"offset":6595},"end":{"line":198,"column":1,"offset":6597},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":198,"column":1,"offset":6597},"end":{"line":198,"column":5,"offset":6601},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":198,"column":5,"offset":6601},"end":{"line":199,"column":1,"offset":6602},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":199,"column":1,"offset":6602},"end":{"line":199,"column":5,"offset":6606},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":199,"column":5,"offset":6606},"end":{"line":201,"column":1,"offset":6626},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":201,"column":1,"offset":6626},"end":{"line":201,"column":5,"offset":6630},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":201,"column":5,"offset":6630},"end":{"line":202,"column":6,"offset":6636},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":202,"column":6,"offset":6636},"end":{"line":202,"column":12,"offset":6642},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":202,"column":12,"offset":6642},"end":{"line":202,"column":30,"offset":6660},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":202,"column":30,"offset":6660},"end":{"line":202,"column":36,"offset":6666},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":202,"column":36,"offset":6666},"end":{"line":202,"column":62,"offset":6692},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":202,"column":62,"offset":6692},"end":{"line":202,"column":75,"offset":6705},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":202,"column":75,"offset":6705},"end":{"line":202,"column":159,"offset":6789},"indent":[]}}],"position":{"start":{"line":187,"column":1,"offset":6064},"end":{"line":202,"column":159,"offset":6789},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":204,"column":8,"offset":6798},"end":{"line":204,"column":41,"offset":6831},"indent":[]}}],"position":{"start":{"line":204,"column":1,"offset":6791},"end":{"line":204,"column":41,"offset":6831},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":205,"column":1,"offset":6832},"end":{"line":210,"column":4,"offset":6907},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":211,"column":1,"offset":6908},"end":{"line":212,"column":1,"offset":6927},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":212,"column":1,"offset":6927},"end":{"line":212,"column":5,"offset":6931},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":212,"column":5,"offset":6931},"end":{"line":214,"column":5,"offset":7069},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":214,"column":5,"offset":7069},"end":{"line":214,"column":9,"offset":7073},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":214,"column":9,"offset":7073},"end":{"line":215,"column":5,"offset":7078},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":215,"column":5,"offset":7078},"end":{"line":215,"column":27,"offset":7100},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":215,"column":27,"offset":7100},"end":{"line":216,"column":5,"offset":7105},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":216,"column":5,"offset":7105},"end":{"line":216,"column":9,"offset":7109},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":216,"column":9,"offset":7109},"end":{"line":217,"column":5,"offset":7114},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":217,"column":5,"offset":7114},"end":{"line":217,"column":12,"offset":7121},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":217,"column":12,"offset":7121},"end":{"line":217,"column":17,"offset":7126},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":217,"column":17,"offset":7126},"end":{"line":217,"column":25,"offset":7134},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":217,"column":25,"offset":7134},"end":{"line":217,"column":63,"offset":7172},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":217,"column":63,"offset":7172},"end":{"line":217,"column":66,"offset":7175},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":217,"column":66,"offset":7175},"end":{"line":217,"column":86,"offset":7195},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":217,"column":86,"offset":7195},"end":{"line":217,"column":89,"offset":7198},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":217,"column":89,"offset":7198},"end":{"line":217,"column":110,"offset":7219},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":217,"column":110,"offset":7219},"end":{"line":217,"column":119,"offset":7228},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":217,"column":119,"offset":7228},"end":{"line":218,"column":1,"offset":7230},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":218,"column":1,"offset":7230},"end":{"line":218,"column":5,"offset":7234},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":218,"column":5,"offset":7234},"end":{"line":220,"column":1,"offset":7250},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":220,"column":1,"offset":7250},"end":{"line":220,"column":5,"offset":7254},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":220,"column":5,"offset":7254},"end":{"line":222,"column":5,"offset":7361},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":222,"column":5,"offset":7361},"end":{"line":222,"column":9,"offset":7365},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":222,"column":9,"offset":7365},"end":{"line":223,"column":1,"offset":7366},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":223,"column":1,"offset":7366},"end":{"line":223,"column":23,"offset":7388},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":223,"column":23,"offset":7388},"end":{"line":223,"column":35,"offset":7400},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":223,"column":35,"offset":7400},"end":{"line":223,"column":61,"offset":7426},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":223,"column":61,"offset":7426},"end":{"line":224,"column":1,"offset":7427},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":224,"column":1,"offset":7427},"end":{"line":224,"column":5,"offset":7431},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":224,"column":5,"offset":7431},"end":{"line":225,"column":5,"offset":7436},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":225,"column":5,"offset":7436},"end":{"line":225,"column":8,"offset":7439},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":225,"column":8,"offset":7439},"end":{"line":225,"column":58,"offset":7489},"indent":[]}}],"position":{"start":{"line":211,"column":1,"offset":6908},"end":{"line":225,"column":58,"offset":7489},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":227,"column":1,"offset":7491},"end":{"line":228,"column":1,"offset":7509},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":228,"column":1,"offset":7509},"end":{"line":228,"column":5,"offset":7513},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":7491},"end":{"line":228,"column":5,"offset":7513},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":229,"column":1,"offset":7514},"end":{"line":231,"column":4,"offset":7544},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":232,"column":1,"offset":7545},"end":{"line":232,"column":13,"offset":7557},"indent":[]}}],"position":{"start":{"line":232,"column":1,"offset":7545},"end":{"line":232,"column":13,"offset":7557},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":233,"column":1,"offset":7558},"end":{"line":239,"column":4,"offset":7637},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":240,"column":1,"offset":7638},"end":{"line":240,"column":8,"offset":7645},"indent":[]}}],"position":{"start":{"line":240,"column":1,"offset":7638},"end":{"line":240,"column":8,"offset":7645},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":241,"column":1,"offset":7646},"end":{"line":248,"column":4,"offset":7770},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":249,"column":1,"offset":7771},"end":{"line":250,"column":5,"offset":7780},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":252,"column":1,"offset":7782},"end":{"line":252,"column":11,"offset":7792},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":252,"column":11,"offset":7792},"end":{"line":252,"column":24,"offset":7805},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":252,"column":24,"offset":7805},"end":{"line":252,"column":107,"offset":7888},"indent":[]}}],"position":{"start":{"line":252,"column":1,"offset":7782},"end":{"line":252,"column":107,"offset":7888},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":254,"column":7,"offset":7896},"end":{"line":254,"column":10,"offset":7899},"indent":[]}}],"position":{"start":{"line":254,"column":1,"offset":7890},"end":{"line":254,"column":10,"offset":7899},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":255,"column":7,"offset":7906},"end":{"line":255,"column":10,"offset":7909},"indent":[]}}],"position":{"start":{"line":255,"column":1,"offset":7900},"end":{"line":255,"column":10,"offset":7909},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":257,"column":6,"offset":7916},"end":{"line":257,"column":10,"offset":7920},"indent":[]}}],"position":{"start":{"line":257,"column":1,"offset":7911},"end":{"line":257,"column":10,"offset":7920},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":258,"column":7,"offset":7927},"end":{"line":258,"column":13,"offset":7933},"indent":[]}}],"position":{"start":{"line":258,"column":1,"offset":7921},"end":{"line":258,"column":13,"offset":7933},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":259,"column":1,"offset":7934},"end":{"line":259,"column":49,"offset":7982},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":259,"column":49,"offset":7982},"end":{"line":259,"column":57,"offset":7990},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":259,"column":57,"offset":7990},"end":{"line":259,"column":133,"offset":8066},"indent":[]}}],"position":{"start":{"line":259,"column":1,"offset":7934},"end":{"line":259,"column":133,"offset":8066},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":260,"column":1,"offset":8067},"end":{"line":270,"column":4,"offset":8262},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":271,"column":1,"offset":8263},"end":{"line":271,"column":5,"offset":8267},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":274,"column":1,"offset":8270},"end":{"line":275,"column":1,"offset":8352},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":275,"column":1,"offset":8352},"end":{"line":275,"column":5,"offset":8356},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":275,"column":5,"offset":8356},"end":{"line":276,"column":1,"offset":8357},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":276,"column":1,"offset":8357},"end":{"line":276,"column":5,"offset":8361},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":276,"column":5,"offset":8361},"end":{"line":277,"column":26,"offset":8387},"indent":[1]}}],"position":{"start":{"line":274,"column":1,"offset":8270},"end":{"line":277,"column":26,"offset":8387},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":278,"column":1,"offset":8388},"end":{"line":283,"column":4,"offset":8516},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":284,"column":1,"offset":8517},"end":{"line":284,"column":14,"offset":8530},"indent":[]}}],"position":{"start":{"line":284,"column":1,"offset":8517},"end":{"line":284,"column":14,"offset":8530},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":286,"column":1,"offset":8532},"end":{"line":299,"column":4,"offset":8814},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":301,"column":1,"offset":8816},"end":{"line":302,"column":5,"offset":8825},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":305,"column":7,"offset":8834},"end":{"line":305,"column":13,"offset":8840},"indent":[]}}],"position":{"start":{"line":305,"column":1,"offset":8828},"end":{"line":305,"column":13,"offset":8840},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":305,"column":13,"offset":8840}}}}