{"expireTime":9007200842249087000,"key":"transformer-remark-markdown-html-ast-7a2bdbc00b163616b9b52ad990bfb35a-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833}}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847}}},{"type":"raw","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860}}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865}}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879}}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884}}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895}}},{"type":"raw","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900}}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901}}},{"type":"raw","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906}}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":28,"column":5,"offset":911}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":30,"column":7,"offset":919},"end":{"line":30,"column":10,"offset":922}}}],"position":{"start":{"line":30,"column":1,"offset":913},"end":{"line":30,"column":10,"offset":922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":31,"column":7,"offset":929},"end":{"line":31,"column":10,"offset":932}}}],"position":{"start":{"line":31,"column":1,"offset":923},"end":{"line":31,"column":10,"offset":932}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":33,"column":6,"offset":939},"end":{"line":33,"column":14,"offset":947}}}],"position":{"start":{"line":33,"column":1,"offset":934},"end":{"line":33,"column":14,"offset":947}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":34,"column":7,"offset":954},"end":{"line":34,"column":10,"offset":957}}}],"position":{"start":{"line":34,"column":1,"offset":948},"end":{"line":34,"column":10,"offset":957}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":36,"column":8,"offset":966},"end":{"line":36,"column":30,"offset":988}}}],"position":{"start":{"line":36,"column":1,"offset":959},"end":{"line":36,"column":30,"offset":988}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":38,"column":1,"offset":990},"end":{"line":39,"column":1,"offset":1134}}},{"type":"raw","value":"<br>","position":{"start":{"line":39,"column":1,"offset":1134},"end":{"line":39,"column":5,"offset":1138}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":39,"column":5,"offset":1138},"end":{"line":39,"column":16,"offset":1149}}},{"type":"raw","value":"<br>","position":{"start":{"line":39,"column":16,"offset":1149},"end":{"line":39,"column":20,"offset":1153}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":39,"column":20,"offset":1153},"end":{"line":41,"column":1,"offset":1297}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":1,"offset":1297},"end":{"line":41,"column":5,"offset":1301}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":41,"column":5,"offset":1301},"end":{"line":41,"column":16,"offset":1312}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":16,"offset":1312},"end":{"line":41,"column":20,"offset":1316}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":41,"column":20,"offset":1316},"end":{"line":42,"column":45,"offset":1361}}},{"type":"raw","value":"<br>","position":{"start":{"line":42,"column":45,"offset":1361},"end":{"line":42,"column":49,"offset":1365}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":42,"column":49,"offset":1365},"end":{"line":42,"column":65,"offset":1381}}},{"type":"raw","value":"<br>","position":{"start":{"line":42,"column":65,"offset":1381},"end":{"line":42,"column":69,"offset":1385}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":42,"column":69,"offset":1385},"end":{"line":44,"column":1,"offset":1428}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1428},"end":{"line":44,"column":5,"offset":1432}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":44,"column":5,"offset":1432},"end":{"line":44,"column":22,"offset":1449}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":22,"offset":1449},"end":{"line":44,"column":26,"offset":1453}}},{"type":"text","value":"\n","position":{"start":{"line":44,"column":26,"offset":1453},"end":{"line":45,"column":1,"offset":1454}}},{"type":"raw","value":"<br>","position":{"start":{"line":45,"column":1,"offset":1454},"end":{"line":45,"column":5,"offset":1458}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":45,"column":5,"offset":1458},"end":{"line":47,"column":1,"offset":1576}}},{"type":"raw","value":"<br>","position":{"start":{"line":47,"column":1,"offset":1576},"end":{"line":47,"column":5,"offset":1580}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":47,"column":5,"offset":1580},"end":{"line":49,"column":1,"offset":1701}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":49,"column":1,"offset":1701},"end":{"line":49,"column":12,"offset":1712}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":49,"column":12,"offset":1712},"end":{"line":49,"column":68,"offset":1768}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":49,"column":68,"offset":1768},"end":{"line":49,"column":79,"offset":1779}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":49,"column":79,"offset":1779},"end":{"line":49,"column":106,"offset":1806}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":49,"column":106,"offset":1806},"end":{"line":49,"column":109,"offset":1809}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":49,"column":109,"offset":1809},"end":{"line":49,"column":189,"offset":1889}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":49,"column":189,"offset":1889},"end":{"line":49,"column":192,"offset":1892}}},{"type":"text","value":" to get 3.","position":{"start":{"line":49,"column":192,"offset":1892},"end":{"line":49,"column":202,"offset":1902}}}],"position":{"start":{"line":38,"column":1,"offset":990},"end":{"line":49,"column":202,"offset":1902}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":51,"column":8,"offset":1911},"end":{"line":51,"column":14,"offset":1917}}}],"position":{"start":{"line":51,"column":1,"offset":1904},"end":{"line":51,"column":14,"offset":1917}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":52,"column":1,"offset":1918},"end":{"line":52,"column":9,"offset":1926}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":52,"column":9,"offset":1926},"end":{"line":52,"column":73,"offset":1990}}}],"position":{"start":{"line":52,"column":1,"offset":1918},"end":{"line":52,"column":73,"offset":1990}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":53,"column":1,"offset":1991},"end":{"line":56,"column":4,"offset":2030}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":57,"column":1,"offset":2031},"end":{"line":57,"column":5,"offset":2035}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":59,"column":1,"offset":2037},"end":{"line":59,"column":72,"offset":2108}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":59,"column":72,"offset":2108},"end":{"line":59,"column":80,"offset":2116}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":59,"column":80,"offset":2116},"end":{"line":60,"column":1,"offset":2140}}},{"type":"raw","value":"<br>","position":{"start":{"line":60,"column":1,"offset":2140},"end":{"line":60,"column":5,"offset":2144}}},{"type":"text","value":"\n","position":{"start":{"line":60,"column":5,"offset":2144},"end":{"line":61,"column":1,"offset":2145}}},{"type":"raw","value":"<br>","position":{"start":{"line":61,"column":1,"offset":2145},"end":{"line":61,"column":5,"offset":2149}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":61,"column":5,"offset":2149},"end":{"line":62,"column":184,"offset":2333}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":62,"column":184,"offset":2333},"end":{"line":62,"column":187,"offset":2336}}},{"type":"text","value":".\n","position":{"start":{"line":62,"column":187,"offset":2336},"end":{"line":63,"column":1,"offset":2339}}},{"type":"raw","value":"<br>","position":{"start":{"line":63,"column":1,"offset":2339},"end":{"line":63,"column":5,"offset":2343}}},{"type":"text","value":"\n","position":{"start":{"line":63,"column":5,"offset":2343},"end":{"line":64,"column":1,"offset":2344}}},{"type":"raw","value":"<br>","position":{"start":{"line":64,"column":1,"offset":2344},"end":{"line":64,"column":5,"offset":2348}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":64,"column":5,"offset":2348},"end":{"line":65,"column":27,"offset":2375}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":65,"column":27,"offset":2375},"end":{"line":65,"column":35,"offset":2383}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":65,"column":35,"offset":2383},"end":{"line":65,"column":86,"offset":2434}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":65,"column":86,"offset":2434},"end":{"line":65,"column":95,"offset":2443}}},{"type":"text","value":". ","position":{"start":{"line":65,"column":95,"offset":2443},"end":{"line":65,"column":97,"offset":2445}}}],"position":{"start":{"line":59,"column":1,"offset":2037},"end":{"line":65,"column":97,"offset":2445}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":67,"column":1,"offset":2447},"end":{"line":67,"column":6,"offset":2452}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":69,"column":1,"offset":2454},"end":{"line":70,"column":1,"offset":2498}}},{"type":"raw","value":"<br>","position":{"start":{"line":70,"column":1,"offset":2498},"end":{"line":70,"column":5,"offset":2502}}},{"type":"text","value":"\n","position":{"start":{"line":70,"column":5,"offset":2502},"end":{"line":71,"column":1,"offset":2503}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":71,"column":1,"offset":2503},"end":{"line":71,"column":22,"offset":2524}}},{"type":"text","value":"\n","position":{"start":{"line":71,"column":22,"offset":2524},"end":{"line":72,"column":1,"offset":2525}}},{"type":"raw","value":"<br>","position":{"start":{"line":72,"column":1,"offset":2525},"end":{"line":72,"column":5,"offset":2529}}}],"position":{"start":{"line":69,"column":1,"offset":2454},"end":{"line":72,"column":5,"offset":2529}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":74,"column":1,"offset":2531},"end":{"line":74,"column":152,"offset":2682}}}],"position":{"start":{"line":74,"column":1,"offset":2531},"end":{"line":74,"column":152,"offset":2682}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":76,"column":8,"offset":2691},"end":{"line":76,"column":20,"offset":2703}}}],"position":{"start":{"line":76,"column":1,"offset":2684},"end":{"line":76,"column":20,"offset":2703}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":78,"column":1,"offset":2705},"end":{"line":78,"column":56,"offset":2760}}}],"position":{"start":{"line":78,"column":1,"offset":2705},"end":{"line":78,"column":56,"offset":2760}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":79,"column":1,"offset":2761},"end":{"line":84,"column":4,"offset":2852}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":85,"column":1,"offset":2853},"end":{"line":85,"column":5,"offset":2857}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":87,"column":1,"offset":2859},"end":{"line":87,"column":37,"offset":2895}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":87,"column":37,"offset":2895},"end":{"line":87,"column":41,"offset":2899}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":87,"column":41,"offset":2899},"end":{"line":88,"column":1,"offset":2916}}},{"type":"raw","value":"<br>","position":{"start":{"line":88,"column":1,"offset":2916},"end":{"line":88,"column":5,"offset":2920}}},{"type":"text","value":"\n","position":{"start":{"line":88,"column":5,"offset":2920},"end":{"line":89,"column":1,"offset":2921}}},{"type":"raw","value":"<br>","position":{"start":{"line":89,"column":1,"offset":2921},"end":{"line":89,"column":5,"offset":2925}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":89,"column":5,"offset":2925},"end":{"line":90,"column":66,"offset":2991}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":90,"column":66,"offset":2991},"end":{"line":90,"column":89,"offset":3014}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":90,"column":89,"offset":3014},"end":{"line":91,"column":1,"offset":3054}}},{"type":"raw","value":"<br>","position":{"start":{"line":91,"column":1,"offset":3054},"end":{"line":91,"column":5,"offset":3058}}},{"type":"text","value":"\n","position":{"start":{"line":91,"column":5,"offset":3058},"end":{"line":92,"column":1,"offset":3059}}},{"type":"raw","value":"<br>","position":{"start":{"line":92,"column":1,"offset":3059},"end":{"line":92,"column":5,"offset":3063}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":92,"column":5,"offset":3063},"end":{"line":93,"column":21,"offset":3084}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":93,"column":21,"offset":3084},"end":{"line":93,"column":25,"offset":3088}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":93,"column":25,"offset":3088},"end":{"line":94,"column":1,"offset":3142}}},{"type":"raw","value":"<br>","position":{"start":{"line":94,"column":1,"offset":3142},"end":{"line":94,"column":5,"offset":3146}}},{"type":"text","value":"\n","position":{"start":{"line":94,"column":5,"offset":3146},"end":{"line":95,"column":1,"offset":3147}}},{"type":"raw","value":"<br>","position":{"start":{"line":95,"column":1,"offset":3147},"end":{"line":95,"column":5,"offset":3151}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":95,"column":5,"offset":3151},"end":{"line":96,"column":21,"offset":3172}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":96,"column":21,"offset":3172},"end":{"line":96,"column":25,"offset":3176}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":96,"column":25,"offset":3176},"end":{"line":97,"column":1,"offset":3231}}},{"type":"raw","value":"<br>","position":{"start":{"line":97,"column":1,"offset":3231},"end":{"line":97,"column":5,"offset":3235}}},{"type":"text","value":"\n","position":{"start":{"line":97,"column":5,"offset":3235},"end":{"line":98,"column":1,"offset":3236}}},{"type":"raw","value":"<br>","position":{"start":{"line":98,"column":1,"offset":3236},"end":{"line":98,"column":5,"offset":3240}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":98,"column":5,"offset":3240},"end":{"line":99,"column":58,"offset":3298}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":99,"column":58,"offset":3298},"end":{"line":99,"column":61,"offset":3301}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":99,"column":61,"offset":3301},"end":{"line":99,"column":145,"offset":3385}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":99,"column":145,"offset":3385},"end":{"line":99,"column":153,"offset":3393}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":99,"column":153,"offset":3393},"end":{"line":99,"column":178,"offset":3418}}}],"position":{"start":{"line":87,"column":1,"offset":2859},"end":{"line":99,"column":178,"offset":3418}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":101,"column":7,"offset":3426},"end":{"line":101,"column":10,"offset":3429}}}],"position":{"start":{"line":101,"column":1,"offset":3420},"end":{"line":101,"column":10,"offset":3429}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":103,"column":8,"offset":3438},"end":{"line":103,"column":17,"offset":3447}}}],"position":{"start":{"line":103,"column":1,"offset":3431},"end":{"line":103,"column":17,"offset":3447}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":104,"column":1,"offset":3448},"end":{"line":115,"column":4,"offset":3647}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":116,"column":1,"offset":3648},"end":{"line":116,"column":5,"offset":3652}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":118,"column":1,"offset":3654},"end":{"line":119,"column":1,"offset":3870}}},{"type":"raw","value":"<br>","position":{"start":{"line":119,"column":1,"offset":3870},"end":{"line":119,"column":5,"offset":3874}}},{"type":"text","value":"\n","position":{"start":{"line":119,"column":5,"offset":3874},"end":{"line":120,"column":1,"offset":3875}}},{"type":"raw","value":"<br>","position":{"start":{"line":120,"column":1,"offset":3875},"end":{"line":120,"column":5,"offset":3879}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":120,"column":5,"offset":3879},"end":{"line":121,"column":72,"offset":3951}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":121,"column":72,"offset":3951},"end":{"line":121,"column":81,"offset":3960}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":121,"column":81,"offset":3960},"end":{"line":122,"column":1,"offset":3979}}},{"type":"raw","value":"<br>","position":{"start":{"line":122,"column":1,"offset":3979},"end":{"line":122,"column":5,"offset":3983}}},{"type":"text","value":"\n","position":{"start":{"line":122,"column":5,"offset":3983},"end":{"line":123,"column":1,"offset":3984}}},{"type":"raw","value":"<br>","position":{"start":{"line":123,"column":1,"offset":3984},"end":{"line":123,"column":5,"offset":3988}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":123,"column":5,"offset":3988},"end":{"line":124,"column":10,"offset":3998}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":124,"column":10,"offset":3998},"end":{"line":124,"column":16,"offset":4004}}},{"type":"text","value":" gets called with ","position":{"start":{"line":124,"column":16,"offset":4004},"end":{"line":124,"column":34,"offset":4022}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":124,"column":34,"offset":4022},"end":{"line":124,"column":42,"offset":4030}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":124,"column":42,"offset":4030},"end":{"line":125,"column":24,"offset":4055}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":125,"column":24,"offset":4055},"end":{"line":125,"column":33,"offset":4064}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":125,"column":33,"offset":4064},"end":{"line":125,"column":107,"offset":4138}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":125,"column":107,"offset":4138},"end":{"line":125,"column":116,"offset":4147}}},{"type":"text","value":" is false because ","position":{"start":{"line":125,"column":116,"offset":4147},"end":{"line":125,"column":134,"offset":4165}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":125,"column":134,"offset":4165},"end":{"line":125,"column":137,"offset":4168}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":125,"column":137,"offset":4168},"end":{"line":125,"column":161,"offset":4192}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":125,"column":161,"offset":4192},"end":{"line":125,"column":167,"offset":4198}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":125,"column":167,"offset":4198},"end":{"line":125,"column":192,"offset":4223}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":125,"column":192,"offset":4223},"end":{"line":125,"column":200,"offset":4231}}},{"type":"text","value":". This is because ","position":{"start":{"line":125,"column":200,"offset":4231},"end":{"line":125,"column":218,"offset":4249}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":125,"column":218,"offset":4249},"end":{"line":125,"column":224,"offset":4255}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":125,"column":224,"offset":4255},"end":{"line":125,"column":245,"offset":4276}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":125,"column":245,"offset":4276},"end":{"line":125,"column":252,"offset":4283}}},{"type":"text","value":" and ","position":{"start":{"line":125,"column":252,"offset":4283},"end":{"line":125,"column":257,"offset":4288}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":125,"column":257,"offset":4288},"end":{"line":125,"column":260,"offset":4291}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":125,"column":260,"offset":4291},"end":{"line":125,"column":285,"offset":4316}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":125,"column":285,"offset":4316},"end":{"line":125,"column":291,"offset":4322}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":125,"column":291,"offset":4322},"end":{"line":126,"column":96,"offset":4448}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":126,"column":96,"offset":4448},"end":{"line":126,"column":111,"offset":4463}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":126,"column":111,"offset":4463},"end":{"line":126,"column":182,"offset":4534}}}],"position":{"start":{"line":118,"column":1,"offset":3654},"end":{"line":126,"column":182,"offset":4534}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":128,"column":8,"offset":4543},"end":{"line":128,"column":19,"offset":4554}}}],"position":{"start":{"line":128,"column":1,"offset":4536},"end":{"line":128,"column":19,"offset":4554}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":129,"column":1,"offset":4555},"end":{"line":129,"column":14,"offset":4568}}}],"position":{"start":{"line":129,"column":1,"offset":4555},"end":{"line":129,"column":14,"offset":4568}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":130,"column":1,"offset":4569},"end":{"line":145,"column":4,"offset":4984}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":146,"column":1,"offset":4985},"end":{"line":146,"column":5,"offset":4989}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":148,"column":1,"offset":4991},"end":{"line":148,"column":141,"offset":5131}}}],"position":{"start":{"line":148,"column":1,"offset":4991},"end":{"line":148,"column":141,"offset":5131}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":150,"column":8,"offset":5140},"end":{"line":150,"column":30,"offset":5162}}}],"position":{"start":{"line":150,"column":1,"offset":5133},"end":{"line":150,"column":30,"offset":5162}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":151,"column":1,"offset":5163},"end":{"line":151,"column":199,"offset":5361}}}],"position":{"start":{"line":151,"column":1,"offset":5163},"end":{"line":151,"column":199,"offset":5361}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":153,"column":8,"offset":5370},"end":{"line":153,"column":30,"offset":5392}}}],"position":{"start":{"line":153,"column":1,"offset":5363},"end":{"line":153,"column":30,"offset":5392}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":155,"column":1,"offset":5394},"end":{"line":156,"column":1,"offset":5469}}},{"type":"raw","value":"<br>","position":{"start":{"line":156,"column":1,"offset":5469},"end":{"line":156,"column":5,"offset":5473}}},{"type":"text","value":"\n","position":{"start":{"line":156,"column":5,"offset":5473},"end":{"line":157,"column":1,"offset":5474}}},{"type":"raw","value":"<br>","position":{"start":{"line":157,"column":1,"offset":5474},"end":{"line":157,"column":5,"offset":5478}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":157,"column":5,"offset":5478},"end":{"line":159,"column":1,"offset":5540}}},{"type":"raw","value":"<br>","position":{"start":{"line":159,"column":1,"offset":5540},"end":{"line":159,"column":5,"offset":5544}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":159,"column":5,"offset":5544},"end":{"line":160,"column":1,"offset":5547}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":160,"column":1,"offset":5547},"end":{"line":160,"column":11,"offset":5557}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":160,"column":11,"offset":5557},"end":{"line":160,"column":19,"offset":5565}}},{"type":"text","value":" and ","position":{"start":{"line":160,"column":19,"offset":5565},"end":{"line":160,"column":24,"offset":5570}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":160,"column":24,"offset":5570},"end":{"line":160,"column":34,"offset":5580}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":160,"column":34,"offset":5580},"end":{"line":161,"column":1,"offset":5629}}},{"type":"raw","value":"<br>","position":{"start":{"line":161,"column":1,"offset":5629},"end":{"line":161,"column":5,"offset":5633}}}],"position":{"start":{"line":155,"column":1,"offset":5394},"end":{"line":161,"column":5,"offset":5633}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":163,"column":8,"offset":5642},"end":{"line":163,"column":12,"offset":5646}}}],"position":{"start":{"line":163,"column":1,"offset":5635},"end":{"line":163,"column":12,"offset":5646}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":164,"column":1,"offset":5647},"end":{"line":169,"column":4,"offset":5758}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":170,"column":1,"offset":5759},"end":{"line":171,"column":5,"offset":5768}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":173,"column":1,"offset":5770},"end":{"line":173,"column":7,"offset":5776}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":173,"column":7,"offset":5776},"end":{"line":175,"column":1,"offset":5858}}},{"type":"raw","value":"<br>","position":{"start":{"line":175,"column":1,"offset":5858},"end":{"line":175,"column":5,"offset":5862}}},{"type":"text","value":"\n","position":{"start":{"line":175,"column":5,"offset":5862},"end":{"line":176,"column":1,"offset":5863}}},{"type":"raw","value":"<br>","position":{"start":{"line":176,"column":1,"offset":5863},"end":{"line":176,"column":5,"offset":5867}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":176,"column":5,"offset":5867},"end":{"line":177,"column":10,"offset":5877}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":177,"column":10,"offset":5877},"end":{"line":177,"column":14,"offset":5881}}},{"type":"text","value":". Since ","position":{"start":{"line":177,"column":14,"offset":5881},"end":{"line":177,"column":22,"offset":5889}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":177,"column":22,"offset":5889},"end":{"line":177,"column":30,"offset":5897}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":177,"column":30,"offset":5897},"end":{"line":177,"column":50,"offset":5917}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":177,"column":50,"offset":5917},"end":{"line":177,"column":53,"offset":5920}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":177,"column":53,"offset":5920},"end":{"line":177,"column":90,"offset":5957}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":177,"column":90,"offset":5957},"end":{"line":177,"column":96,"offset":5963}}},{"type":"text","value":".\n","position":{"start":{"line":177,"column":96,"offset":5963},"end":{"line":178,"column":1,"offset":5966}}},{"type":"raw","value":"<br>","position":{"start":{"line":178,"column":1,"offset":5966},"end":{"line":178,"column":5,"offset":5970}}},{"type":"text","value":"\n","position":{"start":{"line":178,"column":5,"offset":5970},"end":{"line":179,"column":1,"offset":5971}}},{"type":"raw","value":"<br>","position":{"start":{"line":179,"column":1,"offset":5971},"end":{"line":179,"column":5,"offset":5975}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":179,"column":5,"offset":5975},"end":{"line":180,"column":14,"offset":5989}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":180,"column":14,"offset":5989},"end":{"line":180,"column":18,"offset":5993}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":180,"column":18,"offset":5993},"end":{"line":180,"column":90,"offset":6065}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":180,"column":90,"offset":6065},"end":{"line":180,"column":94,"offset":6069}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":180,"column":94,"offset":6069},"end":{"line":180,"column":125,"offset":6100}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":180,"column":125,"offset":6100},"end":{"line":180,"column":131,"offset":6106}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":180,"column":131,"offset":6106},"end":{"line":181,"column":1,"offset":6121}}},{"type":"raw","value":"<br>","position":{"start":{"line":181,"column":1,"offset":6121},"end":{"line":181,"column":5,"offset":6125}}},{"type":"text","value":"\n","position":{"start":{"line":181,"column":5,"offset":6125},"end":{"line":182,"column":1,"offset":6126}}},{"type":"raw","value":"<br>","position":{"start":{"line":182,"column":1,"offset":6126},"end":{"line":182,"column":5,"offset":6130}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":182,"column":5,"offset":6130},"end":{"line":183,"column":14,"offset":6144}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":183,"column":14,"offset":6144},"end":{"line":183,"column":18,"offset":6148}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":183,"column":18,"offset":6148},"end":{"line":183,"column":37,"offset":6167}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":183,"column":37,"offset":6167},"end":{"line":183,"column":40,"offset":6170}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":183,"column":40,"offset":6170},"end":{"line":183,"column":77,"offset":6207}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":183,"column":77,"offset":6207},"end":{"line":183,"column":81,"offset":6211}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":183,"column":81,"offset":6211},"end":{"line":183,"column":99,"offset":6229}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":183,"column":99,"offset":6229},"end":{"line":183,"column":102,"offset":6232}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":183,"column":102,"offset":6232},"end":{"line":183,"column":133,"offset":6263}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":183,"column":133,"offset":6263},"end":{"line":183,"column":139,"offset":6269}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":183,"column":139,"offset":6269},"end":{"line":183,"column":167,"offset":6297}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":183,"column":167,"offset":6297},"end":{"line":183,"column":171,"offset":6301}}},{"type":"text","value":".\n","position":{"start":{"line":183,"column":171,"offset":6301},"end":{"line":184,"column":1,"offset":6303}}},{"type":"raw","value":"<br>","position":{"start":{"line":184,"column":1,"offset":6303},"end":{"line":184,"column":5,"offset":6307}}},{"type":"text","value":"\n","position":{"start":{"line":184,"column":5,"offset":6307},"end":{"line":185,"column":1,"offset":6308}}},{"type":"raw","value":"<br>","position":{"start":{"line":185,"column":1,"offset":6308},"end":{"line":185,"column":5,"offset":6312}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":185,"column":5,"offset":6312},"end":{"line":187,"column":1,"offset":6332}}},{"type":"raw","value":"<br>","position":{"start":{"line":187,"column":1,"offset":6332},"end":{"line":187,"column":5,"offset":6336}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":187,"column":5,"offset":6336},"end":{"line":188,"column":6,"offset":6342}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":188,"column":6,"offset":6342},"end":{"line":188,"column":12,"offset":6348}}},{"type":"text","value":" does not have an ","position":{"start":{"line":188,"column":12,"offset":6348},"end":{"line":188,"column":30,"offset":6366}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":188,"column":30,"offset":6366},"end":{"line":188,"column":36,"offset":6372}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":188,"column":36,"offset":6372},"end":{"line":188,"column":62,"offset":6398}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":188,"column":62,"offset":6398},"end":{"line":188,"column":75,"offset":6411}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":188,"column":75,"offset":6411},"end":{"line":188,"column":159,"offset":6495}}}],"position":{"start":{"line":173,"column":1,"offset":5770},"end":{"line":188,"column":159,"offset":6495}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":190,"column":8,"offset":6504},"end":{"line":190,"column":41,"offset":6537}}}],"position":{"start":{"line":190,"column":1,"offset":6497},"end":{"line":190,"column":41,"offset":6537}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":191,"column":1,"offset":6538},"end":{"line":196,"column":4,"offset":6613}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":197,"column":1,"offset":6614},"end":{"line":198,"column":1,"offset":6633}}},{"type":"raw","value":"<br>","position":{"start":{"line":198,"column":1,"offset":6633},"end":{"line":198,"column":5,"offset":6637}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":198,"column":5,"offset":6637},"end":{"line":200,"column":5,"offset":6775}}},{"type":"raw","value":"<br>","position":{"start":{"line":200,"column":5,"offset":6775},"end":{"line":200,"column":9,"offset":6779}}},{"type":"text","value":"\n","position":{"start":{"line":200,"column":9,"offset":6779},"end":{"line":201,"column":5,"offset":6784}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":201,"column":5,"offset":6784},"end":{"line":201,"column":27,"offset":6806}}},{"type":"text","value":"\n","position":{"start":{"line":201,"column":27,"offset":6806},"end":{"line":202,"column":5,"offset":6811}}},{"type":"raw","value":"<br>","position":{"start":{"line":202,"column":5,"offset":6811},"end":{"line":202,"column":9,"offset":6815}}},{"type":"text","value":"\n","position":{"start":{"line":202,"column":9,"offset":6815},"end":{"line":203,"column":5,"offset":6820}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":203,"column":5,"offset":6820},"end":{"line":203,"column":12,"offset":6827}}},{"type":"text","value":" and ","position":{"start":{"line":203,"column":12,"offset":6827},"end":{"line":203,"column":17,"offset":6832}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":203,"column":17,"offset":6832},"end":{"line":203,"column":25,"offset":6840}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":203,"column":25,"offset":6840},"end":{"line":203,"column":63,"offset":6878}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":203,"column":63,"offset":6878},"end":{"line":203,"column":66,"offset":6881}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":203,"column":66,"offset":6881},"end":{"line":203,"column":86,"offset":6901}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":203,"column":86,"offset":6901},"end":{"line":203,"column":89,"offset":6904}}},{"type":"text","value":" will be called with ","position":{"start":{"line":203,"column":89,"offset":6904},"end":{"line":203,"column":110,"offset":6925}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":203,"column":110,"offset":6925},"end":{"line":203,"column":119,"offset":6934}}},{"type":"text","value":".\n","position":{"start":{"line":203,"column":119,"offset":6934},"end":{"line":204,"column":1,"offset":6936}}},{"type":"raw","value":"<br>","position":{"start":{"line":204,"column":1,"offset":6936},"end":{"line":204,"column":5,"offset":6940}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":204,"column":5,"offset":6940},"end":{"line":206,"column":1,"offset":6956}}},{"type":"raw","value":"<br>","position":{"start":{"line":206,"column":1,"offset":6956},"end":{"line":206,"column":5,"offset":6960}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":206,"column":5,"offset":6960},"end":{"line":208,"column":5,"offset":7067}}},{"type":"raw","value":"<br>","position":{"start":{"line":208,"column":5,"offset":7067},"end":{"line":208,"column":9,"offset":7071}}},{"type":"text","value":"\n","position":{"start":{"line":208,"column":9,"offset":7071},"end":{"line":209,"column":1,"offset":7072}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":209,"column":1,"offset":7072},"end":{"line":209,"column":23,"offset":7094}}},{"type":"text","value":" turns into ","position":{"start":{"line":209,"column":23,"offset":7094},"end":{"line":209,"column":35,"offset":7106}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":209,"column":35,"offset":7106},"end":{"line":209,"column":61,"offset":7132}}},{"type":"text","value":"\n","position":{"start":{"line":209,"column":61,"offset":7132},"end":{"line":210,"column":1,"offset":7133}}},{"type":"raw","value":"<br>","position":{"start":{"line":210,"column":1,"offset":7133},"end":{"line":210,"column":5,"offset":7137}}},{"type":"text","value":"\nNow ","position":{"start":{"line":210,"column":5,"offset":7137},"end":{"line":211,"column":5,"offset":7142}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":211,"column":5,"offset":7142},"end":{"line":211,"column":8,"offset":7145}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":211,"column":8,"offset":7145},"end":{"line":211,"column":58,"offset":7195}}}],"position":{"start":{"line":197,"column":1,"offset":6614},"end":{"line":211,"column":58,"offset":7195}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":213,"column":1,"offset":7197},"end":{"line":214,"column":1,"offset":7215}}},{"type":"raw","value":"<br>","position":{"start":{"line":214,"column":1,"offset":7215},"end":{"line":214,"column":5,"offset":7219}}}],"position":{"start":{"line":213,"column":1,"offset":7197},"end":{"line":214,"column":5,"offset":7219}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":215,"column":1,"offset":7220},"end":{"line":217,"column":4,"offset":7250}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":218,"column":1,"offset":7251},"end":{"line":218,"column":13,"offset":7263}}}],"position":{"start":{"line":218,"column":1,"offset":7251},"end":{"line":218,"column":13,"offset":7263}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":219,"column":1,"offset":7264},"end":{"line":225,"column":4,"offset":7343}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":226,"column":1,"offset":7344},"end":{"line":226,"column":8,"offset":7351}}}],"position":{"start":{"line":226,"column":1,"offset":7344},"end":{"line":226,"column":8,"offset":7351}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":227,"column":1,"offset":7352},"end":{"line":234,"column":4,"offset":7476}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":235,"column":1,"offset":7477},"end":{"line":236,"column":5,"offset":7486}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":238,"column":1,"offset":7488},"end":{"line":238,"column":11,"offset":7498}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":238,"column":11,"offset":7498},"end":{"line":238,"column":24,"offset":7511}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":238,"column":24,"offset":7511},"end":{"line":238,"column":107,"offset":7594}}}],"position":{"start":{"line":238,"column":1,"offset":7488},"end":{"line":238,"column":107,"offset":7594}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":240,"column":7,"offset":7602},"end":{"line":240,"column":10,"offset":7605}}}],"position":{"start":{"line":240,"column":1,"offset":7596},"end":{"line":240,"column":10,"offset":7605}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":241,"column":7,"offset":7612},"end":{"line":241,"column":10,"offset":7615}}}],"position":{"start":{"line":241,"column":1,"offset":7606},"end":{"line":241,"column":10,"offset":7615}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":243,"column":6,"offset":7622},"end":{"line":243,"column":10,"offset":7626}}}],"position":{"start":{"line":243,"column":1,"offset":7617},"end":{"line":243,"column":10,"offset":7626}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":244,"column":7,"offset":7633},"end":{"line":244,"column":13,"offset":7639}}}],"position":{"start":{"line":244,"column":1,"offset":7627},"end":{"line":244,"column":13,"offset":7639}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":245,"column":1,"offset":7640},"end":{"line":245,"column":49,"offset":7688}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":245,"column":49,"offset":7688},"end":{"line":245,"column":57,"offset":7696}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":245,"column":57,"offset":7696},"end":{"line":245,"column":133,"offset":7772}}}],"position":{"start":{"line":245,"column":1,"offset":7640},"end":{"line":245,"column":133,"offset":7772}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":246,"column":1,"offset":7773},"end":{"line":256,"column":4,"offset":7968}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":257,"column":1,"offset":7969},"end":{"line":257,"column":5,"offset":7973}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":260,"column":1,"offset":7976},"end":{"line":261,"column":1,"offset":8058}}},{"type":"raw","value":"<br>","position":{"start":{"line":261,"column":1,"offset":8058},"end":{"line":261,"column":5,"offset":8062}}},{"type":"text","value":"\n","position":{"start":{"line":261,"column":5,"offset":8062},"end":{"line":262,"column":1,"offset":8063}}},{"type":"raw","value":"<br>","position":{"start":{"line":262,"column":1,"offset":8063},"end":{"line":262,"column":5,"offset":8067}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":262,"column":5,"offset":8067},"end":{"line":263,"column":26,"offset":8093}}}],"position":{"start":{"line":260,"column":1,"offset":7976},"end":{"line":263,"column":26,"offset":8093}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":264,"column":1,"offset":8094},"end":{"line":269,"column":4,"offset":8222}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":270,"column":1,"offset":8223},"end":{"line":270,"column":14,"offset":8236}}}],"position":{"start":{"line":270,"column":1,"offset":8223},"end":{"line":270,"column":14,"offset":8236}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":272,"column":1,"offset":8238},"end":{"line":285,"column":4,"offset":8520}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":287,"column":1,"offset":8522},"end":{"line":288,"column":5,"offset":8531}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":291,"column":7,"offset":8540},"end":{"line":291,"column":13,"offset":8546}}}],"position":{"start":{"line":291,"column":1,"offset":8534},"end":{"line":291,"column":13,"offset":8546}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":291,"column":13,"offset":8546}}}}