{"expireTime":9007200842256476000,"key":"transformer-remark-markdown-html-ast-87e5b2b6a7de1221073370fb3372bbd9-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833}}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847}}},{"type":"raw","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860}}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865}}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879}}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884}}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895}}},{"type":"raw","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900}}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901}}},{"type":"raw","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906}}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911}}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912}}},{"type":"raw","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916}}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043}}},{"type":"raw","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047}}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048}}},{"type":"raw","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052}}},{"type":"text","value":"\nEnvironment: The name-object pairs the interpreter keeps in memory.\n","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":34,"column":1,"offset":1121}}},{"type":"raw","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1121},"end":{"line":34,"column":5,"offset":1125}}},{"type":"text","value":"\n","position":{"start":{"line":34,"column":5,"offset":1125},"end":{"line":35,"column":1,"offset":1126}}},{"type":"raw","value":"<br>","position":{"start":{"line":35,"column":1,"offset":1126},"end":{"line":35,"column":5,"offset":1130}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":35,"column":5,"offset":1130}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Compound Procedures can be used to build on top of other Compound Procedures:\n","position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":1,"offset":1210}}},{"type":"raw","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1210},"end":{"line":38,"column":5,"offset":1214}}}],"position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":5,"offset":1214}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (sum-of-squares x y)\n(+ (square x) (square y))</code></pre></div>","position":{"start":{"line":39,"column":1,"offset":1215},"end":{"line":42,"column":4,"offset":1277}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":43,"column":1,"offset":1278},"end":{"line":43,"column":5,"offset":1282}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Compound Procedure: procedure that you make out of other procedures.","position":{"start":{"line":45,"column":1,"offset":1284},"end":{"line":45,"column":69,"offset":1352}}}],"position":{"start":{"line":45,"column":1,"offset":1284},"end":{"line":45,"column":69,"offset":1352}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Primitive Procedure: procedure built into the language ex: ","position":{"start":{"line":47,"column":1,"offset":1354},"end":{"line":47,"column":60,"offset":1413}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":47,"column":60,"offset":1413},"end":{"line":47,"column":63,"offset":1416}}},{"type":"text","value":"\n","position":{"start":{"line":47,"column":63,"offset":1416},"end":{"line":48,"column":1,"offset":1417}}},{"type":"raw","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1417},"end":{"line":48,"column":5,"offset":1421}}},{"type":"text","value":"\n","position":{"start":{"line":48,"column":5,"offset":1421},"end":{"line":49,"column":1,"offset":1422}}},{"type":"raw","value":"<br>","position":{"start":{"line":49,"column":1,"offset":1422},"end":{"line":49,"column":5,"offset":1426}}},{"type":"text","value":"\nBoth are used exactly the same.\n","position":{"start":{"line":49,"column":5,"offset":1426},"end":{"line":51,"column":1,"offset":1459}}},{"type":"raw","value":"<br>","position":{"start":{"line":51,"column":1,"offset":1459},"end":{"line":51,"column":5,"offset":1463}}},{"type":"text","value":"\n","position":{"start":{"line":51,"column":5,"offset":1463},"end":{"line":52,"column":1,"offset":1464}}},{"type":"raw","value":"<br>","position":{"start":{"line":52,"column":1,"offset":1464},"end":{"line":52,"column":5,"offset":1468}}},{"type":"text","value":"\nWhen writing programs it is important to write modular code that doesn’t care how the other things are computed, only what is computed. This is known as a Black-Box abstraction.\n","position":{"start":{"line":52,"column":5,"offset":1468},"end":{"line":54,"column":1,"offset":1647}}},{"type":"raw","value":"<br>","position":{"start":{"line":54,"column":1,"offset":1647},"end":{"line":54,"column":5,"offset":1651}}}],"position":{"start":{"line":47,"column":1,"offset":1354},"end":{"line":54,"column":5,"offset":1651}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Lisp allows for block structure so you can nest a define in another define, and only the parent will have access to the nested define.\n","position":{"start":{"line":56,"column":1,"offset":1653},"end":{"line":57,"column":1,"offset":1788}}},{"type":"raw","value":"<br>","position":{"start":{"line":57,"column":1,"offset":1788},"end":{"line":57,"column":5,"offset":1792}}},{"type":"text","value":"\nLisp also allows the sub define functions to have access to parameters in the parents scope. This is called lexical scoping.\n","position":{"start":{"line":57,"column":5,"offset":1792},"end":{"line":59,"column":1,"offset":1918}}},{"type":"raw","value":"<br>","position":{"start":{"line":59,"column":1,"offset":1918},"end":{"line":59,"column":5,"offset":1922}}}],"position":{"start":{"line":56,"column":1,"offset":1653},"end":{"line":59,"column":5,"offset":1922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":61,"column":7,"offset":1930},"end":{"line":61,"column":10,"offset":1933}}}],"position":{"start":{"line":61,"column":1,"offset":1924},"end":{"line":61,"column":10,"offset":1933}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":62,"column":7,"offset":1940},"end":{"line":62,"column":10,"offset":1943}}}],"position":{"start":{"line":62,"column":1,"offset":1934},"end":{"line":62,"column":10,"offset":1943}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":64,"column":6,"offset":1950},"end":{"line":64,"column":14,"offset":1958}}}],"position":{"start":{"line":64,"column":1,"offset":1945},"end":{"line":64,"column":14,"offset":1958}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":65,"column":7,"offset":1965},"end":{"line":65,"column":10,"offset":1968}}}],"position":{"start":{"line":65,"column":1,"offset":1959},"end":{"line":65,"column":10,"offset":1968}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":67,"column":8,"offset":1977},"end":{"line":67,"column":30,"offset":1999}}}],"position":{"start":{"line":67,"column":1,"offset":1970},"end":{"line":67,"column":30,"offset":1999}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":69,"column":1,"offset":2001},"end":{"line":70,"column":1,"offset":2145}}},{"type":"raw","value":"<br>","position":{"start":{"line":70,"column":1,"offset":2145},"end":{"line":70,"column":5,"offset":2149}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":70,"column":5,"offset":2149},"end":{"line":70,"column":16,"offset":2160}}},{"type":"raw","value":"<br>","position":{"start":{"line":70,"column":16,"offset":2160},"end":{"line":70,"column":20,"offset":2164}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":70,"column":20,"offset":2164},"end":{"line":72,"column":1,"offset":2308}}},{"type":"raw","value":"<br>","position":{"start":{"line":72,"column":1,"offset":2308},"end":{"line":72,"column":5,"offset":2312}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":72,"column":5,"offset":2312},"end":{"line":72,"column":16,"offset":2323}}},{"type":"raw","value":"<br>","position":{"start":{"line":72,"column":16,"offset":2323},"end":{"line":72,"column":20,"offset":2327}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":72,"column":20,"offset":2327},"end":{"line":73,"column":45,"offset":2372}}},{"type":"raw","value":"<br>","position":{"start":{"line":73,"column":45,"offset":2372},"end":{"line":73,"column":49,"offset":2376}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":73,"column":49,"offset":2376},"end":{"line":73,"column":65,"offset":2392}}},{"type":"raw","value":"<br>","position":{"start":{"line":73,"column":65,"offset":2392},"end":{"line":73,"column":69,"offset":2396}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":73,"column":69,"offset":2396},"end":{"line":75,"column":1,"offset":2439}}},{"type":"raw","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2439},"end":{"line":75,"column":5,"offset":2443}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":75,"column":5,"offset":2443},"end":{"line":75,"column":22,"offset":2460}}},{"type":"raw","value":"<br>","position":{"start":{"line":75,"column":22,"offset":2460},"end":{"line":75,"column":26,"offset":2464}}},{"type":"text","value":"\n","position":{"start":{"line":75,"column":26,"offset":2464},"end":{"line":76,"column":1,"offset":2465}}},{"type":"raw","value":"<br>","position":{"start":{"line":76,"column":1,"offset":2465},"end":{"line":76,"column":5,"offset":2469}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":76,"column":5,"offset":2469},"end":{"line":78,"column":1,"offset":2587}}},{"type":"raw","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2587},"end":{"line":78,"column":5,"offset":2591}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":78,"column":5,"offset":2591},"end":{"line":80,"column":1,"offset":2712}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":80,"column":1,"offset":2712},"end":{"line":80,"column":12,"offset":2723}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":80,"column":12,"offset":2723},"end":{"line":80,"column":68,"offset":2779}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":80,"column":68,"offset":2779},"end":{"line":80,"column":79,"offset":2790}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":80,"column":79,"offset":2790},"end":{"line":80,"column":106,"offset":2817}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":80,"column":106,"offset":2817},"end":{"line":80,"column":109,"offset":2820}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":80,"column":109,"offset":2820},"end":{"line":80,"column":189,"offset":2900}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":80,"column":189,"offset":2900},"end":{"line":80,"column":192,"offset":2903}}},{"type":"text","value":" to get 3.","position":{"start":{"line":80,"column":192,"offset":2903},"end":{"line":80,"column":202,"offset":2913}}}],"position":{"start":{"line":69,"column":1,"offset":2001},"end":{"line":80,"column":202,"offset":2913}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":82,"column":8,"offset":2922},"end":{"line":82,"column":14,"offset":2928}}}],"position":{"start":{"line":82,"column":1,"offset":2915},"end":{"line":82,"column":14,"offset":2928}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":83,"column":1,"offset":2929},"end":{"line":83,"column":9,"offset":2937}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":83,"column":9,"offset":2937},"end":{"line":83,"column":73,"offset":3001}}}],"position":{"start":{"line":83,"column":1,"offset":2929},"end":{"line":83,"column":73,"offset":3001}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":84,"column":1,"offset":3002},"end":{"line":87,"column":4,"offset":3041}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":88,"column":1,"offset":3042},"end":{"line":88,"column":5,"offset":3046}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":90,"column":1,"offset":3048},"end":{"line":90,"column":72,"offset":3119}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":90,"column":72,"offset":3119},"end":{"line":90,"column":80,"offset":3127}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":90,"column":80,"offset":3127},"end":{"line":91,"column":1,"offset":3151}}},{"type":"raw","value":"<br>","position":{"start":{"line":91,"column":1,"offset":3151},"end":{"line":91,"column":5,"offset":3155}}},{"type":"text","value":"\n","position":{"start":{"line":91,"column":5,"offset":3155},"end":{"line":92,"column":1,"offset":3156}}},{"type":"raw","value":"<br>","position":{"start":{"line":92,"column":1,"offset":3156},"end":{"line":92,"column":5,"offset":3160}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":92,"column":5,"offset":3160},"end":{"line":93,"column":184,"offset":3344}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":93,"column":184,"offset":3344},"end":{"line":93,"column":187,"offset":3347}}},{"type":"text","value":".\n","position":{"start":{"line":93,"column":187,"offset":3347},"end":{"line":94,"column":1,"offset":3350}}},{"type":"raw","value":"<br>","position":{"start":{"line":94,"column":1,"offset":3350},"end":{"line":94,"column":5,"offset":3354}}},{"type":"text","value":"\n","position":{"start":{"line":94,"column":5,"offset":3354},"end":{"line":95,"column":1,"offset":3355}}},{"type":"raw","value":"<br>","position":{"start":{"line":95,"column":1,"offset":3355},"end":{"line":95,"column":5,"offset":3359}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":95,"column":5,"offset":3359},"end":{"line":96,"column":27,"offset":3386}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":96,"column":27,"offset":3386},"end":{"line":96,"column":35,"offset":3394}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":96,"column":35,"offset":3394},"end":{"line":96,"column":86,"offset":3445}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":96,"column":86,"offset":3445},"end":{"line":96,"column":95,"offset":3454}}},{"type":"text","value":". ","position":{"start":{"line":96,"column":95,"offset":3454},"end":{"line":96,"column":97,"offset":3456}}}],"position":{"start":{"line":90,"column":1,"offset":3048},"end":{"line":96,"column":97,"offset":3456}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":98,"column":1,"offset":3458},"end":{"line":98,"column":6,"offset":3463}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":100,"column":1,"offset":3465},"end":{"line":101,"column":1,"offset":3509}}},{"type":"raw","value":"<br>","position":{"start":{"line":101,"column":1,"offset":3509},"end":{"line":101,"column":5,"offset":3513}}},{"type":"text","value":"\n","position":{"start":{"line":101,"column":5,"offset":3513},"end":{"line":102,"column":1,"offset":3514}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":102,"column":1,"offset":3514},"end":{"line":102,"column":22,"offset":3535}}},{"type":"text","value":"\n","position":{"start":{"line":102,"column":22,"offset":3535},"end":{"line":103,"column":1,"offset":3536}}},{"type":"raw","value":"<br>","position":{"start":{"line":103,"column":1,"offset":3536},"end":{"line":103,"column":5,"offset":3540}}}],"position":{"start":{"line":100,"column":1,"offset":3465},"end":{"line":103,"column":5,"offset":3540}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":105,"column":1,"offset":3542},"end":{"line":105,"column":152,"offset":3693}}}],"position":{"start":{"line":105,"column":1,"offset":3542},"end":{"line":105,"column":152,"offset":3693}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":107,"column":8,"offset":3702},"end":{"line":107,"column":20,"offset":3714}}}],"position":{"start":{"line":107,"column":1,"offset":3695},"end":{"line":107,"column":20,"offset":3714}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":109,"column":1,"offset":3716},"end":{"line":109,"column":56,"offset":3771}}}],"position":{"start":{"line":109,"column":1,"offset":3716},"end":{"line":109,"column":56,"offset":3771}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":110,"column":1,"offset":3772},"end":{"line":115,"column":4,"offset":3863}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":116,"column":1,"offset":3864},"end":{"line":116,"column":5,"offset":3868}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":118,"column":1,"offset":3870},"end":{"line":118,"column":37,"offset":3906}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":118,"column":37,"offset":3906},"end":{"line":118,"column":41,"offset":3910}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":118,"column":41,"offset":3910},"end":{"line":119,"column":1,"offset":3927}}},{"type":"raw","value":"<br>","position":{"start":{"line":119,"column":1,"offset":3927},"end":{"line":119,"column":5,"offset":3931}}},{"type":"text","value":"\n","position":{"start":{"line":119,"column":5,"offset":3931},"end":{"line":120,"column":1,"offset":3932}}},{"type":"raw","value":"<br>","position":{"start":{"line":120,"column":1,"offset":3932},"end":{"line":120,"column":5,"offset":3936}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":120,"column":5,"offset":3936},"end":{"line":121,"column":66,"offset":4002}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":121,"column":66,"offset":4002},"end":{"line":121,"column":89,"offset":4025}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":121,"column":89,"offset":4025},"end":{"line":122,"column":1,"offset":4065}}},{"type":"raw","value":"<br>","position":{"start":{"line":122,"column":1,"offset":4065},"end":{"line":122,"column":5,"offset":4069}}},{"type":"text","value":"\n","position":{"start":{"line":122,"column":5,"offset":4069},"end":{"line":123,"column":1,"offset":4070}}},{"type":"raw","value":"<br>","position":{"start":{"line":123,"column":1,"offset":4070},"end":{"line":123,"column":5,"offset":4074}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":123,"column":5,"offset":4074},"end":{"line":124,"column":21,"offset":4095}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":124,"column":21,"offset":4095},"end":{"line":124,"column":25,"offset":4099}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":124,"column":25,"offset":4099},"end":{"line":125,"column":1,"offset":4153}}},{"type":"raw","value":"<br>","position":{"start":{"line":125,"column":1,"offset":4153},"end":{"line":125,"column":5,"offset":4157}}},{"type":"text","value":"\n","position":{"start":{"line":125,"column":5,"offset":4157},"end":{"line":126,"column":1,"offset":4158}}},{"type":"raw","value":"<br>","position":{"start":{"line":126,"column":1,"offset":4158},"end":{"line":126,"column":5,"offset":4162}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":126,"column":5,"offset":4162},"end":{"line":127,"column":21,"offset":4183}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":127,"column":21,"offset":4183},"end":{"line":127,"column":25,"offset":4187}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":127,"column":25,"offset":4187},"end":{"line":128,"column":1,"offset":4242}}},{"type":"raw","value":"<br>","position":{"start":{"line":128,"column":1,"offset":4242},"end":{"line":128,"column":5,"offset":4246}}},{"type":"text","value":"\n","position":{"start":{"line":128,"column":5,"offset":4246},"end":{"line":129,"column":1,"offset":4247}}},{"type":"raw","value":"<br>","position":{"start":{"line":129,"column":1,"offset":4247},"end":{"line":129,"column":5,"offset":4251}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":129,"column":5,"offset":4251},"end":{"line":130,"column":58,"offset":4309}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":130,"column":58,"offset":4309},"end":{"line":130,"column":61,"offset":4312}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":130,"column":61,"offset":4312},"end":{"line":130,"column":145,"offset":4396}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":130,"column":145,"offset":4396},"end":{"line":130,"column":153,"offset":4404}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":130,"column":153,"offset":4404},"end":{"line":130,"column":178,"offset":4429}}}],"position":{"start":{"line":118,"column":1,"offset":3870},"end":{"line":130,"column":178,"offset":4429}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":132,"column":7,"offset":4437},"end":{"line":132,"column":10,"offset":4440}}}],"position":{"start":{"line":132,"column":1,"offset":4431},"end":{"line":132,"column":10,"offset":4440}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":134,"column":8,"offset":4449},"end":{"line":134,"column":17,"offset":4458}}}],"position":{"start":{"line":134,"column":1,"offset":4442},"end":{"line":134,"column":17,"offset":4458}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":135,"column":1,"offset":4459},"end":{"line":146,"column":4,"offset":4658}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":147,"column":1,"offset":4659},"end":{"line":147,"column":5,"offset":4663}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":149,"column":1,"offset":4665},"end":{"line":150,"column":1,"offset":4881}}},{"type":"raw","value":"<br>","position":{"start":{"line":150,"column":1,"offset":4881},"end":{"line":150,"column":5,"offset":4885}}},{"type":"text","value":"\n","position":{"start":{"line":150,"column":5,"offset":4885},"end":{"line":151,"column":1,"offset":4886}}},{"type":"raw","value":"<br>","position":{"start":{"line":151,"column":1,"offset":4886},"end":{"line":151,"column":5,"offset":4890}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":151,"column":5,"offset":4890},"end":{"line":152,"column":72,"offset":4962}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":152,"column":72,"offset":4962},"end":{"line":152,"column":81,"offset":4971}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":152,"column":81,"offset":4971},"end":{"line":153,"column":1,"offset":4990}}},{"type":"raw","value":"<br>","position":{"start":{"line":153,"column":1,"offset":4990},"end":{"line":153,"column":5,"offset":4994}}},{"type":"text","value":"\n","position":{"start":{"line":153,"column":5,"offset":4994},"end":{"line":154,"column":1,"offset":4995}}},{"type":"raw","value":"<br>","position":{"start":{"line":154,"column":1,"offset":4995},"end":{"line":154,"column":5,"offset":4999}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":154,"column":5,"offset":4999},"end":{"line":155,"column":10,"offset":5009}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":155,"column":10,"offset":5009},"end":{"line":155,"column":16,"offset":5015}}},{"type":"text","value":" gets called with ","position":{"start":{"line":155,"column":16,"offset":5015},"end":{"line":155,"column":34,"offset":5033}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":155,"column":34,"offset":5033},"end":{"line":155,"column":42,"offset":5041}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":155,"column":42,"offset":5041},"end":{"line":156,"column":24,"offset":5066}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":156,"column":24,"offset":5066},"end":{"line":156,"column":33,"offset":5075}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":156,"column":33,"offset":5075},"end":{"line":156,"column":107,"offset":5149}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":156,"column":107,"offset":5149},"end":{"line":156,"column":116,"offset":5158}}},{"type":"text","value":" is false because ","position":{"start":{"line":156,"column":116,"offset":5158},"end":{"line":156,"column":134,"offset":5176}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":156,"column":134,"offset":5176},"end":{"line":156,"column":137,"offset":5179}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":156,"column":137,"offset":5179},"end":{"line":156,"column":161,"offset":5203}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":156,"column":161,"offset":5203},"end":{"line":156,"column":167,"offset":5209}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":156,"column":167,"offset":5209},"end":{"line":156,"column":192,"offset":5234}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":156,"column":192,"offset":5234},"end":{"line":156,"column":200,"offset":5242}}},{"type":"text","value":". This is because ","position":{"start":{"line":156,"column":200,"offset":5242},"end":{"line":156,"column":218,"offset":5260}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":156,"column":218,"offset":5260},"end":{"line":156,"column":224,"offset":5266}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":156,"column":224,"offset":5266},"end":{"line":156,"column":245,"offset":5287}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":156,"column":245,"offset":5287},"end":{"line":156,"column":252,"offset":5294}}},{"type":"text","value":" and ","position":{"start":{"line":156,"column":252,"offset":5294},"end":{"line":156,"column":257,"offset":5299}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":156,"column":257,"offset":5299},"end":{"line":156,"column":260,"offset":5302}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":156,"column":260,"offset":5302},"end":{"line":156,"column":285,"offset":5327}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":156,"column":285,"offset":5327},"end":{"line":156,"column":291,"offset":5333}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":156,"column":291,"offset":5333},"end":{"line":157,"column":96,"offset":5459}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":157,"column":96,"offset":5459},"end":{"line":157,"column":111,"offset":5474}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":157,"column":111,"offset":5474},"end":{"line":157,"column":182,"offset":5545}}}],"position":{"start":{"line":149,"column":1,"offset":4665},"end":{"line":157,"column":182,"offset":5545}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":159,"column":8,"offset":5554},"end":{"line":159,"column":19,"offset":5565}}}],"position":{"start":{"line":159,"column":1,"offset":5547},"end":{"line":159,"column":19,"offset":5565}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":160,"column":1,"offset":5566},"end":{"line":160,"column":14,"offset":5579}}}],"position":{"start":{"line":160,"column":1,"offset":5566},"end":{"line":160,"column":14,"offset":5579}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":161,"column":1,"offset":5580},"end":{"line":176,"column":4,"offset":5995}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":177,"column":1,"offset":5996},"end":{"line":177,"column":5,"offset":6000}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":179,"column":1,"offset":6002},"end":{"line":179,"column":141,"offset":6142}}}],"position":{"start":{"line":179,"column":1,"offset":6002},"end":{"line":179,"column":141,"offset":6142}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":181,"column":8,"offset":6151},"end":{"line":181,"column":30,"offset":6173}}}],"position":{"start":{"line":181,"column":1,"offset":6144},"end":{"line":181,"column":30,"offset":6173}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":182,"column":1,"offset":6174},"end":{"line":182,"column":199,"offset":6372}}}],"position":{"start":{"line":182,"column":1,"offset":6174},"end":{"line":182,"column":199,"offset":6372}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":184,"column":8,"offset":6381},"end":{"line":184,"column":30,"offset":6403}}}],"position":{"start":{"line":184,"column":1,"offset":6374},"end":{"line":184,"column":30,"offset":6403}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":186,"column":1,"offset":6405},"end":{"line":187,"column":1,"offset":6480}}},{"type":"raw","value":"<br>","position":{"start":{"line":187,"column":1,"offset":6480},"end":{"line":187,"column":5,"offset":6484}}},{"type":"text","value":"\n","position":{"start":{"line":187,"column":5,"offset":6484},"end":{"line":188,"column":1,"offset":6485}}},{"type":"raw","value":"<br>","position":{"start":{"line":188,"column":1,"offset":6485},"end":{"line":188,"column":5,"offset":6489}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":188,"column":5,"offset":6489},"end":{"line":190,"column":1,"offset":6551}}},{"type":"raw","value":"<br>","position":{"start":{"line":190,"column":1,"offset":6551},"end":{"line":190,"column":5,"offset":6555}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":190,"column":5,"offset":6555},"end":{"line":191,"column":1,"offset":6558}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":191,"column":1,"offset":6558},"end":{"line":191,"column":11,"offset":6568}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":191,"column":11,"offset":6568},"end":{"line":191,"column":19,"offset":6576}}},{"type":"text","value":" and ","position":{"start":{"line":191,"column":19,"offset":6576},"end":{"line":191,"column":24,"offset":6581}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":191,"column":24,"offset":6581},"end":{"line":191,"column":34,"offset":6591}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":191,"column":34,"offset":6591},"end":{"line":192,"column":1,"offset":6640}}},{"type":"raw","value":"<br>","position":{"start":{"line":192,"column":1,"offset":6640},"end":{"line":192,"column":5,"offset":6644}}}],"position":{"start":{"line":186,"column":1,"offset":6405},"end":{"line":192,"column":5,"offset":6644}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":194,"column":8,"offset":6653},"end":{"line":194,"column":12,"offset":6657}}}],"position":{"start":{"line":194,"column":1,"offset":6646},"end":{"line":194,"column":12,"offset":6657}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":195,"column":1,"offset":6658},"end":{"line":200,"column":4,"offset":6769}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":201,"column":1,"offset":6770},"end":{"line":202,"column":5,"offset":6779}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":204,"column":1,"offset":6781},"end":{"line":204,"column":7,"offset":6787}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":204,"column":7,"offset":6787},"end":{"line":206,"column":1,"offset":6869}}},{"type":"raw","value":"<br>","position":{"start":{"line":206,"column":1,"offset":6869},"end":{"line":206,"column":5,"offset":6873}}},{"type":"text","value":"\n","position":{"start":{"line":206,"column":5,"offset":6873},"end":{"line":207,"column":1,"offset":6874}}},{"type":"raw","value":"<br>","position":{"start":{"line":207,"column":1,"offset":6874},"end":{"line":207,"column":5,"offset":6878}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":207,"column":5,"offset":6878},"end":{"line":208,"column":10,"offset":6888}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":208,"column":10,"offset":6888},"end":{"line":208,"column":14,"offset":6892}}},{"type":"text","value":". Since ","position":{"start":{"line":208,"column":14,"offset":6892},"end":{"line":208,"column":22,"offset":6900}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":208,"column":22,"offset":6900},"end":{"line":208,"column":30,"offset":6908}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":208,"column":30,"offset":6908},"end":{"line":208,"column":50,"offset":6928}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":208,"column":50,"offset":6928},"end":{"line":208,"column":53,"offset":6931}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":208,"column":53,"offset":6931},"end":{"line":208,"column":90,"offset":6968}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":208,"column":90,"offset":6968},"end":{"line":208,"column":96,"offset":6974}}},{"type":"text","value":".\n","position":{"start":{"line":208,"column":96,"offset":6974},"end":{"line":209,"column":1,"offset":6977}}},{"type":"raw","value":"<br>","position":{"start":{"line":209,"column":1,"offset":6977},"end":{"line":209,"column":5,"offset":6981}}},{"type":"text","value":"\n","position":{"start":{"line":209,"column":5,"offset":6981},"end":{"line":210,"column":1,"offset":6982}}},{"type":"raw","value":"<br>","position":{"start":{"line":210,"column":1,"offset":6982},"end":{"line":210,"column":5,"offset":6986}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":210,"column":5,"offset":6986},"end":{"line":211,"column":14,"offset":7000}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":211,"column":14,"offset":7000},"end":{"line":211,"column":18,"offset":7004}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":211,"column":18,"offset":7004},"end":{"line":211,"column":90,"offset":7076}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":211,"column":90,"offset":7076},"end":{"line":211,"column":94,"offset":7080}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":211,"column":94,"offset":7080},"end":{"line":211,"column":125,"offset":7111}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":211,"column":125,"offset":7111},"end":{"line":211,"column":131,"offset":7117}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":211,"column":131,"offset":7117},"end":{"line":212,"column":1,"offset":7132}}},{"type":"raw","value":"<br>","position":{"start":{"line":212,"column":1,"offset":7132},"end":{"line":212,"column":5,"offset":7136}}},{"type":"text","value":"\n","position":{"start":{"line":212,"column":5,"offset":7136},"end":{"line":213,"column":1,"offset":7137}}},{"type":"raw","value":"<br>","position":{"start":{"line":213,"column":1,"offset":7137},"end":{"line":213,"column":5,"offset":7141}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":213,"column":5,"offset":7141},"end":{"line":214,"column":14,"offset":7155}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":214,"column":14,"offset":7155},"end":{"line":214,"column":18,"offset":7159}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":214,"column":18,"offset":7159},"end":{"line":214,"column":37,"offset":7178}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":214,"column":37,"offset":7178},"end":{"line":214,"column":40,"offset":7181}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":214,"column":40,"offset":7181},"end":{"line":214,"column":77,"offset":7218}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":214,"column":77,"offset":7218},"end":{"line":214,"column":81,"offset":7222}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":214,"column":81,"offset":7222},"end":{"line":214,"column":99,"offset":7240}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":214,"column":99,"offset":7240},"end":{"line":214,"column":102,"offset":7243}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":214,"column":102,"offset":7243},"end":{"line":214,"column":133,"offset":7274}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":214,"column":133,"offset":7274},"end":{"line":214,"column":139,"offset":7280}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":214,"column":139,"offset":7280},"end":{"line":214,"column":167,"offset":7308}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":214,"column":167,"offset":7308},"end":{"line":214,"column":171,"offset":7312}}},{"type":"text","value":".\n","position":{"start":{"line":214,"column":171,"offset":7312},"end":{"line":215,"column":1,"offset":7314}}},{"type":"raw","value":"<br>","position":{"start":{"line":215,"column":1,"offset":7314},"end":{"line":215,"column":5,"offset":7318}}},{"type":"text","value":"\n","position":{"start":{"line":215,"column":5,"offset":7318},"end":{"line":216,"column":1,"offset":7319}}},{"type":"raw","value":"<br>","position":{"start":{"line":216,"column":1,"offset":7319},"end":{"line":216,"column":5,"offset":7323}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":216,"column":5,"offset":7323},"end":{"line":218,"column":1,"offset":7343}}},{"type":"raw","value":"<br>","position":{"start":{"line":218,"column":1,"offset":7343},"end":{"line":218,"column":5,"offset":7347}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":218,"column":5,"offset":7347},"end":{"line":219,"column":6,"offset":7353}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":219,"column":6,"offset":7353},"end":{"line":219,"column":12,"offset":7359}}},{"type":"text","value":" does not have an ","position":{"start":{"line":219,"column":12,"offset":7359},"end":{"line":219,"column":30,"offset":7377}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":219,"column":30,"offset":7377},"end":{"line":219,"column":36,"offset":7383}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":219,"column":36,"offset":7383},"end":{"line":219,"column":62,"offset":7409}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":219,"column":62,"offset":7409},"end":{"line":219,"column":75,"offset":7422}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":219,"column":75,"offset":7422},"end":{"line":219,"column":159,"offset":7506}}}],"position":{"start":{"line":204,"column":1,"offset":6781},"end":{"line":219,"column":159,"offset":7506}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":221,"column":8,"offset":7515},"end":{"line":221,"column":41,"offset":7548}}}],"position":{"start":{"line":221,"column":1,"offset":7508},"end":{"line":221,"column":41,"offset":7548}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":222,"column":1,"offset":7549},"end":{"line":227,"column":4,"offset":7624}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":228,"column":1,"offset":7625},"end":{"line":229,"column":1,"offset":7644}}},{"type":"raw","value":"<br>","position":{"start":{"line":229,"column":1,"offset":7644},"end":{"line":229,"column":5,"offset":7648}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":229,"column":5,"offset":7648},"end":{"line":231,"column":5,"offset":7786}}},{"type":"raw","value":"<br>","position":{"start":{"line":231,"column":5,"offset":7786},"end":{"line":231,"column":9,"offset":7790}}},{"type":"text","value":"\n","position":{"start":{"line":231,"column":9,"offset":7790},"end":{"line":232,"column":5,"offset":7795}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":232,"column":5,"offset":7795},"end":{"line":232,"column":27,"offset":7817}}},{"type":"text","value":"\n","position":{"start":{"line":232,"column":27,"offset":7817},"end":{"line":233,"column":5,"offset":7822}}},{"type":"raw","value":"<br>","position":{"start":{"line":233,"column":5,"offset":7822},"end":{"line":233,"column":9,"offset":7826}}},{"type":"text","value":"\n","position":{"start":{"line":233,"column":9,"offset":7826},"end":{"line":234,"column":5,"offset":7831}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":234,"column":5,"offset":7831},"end":{"line":234,"column":12,"offset":7838}}},{"type":"text","value":" and ","position":{"start":{"line":234,"column":12,"offset":7838},"end":{"line":234,"column":17,"offset":7843}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":234,"column":17,"offset":7843},"end":{"line":234,"column":25,"offset":7851}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":234,"column":25,"offset":7851},"end":{"line":234,"column":63,"offset":7889}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":234,"column":63,"offset":7889},"end":{"line":234,"column":66,"offset":7892}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":234,"column":66,"offset":7892},"end":{"line":234,"column":86,"offset":7912}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":234,"column":86,"offset":7912},"end":{"line":234,"column":89,"offset":7915}}},{"type":"text","value":" will be called with ","position":{"start":{"line":234,"column":89,"offset":7915},"end":{"line":234,"column":110,"offset":7936}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":234,"column":110,"offset":7936},"end":{"line":234,"column":119,"offset":7945}}},{"type":"text","value":".\n","position":{"start":{"line":234,"column":119,"offset":7945},"end":{"line":235,"column":1,"offset":7947}}},{"type":"raw","value":"<br>","position":{"start":{"line":235,"column":1,"offset":7947},"end":{"line":235,"column":5,"offset":7951}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":235,"column":5,"offset":7951},"end":{"line":237,"column":1,"offset":7967}}},{"type":"raw","value":"<br>","position":{"start":{"line":237,"column":1,"offset":7967},"end":{"line":237,"column":5,"offset":7971}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":237,"column":5,"offset":7971},"end":{"line":239,"column":5,"offset":8078}}},{"type":"raw","value":"<br>","position":{"start":{"line":239,"column":5,"offset":8078},"end":{"line":239,"column":9,"offset":8082}}},{"type":"text","value":"\n","position":{"start":{"line":239,"column":9,"offset":8082},"end":{"line":240,"column":1,"offset":8083}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":240,"column":1,"offset":8083},"end":{"line":240,"column":23,"offset":8105}}},{"type":"text","value":" turns into ","position":{"start":{"line":240,"column":23,"offset":8105},"end":{"line":240,"column":35,"offset":8117}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":240,"column":35,"offset":8117},"end":{"line":240,"column":61,"offset":8143}}},{"type":"text","value":"\n","position":{"start":{"line":240,"column":61,"offset":8143},"end":{"line":241,"column":1,"offset":8144}}},{"type":"raw","value":"<br>","position":{"start":{"line":241,"column":1,"offset":8144},"end":{"line":241,"column":5,"offset":8148}}},{"type":"text","value":"\nNow ","position":{"start":{"line":241,"column":5,"offset":8148},"end":{"line":242,"column":5,"offset":8153}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":242,"column":5,"offset":8153},"end":{"line":242,"column":8,"offset":8156}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":242,"column":8,"offset":8156},"end":{"line":242,"column":58,"offset":8206}}}],"position":{"start":{"line":228,"column":1,"offset":7625},"end":{"line":242,"column":58,"offset":8206}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":244,"column":1,"offset":8208},"end":{"line":245,"column":1,"offset":8226}}},{"type":"raw","value":"<br>","position":{"start":{"line":245,"column":1,"offset":8226},"end":{"line":245,"column":5,"offset":8230}}}],"position":{"start":{"line":244,"column":1,"offset":8208},"end":{"line":245,"column":5,"offset":8230}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":246,"column":1,"offset":8231},"end":{"line":248,"column":4,"offset":8261}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":249,"column":1,"offset":8262},"end":{"line":249,"column":13,"offset":8274}}}],"position":{"start":{"line":249,"column":1,"offset":8262},"end":{"line":249,"column":13,"offset":8274}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":250,"column":1,"offset":8275},"end":{"line":256,"column":4,"offset":8354}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":257,"column":1,"offset":8355},"end":{"line":257,"column":8,"offset":8362}}}],"position":{"start":{"line":257,"column":1,"offset":8355},"end":{"line":257,"column":8,"offset":8362}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":258,"column":1,"offset":8363},"end":{"line":265,"column":4,"offset":8487}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":266,"column":1,"offset":8488},"end":{"line":267,"column":5,"offset":8497}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":269,"column":1,"offset":8499},"end":{"line":269,"column":11,"offset":8509}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":269,"column":11,"offset":8509},"end":{"line":269,"column":24,"offset":8522}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":269,"column":24,"offset":8522},"end":{"line":269,"column":107,"offset":8605}}}],"position":{"start":{"line":269,"column":1,"offset":8499},"end":{"line":269,"column":107,"offset":8605}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":271,"column":7,"offset":8613},"end":{"line":271,"column":10,"offset":8616}}}],"position":{"start":{"line":271,"column":1,"offset":8607},"end":{"line":271,"column":10,"offset":8616}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":272,"column":7,"offset":8623},"end":{"line":272,"column":10,"offset":8626}}}],"position":{"start":{"line":272,"column":1,"offset":8617},"end":{"line":272,"column":10,"offset":8626}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":274,"column":6,"offset":8633},"end":{"line":274,"column":10,"offset":8637}}}],"position":{"start":{"line":274,"column":1,"offset":8628},"end":{"line":274,"column":10,"offset":8637}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":275,"column":7,"offset":8644},"end":{"line":275,"column":13,"offset":8650}}}],"position":{"start":{"line":275,"column":1,"offset":8638},"end":{"line":275,"column":13,"offset":8650}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":276,"column":1,"offset":8651},"end":{"line":276,"column":49,"offset":8699}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":276,"column":49,"offset":8699},"end":{"line":276,"column":57,"offset":8707}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":276,"column":57,"offset":8707},"end":{"line":276,"column":133,"offset":8783}}}],"position":{"start":{"line":276,"column":1,"offset":8651},"end":{"line":276,"column":133,"offset":8783}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":277,"column":1,"offset":8784},"end":{"line":287,"column":4,"offset":8979}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":288,"column":1,"offset":8980},"end":{"line":288,"column":5,"offset":8984}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":291,"column":1,"offset":8987},"end":{"line":292,"column":1,"offset":9069}}},{"type":"raw","value":"<br>","position":{"start":{"line":292,"column":1,"offset":9069},"end":{"line":292,"column":5,"offset":9073}}},{"type":"text","value":"\n","position":{"start":{"line":292,"column":5,"offset":9073},"end":{"line":293,"column":1,"offset":9074}}},{"type":"raw","value":"<br>","position":{"start":{"line":293,"column":1,"offset":9074},"end":{"line":293,"column":5,"offset":9078}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":293,"column":5,"offset":9078},"end":{"line":294,"column":26,"offset":9104}}}],"position":{"start":{"line":291,"column":1,"offset":8987},"end":{"line":294,"column":26,"offset":9104}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":295,"column":1,"offset":9105},"end":{"line":300,"column":4,"offset":9233}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":301,"column":1,"offset":9234},"end":{"line":301,"column":14,"offset":9247}}}],"position":{"start":{"line":301,"column":1,"offset":9234},"end":{"line":301,"column":14,"offset":9247}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":303,"column":1,"offset":9249},"end":{"line":316,"column":4,"offset":9531}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":318,"column":1,"offset":9533},"end":{"line":319,"column":5,"offset":9542}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":322,"column":7,"offset":9551},"end":{"line":322,"column":13,"offset":9557}}}],"position":{"start":{"line":322,"column":1,"offset":9545},"end":{"line":322,"column":13,"offset":9557}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":322,"column":13,"offset":9557}}}}