{"expireTime":9007200842249865000,"key":"transformer-remark-markdown-html-ast-dbcc923d0733f14572349ce9f6f9a813-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833}}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847}}},{"type":"raw","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860}}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865}}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879}}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884}}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895}}},{"type":"raw","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900}}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901}}},{"type":"raw","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906}}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911}}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912}}},{"type":"raw","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916}}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043}}},{"type":"raw","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047}}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048}}},{"type":"raw","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052}}},{"type":"text","value":"\nEnvironment: The key-object pairs the interpreter keeps in memory.","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":33,"column":67,"offset":1119}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":33,"column":67,"offset":1119}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":35,"column":7,"offset":1127},"end":{"line":35,"column":10,"offset":1130}}}],"position":{"start":{"line":35,"column":1,"offset":1121},"end":{"line":35,"column":10,"offset":1130}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":36,"column":7,"offset":1137},"end":{"line":36,"column":10,"offset":1140}}}],"position":{"start":{"line":36,"column":1,"offset":1131},"end":{"line":36,"column":10,"offset":1140}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":38,"column":6,"offset":1147},"end":{"line":38,"column":14,"offset":1155}}}],"position":{"start":{"line":38,"column":1,"offset":1142},"end":{"line":38,"column":14,"offset":1155}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":39,"column":7,"offset":1162},"end":{"line":39,"column":10,"offset":1165}}}],"position":{"start":{"line":39,"column":1,"offset":1156},"end":{"line":39,"column":10,"offset":1165}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":41,"column":8,"offset":1174},"end":{"line":41,"column":30,"offset":1196}}}],"position":{"start":{"line":41,"column":1,"offset":1167},"end":{"line":41,"column":30,"offset":1196}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":43,"column":1,"offset":1198},"end":{"line":44,"column":1,"offset":1342}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1342},"end":{"line":44,"column":5,"offset":1346}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":44,"column":5,"offset":1346},"end":{"line":44,"column":16,"offset":1357}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":16,"offset":1357},"end":{"line":44,"column":20,"offset":1361}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":44,"column":20,"offset":1361},"end":{"line":46,"column":1,"offset":1505}}},{"type":"raw","value":"<br>","position":{"start":{"line":46,"column":1,"offset":1505},"end":{"line":46,"column":5,"offset":1509}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":46,"column":5,"offset":1509},"end":{"line":46,"column":16,"offset":1520}}},{"type":"raw","value":"<br>","position":{"start":{"line":46,"column":16,"offset":1520},"end":{"line":46,"column":20,"offset":1524}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":46,"column":20,"offset":1524},"end":{"line":47,"column":45,"offset":1569}}},{"type":"raw","value":"<br>","position":{"start":{"line":47,"column":45,"offset":1569},"end":{"line":47,"column":49,"offset":1573}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":47,"column":49,"offset":1573},"end":{"line":47,"column":65,"offset":1589}}},{"type":"raw","value":"<br>","position":{"start":{"line":47,"column":65,"offset":1589},"end":{"line":47,"column":69,"offset":1593}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":47,"column":69,"offset":1593},"end":{"line":49,"column":1,"offset":1636}}},{"type":"raw","value":"<br>","position":{"start":{"line":49,"column":1,"offset":1636},"end":{"line":49,"column":5,"offset":1640}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":49,"column":5,"offset":1640},"end":{"line":49,"column":22,"offset":1657}}},{"type":"raw","value":"<br>","position":{"start":{"line":49,"column":22,"offset":1657},"end":{"line":49,"column":26,"offset":1661}}},{"type":"text","value":"\n","position":{"start":{"line":49,"column":26,"offset":1661},"end":{"line":50,"column":1,"offset":1662}}},{"type":"raw","value":"<br>","position":{"start":{"line":50,"column":1,"offset":1662},"end":{"line":50,"column":5,"offset":1666}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":50,"column":5,"offset":1666},"end":{"line":52,"column":1,"offset":1784}}},{"type":"raw","value":"<br>","position":{"start":{"line":52,"column":1,"offset":1784},"end":{"line":52,"column":5,"offset":1788}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":52,"column":5,"offset":1788},"end":{"line":54,"column":1,"offset":1909}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":54,"column":1,"offset":1909},"end":{"line":54,"column":12,"offset":1920}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":54,"column":12,"offset":1920},"end":{"line":54,"column":68,"offset":1976}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":54,"column":68,"offset":1976},"end":{"line":54,"column":79,"offset":1987}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":54,"column":79,"offset":1987},"end":{"line":54,"column":106,"offset":2014}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":54,"column":106,"offset":2014},"end":{"line":54,"column":109,"offset":2017}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":54,"column":109,"offset":2017},"end":{"line":54,"column":189,"offset":2097}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":54,"column":189,"offset":2097},"end":{"line":54,"column":192,"offset":2100}}},{"type":"text","value":" to get 3.","position":{"start":{"line":54,"column":192,"offset":2100},"end":{"line":54,"column":202,"offset":2110}}}],"position":{"start":{"line":43,"column":1,"offset":1198},"end":{"line":54,"column":202,"offset":2110}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":56,"column":8,"offset":2119},"end":{"line":56,"column":14,"offset":2125}}}],"position":{"start":{"line":56,"column":1,"offset":2112},"end":{"line":56,"column":14,"offset":2125}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":57,"column":1,"offset":2126},"end":{"line":57,"column":9,"offset":2134}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":57,"column":9,"offset":2134},"end":{"line":57,"column":73,"offset":2198}}}],"position":{"start":{"line":57,"column":1,"offset":2126},"end":{"line":57,"column":73,"offset":2198}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":58,"column":1,"offset":2199},"end":{"line":61,"column":4,"offset":2238}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":62,"column":1,"offset":2239},"end":{"line":62,"column":5,"offset":2243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":64,"column":1,"offset":2245},"end":{"line":64,"column":72,"offset":2316}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":64,"column":72,"offset":2316},"end":{"line":64,"column":80,"offset":2324}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":64,"column":80,"offset":2324},"end":{"line":65,"column":1,"offset":2348}}},{"type":"raw","value":"<br>","position":{"start":{"line":65,"column":1,"offset":2348},"end":{"line":65,"column":5,"offset":2352}}},{"type":"text","value":"\n","position":{"start":{"line":65,"column":5,"offset":2352},"end":{"line":66,"column":1,"offset":2353}}},{"type":"raw","value":"<br>","position":{"start":{"line":66,"column":1,"offset":2353},"end":{"line":66,"column":5,"offset":2357}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":66,"column":5,"offset":2357},"end":{"line":67,"column":184,"offset":2541}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":67,"column":184,"offset":2541},"end":{"line":67,"column":187,"offset":2544}}},{"type":"text","value":".\n","position":{"start":{"line":67,"column":187,"offset":2544},"end":{"line":68,"column":1,"offset":2547}}},{"type":"raw","value":"<br>","position":{"start":{"line":68,"column":1,"offset":2547},"end":{"line":68,"column":5,"offset":2551}}},{"type":"text","value":"\n","position":{"start":{"line":68,"column":5,"offset":2551},"end":{"line":69,"column":1,"offset":2552}}},{"type":"raw","value":"<br>","position":{"start":{"line":69,"column":1,"offset":2552},"end":{"line":69,"column":5,"offset":2556}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":69,"column":5,"offset":2556},"end":{"line":70,"column":27,"offset":2583}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":70,"column":27,"offset":2583},"end":{"line":70,"column":35,"offset":2591}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":70,"column":35,"offset":2591},"end":{"line":70,"column":86,"offset":2642}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":70,"column":86,"offset":2642},"end":{"line":70,"column":95,"offset":2651}}},{"type":"text","value":". ","position":{"start":{"line":70,"column":95,"offset":2651},"end":{"line":70,"column":97,"offset":2653}}}],"position":{"start":{"line":64,"column":1,"offset":2245},"end":{"line":70,"column":97,"offset":2653}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":72,"column":1,"offset":2655},"end":{"line":72,"column":6,"offset":2660}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":74,"column":1,"offset":2662},"end":{"line":75,"column":1,"offset":2706}}},{"type":"raw","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2706},"end":{"line":75,"column":5,"offset":2710}}},{"type":"text","value":"\n","position":{"start":{"line":75,"column":5,"offset":2710},"end":{"line":76,"column":1,"offset":2711}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":76,"column":1,"offset":2711},"end":{"line":76,"column":22,"offset":2732}}},{"type":"text","value":"\n","position":{"start":{"line":76,"column":22,"offset":2732},"end":{"line":77,"column":1,"offset":2733}}},{"type":"raw","value":"<br>","position":{"start":{"line":77,"column":1,"offset":2733},"end":{"line":77,"column":5,"offset":2737}}}],"position":{"start":{"line":74,"column":1,"offset":2662},"end":{"line":77,"column":5,"offset":2737}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":79,"column":1,"offset":2739},"end":{"line":79,"column":152,"offset":2890}}}],"position":{"start":{"line":79,"column":1,"offset":2739},"end":{"line":79,"column":152,"offset":2890}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":81,"column":8,"offset":2899},"end":{"line":81,"column":20,"offset":2911}}}],"position":{"start":{"line":81,"column":1,"offset":2892},"end":{"line":81,"column":20,"offset":2911}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":83,"column":1,"offset":2913},"end":{"line":83,"column":56,"offset":2968}}}],"position":{"start":{"line":83,"column":1,"offset":2913},"end":{"line":83,"column":56,"offset":2968}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":84,"column":1,"offset":2969},"end":{"line":89,"column":4,"offset":3060}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":90,"column":1,"offset":3061},"end":{"line":90,"column":5,"offset":3065}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":92,"column":1,"offset":3067},"end":{"line":92,"column":37,"offset":3103}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":92,"column":37,"offset":3103},"end":{"line":92,"column":41,"offset":3107}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":92,"column":41,"offset":3107},"end":{"line":93,"column":1,"offset":3124}}},{"type":"raw","value":"<br>","position":{"start":{"line":93,"column":1,"offset":3124},"end":{"line":93,"column":5,"offset":3128}}},{"type":"text","value":"\n","position":{"start":{"line":93,"column":5,"offset":3128},"end":{"line":94,"column":1,"offset":3129}}},{"type":"raw","value":"<br>","position":{"start":{"line":94,"column":1,"offset":3129},"end":{"line":94,"column":5,"offset":3133}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":94,"column":5,"offset":3133},"end":{"line":95,"column":66,"offset":3199}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":95,"column":66,"offset":3199},"end":{"line":95,"column":89,"offset":3222}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":95,"column":89,"offset":3222},"end":{"line":96,"column":1,"offset":3262}}},{"type":"raw","value":"<br>","position":{"start":{"line":96,"column":1,"offset":3262},"end":{"line":96,"column":5,"offset":3266}}},{"type":"text","value":"\n","position":{"start":{"line":96,"column":5,"offset":3266},"end":{"line":97,"column":1,"offset":3267}}},{"type":"raw","value":"<br>","position":{"start":{"line":97,"column":1,"offset":3267},"end":{"line":97,"column":5,"offset":3271}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":97,"column":5,"offset":3271},"end":{"line":98,"column":21,"offset":3292}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":98,"column":21,"offset":3292},"end":{"line":98,"column":25,"offset":3296}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":98,"column":25,"offset":3296},"end":{"line":99,"column":1,"offset":3350}}},{"type":"raw","value":"<br>","position":{"start":{"line":99,"column":1,"offset":3350},"end":{"line":99,"column":5,"offset":3354}}},{"type":"text","value":"\n","position":{"start":{"line":99,"column":5,"offset":3354},"end":{"line":100,"column":1,"offset":3355}}},{"type":"raw","value":"<br>","position":{"start":{"line":100,"column":1,"offset":3355},"end":{"line":100,"column":5,"offset":3359}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":100,"column":5,"offset":3359},"end":{"line":101,"column":21,"offset":3380}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":101,"column":21,"offset":3380},"end":{"line":101,"column":25,"offset":3384}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":101,"column":25,"offset":3384},"end":{"line":102,"column":1,"offset":3439}}},{"type":"raw","value":"<br>","position":{"start":{"line":102,"column":1,"offset":3439},"end":{"line":102,"column":5,"offset":3443}}},{"type":"text","value":"\n","position":{"start":{"line":102,"column":5,"offset":3443},"end":{"line":103,"column":1,"offset":3444}}},{"type":"raw","value":"<br>","position":{"start":{"line":103,"column":1,"offset":3444},"end":{"line":103,"column":5,"offset":3448}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":103,"column":5,"offset":3448},"end":{"line":104,"column":58,"offset":3506}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":104,"column":58,"offset":3506},"end":{"line":104,"column":61,"offset":3509}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":104,"column":61,"offset":3509},"end":{"line":104,"column":145,"offset":3593}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":104,"column":145,"offset":3593},"end":{"line":104,"column":153,"offset":3601}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":104,"column":153,"offset":3601},"end":{"line":104,"column":178,"offset":3626}}}],"position":{"start":{"line":92,"column":1,"offset":3067},"end":{"line":104,"column":178,"offset":3626}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":106,"column":7,"offset":3634},"end":{"line":106,"column":10,"offset":3637}}}],"position":{"start":{"line":106,"column":1,"offset":3628},"end":{"line":106,"column":10,"offset":3637}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":108,"column":8,"offset":3646},"end":{"line":108,"column":17,"offset":3655}}}],"position":{"start":{"line":108,"column":1,"offset":3639},"end":{"line":108,"column":17,"offset":3655}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":109,"column":1,"offset":3656},"end":{"line":120,"column":4,"offset":3855}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":121,"column":1,"offset":3856},"end":{"line":121,"column":5,"offset":3860}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":123,"column":1,"offset":3862},"end":{"line":124,"column":1,"offset":4078}}},{"type":"raw","value":"<br>","position":{"start":{"line":124,"column":1,"offset":4078},"end":{"line":124,"column":5,"offset":4082}}},{"type":"text","value":"\n","position":{"start":{"line":124,"column":5,"offset":4082},"end":{"line":125,"column":1,"offset":4083}}},{"type":"raw","value":"<br>","position":{"start":{"line":125,"column":1,"offset":4083},"end":{"line":125,"column":5,"offset":4087}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":125,"column":5,"offset":4087},"end":{"line":126,"column":72,"offset":4159}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":126,"column":72,"offset":4159},"end":{"line":126,"column":81,"offset":4168}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":126,"column":81,"offset":4168},"end":{"line":127,"column":1,"offset":4187}}},{"type":"raw","value":"<br>","position":{"start":{"line":127,"column":1,"offset":4187},"end":{"line":127,"column":5,"offset":4191}}},{"type":"text","value":"\n","position":{"start":{"line":127,"column":5,"offset":4191},"end":{"line":128,"column":1,"offset":4192}}},{"type":"raw","value":"<br>","position":{"start":{"line":128,"column":1,"offset":4192},"end":{"line":128,"column":5,"offset":4196}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":128,"column":5,"offset":4196},"end":{"line":129,"column":10,"offset":4206}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":129,"column":10,"offset":4206},"end":{"line":129,"column":16,"offset":4212}}},{"type":"text","value":" gets called with ","position":{"start":{"line":129,"column":16,"offset":4212},"end":{"line":129,"column":34,"offset":4230}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":129,"column":34,"offset":4230},"end":{"line":129,"column":42,"offset":4238}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":129,"column":42,"offset":4238},"end":{"line":130,"column":24,"offset":4263}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":130,"column":24,"offset":4263},"end":{"line":130,"column":33,"offset":4272}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":130,"column":33,"offset":4272},"end":{"line":130,"column":107,"offset":4346}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":130,"column":107,"offset":4346},"end":{"line":130,"column":116,"offset":4355}}},{"type":"text","value":" is false because ","position":{"start":{"line":130,"column":116,"offset":4355},"end":{"line":130,"column":134,"offset":4373}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":130,"column":134,"offset":4373},"end":{"line":130,"column":137,"offset":4376}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":130,"column":137,"offset":4376},"end":{"line":130,"column":161,"offset":4400}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":130,"column":161,"offset":4400},"end":{"line":130,"column":167,"offset":4406}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":130,"column":167,"offset":4406},"end":{"line":130,"column":192,"offset":4431}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":130,"column":192,"offset":4431},"end":{"line":130,"column":200,"offset":4439}}},{"type":"text","value":". This is because ","position":{"start":{"line":130,"column":200,"offset":4439},"end":{"line":130,"column":218,"offset":4457}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":130,"column":218,"offset":4457},"end":{"line":130,"column":224,"offset":4463}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":130,"column":224,"offset":4463},"end":{"line":130,"column":245,"offset":4484}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":130,"column":245,"offset":4484},"end":{"line":130,"column":252,"offset":4491}}},{"type":"text","value":" and ","position":{"start":{"line":130,"column":252,"offset":4491},"end":{"line":130,"column":257,"offset":4496}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":130,"column":257,"offset":4496},"end":{"line":130,"column":260,"offset":4499}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":130,"column":260,"offset":4499},"end":{"line":130,"column":285,"offset":4524}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":130,"column":285,"offset":4524},"end":{"line":130,"column":291,"offset":4530}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":130,"column":291,"offset":4530},"end":{"line":131,"column":96,"offset":4656}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":131,"column":96,"offset":4656},"end":{"line":131,"column":111,"offset":4671}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":131,"column":111,"offset":4671},"end":{"line":131,"column":182,"offset":4742}}}],"position":{"start":{"line":123,"column":1,"offset":3862},"end":{"line":131,"column":182,"offset":4742}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":133,"column":8,"offset":4751},"end":{"line":133,"column":19,"offset":4762}}}],"position":{"start":{"line":133,"column":1,"offset":4744},"end":{"line":133,"column":19,"offset":4762}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":134,"column":1,"offset":4763},"end":{"line":134,"column":14,"offset":4776}}}],"position":{"start":{"line":134,"column":1,"offset":4763},"end":{"line":134,"column":14,"offset":4776}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":135,"column":1,"offset":4777},"end":{"line":150,"column":4,"offset":5192}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":151,"column":1,"offset":5193},"end":{"line":151,"column":5,"offset":5197}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":153,"column":1,"offset":5199},"end":{"line":153,"column":141,"offset":5339}}}],"position":{"start":{"line":153,"column":1,"offset":5199},"end":{"line":153,"column":141,"offset":5339}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":155,"column":8,"offset":5348},"end":{"line":155,"column":30,"offset":5370}}}],"position":{"start":{"line":155,"column":1,"offset":5341},"end":{"line":155,"column":30,"offset":5370}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":156,"column":1,"offset":5371},"end":{"line":156,"column":199,"offset":5569}}}],"position":{"start":{"line":156,"column":1,"offset":5371},"end":{"line":156,"column":199,"offset":5569}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":158,"column":8,"offset":5578},"end":{"line":158,"column":30,"offset":5600}}}],"position":{"start":{"line":158,"column":1,"offset":5571},"end":{"line":158,"column":30,"offset":5600}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":160,"column":1,"offset":5602},"end":{"line":161,"column":1,"offset":5677}}},{"type":"raw","value":"<br>","position":{"start":{"line":161,"column":1,"offset":5677},"end":{"line":161,"column":5,"offset":5681}}},{"type":"text","value":"\n","position":{"start":{"line":161,"column":5,"offset":5681},"end":{"line":162,"column":1,"offset":5682}}},{"type":"raw","value":"<br>","position":{"start":{"line":162,"column":1,"offset":5682},"end":{"line":162,"column":5,"offset":5686}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":162,"column":5,"offset":5686},"end":{"line":164,"column":1,"offset":5748}}},{"type":"raw","value":"<br>","position":{"start":{"line":164,"column":1,"offset":5748},"end":{"line":164,"column":5,"offset":5752}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":164,"column":5,"offset":5752},"end":{"line":165,"column":1,"offset":5755}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":165,"column":1,"offset":5755},"end":{"line":165,"column":11,"offset":5765}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":165,"column":11,"offset":5765},"end":{"line":165,"column":19,"offset":5773}}},{"type":"text","value":" and ","position":{"start":{"line":165,"column":19,"offset":5773},"end":{"line":165,"column":24,"offset":5778}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":165,"column":24,"offset":5778},"end":{"line":165,"column":34,"offset":5788}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":165,"column":34,"offset":5788},"end":{"line":166,"column":1,"offset":5837}}},{"type":"raw","value":"<br>","position":{"start":{"line":166,"column":1,"offset":5837},"end":{"line":166,"column":5,"offset":5841}}}],"position":{"start":{"line":160,"column":1,"offset":5602},"end":{"line":166,"column":5,"offset":5841}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":168,"column":8,"offset":5850},"end":{"line":168,"column":12,"offset":5854}}}],"position":{"start":{"line":168,"column":1,"offset":5843},"end":{"line":168,"column":12,"offset":5854}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":169,"column":1,"offset":5855},"end":{"line":174,"column":4,"offset":5966}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":175,"column":1,"offset":5967},"end":{"line":176,"column":5,"offset":5976}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":178,"column":1,"offset":5978},"end":{"line":178,"column":7,"offset":5984}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":178,"column":7,"offset":5984},"end":{"line":180,"column":1,"offset":6066}}},{"type":"raw","value":"<br>","position":{"start":{"line":180,"column":1,"offset":6066},"end":{"line":180,"column":5,"offset":6070}}},{"type":"text","value":"\n","position":{"start":{"line":180,"column":5,"offset":6070},"end":{"line":181,"column":1,"offset":6071}}},{"type":"raw","value":"<br>","position":{"start":{"line":181,"column":1,"offset":6071},"end":{"line":181,"column":5,"offset":6075}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":181,"column":5,"offset":6075},"end":{"line":182,"column":10,"offset":6085}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":182,"column":10,"offset":6085},"end":{"line":182,"column":14,"offset":6089}}},{"type":"text","value":". Since ","position":{"start":{"line":182,"column":14,"offset":6089},"end":{"line":182,"column":22,"offset":6097}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":182,"column":22,"offset":6097},"end":{"line":182,"column":30,"offset":6105}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":182,"column":30,"offset":6105},"end":{"line":182,"column":50,"offset":6125}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":182,"column":50,"offset":6125},"end":{"line":182,"column":53,"offset":6128}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":182,"column":53,"offset":6128},"end":{"line":182,"column":90,"offset":6165}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":182,"column":90,"offset":6165},"end":{"line":182,"column":96,"offset":6171}}},{"type":"text","value":".\n","position":{"start":{"line":182,"column":96,"offset":6171},"end":{"line":183,"column":1,"offset":6174}}},{"type":"raw","value":"<br>","position":{"start":{"line":183,"column":1,"offset":6174},"end":{"line":183,"column":5,"offset":6178}}},{"type":"text","value":"\n","position":{"start":{"line":183,"column":5,"offset":6178},"end":{"line":184,"column":1,"offset":6179}}},{"type":"raw","value":"<br>","position":{"start":{"line":184,"column":1,"offset":6179},"end":{"line":184,"column":5,"offset":6183}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":184,"column":5,"offset":6183},"end":{"line":185,"column":14,"offset":6197}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":185,"column":14,"offset":6197},"end":{"line":185,"column":18,"offset":6201}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":185,"column":18,"offset":6201},"end":{"line":185,"column":90,"offset":6273}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":185,"column":90,"offset":6273},"end":{"line":185,"column":94,"offset":6277}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":185,"column":94,"offset":6277},"end":{"line":185,"column":125,"offset":6308}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":185,"column":125,"offset":6308},"end":{"line":185,"column":131,"offset":6314}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":185,"column":131,"offset":6314},"end":{"line":186,"column":1,"offset":6329}}},{"type":"raw","value":"<br>","position":{"start":{"line":186,"column":1,"offset":6329},"end":{"line":186,"column":5,"offset":6333}}},{"type":"text","value":"\n","position":{"start":{"line":186,"column":5,"offset":6333},"end":{"line":187,"column":1,"offset":6334}}},{"type":"raw","value":"<br>","position":{"start":{"line":187,"column":1,"offset":6334},"end":{"line":187,"column":5,"offset":6338}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":187,"column":5,"offset":6338},"end":{"line":188,"column":14,"offset":6352}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":188,"column":14,"offset":6352},"end":{"line":188,"column":18,"offset":6356}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":188,"column":18,"offset":6356},"end":{"line":188,"column":37,"offset":6375}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":188,"column":37,"offset":6375},"end":{"line":188,"column":40,"offset":6378}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":188,"column":40,"offset":6378},"end":{"line":188,"column":77,"offset":6415}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":188,"column":77,"offset":6415},"end":{"line":188,"column":81,"offset":6419}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":188,"column":81,"offset":6419},"end":{"line":188,"column":99,"offset":6437}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":188,"column":99,"offset":6437},"end":{"line":188,"column":102,"offset":6440}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":188,"column":102,"offset":6440},"end":{"line":188,"column":133,"offset":6471}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":188,"column":133,"offset":6471},"end":{"line":188,"column":139,"offset":6477}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":188,"column":139,"offset":6477},"end":{"line":188,"column":167,"offset":6505}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":188,"column":167,"offset":6505},"end":{"line":188,"column":171,"offset":6509}}},{"type":"text","value":".\n","position":{"start":{"line":188,"column":171,"offset":6509},"end":{"line":189,"column":1,"offset":6511}}},{"type":"raw","value":"<br>","position":{"start":{"line":189,"column":1,"offset":6511},"end":{"line":189,"column":5,"offset":6515}}},{"type":"text","value":"\n","position":{"start":{"line":189,"column":5,"offset":6515},"end":{"line":190,"column":1,"offset":6516}}},{"type":"raw","value":"<br>","position":{"start":{"line":190,"column":1,"offset":6516},"end":{"line":190,"column":5,"offset":6520}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":190,"column":5,"offset":6520},"end":{"line":192,"column":1,"offset":6540}}},{"type":"raw","value":"<br>","position":{"start":{"line":192,"column":1,"offset":6540},"end":{"line":192,"column":5,"offset":6544}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":192,"column":5,"offset":6544},"end":{"line":193,"column":6,"offset":6550}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":193,"column":6,"offset":6550},"end":{"line":193,"column":12,"offset":6556}}},{"type":"text","value":" does not have an ","position":{"start":{"line":193,"column":12,"offset":6556},"end":{"line":193,"column":30,"offset":6574}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":193,"column":30,"offset":6574},"end":{"line":193,"column":36,"offset":6580}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":193,"column":36,"offset":6580},"end":{"line":193,"column":62,"offset":6606}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":193,"column":62,"offset":6606},"end":{"line":193,"column":75,"offset":6619}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":193,"column":75,"offset":6619},"end":{"line":193,"column":159,"offset":6703}}}],"position":{"start":{"line":178,"column":1,"offset":5978},"end":{"line":193,"column":159,"offset":6703}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":195,"column":8,"offset":6712},"end":{"line":195,"column":41,"offset":6745}}}],"position":{"start":{"line":195,"column":1,"offset":6705},"end":{"line":195,"column":41,"offset":6745}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":196,"column":1,"offset":6746},"end":{"line":201,"column":4,"offset":6821}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":202,"column":1,"offset":6822},"end":{"line":203,"column":1,"offset":6841}}},{"type":"raw","value":"<br>","position":{"start":{"line":203,"column":1,"offset":6841},"end":{"line":203,"column":5,"offset":6845}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":203,"column":5,"offset":6845},"end":{"line":205,"column":5,"offset":6983}}},{"type":"raw","value":"<br>","position":{"start":{"line":205,"column":5,"offset":6983},"end":{"line":205,"column":9,"offset":6987}}},{"type":"text","value":"\n","position":{"start":{"line":205,"column":9,"offset":6987},"end":{"line":206,"column":5,"offset":6992}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":206,"column":5,"offset":6992},"end":{"line":206,"column":27,"offset":7014}}},{"type":"text","value":"\n","position":{"start":{"line":206,"column":27,"offset":7014},"end":{"line":207,"column":5,"offset":7019}}},{"type":"raw","value":"<br>","position":{"start":{"line":207,"column":5,"offset":7019},"end":{"line":207,"column":9,"offset":7023}}},{"type":"text","value":"\n","position":{"start":{"line":207,"column":9,"offset":7023},"end":{"line":208,"column":5,"offset":7028}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":208,"column":5,"offset":7028},"end":{"line":208,"column":12,"offset":7035}}},{"type":"text","value":" and ","position":{"start":{"line":208,"column":12,"offset":7035},"end":{"line":208,"column":17,"offset":7040}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":208,"column":17,"offset":7040},"end":{"line":208,"column":25,"offset":7048}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":208,"column":25,"offset":7048},"end":{"line":208,"column":63,"offset":7086}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":208,"column":63,"offset":7086},"end":{"line":208,"column":66,"offset":7089}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":208,"column":66,"offset":7089},"end":{"line":208,"column":86,"offset":7109}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":208,"column":86,"offset":7109},"end":{"line":208,"column":89,"offset":7112}}},{"type":"text","value":" will be called with ","position":{"start":{"line":208,"column":89,"offset":7112},"end":{"line":208,"column":110,"offset":7133}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":208,"column":110,"offset":7133},"end":{"line":208,"column":119,"offset":7142}}},{"type":"text","value":".\n","position":{"start":{"line":208,"column":119,"offset":7142},"end":{"line":209,"column":1,"offset":7144}}},{"type":"raw","value":"<br>","position":{"start":{"line":209,"column":1,"offset":7144},"end":{"line":209,"column":5,"offset":7148}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":209,"column":5,"offset":7148},"end":{"line":211,"column":1,"offset":7164}}},{"type":"raw","value":"<br>","position":{"start":{"line":211,"column":1,"offset":7164},"end":{"line":211,"column":5,"offset":7168}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":211,"column":5,"offset":7168},"end":{"line":213,"column":5,"offset":7275}}},{"type":"raw","value":"<br>","position":{"start":{"line":213,"column":5,"offset":7275},"end":{"line":213,"column":9,"offset":7279}}},{"type":"text","value":"\n","position":{"start":{"line":213,"column":9,"offset":7279},"end":{"line":214,"column":1,"offset":7280}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":214,"column":1,"offset":7280},"end":{"line":214,"column":23,"offset":7302}}},{"type":"text","value":" turns into ","position":{"start":{"line":214,"column":23,"offset":7302},"end":{"line":214,"column":35,"offset":7314}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":214,"column":35,"offset":7314},"end":{"line":214,"column":61,"offset":7340}}},{"type":"text","value":"\n","position":{"start":{"line":214,"column":61,"offset":7340},"end":{"line":215,"column":1,"offset":7341}}},{"type":"raw","value":"<br>","position":{"start":{"line":215,"column":1,"offset":7341},"end":{"line":215,"column":5,"offset":7345}}},{"type":"text","value":"\nNow ","position":{"start":{"line":215,"column":5,"offset":7345},"end":{"line":216,"column":5,"offset":7350}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":216,"column":5,"offset":7350},"end":{"line":216,"column":8,"offset":7353}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":216,"column":8,"offset":7353},"end":{"line":216,"column":58,"offset":7403}}}],"position":{"start":{"line":202,"column":1,"offset":6822},"end":{"line":216,"column":58,"offset":7403}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":218,"column":1,"offset":7405},"end":{"line":219,"column":1,"offset":7423}}},{"type":"raw","value":"<br>","position":{"start":{"line":219,"column":1,"offset":7423},"end":{"line":219,"column":5,"offset":7427}}}],"position":{"start":{"line":218,"column":1,"offset":7405},"end":{"line":219,"column":5,"offset":7427}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":220,"column":1,"offset":7428},"end":{"line":222,"column":4,"offset":7458}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":223,"column":1,"offset":7459},"end":{"line":223,"column":13,"offset":7471}}}],"position":{"start":{"line":223,"column":1,"offset":7459},"end":{"line":223,"column":13,"offset":7471}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":224,"column":1,"offset":7472},"end":{"line":230,"column":4,"offset":7551}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":231,"column":1,"offset":7552},"end":{"line":231,"column":8,"offset":7559}}}],"position":{"start":{"line":231,"column":1,"offset":7552},"end":{"line":231,"column":8,"offset":7559}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":232,"column":1,"offset":7560},"end":{"line":239,"column":4,"offset":7684}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":240,"column":1,"offset":7685},"end":{"line":241,"column":5,"offset":7694}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":243,"column":1,"offset":7696},"end":{"line":243,"column":11,"offset":7706}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":243,"column":11,"offset":7706},"end":{"line":243,"column":24,"offset":7719}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":243,"column":24,"offset":7719},"end":{"line":243,"column":107,"offset":7802}}}],"position":{"start":{"line":243,"column":1,"offset":7696},"end":{"line":243,"column":107,"offset":7802}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":245,"column":7,"offset":7810},"end":{"line":245,"column":10,"offset":7813}}}],"position":{"start":{"line":245,"column":1,"offset":7804},"end":{"line":245,"column":10,"offset":7813}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":246,"column":7,"offset":7820},"end":{"line":246,"column":10,"offset":7823}}}],"position":{"start":{"line":246,"column":1,"offset":7814},"end":{"line":246,"column":10,"offset":7823}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":248,"column":6,"offset":7830},"end":{"line":248,"column":10,"offset":7834}}}],"position":{"start":{"line":248,"column":1,"offset":7825},"end":{"line":248,"column":10,"offset":7834}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":249,"column":7,"offset":7841},"end":{"line":249,"column":13,"offset":7847}}}],"position":{"start":{"line":249,"column":1,"offset":7835},"end":{"line":249,"column":13,"offset":7847}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":250,"column":1,"offset":7848},"end":{"line":250,"column":49,"offset":7896}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":250,"column":49,"offset":7896},"end":{"line":250,"column":57,"offset":7904}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":250,"column":57,"offset":7904},"end":{"line":250,"column":133,"offset":7980}}}],"position":{"start":{"line":250,"column":1,"offset":7848},"end":{"line":250,"column":133,"offset":7980}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":251,"column":1,"offset":7981},"end":{"line":261,"column":4,"offset":8176}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":262,"column":1,"offset":8177},"end":{"line":262,"column":5,"offset":8181}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":265,"column":1,"offset":8184},"end":{"line":266,"column":1,"offset":8266}}},{"type":"raw","value":"<br>","position":{"start":{"line":266,"column":1,"offset":8266},"end":{"line":266,"column":5,"offset":8270}}},{"type":"text","value":"\n","position":{"start":{"line":266,"column":5,"offset":8270},"end":{"line":267,"column":1,"offset":8271}}},{"type":"raw","value":"<br>","position":{"start":{"line":267,"column":1,"offset":8271},"end":{"line":267,"column":5,"offset":8275}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":267,"column":5,"offset":8275},"end":{"line":268,"column":26,"offset":8301}}}],"position":{"start":{"line":265,"column":1,"offset":8184},"end":{"line":268,"column":26,"offset":8301}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":269,"column":1,"offset":8302},"end":{"line":274,"column":4,"offset":8430}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":275,"column":1,"offset":8431},"end":{"line":275,"column":14,"offset":8444}}}],"position":{"start":{"line":275,"column":1,"offset":8431},"end":{"line":275,"column":14,"offset":8444}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":277,"column":1,"offset":8446},"end":{"line":290,"column":4,"offset":8728}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":292,"column":1,"offset":8730},"end":{"line":293,"column":5,"offset":8739}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":296,"column":7,"offset":8748},"end":{"line":296,"column":13,"offset":8754}}}],"position":{"start":{"line":296,"column":1,"offset":8742},"end":{"line":296,"column":13,"offset":8754}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":296,"column":13,"offset":8754}}}}