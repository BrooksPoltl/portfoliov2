{"expireTime":9007200842251290000,"key":"transformer-remark-markdown-ast-dbc9a40e2237b96cdd52c3b7b9db9567-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632},"indent":[]}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities. \n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705},"indent":[]}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791},"indent":[]}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833},"indent":[]}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865},"indent":[]}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884},"indent":[]}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916},"indent":[]}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052},"indent":[]}},{"type":"text","value":"\nEnvironment: The name-object pairs the interpreter keeps in memory.\n","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":34,"column":1,"offset":1121},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1121},"end":{"line":34,"column":5,"offset":1125},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":34,"column":5,"offset":1125},"end":{"line":35,"column":1,"offset":1126},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":35,"column":1,"offset":1126},"end":{"line":35,"column":5,"offset":1130},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":35,"column":5,"offset":1130},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Procedures can be used to build on top of other procedures:\n","position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":1,"offset":1192},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1192},"end":{"line":38,"column":5,"offset":1196},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":5,"offset":1196},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (sum-of-squares x y)\n(+ (square x) (square y))</code></pre></div>","position":{"start":{"line":39,"column":1,"offset":1197},"end":{"line":42,"column":4,"offset":1259},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":43,"column":1,"offset":1260},"end":{"line":43,"column":5,"offset":1264},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Compound Procedure: \n","position":{"start":{"line":45,"column":1,"offset":1266},"end":{"line":46,"column":1,"offset":1287},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":46,"column":1,"offset":1287},"end":{"line":46,"column":5,"offset":1291},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1266},"end":{"line":46,"column":5,"offset":1291},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":48,"column":7,"offset":1299},"end":{"line":48,"column":10,"offset":1302},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1293},"end":{"line":48,"column":10,"offset":1302},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":49,"column":7,"offset":1309},"end":{"line":49,"column":10,"offset":1312},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1303},"end":{"line":49,"column":10,"offset":1312},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":51,"column":6,"offset":1319},"end":{"line":51,"column":14,"offset":1327},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1314},"end":{"line":51,"column":14,"offset":1327},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":52,"column":7,"offset":1334},"end":{"line":52,"column":10,"offset":1337},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1328},"end":{"line":52,"column":10,"offset":1337},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":54,"column":8,"offset":1346},"end":{"line":54,"column":30,"offset":1368},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1339},"end":{"line":54,"column":30,"offset":1368},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":56,"column":1,"offset":1370},"end":{"line":57,"column":1,"offset":1514},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":57,"column":1,"offset":1514},"end":{"line":57,"column":5,"offset":1518},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":57,"column":5,"offset":1518},"end":{"line":57,"column":16,"offset":1529},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":57,"column":16,"offset":1529},"end":{"line":57,"column":20,"offset":1533},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":57,"column":20,"offset":1533},"end":{"line":59,"column":1,"offset":1677},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":59,"column":1,"offset":1677},"end":{"line":59,"column":5,"offset":1681},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":59,"column":5,"offset":1681},"end":{"line":59,"column":16,"offset":1692},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":59,"column":16,"offset":1692},"end":{"line":59,"column":20,"offset":1696},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":59,"column":20,"offset":1696},"end":{"line":60,"column":45,"offset":1741},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":60,"column":45,"offset":1741},"end":{"line":60,"column":49,"offset":1745},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":60,"column":49,"offset":1745},"end":{"line":60,"column":65,"offset":1761},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":60,"column":65,"offset":1761},"end":{"line":60,"column":69,"offset":1765},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":60,"column":69,"offset":1765},"end":{"line":62,"column":1,"offset":1808},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":62,"column":1,"offset":1808},"end":{"line":62,"column":5,"offset":1812},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":62,"column":5,"offset":1812},"end":{"line":62,"column":22,"offset":1829},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":62,"column":22,"offset":1829},"end":{"line":62,"column":26,"offset":1833},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":62,"column":26,"offset":1833},"end":{"line":63,"column":1,"offset":1834},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":63,"column":1,"offset":1834},"end":{"line":63,"column":5,"offset":1838},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":63,"column":5,"offset":1838},"end":{"line":65,"column":1,"offset":1956},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":65,"column":1,"offset":1956},"end":{"line":65,"column":5,"offset":1960},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":65,"column":5,"offset":1960},"end":{"line":67,"column":1,"offset":2081},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":67,"column":1,"offset":2081},"end":{"line":67,"column":12,"offset":2092},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":67,"column":12,"offset":2092},"end":{"line":67,"column":68,"offset":2148},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":67,"column":68,"offset":2148},"end":{"line":67,"column":79,"offset":2159},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":67,"column":79,"offset":2159},"end":{"line":67,"column":106,"offset":2186},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":67,"column":106,"offset":2186},"end":{"line":67,"column":109,"offset":2189},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":67,"column":109,"offset":2189},"end":{"line":67,"column":189,"offset":2269},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":67,"column":189,"offset":2269},"end":{"line":67,"column":192,"offset":2272},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":67,"column":192,"offset":2272},"end":{"line":67,"column":202,"offset":2282},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1370},"end":{"line":67,"column":202,"offset":2282},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":69,"column":8,"offset":2291},"end":{"line":69,"column":14,"offset":2297},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":2284},"end":{"line":69,"column":14,"offset":2297},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":70,"column":1,"offset":2298},"end":{"line":70,"column":9,"offset":2306},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":70,"column":9,"offset":2306},"end":{"line":70,"column":73,"offset":2370},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":2298},"end":{"line":70,"column":73,"offset":2370},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":71,"column":1,"offset":2371},"end":{"line":74,"column":4,"offset":2410},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2411},"end":{"line":75,"column":5,"offset":2415},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":77,"column":1,"offset":2417},"end":{"line":77,"column":72,"offset":2488},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":77,"column":72,"offset":2488},"end":{"line":77,"column":80,"offset":2496},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":77,"column":80,"offset":2496},"end":{"line":78,"column":1,"offset":2520},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2520},"end":{"line":78,"column":5,"offset":2524},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":78,"column":5,"offset":2524},"end":{"line":79,"column":1,"offset":2525},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":79,"column":1,"offset":2525},"end":{"line":79,"column":5,"offset":2529},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":79,"column":5,"offset":2529},"end":{"line":80,"column":184,"offset":2713},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":80,"column":184,"offset":2713},"end":{"line":80,"column":187,"offset":2716},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":80,"column":187,"offset":2716},"end":{"line":81,"column":1,"offset":2719},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":81,"column":1,"offset":2719},"end":{"line":81,"column":5,"offset":2723},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":81,"column":5,"offset":2723},"end":{"line":82,"column":1,"offset":2724},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":82,"column":1,"offset":2724},"end":{"line":82,"column":5,"offset":2728},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":82,"column":5,"offset":2728},"end":{"line":83,"column":27,"offset":2755},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":83,"column":27,"offset":2755},"end":{"line":83,"column":35,"offset":2763},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":83,"column":35,"offset":2763},"end":{"line":83,"column":86,"offset":2814},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":83,"column":86,"offset":2814},"end":{"line":83,"column":95,"offset":2823},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":83,"column":95,"offset":2823},"end":{"line":83,"column":97,"offset":2825},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":2417},"end":{"line":83,"column":97,"offset":2825},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":85,"column":1,"offset":2827},"end":{"line":85,"column":6,"offset":2832},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":87,"column":1,"offset":2834},"end":{"line":88,"column":1,"offset":2878},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":88,"column":1,"offset":2878},"end":{"line":88,"column":5,"offset":2882},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":88,"column":5,"offset":2882},"end":{"line":89,"column":1,"offset":2883},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":89,"column":1,"offset":2883},"end":{"line":89,"column":22,"offset":2904},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":89,"column":22,"offset":2904},"end":{"line":90,"column":1,"offset":2905},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":90,"column":1,"offset":2905},"end":{"line":90,"column":5,"offset":2909},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":2834},"end":{"line":90,"column":5,"offset":2909},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":92,"column":1,"offset":2911},"end":{"line":92,"column":152,"offset":3062},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2911},"end":{"line":92,"column":152,"offset":3062},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":94,"column":8,"offset":3071},"end":{"line":94,"column":20,"offset":3083},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":3064},"end":{"line":94,"column":20,"offset":3083},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":96,"column":1,"offset":3085},"end":{"line":96,"column":56,"offset":3140},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":3085},"end":{"line":96,"column":56,"offset":3140},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":97,"column":1,"offset":3141},"end":{"line":102,"column":4,"offset":3232},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":103,"column":1,"offset":3233},"end":{"line":103,"column":5,"offset":3237},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":105,"column":1,"offset":3239},"end":{"line":105,"column":37,"offset":3275},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":105,"column":37,"offset":3275},"end":{"line":105,"column":41,"offset":3279},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":105,"column":41,"offset":3279},"end":{"line":106,"column":1,"offset":3296},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":106,"column":1,"offset":3296},"end":{"line":106,"column":5,"offset":3300},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":106,"column":5,"offset":3300},"end":{"line":107,"column":1,"offset":3301},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":107,"column":1,"offset":3301},"end":{"line":107,"column":5,"offset":3305},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":107,"column":5,"offset":3305},"end":{"line":108,"column":66,"offset":3371},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":108,"column":66,"offset":3371},"end":{"line":108,"column":89,"offset":3394},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":108,"column":89,"offset":3394},"end":{"line":109,"column":1,"offset":3434},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":109,"column":1,"offset":3434},"end":{"line":109,"column":5,"offset":3438},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":109,"column":5,"offset":3438},"end":{"line":110,"column":1,"offset":3439},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":110,"column":1,"offset":3439},"end":{"line":110,"column":5,"offset":3443},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":110,"column":5,"offset":3443},"end":{"line":111,"column":21,"offset":3464},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":111,"column":21,"offset":3464},"end":{"line":111,"column":25,"offset":3468},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":111,"column":25,"offset":3468},"end":{"line":112,"column":1,"offset":3522},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":112,"column":1,"offset":3522},"end":{"line":112,"column":5,"offset":3526},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":112,"column":5,"offset":3526},"end":{"line":113,"column":1,"offset":3527},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":113,"column":1,"offset":3527},"end":{"line":113,"column":5,"offset":3531},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":113,"column":5,"offset":3531},"end":{"line":114,"column":21,"offset":3552},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":114,"column":21,"offset":3552},"end":{"line":114,"column":25,"offset":3556},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":114,"column":25,"offset":3556},"end":{"line":115,"column":1,"offset":3611},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":115,"column":1,"offset":3611},"end":{"line":115,"column":5,"offset":3615},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":115,"column":5,"offset":3615},"end":{"line":116,"column":1,"offset":3616},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":116,"column":1,"offset":3616},"end":{"line":116,"column":5,"offset":3620},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":116,"column":5,"offset":3620},"end":{"line":117,"column":58,"offset":3678},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":117,"column":58,"offset":3678},"end":{"line":117,"column":61,"offset":3681},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":117,"column":61,"offset":3681},"end":{"line":117,"column":145,"offset":3765},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":117,"column":145,"offset":3765},"end":{"line":117,"column":153,"offset":3773},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":117,"column":153,"offset":3773},"end":{"line":117,"column":178,"offset":3798},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":3239},"end":{"line":117,"column":178,"offset":3798},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":119,"column":7,"offset":3806},"end":{"line":119,"column":10,"offset":3809},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":3800},"end":{"line":119,"column":10,"offset":3809},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":121,"column":8,"offset":3818},"end":{"line":121,"column":17,"offset":3827},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":3811},"end":{"line":121,"column":17,"offset":3827},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":122,"column":1,"offset":3828},"end":{"line":133,"column":4,"offset":4027},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":134,"column":1,"offset":4028},"end":{"line":134,"column":5,"offset":4032},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":136,"column":1,"offset":4034},"end":{"line":137,"column":1,"offset":4250},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":137,"column":1,"offset":4250},"end":{"line":137,"column":5,"offset":4254},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":137,"column":5,"offset":4254},"end":{"line":138,"column":1,"offset":4255},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":138,"column":1,"offset":4255},"end":{"line":138,"column":5,"offset":4259},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":138,"column":5,"offset":4259},"end":{"line":139,"column":72,"offset":4331},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":139,"column":72,"offset":4331},"end":{"line":139,"column":81,"offset":4340},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":139,"column":81,"offset":4340},"end":{"line":140,"column":1,"offset":4359},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":140,"column":1,"offset":4359},"end":{"line":140,"column":5,"offset":4363},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":140,"column":5,"offset":4363},"end":{"line":141,"column":1,"offset":4364},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":141,"column":1,"offset":4364},"end":{"line":141,"column":5,"offset":4368},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":141,"column":5,"offset":4368},"end":{"line":142,"column":10,"offset":4378},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":142,"column":10,"offset":4378},"end":{"line":142,"column":16,"offset":4384},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":142,"column":16,"offset":4384},"end":{"line":142,"column":34,"offset":4402},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":142,"column":34,"offset":4402},"end":{"line":142,"column":42,"offset":4410},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":142,"column":42,"offset":4410},"end":{"line":143,"column":24,"offset":4435},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":143,"column":24,"offset":4435},"end":{"line":143,"column":33,"offset":4444},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":143,"column":33,"offset":4444},"end":{"line":143,"column":107,"offset":4518},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":143,"column":107,"offset":4518},"end":{"line":143,"column":116,"offset":4527},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":143,"column":116,"offset":4527},"end":{"line":143,"column":134,"offset":4545},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":143,"column":134,"offset":4545},"end":{"line":143,"column":137,"offset":4548},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":143,"column":137,"offset":4548},"end":{"line":143,"column":161,"offset":4572},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":143,"column":161,"offset":4572},"end":{"line":143,"column":167,"offset":4578},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":143,"column":167,"offset":4578},"end":{"line":143,"column":192,"offset":4603},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":143,"column":192,"offset":4603},"end":{"line":143,"column":200,"offset":4611},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":143,"column":200,"offset":4611},"end":{"line":143,"column":218,"offset":4629},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":143,"column":218,"offset":4629},"end":{"line":143,"column":224,"offset":4635},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":143,"column":224,"offset":4635},"end":{"line":143,"column":245,"offset":4656},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":143,"column":245,"offset":4656},"end":{"line":143,"column":252,"offset":4663},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":143,"column":252,"offset":4663},"end":{"line":143,"column":257,"offset":4668},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":143,"column":257,"offset":4668},"end":{"line":143,"column":260,"offset":4671},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":143,"column":260,"offset":4671},"end":{"line":143,"column":285,"offset":4696},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":143,"column":285,"offset":4696},"end":{"line":143,"column":291,"offset":4702},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":143,"column":291,"offset":4702},"end":{"line":144,"column":96,"offset":4828},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":144,"column":96,"offset":4828},"end":{"line":144,"column":111,"offset":4843},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":144,"column":111,"offset":4843},"end":{"line":144,"column":182,"offset":4914},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":4034},"end":{"line":144,"column":182,"offset":4914},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":146,"column":8,"offset":4923},"end":{"line":146,"column":19,"offset":4934},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":4916},"end":{"line":146,"column":19,"offset":4934},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":147,"column":1,"offset":4935},"end":{"line":147,"column":14,"offset":4948},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":4935},"end":{"line":147,"column":14,"offset":4948},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":148,"column":1,"offset":4949},"end":{"line":163,"column":4,"offset":5364},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":164,"column":1,"offset":5365},"end":{"line":164,"column":5,"offset":5369},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":166,"column":1,"offset":5371},"end":{"line":166,"column":141,"offset":5511},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":5371},"end":{"line":166,"column":141,"offset":5511},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":168,"column":8,"offset":5520},"end":{"line":168,"column":30,"offset":5542},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":5513},"end":{"line":168,"column":30,"offset":5542},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":169,"column":1,"offset":5543},"end":{"line":169,"column":199,"offset":5741},"indent":[]}}],"position":{"start":{"line":169,"column":1,"offset":5543},"end":{"line":169,"column":199,"offset":5741},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":171,"column":8,"offset":5750},"end":{"line":171,"column":30,"offset":5772},"indent":[]}}],"position":{"start":{"line":171,"column":1,"offset":5743},"end":{"line":171,"column":30,"offset":5772},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":173,"column":1,"offset":5774},"end":{"line":174,"column":1,"offset":5849},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":174,"column":1,"offset":5849},"end":{"line":174,"column":5,"offset":5853},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":174,"column":5,"offset":5853},"end":{"line":175,"column":1,"offset":5854},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":175,"column":1,"offset":5854},"end":{"line":175,"column":5,"offset":5858},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":175,"column":5,"offset":5858},"end":{"line":177,"column":1,"offset":5920},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":177,"column":1,"offset":5920},"end":{"line":177,"column":5,"offset":5924},"indent":[]}},{"type":"break","position":{"start":{"line":177,"column":5,"offset":5924},"end":{"line":178,"column":1,"offset":5927},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":178,"column":1,"offset":5927},"end":{"line":178,"column":11,"offset":5937},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":178,"column":11,"offset":5937},"end":{"line":178,"column":19,"offset":5945},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":178,"column":19,"offset":5945},"end":{"line":178,"column":24,"offset":5950},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":178,"column":24,"offset":5950},"end":{"line":178,"column":34,"offset":5960},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":178,"column":34,"offset":5960},"end":{"line":179,"column":1,"offset":6009},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":179,"column":1,"offset":6009},"end":{"line":179,"column":5,"offset":6013},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":5774},"end":{"line":179,"column":5,"offset":6013},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":181,"column":8,"offset":6022},"end":{"line":181,"column":12,"offset":6026},"indent":[]}}],"position":{"start":{"line":181,"column":1,"offset":6015},"end":{"line":181,"column":12,"offset":6026},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":182,"column":1,"offset":6027},"end":{"line":187,"column":4,"offset":6138},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":188,"column":1,"offset":6139},"end":{"line":189,"column":5,"offset":6148},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":191,"column":1,"offset":6150},"end":{"line":191,"column":7,"offset":6156},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":191,"column":7,"offset":6156},"end":{"line":193,"column":1,"offset":6238},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":193,"column":1,"offset":6238},"end":{"line":193,"column":5,"offset":6242},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":193,"column":5,"offset":6242},"end":{"line":194,"column":1,"offset":6243},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":194,"column":1,"offset":6243},"end":{"line":194,"column":5,"offset":6247},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":194,"column":5,"offset":6247},"end":{"line":195,"column":10,"offset":6257},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":195,"column":10,"offset":6257},"end":{"line":195,"column":14,"offset":6261},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":195,"column":14,"offset":6261},"end":{"line":195,"column":22,"offset":6269},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":195,"column":22,"offset":6269},"end":{"line":195,"column":30,"offset":6277},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":195,"column":30,"offset":6277},"end":{"line":195,"column":50,"offset":6297},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":195,"column":50,"offset":6297},"end":{"line":195,"column":53,"offset":6300},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":195,"column":53,"offset":6300},"end":{"line":195,"column":90,"offset":6337},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":195,"column":90,"offset":6337},"end":{"line":195,"column":96,"offset":6343},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":195,"column":96,"offset":6343},"end":{"line":196,"column":1,"offset":6346},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":196,"column":1,"offset":6346},"end":{"line":196,"column":5,"offset":6350},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":196,"column":5,"offset":6350},"end":{"line":197,"column":1,"offset":6351},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":197,"column":1,"offset":6351},"end":{"line":197,"column":5,"offset":6355},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":197,"column":5,"offset":6355},"end":{"line":198,"column":14,"offset":6369},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":198,"column":14,"offset":6369},"end":{"line":198,"column":18,"offset":6373},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":198,"column":18,"offset":6373},"end":{"line":198,"column":90,"offset":6445},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":198,"column":90,"offset":6445},"end":{"line":198,"column":94,"offset":6449},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":198,"column":94,"offset":6449},"end":{"line":198,"column":125,"offset":6480},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":198,"column":125,"offset":6480},"end":{"line":198,"column":131,"offset":6486},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":198,"column":131,"offset":6486},"end":{"line":199,"column":1,"offset":6501},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":199,"column":1,"offset":6501},"end":{"line":199,"column":5,"offset":6505},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":199,"column":5,"offset":6505},"end":{"line":200,"column":1,"offset":6506},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":200,"column":1,"offset":6506},"end":{"line":200,"column":5,"offset":6510},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":200,"column":5,"offset":6510},"end":{"line":201,"column":14,"offset":6524},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":201,"column":14,"offset":6524},"end":{"line":201,"column":18,"offset":6528},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":201,"column":18,"offset":6528},"end":{"line":201,"column":37,"offset":6547},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":201,"column":37,"offset":6547},"end":{"line":201,"column":40,"offset":6550},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":201,"column":40,"offset":6550},"end":{"line":201,"column":77,"offset":6587},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":201,"column":77,"offset":6587},"end":{"line":201,"column":81,"offset":6591},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":201,"column":81,"offset":6591},"end":{"line":201,"column":99,"offset":6609},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":201,"column":99,"offset":6609},"end":{"line":201,"column":102,"offset":6612},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":201,"column":102,"offset":6612},"end":{"line":201,"column":133,"offset":6643},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":201,"column":133,"offset":6643},"end":{"line":201,"column":139,"offset":6649},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":201,"column":139,"offset":6649},"end":{"line":201,"column":167,"offset":6677},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":201,"column":167,"offset":6677},"end":{"line":201,"column":171,"offset":6681},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":201,"column":171,"offset":6681},"end":{"line":202,"column":1,"offset":6683},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":202,"column":1,"offset":6683},"end":{"line":202,"column":5,"offset":6687},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":202,"column":5,"offset":6687},"end":{"line":203,"column":1,"offset":6688},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":203,"column":1,"offset":6688},"end":{"line":203,"column":5,"offset":6692},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":203,"column":5,"offset":6692},"end":{"line":205,"column":1,"offset":6712},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":205,"column":1,"offset":6712},"end":{"line":205,"column":5,"offset":6716},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":205,"column":5,"offset":6716},"end":{"line":206,"column":6,"offset":6722},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":206,"column":6,"offset":6722},"end":{"line":206,"column":12,"offset":6728},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":206,"column":12,"offset":6728},"end":{"line":206,"column":30,"offset":6746},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":206,"column":30,"offset":6746},"end":{"line":206,"column":36,"offset":6752},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":206,"column":36,"offset":6752},"end":{"line":206,"column":62,"offset":6778},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":206,"column":62,"offset":6778},"end":{"line":206,"column":75,"offset":6791},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":206,"column":75,"offset":6791},"end":{"line":206,"column":159,"offset":6875},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":6150},"end":{"line":206,"column":159,"offset":6875},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":208,"column":8,"offset":6884},"end":{"line":208,"column":41,"offset":6917},"indent":[]}}],"position":{"start":{"line":208,"column":1,"offset":6877},"end":{"line":208,"column":41,"offset":6917},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":209,"column":1,"offset":6918},"end":{"line":214,"column":4,"offset":6993},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":215,"column":1,"offset":6994},"end":{"line":216,"column":1,"offset":7013},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":216,"column":1,"offset":7013},"end":{"line":216,"column":5,"offset":7017},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":216,"column":5,"offset":7017},"end":{"line":218,"column":5,"offset":7155},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":218,"column":5,"offset":7155},"end":{"line":218,"column":9,"offset":7159},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":218,"column":9,"offset":7159},"end":{"line":219,"column":5,"offset":7164},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":219,"column":5,"offset":7164},"end":{"line":219,"column":27,"offset":7186},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":219,"column":27,"offset":7186},"end":{"line":220,"column":5,"offset":7191},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":220,"column":5,"offset":7191},"end":{"line":220,"column":9,"offset":7195},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":220,"column":9,"offset":7195},"end":{"line":221,"column":5,"offset":7200},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":221,"column":5,"offset":7200},"end":{"line":221,"column":12,"offset":7207},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":221,"column":12,"offset":7207},"end":{"line":221,"column":17,"offset":7212},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":221,"column":17,"offset":7212},"end":{"line":221,"column":25,"offset":7220},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":221,"column":25,"offset":7220},"end":{"line":221,"column":63,"offset":7258},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":221,"column":63,"offset":7258},"end":{"line":221,"column":66,"offset":7261},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":221,"column":66,"offset":7261},"end":{"line":221,"column":86,"offset":7281},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":221,"column":86,"offset":7281},"end":{"line":221,"column":89,"offset":7284},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":221,"column":89,"offset":7284},"end":{"line":221,"column":110,"offset":7305},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":221,"column":110,"offset":7305},"end":{"line":221,"column":119,"offset":7314},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":221,"column":119,"offset":7314},"end":{"line":222,"column":1,"offset":7316},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":222,"column":1,"offset":7316},"end":{"line":222,"column":5,"offset":7320},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":222,"column":5,"offset":7320},"end":{"line":224,"column":1,"offset":7336},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":224,"column":1,"offset":7336},"end":{"line":224,"column":5,"offset":7340},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":224,"column":5,"offset":7340},"end":{"line":226,"column":5,"offset":7447},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":226,"column":5,"offset":7447},"end":{"line":226,"column":9,"offset":7451},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":226,"column":9,"offset":7451},"end":{"line":227,"column":1,"offset":7452},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":227,"column":1,"offset":7452},"end":{"line":227,"column":23,"offset":7474},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":227,"column":23,"offset":7474},"end":{"line":227,"column":35,"offset":7486},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":227,"column":35,"offset":7486},"end":{"line":227,"column":61,"offset":7512},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":227,"column":61,"offset":7512},"end":{"line":228,"column":1,"offset":7513},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":228,"column":1,"offset":7513},"end":{"line":228,"column":5,"offset":7517},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":228,"column":5,"offset":7517},"end":{"line":229,"column":5,"offset":7522},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":229,"column":5,"offset":7522},"end":{"line":229,"column":8,"offset":7525},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":229,"column":8,"offset":7525},"end":{"line":229,"column":58,"offset":7575},"indent":[]}}],"position":{"start":{"line":215,"column":1,"offset":6994},"end":{"line":229,"column":58,"offset":7575},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":231,"column":1,"offset":7577},"end":{"line":232,"column":1,"offset":7595},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":232,"column":1,"offset":7595},"end":{"line":232,"column":5,"offset":7599},"indent":[]}}],"position":{"start":{"line":231,"column":1,"offset":7577},"end":{"line":232,"column":5,"offset":7599},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":233,"column":1,"offset":7600},"end":{"line":235,"column":4,"offset":7630},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":236,"column":1,"offset":7631},"end":{"line":236,"column":13,"offset":7643},"indent":[]}}],"position":{"start":{"line":236,"column":1,"offset":7631},"end":{"line":236,"column":13,"offset":7643},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":237,"column":1,"offset":7644},"end":{"line":243,"column":4,"offset":7723},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":244,"column":1,"offset":7724},"end":{"line":244,"column":8,"offset":7731},"indent":[]}}],"position":{"start":{"line":244,"column":1,"offset":7724},"end":{"line":244,"column":8,"offset":7731},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":245,"column":1,"offset":7732},"end":{"line":252,"column":4,"offset":7856},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":253,"column":1,"offset":7857},"end":{"line":254,"column":5,"offset":7866},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":256,"column":1,"offset":7868},"end":{"line":256,"column":11,"offset":7878},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":256,"column":11,"offset":7878},"end":{"line":256,"column":24,"offset":7891},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":256,"column":24,"offset":7891},"end":{"line":256,"column":107,"offset":7974},"indent":[]}}],"position":{"start":{"line":256,"column":1,"offset":7868},"end":{"line":256,"column":107,"offset":7974},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":258,"column":7,"offset":7982},"end":{"line":258,"column":10,"offset":7985},"indent":[]}}],"position":{"start":{"line":258,"column":1,"offset":7976},"end":{"line":258,"column":10,"offset":7985},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":259,"column":7,"offset":7992},"end":{"line":259,"column":10,"offset":7995},"indent":[]}}],"position":{"start":{"line":259,"column":1,"offset":7986},"end":{"line":259,"column":10,"offset":7995},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":261,"column":6,"offset":8002},"end":{"line":261,"column":10,"offset":8006},"indent":[]}}],"position":{"start":{"line":261,"column":1,"offset":7997},"end":{"line":261,"column":10,"offset":8006},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":262,"column":7,"offset":8013},"end":{"line":262,"column":13,"offset":8019},"indent":[]}}],"position":{"start":{"line":262,"column":1,"offset":8007},"end":{"line":262,"column":13,"offset":8019},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":263,"column":1,"offset":8020},"end":{"line":263,"column":49,"offset":8068},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":263,"column":49,"offset":8068},"end":{"line":263,"column":57,"offset":8076},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":263,"column":57,"offset":8076},"end":{"line":263,"column":133,"offset":8152},"indent":[]}}],"position":{"start":{"line":263,"column":1,"offset":8020},"end":{"line":263,"column":133,"offset":8152},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":264,"column":1,"offset":8153},"end":{"line":274,"column":4,"offset":8348},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":275,"column":1,"offset":8349},"end":{"line":275,"column":5,"offset":8353},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":278,"column":1,"offset":8356},"end":{"line":279,"column":1,"offset":8438},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":279,"column":1,"offset":8438},"end":{"line":279,"column":5,"offset":8442},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":279,"column":5,"offset":8442},"end":{"line":280,"column":1,"offset":8443},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":280,"column":1,"offset":8443},"end":{"line":280,"column":5,"offset":8447},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":280,"column":5,"offset":8447},"end":{"line":281,"column":26,"offset":8473},"indent":[1]}}],"position":{"start":{"line":278,"column":1,"offset":8356},"end":{"line":281,"column":26,"offset":8473},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":282,"column":1,"offset":8474},"end":{"line":287,"column":4,"offset":8602},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":288,"column":1,"offset":8603},"end":{"line":288,"column":14,"offset":8616},"indent":[]}}],"position":{"start":{"line":288,"column":1,"offset":8603},"end":{"line":288,"column":14,"offset":8616},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":290,"column":1,"offset":8618},"end":{"line":303,"column":4,"offset":8900},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":305,"column":1,"offset":8902},"end":{"line":306,"column":5,"offset":8911},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":309,"column":7,"offset":8920},"end":{"line":309,"column":13,"offset":8926},"indent":[]}}],"position":{"start":{"line":309,"column":1,"offset":8914},"end":{"line":309,"column":13,"offset":8926},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":309,"column":13,"offset":8926}}}}