{"expireTime":9007200842248895000,"key":"transformer-remark-markdown-html-ast-35e126487e8016afb2db9220b9b11da7-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":820}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":820},"end":{"line":22,"column":5,"offset":824}}},{"type":"text","value":"\nexpression: ","position":{"start":{"line":22,"column":5,"offset":824},"end":{"line":23,"column":13,"offset":837}}},{"type":"raw","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":13,"offset":837},"end":{"line":23,"column":26,"offset":850}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":23,"column":26,"offset":850}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":25,"column":1,"offset":852},"end":{"line":25,"column":5,"offset":856}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":27,"column":7,"offset":864},"end":{"line":27,"column":10,"offset":867}}}],"position":{"start":{"line":27,"column":1,"offset":858},"end":{"line":27,"column":10,"offset":867}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":28,"column":7,"offset":874},"end":{"line":28,"column":10,"offset":877}}}],"position":{"start":{"line":28,"column":1,"offset":868},"end":{"line":28,"column":10,"offset":877}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":30,"column":6,"offset":884},"end":{"line":30,"column":14,"offset":892}}}],"position":{"start":{"line":30,"column":1,"offset":879},"end":{"line":30,"column":14,"offset":892}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":31,"column":7,"offset":899},"end":{"line":31,"column":10,"offset":902}}}],"position":{"start":{"line":31,"column":1,"offset":893},"end":{"line":31,"column":10,"offset":902}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":33,"column":8,"offset":911},"end":{"line":33,"column":30,"offset":933}}}],"position":{"start":{"line":33,"column":1,"offset":904},"end":{"line":33,"column":30,"offset":933}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":35,"column":1,"offset":935},"end":{"line":36,"column":1,"offset":1079}}},{"type":"raw","value":"<br>","position":{"start":{"line":36,"column":1,"offset":1079},"end":{"line":36,"column":5,"offset":1083}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":36,"column":5,"offset":1083},"end":{"line":36,"column":16,"offset":1094}}},{"type":"raw","value":"<br>","position":{"start":{"line":36,"column":16,"offset":1094},"end":{"line":36,"column":20,"offset":1098}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":36,"column":20,"offset":1098},"end":{"line":38,"column":1,"offset":1242}}},{"type":"raw","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1242},"end":{"line":38,"column":5,"offset":1246}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":38,"column":5,"offset":1246},"end":{"line":38,"column":16,"offset":1257}}},{"type":"raw","value":"<br>","position":{"start":{"line":38,"column":16,"offset":1257},"end":{"line":38,"column":20,"offset":1261}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":38,"column":20,"offset":1261},"end":{"line":39,"column":45,"offset":1306}}},{"type":"raw","value":"<br>","position":{"start":{"line":39,"column":45,"offset":1306},"end":{"line":39,"column":49,"offset":1310}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":39,"column":49,"offset":1310},"end":{"line":39,"column":65,"offset":1326}}},{"type":"raw","value":"<br>","position":{"start":{"line":39,"column":65,"offset":1326},"end":{"line":39,"column":69,"offset":1330}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":39,"column":69,"offset":1330},"end":{"line":41,"column":1,"offset":1373}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":1,"offset":1373},"end":{"line":41,"column":5,"offset":1377}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":41,"column":5,"offset":1377},"end":{"line":41,"column":22,"offset":1394}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":22,"offset":1394},"end":{"line":41,"column":26,"offset":1398}}},{"type":"text","value":"\n","position":{"start":{"line":41,"column":26,"offset":1398},"end":{"line":42,"column":1,"offset":1399}}},{"type":"raw","value":"<br>","position":{"start":{"line":42,"column":1,"offset":1399},"end":{"line":42,"column":5,"offset":1403}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":42,"column":5,"offset":1403},"end":{"line":44,"column":1,"offset":1521}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1521},"end":{"line":44,"column":5,"offset":1525}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":44,"column":5,"offset":1525},"end":{"line":46,"column":1,"offset":1646}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":46,"column":1,"offset":1646},"end":{"line":46,"column":12,"offset":1657}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":46,"column":12,"offset":1657},"end":{"line":46,"column":68,"offset":1713}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":46,"column":68,"offset":1713},"end":{"line":46,"column":79,"offset":1724}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":46,"column":79,"offset":1724},"end":{"line":46,"column":106,"offset":1751}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":46,"column":106,"offset":1751},"end":{"line":46,"column":109,"offset":1754}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":46,"column":109,"offset":1754},"end":{"line":46,"column":189,"offset":1834}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":46,"column":189,"offset":1834},"end":{"line":46,"column":192,"offset":1837}}},{"type":"text","value":" to get 3.","position":{"start":{"line":46,"column":192,"offset":1837},"end":{"line":46,"column":202,"offset":1847}}}],"position":{"start":{"line":35,"column":1,"offset":935},"end":{"line":46,"column":202,"offset":1847}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":48,"column":8,"offset":1856},"end":{"line":48,"column":14,"offset":1862}}}],"position":{"start":{"line":48,"column":1,"offset":1849},"end":{"line":48,"column":14,"offset":1862}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":49,"column":1,"offset":1863},"end":{"line":49,"column":9,"offset":1871}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":49,"column":9,"offset":1871},"end":{"line":49,"column":73,"offset":1935}}}],"position":{"start":{"line":49,"column":1,"offset":1863},"end":{"line":49,"column":73,"offset":1935}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":50,"column":1,"offset":1936},"end":{"line":53,"column":4,"offset":1975}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":54,"column":1,"offset":1976},"end":{"line":54,"column":5,"offset":1980}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":56,"column":1,"offset":1982},"end":{"line":56,"column":72,"offset":2053}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":56,"column":72,"offset":2053},"end":{"line":56,"column":80,"offset":2061}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":56,"column":80,"offset":2061},"end":{"line":57,"column":1,"offset":2085}}},{"type":"raw","value":"<br>","position":{"start":{"line":57,"column":1,"offset":2085},"end":{"line":57,"column":5,"offset":2089}}},{"type":"text","value":"\n","position":{"start":{"line":57,"column":5,"offset":2089},"end":{"line":58,"column":1,"offset":2090}}},{"type":"raw","value":"<br>","position":{"start":{"line":58,"column":1,"offset":2090},"end":{"line":58,"column":5,"offset":2094}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":58,"column":5,"offset":2094},"end":{"line":59,"column":184,"offset":2278}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":59,"column":184,"offset":2278},"end":{"line":59,"column":187,"offset":2281}}},{"type":"text","value":".\n","position":{"start":{"line":59,"column":187,"offset":2281},"end":{"line":60,"column":1,"offset":2284}}},{"type":"raw","value":"<br>","position":{"start":{"line":60,"column":1,"offset":2284},"end":{"line":60,"column":5,"offset":2288}}},{"type":"text","value":"\n","position":{"start":{"line":60,"column":5,"offset":2288},"end":{"line":61,"column":1,"offset":2289}}},{"type":"raw","value":"<br>","position":{"start":{"line":61,"column":1,"offset":2289},"end":{"line":61,"column":5,"offset":2293}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":61,"column":5,"offset":2293},"end":{"line":62,"column":27,"offset":2320}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":62,"column":27,"offset":2320},"end":{"line":62,"column":35,"offset":2328}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":62,"column":35,"offset":2328},"end":{"line":62,"column":86,"offset":2379}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":62,"column":86,"offset":2379},"end":{"line":62,"column":95,"offset":2388}}},{"type":"text","value":". ","position":{"start":{"line":62,"column":95,"offset":2388},"end":{"line":62,"column":97,"offset":2390}}}],"position":{"start":{"line":56,"column":1,"offset":1982},"end":{"line":62,"column":97,"offset":2390}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":64,"column":1,"offset":2392},"end":{"line":64,"column":6,"offset":2397}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":66,"column":1,"offset":2399},"end":{"line":67,"column":1,"offset":2443}}},{"type":"raw","value":"<br>","position":{"start":{"line":67,"column":1,"offset":2443},"end":{"line":67,"column":5,"offset":2447}}},{"type":"text","value":"\n","position":{"start":{"line":67,"column":5,"offset":2447},"end":{"line":68,"column":1,"offset":2448}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":68,"column":1,"offset":2448},"end":{"line":68,"column":22,"offset":2469}}},{"type":"text","value":"\n","position":{"start":{"line":68,"column":22,"offset":2469},"end":{"line":69,"column":1,"offset":2470}}},{"type":"raw","value":"<br>","position":{"start":{"line":69,"column":1,"offset":2470},"end":{"line":69,"column":5,"offset":2474}}}],"position":{"start":{"line":66,"column":1,"offset":2399},"end":{"line":69,"column":5,"offset":2474}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":71,"column":1,"offset":2476},"end":{"line":71,"column":152,"offset":2627}}}],"position":{"start":{"line":71,"column":1,"offset":2476},"end":{"line":71,"column":152,"offset":2627}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":73,"column":8,"offset":2636},"end":{"line":73,"column":20,"offset":2648}}}],"position":{"start":{"line":73,"column":1,"offset":2629},"end":{"line":73,"column":20,"offset":2648}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":75,"column":1,"offset":2650},"end":{"line":75,"column":56,"offset":2705}}}],"position":{"start":{"line":75,"column":1,"offset":2650},"end":{"line":75,"column":56,"offset":2705}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":76,"column":1,"offset":2706},"end":{"line":81,"column":4,"offset":2797}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":82,"column":1,"offset":2798},"end":{"line":82,"column":5,"offset":2802}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":84,"column":1,"offset":2804},"end":{"line":84,"column":37,"offset":2840}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":84,"column":37,"offset":2840},"end":{"line":84,"column":41,"offset":2844}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":84,"column":41,"offset":2844},"end":{"line":85,"column":1,"offset":2861}}},{"type":"raw","value":"<br>","position":{"start":{"line":85,"column":1,"offset":2861},"end":{"line":85,"column":5,"offset":2865}}},{"type":"text","value":"\n","position":{"start":{"line":85,"column":5,"offset":2865},"end":{"line":86,"column":1,"offset":2866}}},{"type":"raw","value":"<br>","position":{"start":{"line":86,"column":1,"offset":2866},"end":{"line":86,"column":5,"offset":2870}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":86,"column":5,"offset":2870},"end":{"line":87,"column":66,"offset":2936}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":87,"column":66,"offset":2936},"end":{"line":87,"column":89,"offset":2959}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":87,"column":89,"offset":2959},"end":{"line":88,"column":1,"offset":2999}}},{"type":"raw","value":"<br>","position":{"start":{"line":88,"column":1,"offset":2999},"end":{"line":88,"column":5,"offset":3003}}},{"type":"text","value":"\n","position":{"start":{"line":88,"column":5,"offset":3003},"end":{"line":89,"column":1,"offset":3004}}},{"type":"raw","value":"<br>","position":{"start":{"line":89,"column":1,"offset":3004},"end":{"line":89,"column":5,"offset":3008}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":89,"column":5,"offset":3008},"end":{"line":90,"column":21,"offset":3029}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":90,"column":21,"offset":3029},"end":{"line":90,"column":25,"offset":3033}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":90,"column":25,"offset":3033},"end":{"line":91,"column":1,"offset":3087}}},{"type":"raw","value":"<br>","position":{"start":{"line":91,"column":1,"offset":3087},"end":{"line":91,"column":5,"offset":3091}}},{"type":"text","value":"\n","position":{"start":{"line":91,"column":5,"offset":3091},"end":{"line":92,"column":1,"offset":3092}}},{"type":"raw","value":"<br>","position":{"start":{"line":92,"column":1,"offset":3092},"end":{"line":92,"column":5,"offset":3096}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":92,"column":5,"offset":3096},"end":{"line":93,"column":21,"offset":3117}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":93,"column":21,"offset":3117},"end":{"line":93,"column":25,"offset":3121}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":93,"column":25,"offset":3121},"end":{"line":94,"column":1,"offset":3176}}},{"type":"raw","value":"<br>","position":{"start":{"line":94,"column":1,"offset":3176},"end":{"line":94,"column":5,"offset":3180}}},{"type":"text","value":"\n","position":{"start":{"line":94,"column":5,"offset":3180},"end":{"line":95,"column":1,"offset":3181}}},{"type":"raw","value":"<br>","position":{"start":{"line":95,"column":1,"offset":3181},"end":{"line":95,"column":5,"offset":3185}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":95,"column":5,"offset":3185},"end":{"line":96,"column":58,"offset":3243}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":96,"column":58,"offset":3243},"end":{"line":96,"column":61,"offset":3246}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":96,"column":61,"offset":3246},"end":{"line":96,"column":145,"offset":3330}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":96,"column":145,"offset":3330},"end":{"line":96,"column":153,"offset":3338}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":96,"column":153,"offset":3338},"end":{"line":96,"column":178,"offset":3363}}}],"position":{"start":{"line":84,"column":1,"offset":2804},"end":{"line":96,"column":178,"offset":3363}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":98,"column":7,"offset":3371},"end":{"line":98,"column":10,"offset":3374}}}],"position":{"start":{"line":98,"column":1,"offset":3365},"end":{"line":98,"column":10,"offset":3374}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":100,"column":8,"offset":3383},"end":{"line":100,"column":17,"offset":3392}}}],"position":{"start":{"line":100,"column":1,"offset":3376},"end":{"line":100,"column":17,"offset":3392}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":101,"column":1,"offset":3393},"end":{"line":112,"column":4,"offset":3592}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":113,"column":1,"offset":3593},"end":{"line":113,"column":5,"offset":3597}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":115,"column":1,"offset":3599},"end":{"line":116,"column":1,"offset":3815}}},{"type":"raw","value":"<br>","position":{"start":{"line":116,"column":1,"offset":3815},"end":{"line":116,"column":5,"offset":3819}}},{"type":"text","value":"\n","position":{"start":{"line":116,"column":5,"offset":3819},"end":{"line":117,"column":1,"offset":3820}}},{"type":"raw","value":"<br>","position":{"start":{"line":117,"column":1,"offset":3820},"end":{"line":117,"column":5,"offset":3824}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":117,"column":5,"offset":3824},"end":{"line":118,"column":72,"offset":3896}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":118,"column":72,"offset":3896},"end":{"line":118,"column":81,"offset":3905}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":118,"column":81,"offset":3905},"end":{"line":119,"column":1,"offset":3924}}},{"type":"raw","value":"<br>","position":{"start":{"line":119,"column":1,"offset":3924},"end":{"line":119,"column":5,"offset":3928}}},{"type":"text","value":"\n","position":{"start":{"line":119,"column":5,"offset":3928},"end":{"line":120,"column":1,"offset":3929}}},{"type":"raw","value":"<br>","position":{"start":{"line":120,"column":1,"offset":3929},"end":{"line":120,"column":5,"offset":3933}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":120,"column":5,"offset":3933},"end":{"line":121,"column":10,"offset":3943}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":121,"column":10,"offset":3943},"end":{"line":121,"column":16,"offset":3949}}},{"type":"text","value":" gets called with ","position":{"start":{"line":121,"column":16,"offset":3949},"end":{"line":121,"column":34,"offset":3967}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":121,"column":34,"offset":3967},"end":{"line":121,"column":42,"offset":3975}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":121,"column":42,"offset":3975},"end":{"line":122,"column":24,"offset":4000}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":122,"column":24,"offset":4000},"end":{"line":122,"column":33,"offset":4009}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":122,"column":33,"offset":4009},"end":{"line":122,"column":107,"offset":4083}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":122,"column":107,"offset":4083},"end":{"line":122,"column":116,"offset":4092}}},{"type":"text","value":" is false because ","position":{"start":{"line":122,"column":116,"offset":4092},"end":{"line":122,"column":134,"offset":4110}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":122,"column":134,"offset":4110},"end":{"line":122,"column":137,"offset":4113}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":122,"column":137,"offset":4113},"end":{"line":122,"column":161,"offset":4137}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":122,"column":161,"offset":4137},"end":{"line":122,"column":167,"offset":4143}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":122,"column":167,"offset":4143},"end":{"line":122,"column":192,"offset":4168}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":122,"column":192,"offset":4168},"end":{"line":122,"column":200,"offset":4176}}},{"type":"text","value":". This is because ","position":{"start":{"line":122,"column":200,"offset":4176},"end":{"line":122,"column":218,"offset":4194}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":122,"column":218,"offset":4194},"end":{"line":122,"column":224,"offset":4200}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":122,"column":224,"offset":4200},"end":{"line":122,"column":245,"offset":4221}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":122,"column":245,"offset":4221},"end":{"line":122,"column":252,"offset":4228}}},{"type":"text","value":" and ","position":{"start":{"line":122,"column":252,"offset":4228},"end":{"line":122,"column":257,"offset":4233}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":122,"column":257,"offset":4233},"end":{"line":122,"column":260,"offset":4236}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":122,"column":260,"offset":4236},"end":{"line":122,"column":285,"offset":4261}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":122,"column":285,"offset":4261},"end":{"line":122,"column":291,"offset":4267}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":122,"column":291,"offset":4267},"end":{"line":123,"column":96,"offset":4393}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":123,"column":96,"offset":4393},"end":{"line":123,"column":111,"offset":4408}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":123,"column":111,"offset":4408},"end":{"line":123,"column":182,"offset":4479}}}],"position":{"start":{"line":115,"column":1,"offset":3599},"end":{"line":123,"column":182,"offset":4479}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":125,"column":8,"offset":4488},"end":{"line":125,"column":19,"offset":4499}}}],"position":{"start":{"line":125,"column":1,"offset":4481},"end":{"line":125,"column":19,"offset":4499}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":126,"column":1,"offset":4500},"end":{"line":126,"column":14,"offset":4513}}}],"position":{"start":{"line":126,"column":1,"offset":4500},"end":{"line":126,"column":14,"offset":4513}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":127,"column":1,"offset":4514},"end":{"line":142,"column":4,"offset":4929}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":143,"column":1,"offset":4930},"end":{"line":143,"column":5,"offset":4934}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":145,"column":1,"offset":4936},"end":{"line":145,"column":141,"offset":5076}}}],"position":{"start":{"line":145,"column":1,"offset":4936},"end":{"line":145,"column":141,"offset":5076}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":147,"column":8,"offset":5085},"end":{"line":147,"column":30,"offset":5107}}}],"position":{"start":{"line":147,"column":1,"offset":5078},"end":{"line":147,"column":30,"offset":5107}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":148,"column":1,"offset":5108},"end":{"line":148,"column":199,"offset":5306}}}],"position":{"start":{"line":148,"column":1,"offset":5108},"end":{"line":148,"column":199,"offset":5306}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":150,"column":8,"offset":5315},"end":{"line":150,"column":30,"offset":5337}}}],"position":{"start":{"line":150,"column":1,"offset":5308},"end":{"line":150,"column":30,"offset":5337}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":152,"column":1,"offset":5339},"end":{"line":153,"column":1,"offset":5414}}},{"type":"raw","value":"<br>","position":{"start":{"line":153,"column":1,"offset":5414},"end":{"line":153,"column":5,"offset":5418}}},{"type":"text","value":"\n","position":{"start":{"line":153,"column":5,"offset":5418},"end":{"line":154,"column":1,"offset":5419}}},{"type":"raw","value":"<br>","position":{"start":{"line":154,"column":1,"offset":5419},"end":{"line":154,"column":5,"offset":5423}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":154,"column":5,"offset":5423},"end":{"line":156,"column":1,"offset":5485}}},{"type":"raw","value":"<br>","position":{"start":{"line":156,"column":1,"offset":5485},"end":{"line":156,"column":5,"offset":5489}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":156,"column":5,"offset":5489},"end":{"line":157,"column":1,"offset":5492}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":157,"column":1,"offset":5492},"end":{"line":157,"column":11,"offset":5502}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":157,"column":11,"offset":5502},"end":{"line":157,"column":19,"offset":5510}}},{"type":"text","value":" and ","position":{"start":{"line":157,"column":19,"offset":5510},"end":{"line":157,"column":24,"offset":5515}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":157,"column":24,"offset":5515},"end":{"line":157,"column":34,"offset":5525}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":157,"column":34,"offset":5525},"end":{"line":158,"column":1,"offset":5574}}},{"type":"raw","value":"<br>","position":{"start":{"line":158,"column":1,"offset":5574},"end":{"line":158,"column":5,"offset":5578}}}],"position":{"start":{"line":152,"column":1,"offset":5339},"end":{"line":158,"column":5,"offset":5578}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":160,"column":8,"offset":5587},"end":{"line":160,"column":12,"offset":5591}}}],"position":{"start":{"line":160,"column":1,"offset":5580},"end":{"line":160,"column":12,"offset":5591}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":161,"column":1,"offset":5592},"end":{"line":166,"column":4,"offset":5703}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":167,"column":1,"offset":5704},"end":{"line":168,"column":5,"offset":5713}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":170,"column":1,"offset":5715},"end":{"line":170,"column":7,"offset":5721}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":170,"column":7,"offset":5721},"end":{"line":172,"column":1,"offset":5803}}},{"type":"raw","value":"<br>","position":{"start":{"line":172,"column":1,"offset":5803},"end":{"line":172,"column":5,"offset":5807}}},{"type":"text","value":"\n","position":{"start":{"line":172,"column":5,"offset":5807},"end":{"line":173,"column":1,"offset":5808}}},{"type":"raw","value":"<br>","position":{"start":{"line":173,"column":1,"offset":5808},"end":{"line":173,"column":5,"offset":5812}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":173,"column":5,"offset":5812},"end":{"line":174,"column":10,"offset":5822}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":174,"column":10,"offset":5822},"end":{"line":174,"column":14,"offset":5826}}},{"type":"text","value":". Since ","position":{"start":{"line":174,"column":14,"offset":5826},"end":{"line":174,"column":22,"offset":5834}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":174,"column":22,"offset":5834},"end":{"line":174,"column":30,"offset":5842}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":174,"column":30,"offset":5842},"end":{"line":174,"column":50,"offset":5862}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":174,"column":50,"offset":5862},"end":{"line":174,"column":53,"offset":5865}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":174,"column":53,"offset":5865},"end":{"line":174,"column":90,"offset":5902}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":174,"column":90,"offset":5902},"end":{"line":174,"column":96,"offset":5908}}},{"type":"text","value":".\n","position":{"start":{"line":174,"column":96,"offset":5908},"end":{"line":175,"column":1,"offset":5911}}},{"type":"raw","value":"<br>","position":{"start":{"line":175,"column":1,"offset":5911},"end":{"line":175,"column":5,"offset":5915}}},{"type":"text","value":"\n","position":{"start":{"line":175,"column":5,"offset":5915},"end":{"line":176,"column":1,"offset":5916}}},{"type":"raw","value":"<br>","position":{"start":{"line":176,"column":1,"offset":5916},"end":{"line":176,"column":5,"offset":5920}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":176,"column":5,"offset":5920},"end":{"line":177,"column":14,"offset":5934}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":177,"column":14,"offset":5934},"end":{"line":177,"column":18,"offset":5938}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":177,"column":18,"offset":5938},"end":{"line":177,"column":90,"offset":6010}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":177,"column":90,"offset":6010},"end":{"line":177,"column":94,"offset":6014}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":177,"column":94,"offset":6014},"end":{"line":177,"column":125,"offset":6045}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":177,"column":125,"offset":6045},"end":{"line":177,"column":131,"offset":6051}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":177,"column":131,"offset":6051},"end":{"line":178,"column":1,"offset":6066}}},{"type":"raw","value":"<br>","position":{"start":{"line":178,"column":1,"offset":6066},"end":{"line":178,"column":5,"offset":6070}}},{"type":"text","value":"\n","position":{"start":{"line":178,"column":5,"offset":6070},"end":{"line":179,"column":1,"offset":6071}}},{"type":"raw","value":"<br>","position":{"start":{"line":179,"column":1,"offset":6071},"end":{"line":179,"column":5,"offset":6075}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":179,"column":5,"offset":6075},"end":{"line":180,"column":14,"offset":6089}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":180,"column":14,"offset":6089},"end":{"line":180,"column":18,"offset":6093}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":180,"column":18,"offset":6093},"end":{"line":180,"column":37,"offset":6112}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":180,"column":37,"offset":6112},"end":{"line":180,"column":40,"offset":6115}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":180,"column":40,"offset":6115},"end":{"line":180,"column":77,"offset":6152}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":180,"column":77,"offset":6152},"end":{"line":180,"column":81,"offset":6156}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":180,"column":81,"offset":6156},"end":{"line":180,"column":99,"offset":6174}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":180,"column":99,"offset":6174},"end":{"line":180,"column":102,"offset":6177}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":180,"column":102,"offset":6177},"end":{"line":180,"column":133,"offset":6208}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":180,"column":133,"offset":6208},"end":{"line":180,"column":139,"offset":6214}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":180,"column":139,"offset":6214},"end":{"line":180,"column":167,"offset":6242}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":180,"column":167,"offset":6242},"end":{"line":180,"column":171,"offset":6246}}},{"type":"text","value":".\n","position":{"start":{"line":180,"column":171,"offset":6246},"end":{"line":181,"column":1,"offset":6248}}},{"type":"raw","value":"<br>","position":{"start":{"line":181,"column":1,"offset":6248},"end":{"line":181,"column":5,"offset":6252}}},{"type":"text","value":"\n","position":{"start":{"line":181,"column":5,"offset":6252},"end":{"line":182,"column":1,"offset":6253}}},{"type":"raw","value":"<br>","position":{"start":{"line":182,"column":1,"offset":6253},"end":{"line":182,"column":5,"offset":6257}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":182,"column":5,"offset":6257},"end":{"line":184,"column":1,"offset":6277}}},{"type":"raw","value":"<br>","position":{"start":{"line":184,"column":1,"offset":6277},"end":{"line":184,"column":5,"offset":6281}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":184,"column":5,"offset":6281},"end":{"line":185,"column":6,"offset":6287}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":185,"column":6,"offset":6287},"end":{"line":185,"column":12,"offset":6293}}},{"type":"text","value":" does not have an ","position":{"start":{"line":185,"column":12,"offset":6293},"end":{"line":185,"column":30,"offset":6311}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":185,"column":30,"offset":6311},"end":{"line":185,"column":36,"offset":6317}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":185,"column":36,"offset":6317},"end":{"line":185,"column":62,"offset":6343}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":185,"column":62,"offset":6343},"end":{"line":185,"column":75,"offset":6356}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":185,"column":75,"offset":6356},"end":{"line":185,"column":159,"offset":6440}}}],"position":{"start":{"line":170,"column":1,"offset":5715},"end":{"line":185,"column":159,"offset":6440}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":187,"column":8,"offset":6449},"end":{"line":187,"column":41,"offset":6482}}}],"position":{"start":{"line":187,"column":1,"offset":6442},"end":{"line":187,"column":41,"offset":6482}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":188,"column":1,"offset":6483},"end":{"line":193,"column":4,"offset":6558}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":194,"column":1,"offset":6559},"end":{"line":195,"column":1,"offset":6578}}},{"type":"raw","value":"<br>","position":{"start":{"line":195,"column":1,"offset":6578},"end":{"line":195,"column":5,"offset":6582}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":195,"column":5,"offset":6582},"end":{"line":197,"column":5,"offset":6720}}},{"type":"raw","value":"<br>","position":{"start":{"line":197,"column":5,"offset":6720},"end":{"line":197,"column":9,"offset":6724}}},{"type":"text","value":"\n","position":{"start":{"line":197,"column":9,"offset":6724},"end":{"line":198,"column":5,"offset":6729}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":198,"column":5,"offset":6729},"end":{"line":198,"column":27,"offset":6751}}},{"type":"text","value":"\n","position":{"start":{"line":198,"column":27,"offset":6751},"end":{"line":199,"column":5,"offset":6756}}},{"type":"raw","value":"<br>","position":{"start":{"line":199,"column":5,"offset":6756},"end":{"line":199,"column":9,"offset":6760}}},{"type":"text","value":"\n","position":{"start":{"line":199,"column":9,"offset":6760},"end":{"line":200,"column":5,"offset":6765}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":200,"column":5,"offset":6765},"end":{"line":200,"column":12,"offset":6772}}},{"type":"text","value":" and ","position":{"start":{"line":200,"column":12,"offset":6772},"end":{"line":200,"column":17,"offset":6777}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":200,"column":17,"offset":6777},"end":{"line":200,"column":25,"offset":6785}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":200,"column":25,"offset":6785},"end":{"line":200,"column":63,"offset":6823}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":200,"column":63,"offset":6823},"end":{"line":200,"column":66,"offset":6826}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":200,"column":66,"offset":6826},"end":{"line":200,"column":86,"offset":6846}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":200,"column":86,"offset":6846},"end":{"line":200,"column":89,"offset":6849}}},{"type":"text","value":" will be called with ","position":{"start":{"line":200,"column":89,"offset":6849},"end":{"line":200,"column":110,"offset":6870}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":200,"column":110,"offset":6870},"end":{"line":200,"column":119,"offset":6879}}},{"type":"text","value":".\n","position":{"start":{"line":200,"column":119,"offset":6879},"end":{"line":201,"column":1,"offset":6881}}},{"type":"raw","value":"<br>","position":{"start":{"line":201,"column":1,"offset":6881},"end":{"line":201,"column":5,"offset":6885}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":201,"column":5,"offset":6885},"end":{"line":203,"column":1,"offset":6901}}},{"type":"raw","value":"<br>","position":{"start":{"line":203,"column":1,"offset":6901},"end":{"line":203,"column":5,"offset":6905}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":203,"column":5,"offset":6905},"end":{"line":205,"column":5,"offset":7012}}},{"type":"raw","value":"<br>","position":{"start":{"line":205,"column":5,"offset":7012},"end":{"line":205,"column":9,"offset":7016}}},{"type":"text","value":"\n","position":{"start":{"line":205,"column":9,"offset":7016},"end":{"line":206,"column":1,"offset":7017}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":206,"column":1,"offset":7017},"end":{"line":206,"column":23,"offset":7039}}},{"type":"text","value":" turns into ","position":{"start":{"line":206,"column":23,"offset":7039},"end":{"line":206,"column":35,"offset":7051}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":206,"column":35,"offset":7051},"end":{"line":206,"column":61,"offset":7077}}},{"type":"text","value":"\n","position":{"start":{"line":206,"column":61,"offset":7077},"end":{"line":207,"column":1,"offset":7078}}},{"type":"raw","value":"<br>","position":{"start":{"line":207,"column":1,"offset":7078},"end":{"line":207,"column":5,"offset":7082}}},{"type":"text","value":"\nNow ","position":{"start":{"line":207,"column":5,"offset":7082},"end":{"line":208,"column":5,"offset":7087}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":208,"column":5,"offset":7087},"end":{"line":208,"column":8,"offset":7090}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":208,"column":8,"offset":7090},"end":{"line":208,"column":58,"offset":7140}}}],"position":{"start":{"line":194,"column":1,"offset":6559},"end":{"line":208,"column":58,"offset":7140}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":210,"column":1,"offset":7142},"end":{"line":211,"column":1,"offset":7160}}},{"type":"raw","value":"<br>","position":{"start":{"line":211,"column":1,"offset":7160},"end":{"line":211,"column":5,"offset":7164}}}],"position":{"start":{"line":210,"column":1,"offset":7142},"end":{"line":211,"column":5,"offset":7164}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":212,"column":1,"offset":7165},"end":{"line":214,"column":4,"offset":7195}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":215,"column":1,"offset":7196},"end":{"line":215,"column":13,"offset":7208}}}],"position":{"start":{"line":215,"column":1,"offset":7196},"end":{"line":215,"column":13,"offset":7208}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":216,"column":1,"offset":7209},"end":{"line":222,"column":4,"offset":7288}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":223,"column":1,"offset":7289},"end":{"line":223,"column":8,"offset":7296}}}],"position":{"start":{"line":223,"column":1,"offset":7289},"end":{"line":223,"column":8,"offset":7296}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":224,"column":1,"offset":7297},"end":{"line":231,"column":4,"offset":7421}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":232,"column":1,"offset":7422},"end":{"line":233,"column":5,"offset":7431}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":235,"column":1,"offset":7433},"end":{"line":235,"column":11,"offset":7443}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":235,"column":11,"offset":7443},"end":{"line":235,"column":24,"offset":7456}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":235,"column":24,"offset":7456},"end":{"line":235,"column":107,"offset":7539}}}],"position":{"start":{"line":235,"column":1,"offset":7433},"end":{"line":235,"column":107,"offset":7539}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":237,"column":7,"offset":7547},"end":{"line":237,"column":10,"offset":7550}}}],"position":{"start":{"line":237,"column":1,"offset":7541},"end":{"line":237,"column":10,"offset":7550}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":238,"column":7,"offset":7557},"end":{"line":238,"column":10,"offset":7560}}}],"position":{"start":{"line":238,"column":1,"offset":7551},"end":{"line":238,"column":10,"offset":7560}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":240,"column":6,"offset":7567},"end":{"line":240,"column":10,"offset":7571}}}],"position":{"start":{"line":240,"column":1,"offset":7562},"end":{"line":240,"column":10,"offset":7571}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":241,"column":7,"offset":7578},"end":{"line":241,"column":13,"offset":7584}}}],"position":{"start":{"line":241,"column":1,"offset":7572},"end":{"line":241,"column":13,"offset":7584}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":242,"column":1,"offset":7585},"end":{"line":242,"column":49,"offset":7633}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":242,"column":49,"offset":7633},"end":{"line":242,"column":57,"offset":7641}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":242,"column":57,"offset":7641},"end":{"line":242,"column":133,"offset":7717}}}],"position":{"start":{"line":242,"column":1,"offset":7585},"end":{"line":242,"column":133,"offset":7717}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":243,"column":1,"offset":7718},"end":{"line":253,"column":4,"offset":7913}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":254,"column":1,"offset":7914},"end":{"line":254,"column":5,"offset":7918}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":257,"column":1,"offset":7921},"end":{"line":258,"column":1,"offset":8003}}},{"type":"raw","value":"<br>","position":{"start":{"line":258,"column":1,"offset":8003},"end":{"line":258,"column":5,"offset":8007}}},{"type":"text","value":"\n","position":{"start":{"line":258,"column":5,"offset":8007},"end":{"line":259,"column":1,"offset":8008}}},{"type":"raw","value":"<br>","position":{"start":{"line":259,"column":1,"offset":8008},"end":{"line":259,"column":5,"offset":8012}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":259,"column":5,"offset":8012},"end":{"line":260,"column":26,"offset":8038}}}],"position":{"start":{"line":257,"column":1,"offset":7921},"end":{"line":260,"column":26,"offset":8038}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":261,"column":1,"offset":8039},"end":{"line":266,"column":4,"offset":8167}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":267,"column":1,"offset":8168},"end":{"line":267,"column":14,"offset":8181}}}],"position":{"start":{"line":267,"column":1,"offset":8168},"end":{"line":267,"column":14,"offset":8181}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":269,"column":1,"offset":8183},"end":{"line":282,"column":4,"offset":8465}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":284,"column":1,"offset":8467},"end":{"line":285,"column":5,"offset":8476}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":288,"column":7,"offset":8485},"end":{"line":288,"column":13,"offset":8491}}}],"position":{"start":{"line":288,"column":1,"offset":8479},"end":{"line":288,"column":13,"offset":8491}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":288,"column":13,"offset":8491}}}}