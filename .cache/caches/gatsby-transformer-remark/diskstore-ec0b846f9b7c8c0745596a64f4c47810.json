{"expireTime":9007200842250867000,"key":"transformer-remark-markdown-html-ast-e9f5035d9307b50093b9b8ec39f2bbeb-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833}}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847}}},{"type":"raw","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860}}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865}}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879}}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884}}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895}}},{"type":"raw","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900}}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901}}},{"type":"raw","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906}}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911}}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912}}},{"type":"raw","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916}}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043}}},{"type":"raw","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047}}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048}}},{"type":"raw","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052}}},{"type":"text","value":"\nEnvironment: The name-object pairs the interpreter keeps in memory.","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":33,"column":68,"offset":1120}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":33,"column":68,"offset":1120}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Procedures can be used to build ontop of other procedures:\n","position":{"start":{"line":35,"column":1,"offset":1122},"end":{"line":36,"column":1,"offset":1181}}},{"type":"raw","value":"<br>","position":{"start":{"line":36,"column":1,"offset":1181},"end":{"line":36,"column":5,"offset":1185}}},{"type":"text","value":"\n","position":{"start":{"line":36,"column":5,"offset":1185},"end":{"line":37,"column":1,"offset":1186}}},{"type":"raw","value":"<br>","position":{"start":{"line":37,"column":1,"offset":1186},"end":{"line":37,"column":5,"offset":1190}}}],"position":{"start":{"line":35,"column":1,"offset":1122},"end":{"line":37,"column":5,"offset":1190}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":39,"column":7,"offset":1198},"end":{"line":39,"column":10,"offset":1201}}}],"position":{"start":{"line":39,"column":1,"offset":1192},"end":{"line":39,"column":10,"offset":1201}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":40,"column":7,"offset":1208},"end":{"line":40,"column":10,"offset":1211}}}],"position":{"start":{"line":40,"column":1,"offset":1202},"end":{"line":40,"column":10,"offset":1211}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":42,"column":6,"offset":1218},"end":{"line":42,"column":14,"offset":1226}}}],"position":{"start":{"line":42,"column":1,"offset":1213},"end":{"line":42,"column":14,"offset":1226}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":43,"column":7,"offset":1233},"end":{"line":43,"column":10,"offset":1236}}}],"position":{"start":{"line":43,"column":1,"offset":1227},"end":{"line":43,"column":10,"offset":1236}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":45,"column":8,"offset":1245},"end":{"line":45,"column":30,"offset":1267}}}],"position":{"start":{"line":45,"column":1,"offset":1238},"end":{"line":45,"column":30,"offset":1267}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":47,"column":1,"offset":1269},"end":{"line":48,"column":1,"offset":1413}}},{"type":"raw","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1413},"end":{"line":48,"column":5,"offset":1417}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":48,"column":5,"offset":1417},"end":{"line":48,"column":16,"offset":1428}}},{"type":"raw","value":"<br>","position":{"start":{"line":48,"column":16,"offset":1428},"end":{"line":48,"column":20,"offset":1432}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":48,"column":20,"offset":1432},"end":{"line":50,"column":1,"offset":1576}}},{"type":"raw","value":"<br>","position":{"start":{"line":50,"column":1,"offset":1576},"end":{"line":50,"column":5,"offset":1580}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":50,"column":5,"offset":1580},"end":{"line":50,"column":16,"offset":1591}}},{"type":"raw","value":"<br>","position":{"start":{"line":50,"column":16,"offset":1591},"end":{"line":50,"column":20,"offset":1595}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":50,"column":20,"offset":1595},"end":{"line":51,"column":45,"offset":1640}}},{"type":"raw","value":"<br>","position":{"start":{"line":51,"column":45,"offset":1640},"end":{"line":51,"column":49,"offset":1644}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":51,"column":49,"offset":1644},"end":{"line":51,"column":65,"offset":1660}}},{"type":"raw","value":"<br>","position":{"start":{"line":51,"column":65,"offset":1660},"end":{"line":51,"column":69,"offset":1664}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":51,"column":69,"offset":1664},"end":{"line":53,"column":1,"offset":1707}}},{"type":"raw","value":"<br>","position":{"start":{"line":53,"column":1,"offset":1707},"end":{"line":53,"column":5,"offset":1711}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":53,"column":5,"offset":1711},"end":{"line":53,"column":22,"offset":1728}}},{"type":"raw","value":"<br>","position":{"start":{"line":53,"column":22,"offset":1728},"end":{"line":53,"column":26,"offset":1732}}},{"type":"text","value":"\n","position":{"start":{"line":53,"column":26,"offset":1732},"end":{"line":54,"column":1,"offset":1733}}},{"type":"raw","value":"<br>","position":{"start":{"line":54,"column":1,"offset":1733},"end":{"line":54,"column":5,"offset":1737}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":54,"column":5,"offset":1737},"end":{"line":56,"column":1,"offset":1855}}},{"type":"raw","value":"<br>","position":{"start":{"line":56,"column":1,"offset":1855},"end":{"line":56,"column":5,"offset":1859}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":56,"column":5,"offset":1859},"end":{"line":58,"column":1,"offset":1980}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":58,"column":1,"offset":1980},"end":{"line":58,"column":12,"offset":1991}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":58,"column":12,"offset":1991},"end":{"line":58,"column":68,"offset":2047}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":58,"column":68,"offset":2047},"end":{"line":58,"column":79,"offset":2058}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":58,"column":79,"offset":2058},"end":{"line":58,"column":106,"offset":2085}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":58,"column":106,"offset":2085},"end":{"line":58,"column":109,"offset":2088}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":58,"column":109,"offset":2088},"end":{"line":58,"column":189,"offset":2168}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":58,"column":189,"offset":2168},"end":{"line":58,"column":192,"offset":2171}}},{"type":"text","value":" to get 3.","position":{"start":{"line":58,"column":192,"offset":2171},"end":{"line":58,"column":202,"offset":2181}}}],"position":{"start":{"line":47,"column":1,"offset":1269},"end":{"line":58,"column":202,"offset":2181}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":60,"column":8,"offset":2190},"end":{"line":60,"column":14,"offset":2196}}}],"position":{"start":{"line":60,"column":1,"offset":2183},"end":{"line":60,"column":14,"offset":2196}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":61,"column":1,"offset":2197},"end":{"line":61,"column":9,"offset":2205}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":61,"column":9,"offset":2205},"end":{"line":61,"column":73,"offset":2269}}}],"position":{"start":{"line":61,"column":1,"offset":2197},"end":{"line":61,"column":73,"offset":2269}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":62,"column":1,"offset":2270},"end":{"line":65,"column":4,"offset":2309}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":66,"column":1,"offset":2310},"end":{"line":66,"column":5,"offset":2314}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":68,"column":1,"offset":2316},"end":{"line":68,"column":72,"offset":2387}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":68,"column":72,"offset":2387},"end":{"line":68,"column":80,"offset":2395}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":68,"column":80,"offset":2395},"end":{"line":69,"column":1,"offset":2419}}},{"type":"raw","value":"<br>","position":{"start":{"line":69,"column":1,"offset":2419},"end":{"line":69,"column":5,"offset":2423}}},{"type":"text","value":"\n","position":{"start":{"line":69,"column":5,"offset":2423},"end":{"line":70,"column":1,"offset":2424}}},{"type":"raw","value":"<br>","position":{"start":{"line":70,"column":1,"offset":2424},"end":{"line":70,"column":5,"offset":2428}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":70,"column":5,"offset":2428},"end":{"line":71,"column":184,"offset":2612}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":71,"column":184,"offset":2612},"end":{"line":71,"column":187,"offset":2615}}},{"type":"text","value":".\n","position":{"start":{"line":71,"column":187,"offset":2615},"end":{"line":72,"column":1,"offset":2618}}},{"type":"raw","value":"<br>","position":{"start":{"line":72,"column":1,"offset":2618},"end":{"line":72,"column":5,"offset":2622}}},{"type":"text","value":"\n","position":{"start":{"line":72,"column":5,"offset":2622},"end":{"line":73,"column":1,"offset":2623}}},{"type":"raw","value":"<br>","position":{"start":{"line":73,"column":1,"offset":2623},"end":{"line":73,"column":5,"offset":2627}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":73,"column":5,"offset":2627},"end":{"line":74,"column":27,"offset":2654}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":74,"column":27,"offset":2654},"end":{"line":74,"column":35,"offset":2662}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":74,"column":35,"offset":2662},"end":{"line":74,"column":86,"offset":2713}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":74,"column":86,"offset":2713},"end":{"line":74,"column":95,"offset":2722}}},{"type":"text","value":". ","position":{"start":{"line":74,"column":95,"offset":2722},"end":{"line":74,"column":97,"offset":2724}}}],"position":{"start":{"line":68,"column":1,"offset":2316},"end":{"line":74,"column":97,"offset":2724}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":76,"column":1,"offset":2726},"end":{"line":76,"column":6,"offset":2731}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":78,"column":1,"offset":2733},"end":{"line":79,"column":1,"offset":2777}}},{"type":"raw","value":"<br>","position":{"start":{"line":79,"column":1,"offset":2777},"end":{"line":79,"column":5,"offset":2781}}},{"type":"text","value":"\n","position":{"start":{"line":79,"column":5,"offset":2781},"end":{"line":80,"column":1,"offset":2782}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":80,"column":1,"offset":2782},"end":{"line":80,"column":22,"offset":2803}}},{"type":"text","value":"\n","position":{"start":{"line":80,"column":22,"offset":2803},"end":{"line":81,"column":1,"offset":2804}}},{"type":"raw","value":"<br>","position":{"start":{"line":81,"column":1,"offset":2804},"end":{"line":81,"column":5,"offset":2808}}}],"position":{"start":{"line":78,"column":1,"offset":2733},"end":{"line":81,"column":5,"offset":2808}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":83,"column":1,"offset":2810},"end":{"line":83,"column":152,"offset":2961}}}],"position":{"start":{"line":83,"column":1,"offset":2810},"end":{"line":83,"column":152,"offset":2961}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":85,"column":8,"offset":2970},"end":{"line":85,"column":20,"offset":2982}}}],"position":{"start":{"line":85,"column":1,"offset":2963},"end":{"line":85,"column":20,"offset":2982}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":87,"column":1,"offset":2984},"end":{"line":87,"column":56,"offset":3039}}}],"position":{"start":{"line":87,"column":1,"offset":2984},"end":{"line":87,"column":56,"offset":3039}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":88,"column":1,"offset":3040},"end":{"line":93,"column":4,"offset":3131}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":94,"column":1,"offset":3132},"end":{"line":94,"column":5,"offset":3136}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":96,"column":1,"offset":3138},"end":{"line":96,"column":37,"offset":3174}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":96,"column":37,"offset":3174},"end":{"line":96,"column":41,"offset":3178}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":96,"column":41,"offset":3178},"end":{"line":97,"column":1,"offset":3195}}},{"type":"raw","value":"<br>","position":{"start":{"line":97,"column":1,"offset":3195},"end":{"line":97,"column":5,"offset":3199}}},{"type":"text","value":"\n","position":{"start":{"line":97,"column":5,"offset":3199},"end":{"line":98,"column":1,"offset":3200}}},{"type":"raw","value":"<br>","position":{"start":{"line":98,"column":1,"offset":3200},"end":{"line":98,"column":5,"offset":3204}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":98,"column":5,"offset":3204},"end":{"line":99,"column":66,"offset":3270}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":99,"column":66,"offset":3270},"end":{"line":99,"column":89,"offset":3293}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":99,"column":89,"offset":3293},"end":{"line":100,"column":1,"offset":3333}}},{"type":"raw","value":"<br>","position":{"start":{"line":100,"column":1,"offset":3333},"end":{"line":100,"column":5,"offset":3337}}},{"type":"text","value":"\n","position":{"start":{"line":100,"column":5,"offset":3337},"end":{"line":101,"column":1,"offset":3338}}},{"type":"raw","value":"<br>","position":{"start":{"line":101,"column":1,"offset":3338},"end":{"line":101,"column":5,"offset":3342}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":101,"column":5,"offset":3342},"end":{"line":102,"column":21,"offset":3363}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":102,"column":21,"offset":3363},"end":{"line":102,"column":25,"offset":3367}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":102,"column":25,"offset":3367},"end":{"line":103,"column":1,"offset":3421}}},{"type":"raw","value":"<br>","position":{"start":{"line":103,"column":1,"offset":3421},"end":{"line":103,"column":5,"offset":3425}}},{"type":"text","value":"\n","position":{"start":{"line":103,"column":5,"offset":3425},"end":{"line":104,"column":1,"offset":3426}}},{"type":"raw","value":"<br>","position":{"start":{"line":104,"column":1,"offset":3426},"end":{"line":104,"column":5,"offset":3430}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":104,"column":5,"offset":3430},"end":{"line":105,"column":21,"offset":3451}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":105,"column":21,"offset":3451},"end":{"line":105,"column":25,"offset":3455}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":105,"column":25,"offset":3455},"end":{"line":106,"column":1,"offset":3510}}},{"type":"raw","value":"<br>","position":{"start":{"line":106,"column":1,"offset":3510},"end":{"line":106,"column":5,"offset":3514}}},{"type":"text","value":"\n","position":{"start":{"line":106,"column":5,"offset":3514},"end":{"line":107,"column":1,"offset":3515}}},{"type":"raw","value":"<br>","position":{"start":{"line":107,"column":1,"offset":3515},"end":{"line":107,"column":5,"offset":3519}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":107,"column":5,"offset":3519},"end":{"line":108,"column":58,"offset":3577}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":108,"column":58,"offset":3577},"end":{"line":108,"column":61,"offset":3580}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":108,"column":61,"offset":3580},"end":{"line":108,"column":145,"offset":3664}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":108,"column":145,"offset":3664},"end":{"line":108,"column":153,"offset":3672}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":108,"column":153,"offset":3672},"end":{"line":108,"column":178,"offset":3697}}}],"position":{"start":{"line":96,"column":1,"offset":3138},"end":{"line":108,"column":178,"offset":3697}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":110,"column":7,"offset":3705},"end":{"line":110,"column":10,"offset":3708}}}],"position":{"start":{"line":110,"column":1,"offset":3699},"end":{"line":110,"column":10,"offset":3708}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":112,"column":8,"offset":3717},"end":{"line":112,"column":17,"offset":3726}}}],"position":{"start":{"line":112,"column":1,"offset":3710},"end":{"line":112,"column":17,"offset":3726}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":113,"column":1,"offset":3727},"end":{"line":124,"column":4,"offset":3926}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":125,"column":1,"offset":3927},"end":{"line":125,"column":5,"offset":3931}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":127,"column":1,"offset":3933},"end":{"line":128,"column":1,"offset":4149}}},{"type":"raw","value":"<br>","position":{"start":{"line":128,"column":1,"offset":4149},"end":{"line":128,"column":5,"offset":4153}}},{"type":"text","value":"\n","position":{"start":{"line":128,"column":5,"offset":4153},"end":{"line":129,"column":1,"offset":4154}}},{"type":"raw","value":"<br>","position":{"start":{"line":129,"column":1,"offset":4154},"end":{"line":129,"column":5,"offset":4158}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":129,"column":5,"offset":4158},"end":{"line":130,"column":72,"offset":4230}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":130,"column":72,"offset":4230},"end":{"line":130,"column":81,"offset":4239}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":130,"column":81,"offset":4239},"end":{"line":131,"column":1,"offset":4258}}},{"type":"raw","value":"<br>","position":{"start":{"line":131,"column":1,"offset":4258},"end":{"line":131,"column":5,"offset":4262}}},{"type":"text","value":"\n","position":{"start":{"line":131,"column":5,"offset":4262},"end":{"line":132,"column":1,"offset":4263}}},{"type":"raw","value":"<br>","position":{"start":{"line":132,"column":1,"offset":4263},"end":{"line":132,"column":5,"offset":4267}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":132,"column":5,"offset":4267},"end":{"line":133,"column":10,"offset":4277}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":133,"column":10,"offset":4277},"end":{"line":133,"column":16,"offset":4283}}},{"type":"text","value":" gets called with ","position":{"start":{"line":133,"column":16,"offset":4283},"end":{"line":133,"column":34,"offset":4301}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":133,"column":34,"offset":4301},"end":{"line":133,"column":42,"offset":4309}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":133,"column":42,"offset":4309},"end":{"line":134,"column":24,"offset":4334}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":134,"column":24,"offset":4334},"end":{"line":134,"column":33,"offset":4343}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":134,"column":33,"offset":4343},"end":{"line":134,"column":107,"offset":4417}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":134,"column":107,"offset":4417},"end":{"line":134,"column":116,"offset":4426}}},{"type":"text","value":" is false because ","position":{"start":{"line":134,"column":116,"offset":4426},"end":{"line":134,"column":134,"offset":4444}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":134,"column":134,"offset":4444},"end":{"line":134,"column":137,"offset":4447}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":134,"column":137,"offset":4447},"end":{"line":134,"column":161,"offset":4471}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":134,"column":161,"offset":4471},"end":{"line":134,"column":167,"offset":4477}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":134,"column":167,"offset":4477},"end":{"line":134,"column":192,"offset":4502}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":134,"column":192,"offset":4502},"end":{"line":134,"column":200,"offset":4510}}},{"type":"text","value":". This is because ","position":{"start":{"line":134,"column":200,"offset":4510},"end":{"line":134,"column":218,"offset":4528}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":134,"column":218,"offset":4528},"end":{"line":134,"column":224,"offset":4534}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":134,"column":224,"offset":4534},"end":{"line":134,"column":245,"offset":4555}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":134,"column":245,"offset":4555},"end":{"line":134,"column":252,"offset":4562}}},{"type":"text","value":" and ","position":{"start":{"line":134,"column":252,"offset":4562},"end":{"line":134,"column":257,"offset":4567}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":134,"column":257,"offset":4567},"end":{"line":134,"column":260,"offset":4570}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":134,"column":260,"offset":4570},"end":{"line":134,"column":285,"offset":4595}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":134,"column":285,"offset":4595},"end":{"line":134,"column":291,"offset":4601}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":134,"column":291,"offset":4601},"end":{"line":135,"column":96,"offset":4727}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":135,"column":96,"offset":4727},"end":{"line":135,"column":111,"offset":4742}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":135,"column":111,"offset":4742},"end":{"line":135,"column":182,"offset":4813}}}],"position":{"start":{"line":127,"column":1,"offset":3933},"end":{"line":135,"column":182,"offset":4813}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":137,"column":8,"offset":4822},"end":{"line":137,"column":19,"offset":4833}}}],"position":{"start":{"line":137,"column":1,"offset":4815},"end":{"line":137,"column":19,"offset":4833}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":138,"column":1,"offset":4834},"end":{"line":138,"column":14,"offset":4847}}}],"position":{"start":{"line":138,"column":1,"offset":4834},"end":{"line":138,"column":14,"offset":4847}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":139,"column":1,"offset":4848},"end":{"line":154,"column":4,"offset":5263}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":155,"column":1,"offset":5264},"end":{"line":155,"column":5,"offset":5268}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":157,"column":1,"offset":5270},"end":{"line":157,"column":141,"offset":5410}}}],"position":{"start":{"line":157,"column":1,"offset":5270},"end":{"line":157,"column":141,"offset":5410}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":159,"column":8,"offset":5419},"end":{"line":159,"column":30,"offset":5441}}}],"position":{"start":{"line":159,"column":1,"offset":5412},"end":{"line":159,"column":30,"offset":5441}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":160,"column":1,"offset":5442},"end":{"line":160,"column":199,"offset":5640}}}],"position":{"start":{"line":160,"column":1,"offset":5442},"end":{"line":160,"column":199,"offset":5640}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":162,"column":8,"offset":5649},"end":{"line":162,"column":30,"offset":5671}}}],"position":{"start":{"line":162,"column":1,"offset":5642},"end":{"line":162,"column":30,"offset":5671}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":164,"column":1,"offset":5673},"end":{"line":165,"column":1,"offset":5748}}},{"type":"raw","value":"<br>","position":{"start":{"line":165,"column":1,"offset":5748},"end":{"line":165,"column":5,"offset":5752}}},{"type":"text","value":"\n","position":{"start":{"line":165,"column":5,"offset":5752},"end":{"line":166,"column":1,"offset":5753}}},{"type":"raw","value":"<br>","position":{"start":{"line":166,"column":1,"offset":5753},"end":{"line":166,"column":5,"offset":5757}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":166,"column":5,"offset":5757},"end":{"line":168,"column":1,"offset":5819}}},{"type":"raw","value":"<br>","position":{"start":{"line":168,"column":1,"offset":5819},"end":{"line":168,"column":5,"offset":5823}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":168,"column":5,"offset":5823},"end":{"line":169,"column":1,"offset":5826}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":169,"column":1,"offset":5826},"end":{"line":169,"column":11,"offset":5836}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":169,"column":11,"offset":5836},"end":{"line":169,"column":19,"offset":5844}}},{"type":"text","value":" and ","position":{"start":{"line":169,"column":19,"offset":5844},"end":{"line":169,"column":24,"offset":5849}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":169,"column":24,"offset":5849},"end":{"line":169,"column":34,"offset":5859}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":169,"column":34,"offset":5859},"end":{"line":170,"column":1,"offset":5908}}},{"type":"raw","value":"<br>","position":{"start":{"line":170,"column":1,"offset":5908},"end":{"line":170,"column":5,"offset":5912}}}],"position":{"start":{"line":164,"column":1,"offset":5673},"end":{"line":170,"column":5,"offset":5912}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":172,"column":8,"offset":5921},"end":{"line":172,"column":12,"offset":5925}}}],"position":{"start":{"line":172,"column":1,"offset":5914},"end":{"line":172,"column":12,"offset":5925}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":173,"column":1,"offset":5926},"end":{"line":178,"column":4,"offset":6037}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":179,"column":1,"offset":6038},"end":{"line":180,"column":5,"offset":6047}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":182,"column":1,"offset":6049},"end":{"line":182,"column":7,"offset":6055}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":182,"column":7,"offset":6055},"end":{"line":184,"column":1,"offset":6137}}},{"type":"raw","value":"<br>","position":{"start":{"line":184,"column":1,"offset":6137},"end":{"line":184,"column":5,"offset":6141}}},{"type":"text","value":"\n","position":{"start":{"line":184,"column":5,"offset":6141},"end":{"line":185,"column":1,"offset":6142}}},{"type":"raw","value":"<br>","position":{"start":{"line":185,"column":1,"offset":6142},"end":{"line":185,"column":5,"offset":6146}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":185,"column":5,"offset":6146},"end":{"line":186,"column":10,"offset":6156}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":186,"column":10,"offset":6156},"end":{"line":186,"column":14,"offset":6160}}},{"type":"text","value":". Since ","position":{"start":{"line":186,"column":14,"offset":6160},"end":{"line":186,"column":22,"offset":6168}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":186,"column":22,"offset":6168},"end":{"line":186,"column":30,"offset":6176}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":186,"column":30,"offset":6176},"end":{"line":186,"column":50,"offset":6196}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":186,"column":50,"offset":6196},"end":{"line":186,"column":53,"offset":6199}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":186,"column":53,"offset":6199},"end":{"line":186,"column":90,"offset":6236}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":186,"column":90,"offset":6236},"end":{"line":186,"column":96,"offset":6242}}},{"type":"text","value":".\n","position":{"start":{"line":186,"column":96,"offset":6242},"end":{"line":187,"column":1,"offset":6245}}},{"type":"raw","value":"<br>","position":{"start":{"line":187,"column":1,"offset":6245},"end":{"line":187,"column":5,"offset":6249}}},{"type":"text","value":"\n","position":{"start":{"line":187,"column":5,"offset":6249},"end":{"line":188,"column":1,"offset":6250}}},{"type":"raw","value":"<br>","position":{"start":{"line":188,"column":1,"offset":6250},"end":{"line":188,"column":5,"offset":6254}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":188,"column":5,"offset":6254},"end":{"line":189,"column":14,"offset":6268}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":189,"column":14,"offset":6268},"end":{"line":189,"column":18,"offset":6272}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":189,"column":18,"offset":6272},"end":{"line":189,"column":90,"offset":6344}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":189,"column":90,"offset":6344},"end":{"line":189,"column":94,"offset":6348}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":189,"column":94,"offset":6348},"end":{"line":189,"column":125,"offset":6379}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":189,"column":125,"offset":6379},"end":{"line":189,"column":131,"offset":6385}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":189,"column":131,"offset":6385},"end":{"line":190,"column":1,"offset":6400}}},{"type":"raw","value":"<br>","position":{"start":{"line":190,"column":1,"offset":6400},"end":{"line":190,"column":5,"offset":6404}}},{"type":"text","value":"\n","position":{"start":{"line":190,"column":5,"offset":6404},"end":{"line":191,"column":1,"offset":6405}}},{"type":"raw","value":"<br>","position":{"start":{"line":191,"column":1,"offset":6405},"end":{"line":191,"column":5,"offset":6409}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":191,"column":5,"offset":6409},"end":{"line":192,"column":14,"offset":6423}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":192,"column":14,"offset":6423},"end":{"line":192,"column":18,"offset":6427}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":192,"column":18,"offset":6427},"end":{"line":192,"column":37,"offset":6446}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":192,"column":37,"offset":6446},"end":{"line":192,"column":40,"offset":6449}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":192,"column":40,"offset":6449},"end":{"line":192,"column":77,"offset":6486}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":192,"column":77,"offset":6486},"end":{"line":192,"column":81,"offset":6490}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":192,"column":81,"offset":6490},"end":{"line":192,"column":99,"offset":6508}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":192,"column":99,"offset":6508},"end":{"line":192,"column":102,"offset":6511}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":192,"column":102,"offset":6511},"end":{"line":192,"column":133,"offset":6542}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":192,"column":133,"offset":6542},"end":{"line":192,"column":139,"offset":6548}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":192,"column":139,"offset":6548},"end":{"line":192,"column":167,"offset":6576}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":192,"column":167,"offset":6576},"end":{"line":192,"column":171,"offset":6580}}},{"type":"text","value":".\n","position":{"start":{"line":192,"column":171,"offset":6580},"end":{"line":193,"column":1,"offset":6582}}},{"type":"raw","value":"<br>","position":{"start":{"line":193,"column":1,"offset":6582},"end":{"line":193,"column":5,"offset":6586}}},{"type":"text","value":"\n","position":{"start":{"line":193,"column":5,"offset":6586},"end":{"line":194,"column":1,"offset":6587}}},{"type":"raw","value":"<br>","position":{"start":{"line":194,"column":1,"offset":6587},"end":{"line":194,"column":5,"offset":6591}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":194,"column":5,"offset":6591},"end":{"line":196,"column":1,"offset":6611}}},{"type":"raw","value":"<br>","position":{"start":{"line":196,"column":1,"offset":6611},"end":{"line":196,"column":5,"offset":6615}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":196,"column":5,"offset":6615},"end":{"line":197,"column":6,"offset":6621}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":197,"column":6,"offset":6621},"end":{"line":197,"column":12,"offset":6627}}},{"type":"text","value":" does not have an ","position":{"start":{"line":197,"column":12,"offset":6627},"end":{"line":197,"column":30,"offset":6645}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":197,"column":30,"offset":6645},"end":{"line":197,"column":36,"offset":6651}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":197,"column":36,"offset":6651},"end":{"line":197,"column":62,"offset":6677}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":197,"column":62,"offset":6677},"end":{"line":197,"column":75,"offset":6690}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":197,"column":75,"offset":6690},"end":{"line":197,"column":159,"offset":6774}}}],"position":{"start":{"line":182,"column":1,"offset":6049},"end":{"line":197,"column":159,"offset":6774}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":199,"column":8,"offset":6783},"end":{"line":199,"column":41,"offset":6816}}}],"position":{"start":{"line":199,"column":1,"offset":6776},"end":{"line":199,"column":41,"offset":6816}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":200,"column":1,"offset":6817},"end":{"line":205,"column":4,"offset":6892}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":206,"column":1,"offset":6893},"end":{"line":207,"column":1,"offset":6912}}},{"type":"raw","value":"<br>","position":{"start":{"line":207,"column":1,"offset":6912},"end":{"line":207,"column":5,"offset":6916}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":207,"column":5,"offset":6916},"end":{"line":209,"column":5,"offset":7054}}},{"type":"raw","value":"<br>","position":{"start":{"line":209,"column":5,"offset":7054},"end":{"line":209,"column":9,"offset":7058}}},{"type":"text","value":"\n","position":{"start":{"line":209,"column":9,"offset":7058},"end":{"line":210,"column":5,"offset":7063}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":210,"column":5,"offset":7063},"end":{"line":210,"column":27,"offset":7085}}},{"type":"text","value":"\n","position":{"start":{"line":210,"column":27,"offset":7085},"end":{"line":211,"column":5,"offset":7090}}},{"type":"raw","value":"<br>","position":{"start":{"line":211,"column":5,"offset":7090},"end":{"line":211,"column":9,"offset":7094}}},{"type":"text","value":"\n","position":{"start":{"line":211,"column":9,"offset":7094},"end":{"line":212,"column":5,"offset":7099}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":212,"column":5,"offset":7099},"end":{"line":212,"column":12,"offset":7106}}},{"type":"text","value":" and ","position":{"start":{"line":212,"column":12,"offset":7106},"end":{"line":212,"column":17,"offset":7111}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":212,"column":17,"offset":7111},"end":{"line":212,"column":25,"offset":7119}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":212,"column":25,"offset":7119},"end":{"line":212,"column":63,"offset":7157}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":212,"column":63,"offset":7157},"end":{"line":212,"column":66,"offset":7160}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":212,"column":66,"offset":7160},"end":{"line":212,"column":86,"offset":7180}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":212,"column":86,"offset":7180},"end":{"line":212,"column":89,"offset":7183}}},{"type":"text","value":" will be called with ","position":{"start":{"line":212,"column":89,"offset":7183},"end":{"line":212,"column":110,"offset":7204}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":212,"column":110,"offset":7204},"end":{"line":212,"column":119,"offset":7213}}},{"type":"text","value":".\n","position":{"start":{"line":212,"column":119,"offset":7213},"end":{"line":213,"column":1,"offset":7215}}},{"type":"raw","value":"<br>","position":{"start":{"line":213,"column":1,"offset":7215},"end":{"line":213,"column":5,"offset":7219}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":213,"column":5,"offset":7219},"end":{"line":215,"column":1,"offset":7235}}},{"type":"raw","value":"<br>","position":{"start":{"line":215,"column":1,"offset":7235},"end":{"line":215,"column":5,"offset":7239}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":215,"column":5,"offset":7239},"end":{"line":217,"column":5,"offset":7346}}},{"type":"raw","value":"<br>","position":{"start":{"line":217,"column":5,"offset":7346},"end":{"line":217,"column":9,"offset":7350}}},{"type":"text","value":"\n","position":{"start":{"line":217,"column":9,"offset":7350},"end":{"line":218,"column":1,"offset":7351}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":218,"column":1,"offset":7351},"end":{"line":218,"column":23,"offset":7373}}},{"type":"text","value":" turns into ","position":{"start":{"line":218,"column":23,"offset":7373},"end":{"line":218,"column":35,"offset":7385}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":218,"column":35,"offset":7385},"end":{"line":218,"column":61,"offset":7411}}},{"type":"text","value":"\n","position":{"start":{"line":218,"column":61,"offset":7411},"end":{"line":219,"column":1,"offset":7412}}},{"type":"raw","value":"<br>","position":{"start":{"line":219,"column":1,"offset":7412},"end":{"line":219,"column":5,"offset":7416}}},{"type":"text","value":"\nNow ","position":{"start":{"line":219,"column":5,"offset":7416},"end":{"line":220,"column":5,"offset":7421}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":220,"column":5,"offset":7421},"end":{"line":220,"column":8,"offset":7424}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":220,"column":8,"offset":7424},"end":{"line":220,"column":58,"offset":7474}}}],"position":{"start":{"line":206,"column":1,"offset":6893},"end":{"line":220,"column":58,"offset":7474}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":222,"column":1,"offset":7476},"end":{"line":223,"column":1,"offset":7494}}},{"type":"raw","value":"<br>","position":{"start":{"line":223,"column":1,"offset":7494},"end":{"line":223,"column":5,"offset":7498}}}],"position":{"start":{"line":222,"column":1,"offset":7476},"end":{"line":223,"column":5,"offset":7498}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":224,"column":1,"offset":7499},"end":{"line":226,"column":4,"offset":7529}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":227,"column":1,"offset":7530},"end":{"line":227,"column":13,"offset":7542}}}],"position":{"start":{"line":227,"column":1,"offset":7530},"end":{"line":227,"column":13,"offset":7542}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":228,"column":1,"offset":7543},"end":{"line":234,"column":4,"offset":7622}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":235,"column":1,"offset":7623},"end":{"line":235,"column":8,"offset":7630}}}],"position":{"start":{"line":235,"column":1,"offset":7623},"end":{"line":235,"column":8,"offset":7630}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":236,"column":1,"offset":7631},"end":{"line":243,"column":4,"offset":7755}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":244,"column":1,"offset":7756},"end":{"line":245,"column":5,"offset":7765}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":247,"column":1,"offset":7767},"end":{"line":247,"column":11,"offset":7777}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":247,"column":11,"offset":7777},"end":{"line":247,"column":24,"offset":7790}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":247,"column":24,"offset":7790},"end":{"line":247,"column":107,"offset":7873}}}],"position":{"start":{"line":247,"column":1,"offset":7767},"end":{"line":247,"column":107,"offset":7873}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":249,"column":7,"offset":7881},"end":{"line":249,"column":10,"offset":7884}}}],"position":{"start":{"line":249,"column":1,"offset":7875},"end":{"line":249,"column":10,"offset":7884}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":250,"column":7,"offset":7891},"end":{"line":250,"column":10,"offset":7894}}}],"position":{"start":{"line":250,"column":1,"offset":7885},"end":{"line":250,"column":10,"offset":7894}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":252,"column":6,"offset":7901},"end":{"line":252,"column":10,"offset":7905}}}],"position":{"start":{"line":252,"column":1,"offset":7896},"end":{"line":252,"column":10,"offset":7905}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":253,"column":7,"offset":7912},"end":{"line":253,"column":13,"offset":7918}}}],"position":{"start":{"line":253,"column":1,"offset":7906},"end":{"line":253,"column":13,"offset":7918}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":254,"column":1,"offset":7919},"end":{"line":254,"column":49,"offset":7967}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":254,"column":49,"offset":7967},"end":{"line":254,"column":57,"offset":7975}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":254,"column":57,"offset":7975},"end":{"line":254,"column":133,"offset":8051}}}],"position":{"start":{"line":254,"column":1,"offset":7919},"end":{"line":254,"column":133,"offset":8051}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":255,"column":1,"offset":8052},"end":{"line":265,"column":4,"offset":8247}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":266,"column":1,"offset":8248},"end":{"line":266,"column":5,"offset":8252}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":269,"column":1,"offset":8255},"end":{"line":270,"column":1,"offset":8337}}},{"type":"raw","value":"<br>","position":{"start":{"line":270,"column":1,"offset":8337},"end":{"line":270,"column":5,"offset":8341}}},{"type":"text","value":"\n","position":{"start":{"line":270,"column":5,"offset":8341},"end":{"line":271,"column":1,"offset":8342}}},{"type":"raw","value":"<br>","position":{"start":{"line":271,"column":1,"offset":8342},"end":{"line":271,"column":5,"offset":8346}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":271,"column":5,"offset":8346},"end":{"line":272,"column":26,"offset":8372}}}],"position":{"start":{"line":269,"column":1,"offset":8255},"end":{"line":272,"column":26,"offset":8372}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":273,"column":1,"offset":8373},"end":{"line":278,"column":4,"offset":8501}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":279,"column":1,"offset":8502},"end":{"line":279,"column":14,"offset":8515}}}],"position":{"start":{"line":279,"column":1,"offset":8502},"end":{"line":279,"column":14,"offset":8515}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":281,"column":1,"offset":8517},"end":{"line":294,"column":4,"offset":8799}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":296,"column":1,"offset":8801},"end":{"line":297,"column":5,"offset":8810}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":300,"column":7,"offset":8819},"end":{"line":300,"column":13,"offset":8825}}}],"position":{"start":{"line":300,"column":1,"offset":8813},"end":{"line":300,"column":13,"offset":8825}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":300,"column":13,"offset":8825}}}}