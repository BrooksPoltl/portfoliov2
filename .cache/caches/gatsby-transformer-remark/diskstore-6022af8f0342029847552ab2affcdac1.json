{"expireTime":9007200842251011000,"key":"transformer-remark-markdown-ast-dee5cb09227a11c8de24b922b7e275e7-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632},"indent":[]}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities. \n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705},"indent":[]}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791},"indent":[]}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833},"indent":[]}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865},"indent":[]}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884},"indent":[]}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916},"indent":[]}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052},"indent":[]}},{"type":"text","value":"\nEnvironment: The name-object pairs the interpreter keeps in memory.\n","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":34,"column":1,"offset":1121},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1121},"end":{"line":34,"column":5,"offset":1125},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":34,"column":5,"offset":1125},"end":{"line":35,"column":1,"offset":1126},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":35,"column":1,"offset":1126},"end":{"line":35,"column":5,"offset":1130},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":35,"column":5,"offset":1130},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Procedures can be used to build ontop of other procedures:\n","position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":1,"offset":1191},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1191},"end":{"line":38,"column":5,"offset":1195},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":5,"offset":1195},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (sum-of-squares x y)\n(+ (square x) (square y))</code></pre></div>","position":{"start":{"line":39,"column":1,"offset":1196},"end":{"line":42,"column":4,"offset":1258},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1260},"end":{"line":44,"column":5,"offset":1264},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":46,"column":7,"offset":1272},"end":{"line":46,"column":10,"offset":1275},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":1266},"end":{"line":46,"column":10,"offset":1275},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":47,"column":7,"offset":1282},"end":{"line":47,"column":10,"offset":1285},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1276},"end":{"line":47,"column":10,"offset":1285},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":49,"column":6,"offset":1292},"end":{"line":49,"column":14,"offset":1300},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1287},"end":{"line":49,"column":14,"offset":1300},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":50,"column":7,"offset":1307},"end":{"line":50,"column":10,"offset":1310},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1301},"end":{"line":50,"column":10,"offset":1310},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":52,"column":8,"offset":1319},"end":{"line":52,"column":30,"offset":1341},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1312},"end":{"line":52,"column":30,"offset":1341},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":54,"column":1,"offset":1343},"end":{"line":55,"column":1,"offset":1487},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":55,"column":1,"offset":1487},"end":{"line":55,"column":5,"offset":1491},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":55,"column":5,"offset":1491},"end":{"line":55,"column":16,"offset":1502},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":55,"column":16,"offset":1502},"end":{"line":55,"column":20,"offset":1506},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":55,"column":20,"offset":1506},"end":{"line":57,"column":1,"offset":1650},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":57,"column":1,"offset":1650},"end":{"line":57,"column":5,"offset":1654},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":57,"column":5,"offset":1654},"end":{"line":57,"column":16,"offset":1665},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":57,"column":16,"offset":1665},"end":{"line":57,"column":20,"offset":1669},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":57,"column":20,"offset":1669},"end":{"line":58,"column":45,"offset":1714},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":58,"column":45,"offset":1714},"end":{"line":58,"column":49,"offset":1718},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":58,"column":49,"offset":1718},"end":{"line":58,"column":65,"offset":1734},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":58,"column":65,"offset":1734},"end":{"line":58,"column":69,"offset":1738},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":58,"column":69,"offset":1738},"end":{"line":60,"column":1,"offset":1781},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":60,"column":1,"offset":1781},"end":{"line":60,"column":5,"offset":1785},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":60,"column":5,"offset":1785},"end":{"line":60,"column":22,"offset":1802},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":60,"column":22,"offset":1802},"end":{"line":60,"column":26,"offset":1806},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":60,"column":26,"offset":1806},"end":{"line":61,"column":1,"offset":1807},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":61,"column":1,"offset":1807},"end":{"line":61,"column":5,"offset":1811},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":61,"column":5,"offset":1811},"end":{"line":63,"column":1,"offset":1929},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":63,"column":1,"offset":1929},"end":{"line":63,"column":5,"offset":1933},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":63,"column":5,"offset":1933},"end":{"line":65,"column":1,"offset":2054},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":65,"column":1,"offset":2054},"end":{"line":65,"column":12,"offset":2065},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":65,"column":12,"offset":2065},"end":{"line":65,"column":68,"offset":2121},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":65,"column":68,"offset":2121},"end":{"line":65,"column":79,"offset":2132},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":65,"column":79,"offset":2132},"end":{"line":65,"column":106,"offset":2159},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":65,"column":106,"offset":2159},"end":{"line":65,"column":109,"offset":2162},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":65,"column":109,"offset":2162},"end":{"line":65,"column":189,"offset":2242},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":65,"column":189,"offset":2242},"end":{"line":65,"column":192,"offset":2245},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":65,"column":192,"offset":2245},"end":{"line":65,"column":202,"offset":2255},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1343},"end":{"line":65,"column":202,"offset":2255},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":67,"column":8,"offset":2264},"end":{"line":67,"column":14,"offset":2270},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":2257},"end":{"line":67,"column":14,"offset":2270},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":68,"column":1,"offset":2271},"end":{"line":68,"column":9,"offset":2279},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":68,"column":9,"offset":2279},"end":{"line":68,"column":73,"offset":2343},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":2271},"end":{"line":68,"column":73,"offset":2343},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":69,"column":1,"offset":2344},"end":{"line":72,"column":4,"offset":2383},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":73,"column":1,"offset":2384},"end":{"line":73,"column":5,"offset":2388},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":75,"column":1,"offset":2390},"end":{"line":75,"column":72,"offset":2461},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":75,"column":72,"offset":2461},"end":{"line":75,"column":80,"offset":2469},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":75,"column":80,"offset":2469},"end":{"line":76,"column":1,"offset":2493},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":76,"column":1,"offset":2493},"end":{"line":76,"column":5,"offset":2497},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":76,"column":5,"offset":2497},"end":{"line":77,"column":1,"offset":2498},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":77,"column":1,"offset":2498},"end":{"line":77,"column":5,"offset":2502},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":77,"column":5,"offset":2502},"end":{"line":78,"column":184,"offset":2686},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":78,"column":184,"offset":2686},"end":{"line":78,"column":187,"offset":2689},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":78,"column":187,"offset":2689},"end":{"line":79,"column":1,"offset":2692},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":79,"column":1,"offset":2692},"end":{"line":79,"column":5,"offset":2696},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":79,"column":5,"offset":2696},"end":{"line":80,"column":1,"offset":2697},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":80,"column":1,"offset":2697},"end":{"line":80,"column":5,"offset":2701},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":80,"column":5,"offset":2701},"end":{"line":81,"column":27,"offset":2728},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":81,"column":27,"offset":2728},"end":{"line":81,"column":35,"offset":2736},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":81,"column":35,"offset":2736},"end":{"line":81,"column":86,"offset":2787},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":81,"column":86,"offset":2787},"end":{"line":81,"column":95,"offset":2796},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":81,"column":95,"offset":2796},"end":{"line":81,"column":97,"offset":2798},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":2390},"end":{"line":81,"column":97,"offset":2798},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":83,"column":1,"offset":2800},"end":{"line":83,"column":6,"offset":2805},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":85,"column":1,"offset":2807},"end":{"line":86,"column":1,"offset":2851},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":86,"column":1,"offset":2851},"end":{"line":86,"column":5,"offset":2855},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":86,"column":5,"offset":2855},"end":{"line":87,"column":1,"offset":2856},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":87,"column":1,"offset":2856},"end":{"line":87,"column":22,"offset":2877},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":87,"column":22,"offset":2877},"end":{"line":88,"column":1,"offset":2878},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":88,"column":1,"offset":2878},"end":{"line":88,"column":5,"offset":2882},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":2807},"end":{"line":88,"column":5,"offset":2882},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":90,"column":1,"offset":2884},"end":{"line":90,"column":152,"offset":3035},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":2884},"end":{"line":90,"column":152,"offset":3035},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":92,"column":8,"offset":3044},"end":{"line":92,"column":20,"offset":3056},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":3037},"end":{"line":92,"column":20,"offset":3056},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":94,"column":1,"offset":3058},"end":{"line":94,"column":56,"offset":3113},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":3058},"end":{"line":94,"column":56,"offset":3113},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":95,"column":1,"offset":3114},"end":{"line":100,"column":4,"offset":3205},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":101,"column":1,"offset":3206},"end":{"line":101,"column":5,"offset":3210},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":103,"column":1,"offset":3212},"end":{"line":103,"column":37,"offset":3248},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":103,"column":37,"offset":3248},"end":{"line":103,"column":41,"offset":3252},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":103,"column":41,"offset":3252},"end":{"line":104,"column":1,"offset":3269},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":104,"column":1,"offset":3269},"end":{"line":104,"column":5,"offset":3273},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":104,"column":5,"offset":3273},"end":{"line":105,"column":1,"offset":3274},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":105,"column":1,"offset":3274},"end":{"line":105,"column":5,"offset":3278},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":105,"column":5,"offset":3278},"end":{"line":106,"column":66,"offset":3344},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":106,"column":66,"offset":3344},"end":{"line":106,"column":89,"offset":3367},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":106,"column":89,"offset":3367},"end":{"line":107,"column":1,"offset":3407},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":107,"column":1,"offset":3407},"end":{"line":107,"column":5,"offset":3411},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":107,"column":5,"offset":3411},"end":{"line":108,"column":1,"offset":3412},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":108,"column":1,"offset":3412},"end":{"line":108,"column":5,"offset":3416},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":108,"column":5,"offset":3416},"end":{"line":109,"column":21,"offset":3437},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":109,"column":21,"offset":3437},"end":{"line":109,"column":25,"offset":3441},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":109,"column":25,"offset":3441},"end":{"line":110,"column":1,"offset":3495},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":110,"column":1,"offset":3495},"end":{"line":110,"column":5,"offset":3499},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":110,"column":5,"offset":3499},"end":{"line":111,"column":1,"offset":3500},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":111,"column":1,"offset":3500},"end":{"line":111,"column":5,"offset":3504},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":111,"column":5,"offset":3504},"end":{"line":112,"column":21,"offset":3525},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":112,"column":21,"offset":3525},"end":{"line":112,"column":25,"offset":3529},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":112,"column":25,"offset":3529},"end":{"line":113,"column":1,"offset":3584},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":113,"column":1,"offset":3584},"end":{"line":113,"column":5,"offset":3588},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":113,"column":5,"offset":3588},"end":{"line":114,"column":1,"offset":3589},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":114,"column":1,"offset":3589},"end":{"line":114,"column":5,"offset":3593},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":114,"column":5,"offset":3593},"end":{"line":115,"column":58,"offset":3651},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":115,"column":58,"offset":3651},"end":{"line":115,"column":61,"offset":3654},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":115,"column":61,"offset":3654},"end":{"line":115,"column":145,"offset":3738},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":115,"column":145,"offset":3738},"end":{"line":115,"column":153,"offset":3746},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":115,"column":153,"offset":3746},"end":{"line":115,"column":178,"offset":3771},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":3212},"end":{"line":115,"column":178,"offset":3771},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":117,"column":7,"offset":3779},"end":{"line":117,"column":10,"offset":3782},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":3773},"end":{"line":117,"column":10,"offset":3782},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":119,"column":8,"offset":3791},"end":{"line":119,"column":17,"offset":3800},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":3784},"end":{"line":119,"column":17,"offset":3800},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":120,"column":1,"offset":3801},"end":{"line":131,"column":4,"offset":4000},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":132,"column":1,"offset":4001},"end":{"line":132,"column":5,"offset":4005},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":134,"column":1,"offset":4007},"end":{"line":135,"column":1,"offset":4223},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":135,"column":1,"offset":4223},"end":{"line":135,"column":5,"offset":4227},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":135,"column":5,"offset":4227},"end":{"line":136,"column":1,"offset":4228},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":136,"column":1,"offset":4228},"end":{"line":136,"column":5,"offset":4232},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":136,"column":5,"offset":4232},"end":{"line":137,"column":72,"offset":4304},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":137,"column":72,"offset":4304},"end":{"line":137,"column":81,"offset":4313},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":137,"column":81,"offset":4313},"end":{"line":138,"column":1,"offset":4332},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":138,"column":1,"offset":4332},"end":{"line":138,"column":5,"offset":4336},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":138,"column":5,"offset":4336},"end":{"line":139,"column":1,"offset":4337},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":139,"column":1,"offset":4337},"end":{"line":139,"column":5,"offset":4341},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":139,"column":5,"offset":4341},"end":{"line":140,"column":10,"offset":4351},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":140,"column":10,"offset":4351},"end":{"line":140,"column":16,"offset":4357},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":140,"column":16,"offset":4357},"end":{"line":140,"column":34,"offset":4375},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":140,"column":34,"offset":4375},"end":{"line":140,"column":42,"offset":4383},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":140,"column":42,"offset":4383},"end":{"line":141,"column":24,"offset":4408},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":141,"column":24,"offset":4408},"end":{"line":141,"column":33,"offset":4417},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":141,"column":33,"offset":4417},"end":{"line":141,"column":107,"offset":4491},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":141,"column":107,"offset":4491},"end":{"line":141,"column":116,"offset":4500},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":141,"column":116,"offset":4500},"end":{"line":141,"column":134,"offset":4518},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":141,"column":134,"offset":4518},"end":{"line":141,"column":137,"offset":4521},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":141,"column":137,"offset":4521},"end":{"line":141,"column":161,"offset":4545},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":141,"column":161,"offset":4545},"end":{"line":141,"column":167,"offset":4551},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":141,"column":167,"offset":4551},"end":{"line":141,"column":192,"offset":4576},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":141,"column":192,"offset":4576},"end":{"line":141,"column":200,"offset":4584},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":141,"column":200,"offset":4584},"end":{"line":141,"column":218,"offset":4602},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":141,"column":218,"offset":4602},"end":{"line":141,"column":224,"offset":4608},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":141,"column":224,"offset":4608},"end":{"line":141,"column":245,"offset":4629},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":141,"column":245,"offset":4629},"end":{"line":141,"column":252,"offset":4636},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":141,"column":252,"offset":4636},"end":{"line":141,"column":257,"offset":4641},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":141,"column":257,"offset":4641},"end":{"line":141,"column":260,"offset":4644},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":141,"column":260,"offset":4644},"end":{"line":141,"column":285,"offset":4669},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":141,"column":285,"offset":4669},"end":{"line":141,"column":291,"offset":4675},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":141,"column":291,"offset":4675},"end":{"line":142,"column":96,"offset":4801},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":142,"column":96,"offset":4801},"end":{"line":142,"column":111,"offset":4816},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":142,"column":111,"offset":4816},"end":{"line":142,"column":182,"offset":4887},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":4007},"end":{"line":142,"column":182,"offset":4887},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":144,"column":8,"offset":4896},"end":{"line":144,"column":19,"offset":4907},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":4889},"end":{"line":144,"column":19,"offset":4907},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":145,"column":1,"offset":4908},"end":{"line":145,"column":14,"offset":4921},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":4908},"end":{"line":145,"column":14,"offset":4921},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":146,"column":1,"offset":4922},"end":{"line":161,"column":4,"offset":5337},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":162,"column":1,"offset":5338},"end":{"line":162,"column":5,"offset":5342},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":164,"column":1,"offset":5344},"end":{"line":164,"column":141,"offset":5484},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":5344},"end":{"line":164,"column":141,"offset":5484},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":166,"column":8,"offset":5493},"end":{"line":166,"column":30,"offset":5515},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":5486},"end":{"line":166,"column":30,"offset":5515},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":167,"column":1,"offset":5516},"end":{"line":167,"column":199,"offset":5714},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":5516},"end":{"line":167,"column":199,"offset":5714},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":169,"column":8,"offset":5723},"end":{"line":169,"column":30,"offset":5745},"indent":[]}}],"position":{"start":{"line":169,"column":1,"offset":5716},"end":{"line":169,"column":30,"offset":5745},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":171,"column":1,"offset":5747},"end":{"line":172,"column":1,"offset":5822},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":172,"column":1,"offset":5822},"end":{"line":172,"column":5,"offset":5826},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":172,"column":5,"offset":5826},"end":{"line":173,"column":1,"offset":5827},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":173,"column":1,"offset":5827},"end":{"line":173,"column":5,"offset":5831},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":173,"column":5,"offset":5831},"end":{"line":175,"column":1,"offset":5893},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":175,"column":1,"offset":5893},"end":{"line":175,"column":5,"offset":5897},"indent":[]}},{"type":"break","position":{"start":{"line":175,"column":5,"offset":5897},"end":{"line":176,"column":1,"offset":5900},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":176,"column":1,"offset":5900},"end":{"line":176,"column":11,"offset":5910},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":176,"column":11,"offset":5910},"end":{"line":176,"column":19,"offset":5918},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":176,"column":19,"offset":5918},"end":{"line":176,"column":24,"offset":5923},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":176,"column":24,"offset":5923},"end":{"line":176,"column":34,"offset":5933},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":176,"column":34,"offset":5933},"end":{"line":177,"column":1,"offset":5982},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":177,"column":1,"offset":5982},"end":{"line":177,"column":5,"offset":5986},"indent":[]}}],"position":{"start":{"line":171,"column":1,"offset":5747},"end":{"line":177,"column":5,"offset":5986},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":179,"column":8,"offset":5995},"end":{"line":179,"column":12,"offset":5999},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":5988},"end":{"line":179,"column":12,"offset":5999},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":180,"column":1,"offset":6000},"end":{"line":185,"column":4,"offset":6111},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":186,"column":1,"offset":6112},"end":{"line":187,"column":5,"offset":6121},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":189,"column":1,"offset":6123},"end":{"line":189,"column":7,"offset":6129},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":189,"column":7,"offset":6129},"end":{"line":191,"column":1,"offset":6211},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":191,"column":1,"offset":6211},"end":{"line":191,"column":5,"offset":6215},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":191,"column":5,"offset":6215},"end":{"line":192,"column":1,"offset":6216},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":192,"column":1,"offset":6216},"end":{"line":192,"column":5,"offset":6220},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":192,"column":5,"offset":6220},"end":{"line":193,"column":10,"offset":6230},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":193,"column":10,"offset":6230},"end":{"line":193,"column":14,"offset":6234},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":193,"column":14,"offset":6234},"end":{"line":193,"column":22,"offset":6242},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":193,"column":22,"offset":6242},"end":{"line":193,"column":30,"offset":6250},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":193,"column":30,"offset":6250},"end":{"line":193,"column":50,"offset":6270},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":193,"column":50,"offset":6270},"end":{"line":193,"column":53,"offset":6273},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":193,"column":53,"offset":6273},"end":{"line":193,"column":90,"offset":6310},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":193,"column":90,"offset":6310},"end":{"line":193,"column":96,"offset":6316},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":193,"column":96,"offset":6316},"end":{"line":194,"column":1,"offset":6319},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":194,"column":1,"offset":6319},"end":{"line":194,"column":5,"offset":6323},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":194,"column":5,"offset":6323},"end":{"line":195,"column":1,"offset":6324},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":195,"column":1,"offset":6324},"end":{"line":195,"column":5,"offset":6328},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":195,"column":5,"offset":6328},"end":{"line":196,"column":14,"offset":6342},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":196,"column":14,"offset":6342},"end":{"line":196,"column":18,"offset":6346},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":196,"column":18,"offset":6346},"end":{"line":196,"column":90,"offset":6418},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":196,"column":90,"offset":6418},"end":{"line":196,"column":94,"offset":6422},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":196,"column":94,"offset":6422},"end":{"line":196,"column":125,"offset":6453},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":196,"column":125,"offset":6453},"end":{"line":196,"column":131,"offset":6459},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":196,"column":131,"offset":6459},"end":{"line":197,"column":1,"offset":6474},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":197,"column":1,"offset":6474},"end":{"line":197,"column":5,"offset":6478},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":197,"column":5,"offset":6478},"end":{"line":198,"column":1,"offset":6479},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":198,"column":1,"offset":6479},"end":{"line":198,"column":5,"offset":6483},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":198,"column":5,"offset":6483},"end":{"line":199,"column":14,"offset":6497},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":199,"column":14,"offset":6497},"end":{"line":199,"column":18,"offset":6501},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":199,"column":18,"offset":6501},"end":{"line":199,"column":37,"offset":6520},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":199,"column":37,"offset":6520},"end":{"line":199,"column":40,"offset":6523},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":199,"column":40,"offset":6523},"end":{"line":199,"column":77,"offset":6560},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":199,"column":77,"offset":6560},"end":{"line":199,"column":81,"offset":6564},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":199,"column":81,"offset":6564},"end":{"line":199,"column":99,"offset":6582},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":199,"column":99,"offset":6582},"end":{"line":199,"column":102,"offset":6585},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":199,"column":102,"offset":6585},"end":{"line":199,"column":133,"offset":6616},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":199,"column":133,"offset":6616},"end":{"line":199,"column":139,"offset":6622},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":199,"column":139,"offset":6622},"end":{"line":199,"column":167,"offset":6650},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":199,"column":167,"offset":6650},"end":{"line":199,"column":171,"offset":6654},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":199,"column":171,"offset":6654},"end":{"line":200,"column":1,"offset":6656},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":200,"column":1,"offset":6656},"end":{"line":200,"column":5,"offset":6660},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":200,"column":5,"offset":6660},"end":{"line":201,"column":1,"offset":6661},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":201,"column":1,"offset":6661},"end":{"line":201,"column":5,"offset":6665},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":201,"column":5,"offset":6665},"end":{"line":203,"column":1,"offset":6685},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":203,"column":1,"offset":6685},"end":{"line":203,"column":5,"offset":6689},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":203,"column":5,"offset":6689},"end":{"line":204,"column":6,"offset":6695},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":204,"column":6,"offset":6695},"end":{"line":204,"column":12,"offset":6701},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":204,"column":12,"offset":6701},"end":{"line":204,"column":30,"offset":6719},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":204,"column":30,"offset":6719},"end":{"line":204,"column":36,"offset":6725},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":204,"column":36,"offset":6725},"end":{"line":204,"column":62,"offset":6751},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":204,"column":62,"offset":6751},"end":{"line":204,"column":75,"offset":6764},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":204,"column":75,"offset":6764},"end":{"line":204,"column":159,"offset":6848},"indent":[]}}],"position":{"start":{"line":189,"column":1,"offset":6123},"end":{"line":204,"column":159,"offset":6848},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":206,"column":8,"offset":6857},"end":{"line":206,"column":41,"offset":6890},"indent":[]}}],"position":{"start":{"line":206,"column":1,"offset":6850},"end":{"line":206,"column":41,"offset":6890},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":207,"column":1,"offset":6891},"end":{"line":212,"column":4,"offset":6966},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":213,"column":1,"offset":6967},"end":{"line":214,"column":1,"offset":6986},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":214,"column":1,"offset":6986},"end":{"line":214,"column":5,"offset":6990},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":214,"column":5,"offset":6990},"end":{"line":216,"column":5,"offset":7128},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":216,"column":5,"offset":7128},"end":{"line":216,"column":9,"offset":7132},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":216,"column":9,"offset":7132},"end":{"line":217,"column":5,"offset":7137},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":217,"column":5,"offset":7137},"end":{"line":217,"column":27,"offset":7159},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":217,"column":27,"offset":7159},"end":{"line":218,"column":5,"offset":7164},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":218,"column":5,"offset":7164},"end":{"line":218,"column":9,"offset":7168},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":218,"column":9,"offset":7168},"end":{"line":219,"column":5,"offset":7173},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":219,"column":5,"offset":7173},"end":{"line":219,"column":12,"offset":7180},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":219,"column":12,"offset":7180},"end":{"line":219,"column":17,"offset":7185},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":219,"column":17,"offset":7185},"end":{"line":219,"column":25,"offset":7193},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":219,"column":25,"offset":7193},"end":{"line":219,"column":63,"offset":7231},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":219,"column":63,"offset":7231},"end":{"line":219,"column":66,"offset":7234},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":219,"column":66,"offset":7234},"end":{"line":219,"column":86,"offset":7254},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":219,"column":86,"offset":7254},"end":{"line":219,"column":89,"offset":7257},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":219,"column":89,"offset":7257},"end":{"line":219,"column":110,"offset":7278},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":219,"column":110,"offset":7278},"end":{"line":219,"column":119,"offset":7287},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":219,"column":119,"offset":7287},"end":{"line":220,"column":1,"offset":7289},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":220,"column":1,"offset":7289},"end":{"line":220,"column":5,"offset":7293},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":220,"column":5,"offset":7293},"end":{"line":222,"column":1,"offset":7309},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":222,"column":1,"offset":7309},"end":{"line":222,"column":5,"offset":7313},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":222,"column":5,"offset":7313},"end":{"line":224,"column":5,"offset":7420},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":224,"column":5,"offset":7420},"end":{"line":224,"column":9,"offset":7424},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":224,"column":9,"offset":7424},"end":{"line":225,"column":1,"offset":7425},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":225,"column":1,"offset":7425},"end":{"line":225,"column":23,"offset":7447},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":225,"column":23,"offset":7447},"end":{"line":225,"column":35,"offset":7459},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":225,"column":35,"offset":7459},"end":{"line":225,"column":61,"offset":7485},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":225,"column":61,"offset":7485},"end":{"line":226,"column":1,"offset":7486},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":226,"column":1,"offset":7486},"end":{"line":226,"column":5,"offset":7490},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":226,"column":5,"offset":7490},"end":{"line":227,"column":5,"offset":7495},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":227,"column":5,"offset":7495},"end":{"line":227,"column":8,"offset":7498},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":227,"column":8,"offset":7498},"end":{"line":227,"column":58,"offset":7548},"indent":[]}}],"position":{"start":{"line":213,"column":1,"offset":6967},"end":{"line":227,"column":58,"offset":7548},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":229,"column":1,"offset":7550},"end":{"line":230,"column":1,"offset":7568},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":230,"column":1,"offset":7568},"end":{"line":230,"column":5,"offset":7572},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":7550},"end":{"line":230,"column":5,"offset":7572},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":231,"column":1,"offset":7573},"end":{"line":233,"column":4,"offset":7603},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":234,"column":1,"offset":7604},"end":{"line":234,"column":13,"offset":7616},"indent":[]}}],"position":{"start":{"line":234,"column":1,"offset":7604},"end":{"line":234,"column":13,"offset":7616},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":235,"column":1,"offset":7617},"end":{"line":241,"column":4,"offset":7696},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":242,"column":1,"offset":7697},"end":{"line":242,"column":8,"offset":7704},"indent":[]}}],"position":{"start":{"line":242,"column":1,"offset":7697},"end":{"line":242,"column":8,"offset":7704},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":243,"column":1,"offset":7705},"end":{"line":250,"column":4,"offset":7829},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":251,"column":1,"offset":7830},"end":{"line":252,"column":5,"offset":7839},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":254,"column":1,"offset":7841},"end":{"line":254,"column":11,"offset":7851},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":254,"column":11,"offset":7851},"end":{"line":254,"column":24,"offset":7864},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":254,"column":24,"offset":7864},"end":{"line":254,"column":107,"offset":7947},"indent":[]}}],"position":{"start":{"line":254,"column":1,"offset":7841},"end":{"line":254,"column":107,"offset":7947},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":256,"column":7,"offset":7955},"end":{"line":256,"column":10,"offset":7958},"indent":[]}}],"position":{"start":{"line":256,"column":1,"offset":7949},"end":{"line":256,"column":10,"offset":7958},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":257,"column":7,"offset":7965},"end":{"line":257,"column":10,"offset":7968},"indent":[]}}],"position":{"start":{"line":257,"column":1,"offset":7959},"end":{"line":257,"column":10,"offset":7968},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":259,"column":6,"offset":7975},"end":{"line":259,"column":10,"offset":7979},"indent":[]}}],"position":{"start":{"line":259,"column":1,"offset":7970},"end":{"line":259,"column":10,"offset":7979},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":260,"column":7,"offset":7986},"end":{"line":260,"column":13,"offset":7992},"indent":[]}}],"position":{"start":{"line":260,"column":1,"offset":7980},"end":{"line":260,"column":13,"offset":7992},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":261,"column":1,"offset":7993},"end":{"line":261,"column":49,"offset":8041},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":261,"column":49,"offset":8041},"end":{"line":261,"column":57,"offset":8049},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":261,"column":57,"offset":8049},"end":{"line":261,"column":133,"offset":8125},"indent":[]}}],"position":{"start":{"line":261,"column":1,"offset":7993},"end":{"line":261,"column":133,"offset":8125},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":262,"column":1,"offset":8126},"end":{"line":272,"column":4,"offset":8321},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":273,"column":1,"offset":8322},"end":{"line":273,"column":5,"offset":8326},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":276,"column":1,"offset":8329},"end":{"line":277,"column":1,"offset":8411},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":277,"column":1,"offset":8411},"end":{"line":277,"column":5,"offset":8415},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":277,"column":5,"offset":8415},"end":{"line":278,"column":1,"offset":8416},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":278,"column":1,"offset":8416},"end":{"line":278,"column":5,"offset":8420},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":278,"column":5,"offset":8420},"end":{"line":279,"column":26,"offset":8446},"indent":[1]}}],"position":{"start":{"line":276,"column":1,"offset":8329},"end":{"line":279,"column":26,"offset":8446},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":280,"column":1,"offset":8447},"end":{"line":285,"column":4,"offset":8575},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":286,"column":1,"offset":8576},"end":{"line":286,"column":14,"offset":8589},"indent":[]}}],"position":{"start":{"line":286,"column":1,"offset":8576},"end":{"line":286,"column":14,"offset":8589},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":288,"column":1,"offset":8591},"end":{"line":301,"column":4,"offset":8873},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":303,"column":1,"offset":8875},"end":{"line":304,"column":5,"offset":8884},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":307,"column":7,"offset":8893},"end":{"line":307,"column":13,"offset":8899},"indent":[]}}],"position":{"start":{"line":307,"column":1,"offset":8887},"end":{"line":307,"column":13,"offset":8899},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":307,"column":13,"offset":8899}}}}