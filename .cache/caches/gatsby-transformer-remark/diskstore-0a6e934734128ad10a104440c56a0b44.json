{"expireTime":9007200843552914000,"key":"transformer-remark-markdown-html-62b0037c44f29460e9081f4ffbbdbb91-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":"<p>This article is a part of a series where I go through <a href=\"https://teachyourselfcs.com/\">teachyourselfcs</a>.\nIf you would like to start at the beginning start <a href=\"https://bpp.dev/articles/teachyourselfcs/programming/00:getting-started/\">here</a>.</p>\n<h4>LECTURES</h4>\n<h5>L24</h5>\n<p>If sharing storage mutating may affect data, if not sharing storage it won’t.\n<br>\n<br></p>\n<p>Can’t mutate quoted list. Have to use cons or <code class=\"language-text\">list</code>.\n<br>\n<br>\neq? is when it is the same location in memory.\nequal? is equality.</p>\n<h5>L25</h5>\n<p>Table: association between keys and values\n<br>\n<br></p>\n<p>put: if no key in the table, create new one.\n<br>\n<br></p>\n<p>2d table: a key that has a table structure as its cdr.\n<br>\n<br></p>\n<p>Runtime for 2d table: n + y where n is the size of the table and y is the size of the second table.\n<br>\n<br></p>\n<p>2 lookups for key value store. assoc and assq.\n<br>\n<br>\nmemoization: storing previous calculations to build a result.\n<br>\n<br></p>\n<p>If underlying calculation is not functional you can’t use memoization.</p>\n<h5>L26</h5>\n<p>vector: indexed list</p>\n<p>vector best if needing to access a certain element a lot, accessing a value is o(1) instead of o(n) (worse case).\n<br>\n<br></p>\n<h5>L27</h5>\n<h5>L28</h5>\n<h5>L29</h5>\n<h5>L36</h5>\n<h5>L37</h5>\n<h4>LABS</h4>\n<h5>Lab 5A</h5>\n<h5>Lab 5B</h5>\n<h4>READINGS</h4>\n<h5>3.3</h5>\n<h5>4.1.1 - 4.1.6</h5>"}