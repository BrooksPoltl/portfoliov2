{"expireTime":9007200842158736000,"key":"transformer-remark-markdown-html-ast-2166882590fc147dbe500add2919db2b-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":10,"offset":421}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":10,"offset":421}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":10,"column":7,"offset":428},"end":{"line":10,"column":10,"offset":431}}}],"position":{"start":{"line":10,"column":1,"offset":422},"end":{"line":10,"column":10,"offset":431}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":11,"column":7,"offset":438},"end":{"line":11,"column":10,"offset":441}}}],"position":{"start":{"line":11,"column":1,"offset":432},"end":{"line":11,"column":10,"offset":441}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":13,"column":6,"offset":448},"end":{"line":13,"column":14,"offset":456}}}],"position":{"start":{"line":13,"column":1,"offset":443},"end":{"line":13,"column":14,"offset":456}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":14,"column":7,"offset":463},"end":{"line":14,"column":10,"offset":466}}}],"position":{"start":{"line":14,"column":1,"offset":457},"end":{"line":14,"column":10,"offset":466}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":16,"column":8,"offset":475},"end":{"line":16,"column":30,"offset":497}}}],"position":{"start":{"line":16,"column":1,"offset":468},"end":{"line":16,"column":30,"offset":497}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":18,"column":1,"offset":499},"end":{"line":19,"column":1,"offset":643}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":643},"end":{"line":19,"column":5,"offset":647}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":19,"column":5,"offset":647},"end":{"line":19,"column":16,"offset":658}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":16,"offset":658},"end":{"line":19,"column":20,"offset":662}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":19,"column":20,"offset":662},"end":{"line":21,"column":1,"offset":806}}},{"type":"raw","value":"<br>","position":{"start":{"line":21,"column":1,"offset":806},"end":{"line":21,"column":5,"offset":810}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":21,"column":5,"offset":810},"end":{"line":21,"column":16,"offset":821}}},{"type":"raw","value":"<br>","position":{"start":{"line":21,"column":16,"offset":821},"end":{"line":21,"column":20,"offset":825}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":21,"column":20,"offset":825},"end":{"line":22,"column":45,"offset":870}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":45,"offset":870},"end":{"line":22,"column":49,"offset":874}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":22,"column":49,"offset":874},"end":{"line":22,"column":65,"offset":890}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":65,"offset":890},"end":{"line":22,"column":69,"offset":894}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":22,"column":69,"offset":894},"end":{"line":24,"column":1,"offset":937}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":1,"offset":937},"end":{"line":24,"column":5,"offset":941}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":24,"column":5,"offset":941},"end":{"line":24,"column":22,"offset":958}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":22,"offset":958},"end":{"line":24,"column":26,"offset":962}}},{"type":"text","value":"\n","position":{"start":{"line":24,"column":26,"offset":962},"end":{"line":25,"column":1,"offset":963}}},{"type":"raw","value":"<br>","position":{"start":{"line":25,"column":1,"offset":963},"end":{"line":25,"column":5,"offset":967}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. Scheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":25,"column":5,"offset":967},"end":{"line":27,"column":1,"offset":1204}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":27,"column":1,"offset":1204},"end":{"line":27,"column":12,"offset":1215}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":27,"column":12,"offset":1215},"end":{"line":27,"column":68,"offset":1271}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":27,"column":68,"offset":1271},"end":{"line":27,"column":79,"offset":1282}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":27,"column":79,"offset":1282},"end":{"line":27,"column":106,"offset":1309}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":27,"column":106,"offset":1309},"end":{"line":27,"column":109,"offset":1312}}},{"type":"text","value":" is now 7 and it has 2 primitive values, meaning it can calculate the ","position":{"start":{"line":27,"column":109,"offset":1312},"end":{"line":27,"column":179,"offset":1382}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":27,"column":179,"offset":1382},"end":{"line":27,"column":182,"offset":1385}}},{"type":"text","value":" to get 3.","position":{"start":{"line":27,"column":182,"offset":1385},"end":{"line":27,"column":192,"offset":1395}}}],"position":{"start":{"line":18,"column":1,"offset":499},"end":{"line":27,"column":192,"offset":1395}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":29,"column":8,"offset":1404},"end":{"line":29,"column":14,"offset":1410}}}],"position":{"start":{"line":29,"column":1,"offset":1397},"end":{"line":29,"column":14,"offset":1410}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":30,"column":1,"offset":1411},"end":{"line":30,"column":9,"offset":1419}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":30,"column":9,"offset":1419},"end":{"line":30,"column":73,"offset":1483}}}],"position":{"start":{"line":30,"column":1,"offset":1411},"end":{"line":30,"column":73,"offset":1483}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":31,"column":1,"offset":1484},"end":{"line":34,"column":4,"offset":1523}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":35,"column":1,"offset":1524},"end":{"line":35,"column":5,"offset":1528}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":37,"column":1,"offset":1530},"end":{"line":37,"column":72,"offset":1601}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":37,"column":72,"offset":1601},"end":{"line":37,"column":80,"offset":1609}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":37,"column":80,"offset":1609},"end":{"line":38,"column":1,"offset":1633}}},{"type":"raw","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1633},"end":{"line":38,"column":5,"offset":1637}}},{"type":"text","value":"\n","position":{"start":{"line":38,"column":5,"offset":1637},"end":{"line":39,"column":1,"offset":1638}}},{"type":"raw","value":"<br>","position":{"start":{"line":39,"column":1,"offset":1638},"end":{"line":39,"column":5,"offset":1642}}},{"type":"text","value":"\nDefine’s first parameter first argument is a symbol (square) that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":39,"column":5,"offset":1642},"end":{"line":40,"column":170,"offset":1812}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":40,"column":170,"offset":1812},"end":{"line":40,"column":173,"offset":1815}}},{"type":"text","value":".\n","position":{"start":{"line":40,"column":173,"offset":1815},"end":{"line":41,"column":1,"offset":1818}}},{"type":"raw","value":"<br>","position":{"start":{"line":41,"column":1,"offset":1818},"end":{"line":41,"column":5,"offset":1822}}},{"type":"text","value":"\n","position":{"start":{"line":41,"column":5,"offset":1822},"end":{"line":42,"column":1,"offset":1823}}},{"type":"raw","value":"<br>","position":{"start":{"line":42,"column":1,"offset":1823},"end":{"line":42,"column":5,"offset":1827}}},{"type":"text","value":"\nThe second parameter that define takes in is the body that the procedure will call ","position":{"start":{"line":42,"column":5,"offset":1827},"end":{"line":43,"column":84,"offset":1911}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":43,"column":84,"offset":1911},"end":{"line":43,"column":93,"offset":1920}}},{"type":"text","value":". ","position":{"start":{"line":43,"column":93,"offset":1920},"end":{"line":43,"column":95,"offset":1922}}}],"position":{"start":{"line":37,"column":1,"offset":1530},"end":{"line":43,"column":95,"offset":1922}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":45,"column":1,"offset":1924},"end":{"line":45,"column":6,"offset":1929}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:","position":{"start":{"line":47,"column":1,"offset":1931},"end":{"line":47,"column":44,"offset":1974}}}],"position":{"start":{"line":47,"column":1,"offset":1931},"end":{"line":47,"column":44,"offset":1974}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    (define pi 3.14159)</code></pre></div>","position":{"start":{"line":48,"column":1,"offset":1975},"end":{"line":50,"column":4,"offset":2006}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":51,"column":1,"offset":2007},"end":{"line":51,"column":5,"offset":2011}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive so no body needs to be called for the second argument.","position":{"start":{"line":53,"column":1,"offset":2013},"end":{"line":53,"column":145,"offset":2157}}}],"position":{"start":{"line":53,"column":1,"offset":2013},"end":{"line":53,"column":145,"offset":2157}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":55,"column":7,"offset":2165},"end":{"line":55,"column":10,"offset":2168}}}],"position":{"start":{"line":55,"column":1,"offset":2159},"end":{"line":55,"column":10,"offset":2168}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":56,"column":7,"offset":2175},"end":{"line":56,"column":10,"offset":2178}}}],"position":{"start":{"line":56,"column":1,"offset":2169},"end":{"line":56,"column":10,"offset":2178}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":57,"column":7,"offset":2185},"end":{"line":57,"column":10,"offset":2188}}}],"position":{"start":{"line":57,"column":1,"offset":2179},"end":{"line":57,"column":10,"offset":2188}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":59,"column":6,"offset":2195},"end":{"line":59,"column":10,"offset":2199}}}],"position":{"start":{"line":59,"column":1,"offset":2190},"end":{"line":59,"column":10,"offset":2199}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1","position":{"start":{"line":60,"column":7,"offset":2206},"end":{"line":60,"column":12,"offset":2211}}}],"position":{"start":{"line":60,"column":1,"offset":2200},"end":{"line":60,"column":13,"offset":2212}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 2","position":{"start":{"line":61,"column":7,"offset":2219},"end":{"line":61,"column":12,"offset":2224}}}],"position":{"start":{"line":61,"column":1,"offset":2213},"end":{"line":61,"column":13,"offset":2225}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":61,"column":13,"offset":2225}}}}