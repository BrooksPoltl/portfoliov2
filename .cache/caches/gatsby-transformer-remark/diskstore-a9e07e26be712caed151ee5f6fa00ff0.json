{"expireTime":9007200842251416000,"key":"transformer-remark-markdown-ast-118d75da0e96a6b22c0b9cabacf97f2a-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562},"indent":[]}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632},"indent":[]}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities. \n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705},"indent":[]}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791},"indent":[]}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833},"indent":[]}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865},"indent":[]}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884},"indent":[]}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916},"indent":[]}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":1,"offset":1048},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1048},"end":{"line":32,"column":5,"offset":1052},"indent":[]}},{"type":"text","value":"\nEnvironment: The name-object pairs the interpreter keeps in memory.\n","position":{"start":{"line":32,"column":5,"offset":1052},"end":{"line":34,"column":1,"offset":1121},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1121},"end":{"line":34,"column":5,"offset":1125},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":34,"column":5,"offset":1125},"end":{"line":35,"column":1,"offset":1126},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":35,"column":1,"offset":1126},"end":{"line":35,"column":5,"offset":1130},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":35,"column":5,"offset":1130},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Compound Procedures can be used to build on top of other Compound Procedures:\n","position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":1,"offset":1210},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":38,"column":1,"offset":1210},"end":{"line":38,"column":5,"offset":1214},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1132},"end":{"line":38,"column":5,"offset":1214},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (sum-of-squares x y)\n(+ (square x) (square y))</code></pre></div>","position":{"start":{"line":39,"column":1,"offset":1215},"end":{"line":42,"column":4,"offset":1277},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":43,"column":1,"offset":1278},"end":{"line":43,"column":5,"offset":1282},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Compound Procedure: procedure that you make out of other procedures.","position":{"start":{"line":45,"column":1,"offset":1284},"end":{"line":45,"column":69,"offset":1352},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1284},"end":{"line":45,"column":69,"offset":1352},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Primitive Procedure: procedure built into the language ex: ","position":{"start":{"line":47,"column":1,"offset":1354},"end":{"line":47,"column":60,"offset":1413},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":47,"column":60,"offset":1413},"end":{"line":47,"column":63,"offset":1416},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":47,"column":63,"offset":1416},"end":{"line":48,"column":1,"offset":1417},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1417},"end":{"line":48,"column":5,"offset":1421},"indent":[]}},{"type":"text","value":"\nBoth are used exactly the same.\n","position":{"start":{"line":48,"column":5,"offset":1421},"end":{"line":50,"column":1,"offset":1454},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":50,"column":1,"offset":1454},"end":{"line":50,"column":5,"offset":1458},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1354},"end":{"line":50,"column":5,"offset":1458},"indent":[1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":52,"column":7,"offset":1466},"end":{"line":52,"column":10,"offset":1469},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1460},"end":{"line":52,"column":10,"offset":1469},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":53,"column":7,"offset":1476},"end":{"line":53,"column":10,"offset":1479},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1470},"end":{"line":53,"column":10,"offset":1479},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":55,"column":6,"offset":1486},"end":{"line":55,"column":14,"offset":1494},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":1481},"end":{"line":55,"column":14,"offset":1494},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":56,"column":7,"offset":1501},"end":{"line":56,"column":10,"offset":1504},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1495},"end":{"line":56,"column":10,"offset":1504},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":58,"column":8,"offset":1513},"end":{"line":58,"column":30,"offset":1535},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1506},"end":{"line":58,"column":30,"offset":1535},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":60,"column":1,"offset":1537},"end":{"line":61,"column":1,"offset":1681},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":61,"column":1,"offset":1681},"end":{"line":61,"column":5,"offset":1685},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":61,"column":5,"offset":1685},"end":{"line":61,"column":16,"offset":1696},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":61,"column":16,"offset":1696},"end":{"line":61,"column":20,"offset":1700},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":61,"column":20,"offset":1700},"end":{"line":63,"column":1,"offset":1844},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":63,"column":1,"offset":1844},"end":{"line":63,"column":5,"offset":1848},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":63,"column":5,"offset":1848},"end":{"line":63,"column":16,"offset":1859},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":63,"column":16,"offset":1859},"end":{"line":63,"column":20,"offset":1863},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":63,"column":20,"offset":1863},"end":{"line":64,"column":45,"offset":1908},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":64,"column":45,"offset":1908},"end":{"line":64,"column":49,"offset":1912},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":64,"column":49,"offset":1912},"end":{"line":64,"column":65,"offset":1928},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":64,"column":65,"offset":1928},"end":{"line":64,"column":69,"offset":1932},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":64,"column":69,"offset":1932},"end":{"line":66,"column":1,"offset":1975},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":66,"column":1,"offset":1975},"end":{"line":66,"column":5,"offset":1979},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":66,"column":5,"offset":1979},"end":{"line":66,"column":22,"offset":1996},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":66,"column":22,"offset":1996},"end":{"line":66,"column":26,"offset":2000},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":66,"column":26,"offset":2000},"end":{"line":67,"column":1,"offset":2001},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":67,"column":1,"offset":2001},"end":{"line":67,"column":5,"offset":2005},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":67,"column":5,"offset":2005},"end":{"line":69,"column":1,"offset":2123},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":69,"column":1,"offset":2123},"end":{"line":69,"column":5,"offset":2127},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":69,"column":5,"offset":2127},"end":{"line":71,"column":1,"offset":2248},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":71,"column":1,"offset":2248},"end":{"line":71,"column":12,"offset":2259},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":71,"column":12,"offset":2259},"end":{"line":71,"column":68,"offset":2315},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":71,"column":68,"offset":2315},"end":{"line":71,"column":79,"offset":2326},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":71,"column":79,"offset":2326},"end":{"line":71,"column":106,"offset":2353},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":71,"column":106,"offset":2353},"end":{"line":71,"column":109,"offset":2356},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":71,"column":109,"offset":2356},"end":{"line":71,"column":189,"offset":2436},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":71,"column":189,"offset":2436},"end":{"line":71,"column":192,"offset":2439},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":71,"column":192,"offset":2439},"end":{"line":71,"column":202,"offset":2449},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1537},"end":{"line":71,"column":202,"offset":2449},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":73,"column":8,"offset":2458},"end":{"line":73,"column":14,"offset":2464},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":2451},"end":{"line":73,"column":14,"offset":2464},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":74,"column":1,"offset":2465},"end":{"line":74,"column":9,"offset":2473},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":74,"column":9,"offset":2473},"end":{"line":74,"column":73,"offset":2537},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":2465},"end":{"line":74,"column":73,"offset":2537},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":75,"column":1,"offset":2538},"end":{"line":78,"column":4,"offset":2577},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":79,"column":1,"offset":2578},"end":{"line":79,"column":5,"offset":2582},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":81,"column":1,"offset":2584},"end":{"line":81,"column":72,"offset":2655},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":81,"column":72,"offset":2655},"end":{"line":81,"column":80,"offset":2663},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":81,"column":80,"offset":2663},"end":{"line":82,"column":1,"offset":2687},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":82,"column":1,"offset":2687},"end":{"line":82,"column":5,"offset":2691},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":82,"column":5,"offset":2691},"end":{"line":83,"column":1,"offset":2692},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":83,"column":1,"offset":2692},"end":{"line":83,"column":5,"offset":2696},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":83,"column":5,"offset":2696},"end":{"line":84,"column":184,"offset":2880},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":84,"column":184,"offset":2880},"end":{"line":84,"column":187,"offset":2883},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":84,"column":187,"offset":2883},"end":{"line":85,"column":1,"offset":2886},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":85,"column":1,"offset":2886},"end":{"line":85,"column":5,"offset":2890},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":85,"column":5,"offset":2890},"end":{"line":86,"column":1,"offset":2891},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":86,"column":1,"offset":2891},"end":{"line":86,"column":5,"offset":2895},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":86,"column":5,"offset":2895},"end":{"line":87,"column":27,"offset":2922},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":87,"column":27,"offset":2922},"end":{"line":87,"column":35,"offset":2930},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":87,"column":35,"offset":2930},"end":{"line":87,"column":86,"offset":2981},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":87,"column":86,"offset":2981},"end":{"line":87,"column":95,"offset":2990},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":87,"column":95,"offset":2990},"end":{"line":87,"column":97,"offset":2992},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":2584},"end":{"line":87,"column":97,"offset":2992},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":89,"column":1,"offset":2994},"end":{"line":89,"column":6,"offset":2999},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":91,"column":1,"offset":3001},"end":{"line":92,"column":1,"offset":3045},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":92,"column":1,"offset":3045},"end":{"line":92,"column":5,"offset":3049},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":92,"column":5,"offset":3049},"end":{"line":93,"column":1,"offset":3050},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":93,"column":1,"offset":3050},"end":{"line":93,"column":22,"offset":3071},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":93,"column":22,"offset":3071},"end":{"line":94,"column":1,"offset":3072},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":94,"column":1,"offset":3072},"end":{"line":94,"column":5,"offset":3076},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":3001},"end":{"line":94,"column":5,"offset":3076},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":96,"column":1,"offset":3078},"end":{"line":96,"column":152,"offset":3229},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":3078},"end":{"line":96,"column":152,"offset":3229},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":98,"column":8,"offset":3238},"end":{"line":98,"column":20,"offset":3250},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":3231},"end":{"line":98,"column":20,"offset":3250},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":100,"column":1,"offset":3252},"end":{"line":100,"column":56,"offset":3307},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":3252},"end":{"line":100,"column":56,"offset":3307},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":101,"column":1,"offset":3308},"end":{"line":106,"column":4,"offset":3399},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":107,"column":1,"offset":3400},"end":{"line":107,"column":5,"offset":3404},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":109,"column":1,"offset":3406},"end":{"line":109,"column":37,"offset":3442},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":109,"column":37,"offset":3442},"end":{"line":109,"column":41,"offset":3446},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":109,"column":41,"offset":3446},"end":{"line":110,"column":1,"offset":3463},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":110,"column":1,"offset":3463},"end":{"line":110,"column":5,"offset":3467},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":110,"column":5,"offset":3467},"end":{"line":111,"column":1,"offset":3468},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":111,"column":1,"offset":3468},"end":{"line":111,"column":5,"offset":3472},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":111,"column":5,"offset":3472},"end":{"line":112,"column":66,"offset":3538},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":112,"column":66,"offset":3538},"end":{"line":112,"column":89,"offset":3561},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":112,"column":89,"offset":3561},"end":{"line":113,"column":1,"offset":3601},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":113,"column":1,"offset":3601},"end":{"line":113,"column":5,"offset":3605},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":113,"column":5,"offset":3605},"end":{"line":114,"column":1,"offset":3606},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":114,"column":1,"offset":3606},"end":{"line":114,"column":5,"offset":3610},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":114,"column":5,"offset":3610},"end":{"line":115,"column":21,"offset":3631},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":115,"column":21,"offset":3631},"end":{"line":115,"column":25,"offset":3635},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":115,"column":25,"offset":3635},"end":{"line":116,"column":1,"offset":3689},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":116,"column":1,"offset":3689},"end":{"line":116,"column":5,"offset":3693},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":116,"column":5,"offset":3693},"end":{"line":117,"column":1,"offset":3694},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":117,"column":1,"offset":3694},"end":{"line":117,"column":5,"offset":3698},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":117,"column":5,"offset":3698},"end":{"line":118,"column":21,"offset":3719},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":118,"column":21,"offset":3719},"end":{"line":118,"column":25,"offset":3723},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":118,"column":25,"offset":3723},"end":{"line":119,"column":1,"offset":3778},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":119,"column":1,"offset":3778},"end":{"line":119,"column":5,"offset":3782},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":119,"column":5,"offset":3782},"end":{"line":120,"column":1,"offset":3783},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":120,"column":1,"offset":3783},"end":{"line":120,"column":5,"offset":3787},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":120,"column":5,"offset":3787},"end":{"line":121,"column":58,"offset":3845},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":121,"column":58,"offset":3845},"end":{"line":121,"column":61,"offset":3848},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":121,"column":61,"offset":3848},"end":{"line":121,"column":145,"offset":3932},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":121,"column":145,"offset":3932},"end":{"line":121,"column":153,"offset":3940},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":121,"column":153,"offset":3940},"end":{"line":121,"column":178,"offset":3965},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":3406},"end":{"line":121,"column":178,"offset":3965},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":123,"column":7,"offset":3973},"end":{"line":123,"column":10,"offset":3976},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":3967},"end":{"line":123,"column":10,"offset":3976},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":125,"column":8,"offset":3985},"end":{"line":125,"column":17,"offset":3994},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":3978},"end":{"line":125,"column":17,"offset":3994},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":126,"column":1,"offset":3995},"end":{"line":137,"column":4,"offset":4194},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":138,"column":1,"offset":4195},"end":{"line":138,"column":5,"offset":4199},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":140,"column":1,"offset":4201},"end":{"line":141,"column":1,"offset":4417},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":141,"column":1,"offset":4417},"end":{"line":141,"column":5,"offset":4421},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":141,"column":5,"offset":4421},"end":{"line":142,"column":1,"offset":4422},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":142,"column":1,"offset":4422},"end":{"line":142,"column":5,"offset":4426},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":142,"column":5,"offset":4426},"end":{"line":143,"column":72,"offset":4498},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":143,"column":72,"offset":4498},"end":{"line":143,"column":81,"offset":4507},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":143,"column":81,"offset":4507},"end":{"line":144,"column":1,"offset":4526},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":144,"column":1,"offset":4526},"end":{"line":144,"column":5,"offset":4530},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":144,"column":5,"offset":4530},"end":{"line":145,"column":1,"offset":4531},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":145,"column":1,"offset":4531},"end":{"line":145,"column":5,"offset":4535},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":145,"column":5,"offset":4535},"end":{"line":146,"column":10,"offset":4545},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":146,"column":10,"offset":4545},"end":{"line":146,"column":16,"offset":4551},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":146,"column":16,"offset":4551},"end":{"line":146,"column":34,"offset":4569},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":146,"column":34,"offset":4569},"end":{"line":146,"column":42,"offset":4577},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":146,"column":42,"offset":4577},"end":{"line":147,"column":24,"offset":4602},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":147,"column":24,"offset":4602},"end":{"line":147,"column":33,"offset":4611},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":147,"column":33,"offset":4611},"end":{"line":147,"column":107,"offset":4685},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":147,"column":107,"offset":4685},"end":{"line":147,"column":116,"offset":4694},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":147,"column":116,"offset":4694},"end":{"line":147,"column":134,"offset":4712},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":147,"column":134,"offset":4712},"end":{"line":147,"column":137,"offset":4715},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":147,"column":137,"offset":4715},"end":{"line":147,"column":161,"offset":4739},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":147,"column":161,"offset":4739},"end":{"line":147,"column":167,"offset":4745},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":147,"column":167,"offset":4745},"end":{"line":147,"column":192,"offset":4770},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":147,"column":192,"offset":4770},"end":{"line":147,"column":200,"offset":4778},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":147,"column":200,"offset":4778},"end":{"line":147,"column":218,"offset":4796},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":147,"column":218,"offset":4796},"end":{"line":147,"column":224,"offset":4802},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":147,"column":224,"offset":4802},"end":{"line":147,"column":245,"offset":4823},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":147,"column":245,"offset":4823},"end":{"line":147,"column":252,"offset":4830},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":147,"column":252,"offset":4830},"end":{"line":147,"column":257,"offset":4835},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":147,"column":257,"offset":4835},"end":{"line":147,"column":260,"offset":4838},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":147,"column":260,"offset":4838},"end":{"line":147,"column":285,"offset":4863},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":147,"column":285,"offset":4863},"end":{"line":147,"column":291,"offset":4869},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":147,"column":291,"offset":4869},"end":{"line":148,"column":96,"offset":4995},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":148,"column":96,"offset":4995},"end":{"line":148,"column":111,"offset":5010},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":148,"column":111,"offset":5010},"end":{"line":148,"column":182,"offset":5081},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":4201},"end":{"line":148,"column":182,"offset":5081},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":150,"column":8,"offset":5090},"end":{"line":150,"column":19,"offset":5101},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":5083},"end":{"line":150,"column":19,"offset":5101},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":151,"column":1,"offset":5102},"end":{"line":151,"column":14,"offset":5115},"indent":[]}}],"position":{"start":{"line":151,"column":1,"offset":5102},"end":{"line":151,"column":14,"offset":5115},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":152,"column":1,"offset":5116},"end":{"line":167,"column":4,"offset":5531},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":168,"column":1,"offset":5532},"end":{"line":168,"column":5,"offset":5536},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":170,"column":1,"offset":5538},"end":{"line":170,"column":141,"offset":5678},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":5538},"end":{"line":170,"column":141,"offset":5678},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":172,"column":8,"offset":5687},"end":{"line":172,"column":30,"offset":5709},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":5680},"end":{"line":172,"column":30,"offset":5709},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":173,"column":1,"offset":5710},"end":{"line":173,"column":199,"offset":5908},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":5710},"end":{"line":173,"column":199,"offset":5908},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":175,"column":8,"offset":5917},"end":{"line":175,"column":30,"offset":5939},"indent":[]}}],"position":{"start":{"line":175,"column":1,"offset":5910},"end":{"line":175,"column":30,"offset":5939},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":177,"column":1,"offset":5941},"end":{"line":178,"column":1,"offset":6016},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":178,"column":1,"offset":6016},"end":{"line":178,"column":5,"offset":6020},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":178,"column":5,"offset":6020},"end":{"line":179,"column":1,"offset":6021},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":179,"column":1,"offset":6021},"end":{"line":179,"column":5,"offset":6025},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":179,"column":5,"offset":6025},"end":{"line":181,"column":1,"offset":6087},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":181,"column":1,"offset":6087},"end":{"line":181,"column":5,"offset":6091},"indent":[]}},{"type":"break","position":{"start":{"line":181,"column":5,"offset":6091},"end":{"line":182,"column":1,"offset":6094},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":182,"column":1,"offset":6094},"end":{"line":182,"column":11,"offset":6104},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":182,"column":11,"offset":6104},"end":{"line":182,"column":19,"offset":6112},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":182,"column":19,"offset":6112},"end":{"line":182,"column":24,"offset":6117},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":182,"column":24,"offset":6117},"end":{"line":182,"column":34,"offset":6127},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":182,"column":34,"offset":6127},"end":{"line":183,"column":1,"offset":6176},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":183,"column":1,"offset":6176},"end":{"line":183,"column":5,"offset":6180},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":5941},"end":{"line":183,"column":5,"offset":6180},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":185,"column":8,"offset":6189},"end":{"line":185,"column":12,"offset":6193},"indent":[]}}],"position":{"start":{"line":185,"column":1,"offset":6182},"end":{"line":185,"column":12,"offset":6193},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":186,"column":1,"offset":6194},"end":{"line":191,"column":4,"offset":6305},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":192,"column":1,"offset":6306},"end":{"line":193,"column":5,"offset":6315},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":195,"column":1,"offset":6317},"end":{"line":195,"column":7,"offset":6323},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":195,"column":7,"offset":6323},"end":{"line":197,"column":1,"offset":6405},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":197,"column":1,"offset":6405},"end":{"line":197,"column":5,"offset":6409},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":197,"column":5,"offset":6409},"end":{"line":198,"column":1,"offset":6410},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":198,"column":1,"offset":6410},"end":{"line":198,"column":5,"offset":6414},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":198,"column":5,"offset":6414},"end":{"line":199,"column":10,"offset":6424},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":199,"column":10,"offset":6424},"end":{"line":199,"column":14,"offset":6428},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":199,"column":14,"offset":6428},"end":{"line":199,"column":22,"offset":6436},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":199,"column":22,"offset":6436},"end":{"line":199,"column":30,"offset":6444},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":199,"column":30,"offset":6444},"end":{"line":199,"column":50,"offset":6464},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":199,"column":50,"offset":6464},"end":{"line":199,"column":53,"offset":6467},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":199,"column":53,"offset":6467},"end":{"line":199,"column":90,"offset":6504},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":199,"column":90,"offset":6504},"end":{"line":199,"column":96,"offset":6510},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":199,"column":96,"offset":6510},"end":{"line":200,"column":1,"offset":6513},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":200,"column":1,"offset":6513},"end":{"line":200,"column":5,"offset":6517},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":200,"column":5,"offset":6517},"end":{"line":201,"column":1,"offset":6518},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":201,"column":1,"offset":6518},"end":{"line":201,"column":5,"offset":6522},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":201,"column":5,"offset":6522},"end":{"line":202,"column":14,"offset":6536},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":202,"column":14,"offset":6536},"end":{"line":202,"column":18,"offset":6540},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":202,"column":18,"offset":6540},"end":{"line":202,"column":90,"offset":6612},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":202,"column":90,"offset":6612},"end":{"line":202,"column":94,"offset":6616},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":202,"column":94,"offset":6616},"end":{"line":202,"column":125,"offset":6647},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":202,"column":125,"offset":6647},"end":{"line":202,"column":131,"offset":6653},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":202,"column":131,"offset":6653},"end":{"line":203,"column":1,"offset":6668},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":203,"column":1,"offset":6668},"end":{"line":203,"column":5,"offset":6672},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":203,"column":5,"offset":6672},"end":{"line":204,"column":1,"offset":6673},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":204,"column":1,"offset":6673},"end":{"line":204,"column":5,"offset":6677},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":204,"column":5,"offset":6677},"end":{"line":205,"column":14,"offset":6691},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":205,"column":14,"offset":6691},"end":{"line":205,"column":18,"offset":6695},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":205,"column":18,"offset":6695},"end":{"line":205,"column":37,"offset":6714},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":205,"column":37,"offset":6714},"end":{"line":205,"column":40,"offset":6717},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":205,"column":40,"offset":6717},"end":{"line":205,"column":77,"offset":6754},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":205,"column":77,"offset":6754},"end":{"line":205,"column":81,"offset":6758},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":205,"column":81,"offset":6758},"end":{"line":205,"column":99,"offset":6776},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":205,"column":99,"offset":6776},"end":{"line":205,"column":102,"offset":6779},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":205,"column":102,"offset":6779},"end":{"line":205,"column":133,"offset":6810},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":205,"column":133,"offset":6810},"end":{"line":205,"column":139,"offset":6816},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":205,"column":139,"offset":6816},"end":{"line":205,"column":167,"offset":6844},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":205,"column":167,"offset":6844},"end":{"line":205,"column":171,"offset":6848},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":205,"column":171,"offset":6848},"end":{"line":206,"column":1,"offset":6850},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":206,"column":1,"offset":6850},"end":{"line":206,"column":5,"offset":6854},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":206,"column":5,"offset":6854},"end":{"line":207,"column":1,"offset":6855},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":207,"column":1,"offset":6855},"end":{"line":207,"column":5,"offset":6859},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":207,"column":5,"offset":6859},"end":{"line":209,"column":1,"offset":6879},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":209,"column":1,"offset":6879},"end":{"line":209,"column":5,"offset":6883},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":209,"column":5,"offset":6883},"end":{"line":210,"column":6,"offset":6889},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":210,"column":6,"offset":6889},"end":{"line":210,"column":12,"offset":6895},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":210,"column":12,"offset":6895},"end":{"line":210,"column":30,"offset":6913},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":210,"column":30,"offset":6913},"end":{"line":210,"column":36,"offset":6919},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":210,"column":36,"offset":6919},"end":{"line":210,"column":62,"offset":6945},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":210,"column":62,"offset":6945},"end":{"line":210,"column":75,"offset":6958},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":210,"column":75,"offset":6958},"end":{"line":210,"column":159,"offset":7042},"indent":[]}}],"position":{"start":{"line":195,"column":1,"offset":6317},"end":{"line":210,"column":159,"offset":7042},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":212,"column":8,"offset":7051},"end":{"line":212,"column":41,"offset":7084},"indent":[]}}],"position":{"start":{"line":212,"column":1,"offset":7044},"end":{"line":212,"column":41,"offset":7084},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":213,"column":1,"offset":7085},"end":{"line":218,"column":4,"offset":7160},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":219,"column":1,"offset":7161},"end":{"line":220,"column":1,"offset":7180},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":220,"column":1,"offset":7180},"end":{"line":220,"column":5,"offset":7184},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":220,"column":5,"offset":7184},"end":{"line":222,"column":5,"offset":7322},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":222,"column":5,"offset":7322},"end":{"line":222,"column":9,"offset":7326},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":222,"column":9,"offset":7326},"end":{"line":223,"column":5,"offset":7331},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":223,"column":5,"offset":7331},"end":{"line":223,"column":27,"offset":7353},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":223,"column":27,"offset":7353},"end":{"line":224,"column":5,"offset":7358},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":224,"column":5,"offset":7358},"end":{"line":224,"column":9,"offset":7362},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":224,"column":9,"offset":7362},"end":{"line":225,"column":5,"offset":7367},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":225,"column":5,"offset":7367},"end":{"line":225,"column":12,"offset":7374},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":225,"column":12,"offset":7374},"end":{"line":225,"column":17,"offset":7379},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":225,"column":17,"offset":7379},"end":{"line":225,"column":25,"offset":7387},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":225,"column":25,"offset":7387},"end":{"line":225,"column":63,"offset":7425},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":225,"column":63,"offset":7425},"end":{"line":225,"column":66,"offset":7428},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":225,"column":66,"offset":7428},"end":{"line":225,"column":86,"offset":7448},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":225,"column":86,"offset":7448},"end":{"line":225,"column":89,"offset":7451},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":225,"column":89,"offset":7451},"end":{"line":225,"column":110,"offset":7472},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":225,"column":110,"offset":7472},"end":{"line":225,"column":119,"offset":7481},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":225,"column":119,"offset":7481},"end":{"line":226,"column":1,"offset":7483},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":226,"column":1,"offset":7483},"end":{"line":226,"column":5,"offset":7487},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":226,"column":5,"offset":7487},"end":{"line":228,"column":1,"offset":7503},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":228,"column":1,"offset":7503},"end":{"line":228,"column":5,"offset":7507},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":228,"column":5,"offset":7507},"end":{"line":230,"column":5,"offset":7614},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":230,"column":5,"offset":7614},"end":{"line":230,"column":9,"offset":7618},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":230,"column":9,"offset":7618},"end":{"line":231,"column":1,"offset":7619},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":231,"column":1,"offset":7619},"end":{"line":231,"column":23,"offset":7641},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":231,"column":23,"offset":7641},"end":{"line":231,"column":35,"offset":7653},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":231,"column":35,"offset":7653},"end":{"line":231,"column":61,"offset":7679},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":231,"column":61,"offset":7679},"end":{"line":232,"column":1,"offset":7680},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":232,"column":1,"offset":7680},"end":{"line":232,"column":5,"offset":7684},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":232,"column":5,"offset":7684},"end":{"line":233,"column":5,"offset":7689},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":233,"column":5,"offset":7689},"end":{"line":233,"column":8,"offset":7692},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":233,"column":8,"offset":7692},"end":{"line":233,"column":58,"offset":7742},"indent":[]}}],"position":{"start":{"line":219,"column":1,"offset":7161},"end":{"line":233,"column":58,"offset":7742},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":235,"column":1,"offset":7744},"end":{"line":236,"column":1,"offset":7762},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":236,"column":1,"offset":7762},"end":{"line":236,"column":5,"offset":7766},"indent":[]}}],"position":{"start":{"line":235,"column":1,"offset":7744},"end":{"line":236,"column":5,"offset":7766},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":237,"column":1,"offset":7767},"end":{"line":239,"column":4,"offset":7797},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":240,"column":1,"offset":7798},"end":{"line":240,"column":13,"offset":7810},"indent":[]}}],"position":{"start":{"line":240,"column":1,"offset":7798},"end":{"line":240,"column":13,"offset":7810},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":241,"column":1,"offset":7811},"end":{"line":247,"column":4,"offset":7890},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":248,"column":1,"offset":7891},"end":{"line":248,"column":8,"offset":7898},"indent":[]}}],"position":{"start":{"line":248,"column":1,"offset":7891},"end":{"line":248,"column":8,"offset":7898},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":249,"column":1,"offset":7899},"end":{"line":256,"column":4,"offset":8023},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":257,"column":1,"offset":8024},"end":{"line":258,"column":5,"offset":8033},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":260,"column":1,"offset":8035},"end":{"line":260,"column":11,"offset":8045},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":260,"column":11,"offset":8045},"end":{"line":260,"column":24,"offset":8058},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":260,"column":24,"offset":8058},"end":{"line":260,"column":107,"offset":8141},"indent":[]}}],"position":{"start":{"line":260,"column":1,"offset":8035},"end":{"line":260,"column":107,"offset":8141},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":262,"column":7,"offset":8149},"end":{"line":262,"column":10,"offset":8152},"indent":[]}}],"position":{"start":{"line":262,"column":1,"offset":8143},"end":{"line":262,"column":10,"offset":8152},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":263,"column":7,"offset":8159},"end":{"line":263,"column":10,"offset":8162},"indent":[]}}],"position":{"start":{"line":263,"column":1,"offset":8153},"end":{"line":263,"column":10,"offset":8162},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":265,"column":6,"offset":8169},"end":{"line":265,"column":10,"offset":8173},"indent":[]}}],"position":{"start":{"line":265,"column":1,"offset":8164},"end":{"line":265,"column":10,"offset":8173},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":266,"column":7,"offset":8180},"end":{"line":266,"column":13,"offset":8186},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":8174},"end":{"line":266,"column":13,"offset":8186},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":267,"column":1,"offset":8187},"end":{"line":267,"column":49,"offset":8235},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":267,"column":49,"offset":8235},"end":{"line":267,"column":57,"offset":8243},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":267,"column":57,"offset":8243},"end":{"line":267,"column":133,"offset":8319},"indent":[]}}],"position":{"start":{"line":267,"column":1,"offset":8187},"end":{"line":267,"column":133,"offset":8319},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":268,"column":1,"offset":8320},"end":{"line":278,"column":4,"offset":8515},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":279,"column":1,"offset":8516},"end":{"line":279,"column":5,"offset":8520},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":282,"column":1,"offset":8523},"end":{"line":283,"column":1,"offset":8605},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":283,"column":1,"offset":8605},"end":{"line":283,"column":5,"offset":8609},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":283,"column":5,"offset":8609},"end":{"line":284,"column":1,"offset":8610},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":284,"column":1,"offset":8610},"end":{"line":284,"column":5,"offset":8614},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":284,"column":5,"offset":8614},"end":{"line":285,"column":26,"offset":8640},"indent":[1]}}],"position":{"start":{"line":282,"column":1,"offset":8523},"end":{"line":285,"column":26,"offset":8640},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":286,"column":1,"offset":8641},"end":{"line":291,"column":4,"offset":8769},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":292,"column":1,"offset":8770},"end":{"line":292,"column":14,"offset":8783},"indent":[]}}],"position":{"start":{"line":292,"column":1,"offset":8770},"end":{"line":292,"column":14,"offset":8783},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":294,"column":1,"offset":8785},"end":{"line":307,"column":4,"offset":9067},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":309,"column":1,"offset":9069},"end":{"line":310,"column":5,"offset":9078},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":313,"column":7,"offset":9087},"end":{"line":313,"column":13,"offset":9093},"indent":[]}}],"position":{"start":{"line":313,"column":1,"offset":9081},"end":{"line":313,"column":13,"offset":9093},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":313,"column":13,"offset":9093}}}}