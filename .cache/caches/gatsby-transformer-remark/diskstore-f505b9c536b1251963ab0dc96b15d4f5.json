{"expireTime":9007200842248313000,"key":"transformer-remark-markdown-ast-ba43bf9f8439197952c56abb09212470-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54},"indent":[]}},{"type":"link","title":null,"url":"https://teachyourselfcs.com/","children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70},"indent":[]}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101},"indent":[]}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153},"indent":[1]}},{"type":"link","title":null,"url":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/","children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158},"indent":[]}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280},"indent":[]}},{"type":"link","title":null,"url":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html","children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289},"indent":[]}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344},"indent":[]}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396},"indent":[1]}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas: \n-primitive expressions\n-means of combination\n-means of abstraction","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":13,"column":22,"offset":625},"indent":[1,1,1]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":13,"column":22,"offset":625},"indent":[1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.2","position":{"start":{"line":14,"column":7,"offset":632},"end":{"line":14,"column":10,"offset":635},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":626},"end":{"line":14,"column":10,"offset":635},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"1.3","position":{"start":{"line":15,"column":7,"offset":642},"end":{"line":15,"column":10,"offset":645},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":636},"end":{"line":15,"column":10,"offset":645},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":17,"column":6,"offset":652},"end":{"line":17,"column":14,"offset":660},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":647},"end":{"line":17,"column":14,"offset":660},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L01","position":{"start":{"line":18,"column":7,"offset":667},"end":{"line":18,"column":10,"offset":670},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":661},"end":{"line":18,"column":10,"offset":670},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":20,"column":8,"offset":679},"end":{"line":20,"column":30,"offset":701},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":672},"end":{"line":20,"column":30,"offset":701},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":22,"column":1,"offset":703},"end":{"line":23,"column":1,"offset":847},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":23,"column":1,"offset":847},"end":{"line":23,"column":5,"offset":851},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":23,"column":5,"offset":851},"end":{"line":23,"column":16,"offset":862},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":23,"column":16,"offset":862},"end":{"line":23,"column":20,"offset":866},"indent":[]}},{"type":"text","value":" \nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like: \n","position":{"start":{"line":23,"column":20,"offset":866},"end":{"line":25,"column":1,"offset":1010},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":25,"column":1,"offset":1010},"end":{"line":25,"column":5,"offset":1014},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":25,"column":5,"offset":1014},"end":{"line":25,"column":16,"offset":1025},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":25,"column":16,"offset":1025},"end":{"line":25,"column":20,"offset":1029},"indent":[]}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":25,"column":20,"offset":1029},"end":{"line":26,"column":45,"offset":1074},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":26,"column":45,"offset":1074},"end":{"line":26,"column":49,"offset":1078},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":26,"column":49,"offset":1078},"end":{"line":26,"column":65,"offset":1094},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":26,"column":65,"offset":1094},"end":{"line":26,"column":69,"offset":1098},"indent":[]}},{"type":"text","value":"\nIn Scheme you can simply nest operators: \n","position":{"start":{"line":26,"column":69,"offset":1098},"end":{"line":28,"column":1,"offset":1141},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":1,"offset":1141},"end":{"line":28,"column":5,"offset":1145},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":28,"column":5,"offset":1145},"end":{"line":28,"column":22,"offset":1162},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":28,"column":22,"offset":1162},"end":{"line":28,"column":26,"offset":1166},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":26,"offset":1166},"end":{"line":29,"column":1,"offset":1167},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":29,"column":1,"offset":1167},"end":{"line":29,"column":5,"offset":1171},"indent":[]}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. \n","position":{"start":{"line":29,"column":5,"offset":1171},"end":{"line":31,"column":1,"offset":1289},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1289},"end":{"line":31,"column":5,"offset":1293},"indent":[]}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value. \n","position":{"start":{"line":31,"column":5,"offset":1293},"end":{"line":33,"column":1,"offset":1414},"indent":[1,1]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":33,"column":1,"offset":1414},"end":{"line":33,"column":12,"offset":1425},"indent":[]}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":33,"column":12,"offset":1425},"end":{"line":33,"column":68,"offset":1481},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":33,"column":68,"offset":1481},"end":{"line":33,"column":79,"offset":1492},"indent":[]}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":33,"column":79,"offset":1492},"end":{"line":33,"column":106,"offset":1519},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":33,"column":106,"offset":1519},"end":{"line":33,"column":109,"offset":1522},"indent":[]}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":33,"column":109,"offset":1522},"end":{"line":33,"column":189,"offset":1602},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":33,"column":189,"offset":1602},"end":{"line":33,"column":192,"offset":1605},"indent":[]}},{"type":"text","value":" to get 3.","position":{"start":{"line":33,"column":192,"offset":1605},"end":{"line":33,"column":202,"offset":1615},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":703},"end":{"line":33,"column":202,"offset":1615},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Define","position":{"start":{"line":35,"column":8,"offset":1624},"end":{"line":35,"column":14,"offset":1630},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1617},"end":{"line":35,"column":14,"offset":1630},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":36,"column":1,"offset":1631},"end":{"line":36,"column":9,"offset":1639},"indent":[]}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":36,"column":9,"offset":1639},"end":{"line":36,"column":73,"offset":1703},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1631},"end":{"line":36,"column":73,"offset":1703},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":37,"column":1,"offset":1704},"end":{"line":40,"column":4,"offset":1743},"indent":[1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":41,"column":1,"offset":1744},"end":{"line":41,"column":5,"offset":1748},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":43,"column":1,"offset":1750},"end":{"line":43,"column":72,"offset":1821},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":43,"column":72,"offset":1821},"end":{"line":43,"column":80,"offset":1829},"indent":[]}},{"type":"text","value":" as a function itself. \n","position":{"start":{"line":43,"column":80,"offset":1829},"end":{"line":44,"column":1,"offset":1853},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1853},"end":{"line":44,"column":5,"offset":1857},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":44,"column":5,"offset":1857},"end":{"line":45,"column":1,"offset":1858},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":45,"column":1,"offset":1858},"end":{"line":45,"column":5,"offset":1862},"indent":[]}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":45,"column":5,"offset":1862},"end":{"line":46,"column":184,"offset":2046},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":46,"column":184,"offset":2046},"end":{"line":46,"column":187,"offset":2049},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":46,"column":187,"offset":2049},"end":{"line":47,"column":1,"offset":2052},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":47,"column":1,"offset":2052},"end":{"line":47,"column":5,"offset":2056},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":47,"column":5,"offset":2056},"end":{"line":48,"column":1,"offset":2057},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":48,"column":1,"offset":2057},"end":{"line":48,"column":5,"offset":2061},"indent":[]}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":48,"column":5,"offset":2061},"end":{"line":49,"column":27,"offset":2088},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":49,"column":27,"offset":2088},"end":{"line":49,"column":35,"offset":2096},"indent":[]}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":49,"column":35,"offset":2096},"end":{"line":49,"column":86,"offset":2147},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":49,"column":86,"offset":2147},"end":{"line":49,"column":95,"offset":2156},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":49,"column":95,"offset":2156},"end":{"line":49,"column":97,"offset":2158},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1750},"end":{"line":49,"column":97,"offset":2158},"indent":[1,1,1,1,1,1]}},{"type":"html","value":"<br> ","position":{"start":{"line":51,"column":1,"offset":2160},"end":{"line":51,"column":6,"offset":2165},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":53,"column":1,"offset":2167},"end":{"line":54,"column":1,"offset":2211},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":54,"column":1,"offset":2211},"end":{"line":54,"column":5,"offset":2215},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":54,"column":5,"offset":2215},"end":{"line":55,"column":1,"offset":2216},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":55,"column":1,"offset":2216},"end":{"line":55,"column":22,"offset":2237},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":55,"column":22,"offset":2237},"end":{"line":56,"column":1,"offset":2238},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":56,"column":1,"offset":2238},"end":{"line":56,"column":5,"offset":2242},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":2167},"end":{"line":56,"column":5,"offset":2242},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":58,"column":1,"offset":2244},"end":{"line":58,"column":152,"offset":2395},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":2244},"end":{"line":58,"column":152,"offset":2395},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":60,"column":8,"offset":2404},"end":{"line":60,"column":20,"offset":2416},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":2397},"end":{"line":60,"column":20,"offset":2416},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":62,"column":1,"offset":2418},"end":{"line":62,"column":56,"offset":2473},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":2418},"end":{"line":62,"column":56,"offset":2473},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":63,"column":1,"offset":2474},"end":{"line":68,"column":4,"offset":2565},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":69,"column":1,"offset":2566},"end":{"line":69,"column":5,"offset":2570},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":71,"column":1,"offset":2572},"end":{"line":71,"column":37,"offset":2608},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":71,"column":37,"offset":2608},"end":{"line":71,"column":41,"offset":2612},"indent":[]}},{"type":"text","value":" is a function. \n","position":{"start":{"line":71,"column":41,"offset":2612},"end":{"line":72,"column":1,"offset":2629},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":72,"column":1,"offset":2629},"end":{"line":72,"column":5,"offset":2633},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":72,"column":5,"offset":2633},"end":{"line":73,"column":1,"offset":2634},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":73,"column":1,"offset":2634},"end":{"line":73,"column":5,"offset":2638},"indent":[]}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":73,"column":5,"offset":2638},"end":{"line":74,"column":66,"offset":2704},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":74,"column":66,"offset":2704},"end":{"line":74,"column":89,"offset":2727},"indent":[]}},{"type":"text","value":" would be true, because fly ends in y. \n","position":{"start":{"line":74,"column":89,"offset":2727},"end":{"line":75,"column":1,"offset":2767},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2767},"end":{"line":75,"column":5,"offset":2771},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":75,"column":5,"offset":2771},"end":{"line":76,"column":1,"offset":2772},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":76,"column":1,"offset":2772},"end":{"line":76,"column":5,"offset":2776},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":76,"column":5,"offset":2776},"end":{"line":77,"column":21,"offset":2797},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":77,"column":21,"offset":2797},"end":{"line":77,"column":25,"offset":2801},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":77,"column":25,"offset":2801},"end":{"line":78,"column":1,"offset":2855},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2855},"end":{"line":78,"column":5,"offset":2859},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":78,"column":5,"offset":2859},"end":{"line":79,"column":1,"offset":2860},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":79,"column":1,"offset":2860},"end":{"line":79,"column":5,"offset":2864},"indent":[]}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":79,"column":5,"offset":2864},"end":{"line":80,"column":21,"offset":2885},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":80,"column":21,"offset":2885},"end":{"line":80,"column":25,"offset":2889},"indent":[]}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":80,"column":25,"offset":2889},"end":{"line":81,"column":1,"offset":2944},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":81,"column":1,"offset":2944},"end":{"line":81,"column":5,"offset":2948},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":81,"column":5,"offset":2948},"end":{"line":82,"column":1,"offset":2949},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":82,"column":1,"offset":2949},"end":{"line":82,"column":5,"offset":2953},"indent":[]}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":82,"column":5,"offset":2953},"end":{"line":83,"column":58,"offset":3011},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":83,"column":58,"offset":3011},"end":{"line":83,"column":61,"offset":3014},"indent":[]}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":83,"column":61,"offset":3014},"end":{"line":83,"column":145,"offset":3098},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":83,"column":145,"offset":3098},"end":{"line":83,"column":153,"offset":3106},"indent":[]}},{"type":"text","value":" in the code block above.","position":{"start":{"line":83,"column":153,"offset":3106},"end":{"line":83,"column":178,"offset":3131},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":2572},"end":{"line":83,"column":178,"offset":3131},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L02","position":{"start":{"line":85,"column":7,"offset":3139},"end":{"line":85,"column":10,"offset":3142},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":3133},"end":{"line":85,"column":10,"offset":3142},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Recursion","position":{"start":{"line":87,"column":8,"offset":3151},"end":{"line":87,"column":17,"offset":3160},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":3144},"end":{"line":87,"column":17,"offset":3160},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":88,"column":1,"offset":3161},"end":{"line":99,"column":4,"offset":3360},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":100,"column":1,"offset":3361},"end":{"line":100,"column":5,"offset":3365},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":102,"column":1,"offset":3367},"end":{"line":103,"column":1,"offset":3583},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":103,"column":1,"offset":3583},"end":{"line":103,"column":5,"offset":3587},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":103,"column":5,"offset":3587},"end":{"line":104,"column":1,"offset":3588},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":104,"column":1,"offset":3588},"end":{"line":104,"column":5,"offset":3592},"indent":[]}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":104,"column":5,"offset":3592},"end":{"line":105,"column":72,"offset":3664},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":105,"column":72,"offset":3664},"end":{"line":105,"column":81,"offset":3673},"indent":[]}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":105,"column":81,"offset":3673},"end":{"line":106,"column":1,"offset":3692},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":106,"column":1,"offset":3692},"end":{"line":106,"column":5,"offset":3696},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":106,"column":5,"offset":3696},"end":{"line":107,"column":1,"offset":3697},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":107,"column":1,"offset":3697},"end":{"line":107,"column":5,"offset":3701},"indent":[]}},{"type":"text","value":"\nLets say ","position":{"start":{"line":107,"column":5,"offset":3701},"end":{"line":108,"column":10,"offset":3711},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":108,"column":10,"offset":3711},"end":{"line":108,"column":16,"offset":3717},"indent":[]}},{"type":"text","value":" gets called with ","position":{"start":{"line":108,"column":16,"offset":3717},"end":{"line":108,"column":34,"offset":3735},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":108,"column":34,"offset":3735},"end":{"line":108,"column":42,"offset":3743},"indent":[]}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":108,"column":42,"offset":3743},"end":{"line":109,"column":24,"offset":3768},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":109,"column":24,"offset":3768},"end":{"line":109,"column":33,"offset":3777},"indent":[]}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":109,"column":33,"offset":3777},"end":{"line":109,"column":107,"offset":3851},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":109,"column":107,"offset":3851},"end":{"line":109,"column":116,"offset":3860},"indent":[]}},{"type":"text","value":" is false because ","position":{"start":{"line":109,"column":116,"offset":3860},"end":{"line":109,"column":134,"offset":3878},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":109,"column":134,"offset":3878},"end":{"line":109,"column":137,"offset":3881},"indent":[]}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":109,"column":137,"offset":3881},"end":{"line":109,"column":161,"offset":3905},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":109,"column":161,"offset":3905},"end":{"line":109,"column":167,"offset":3911},"indent":[]}},{"type":"text","value":" again with the argument ","position":{"start":{"line":109,"column":167,"offset":3911},"end":{"line":109,"column":192,"offset":3936},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":109,"column":192,"offset":3936},"end":{"line":109,"column":200,"offset":3944},"indent":[]}},{"type":"text","value":". This is because ","position":{"start":{"line":109,"column":200,"offset":3944},"end":{"line":109,"column":218,"offset":3962},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":109,"column":218,"offset":3962},"end":{"line":109,"column":224,"offset":3968},"indent":[]}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":109,"column":224,"offset":3968},"end":{"line":109,"column":245,"offset":3989},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":109,"column":245,"offset":3989},"end":{"line":109,"column":252,"offset":3996},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":109,"column":252,"offset":3996},"end":{"line":109,"column":257,"offset":4001},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":109,"column":257,"offset":4001},"end":{"line":109,"column":260,"offset":4004},"indent":[]}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":109,"column":260,"offset":4004},"end":{"line":109,"column":285,"offset":4029},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":109,"column":285,"offset":4029},"end":{"line":109,"column":291,"offset":4035},"indent":[]}},{"type":"text","value":" gets called repeatedly until \nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":109,"column":291,"offset":4035},"end":{"line":110,"column":96,"offset":4161},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":110,"column":96,"offset":4161},"end":{"line":110,"column":111,"offset":4176},"indent":[]}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":110,"column":111,"offset":4176},"end":{"line":110,"column":182,"offset":4247},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":3367},"end":{"line":110,"column":182,"offset":4247},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":112,"column":8,"offset":4256},"end":{"line":112,"column":19,"offset":4267},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":4249},"end":{"line":112,"column":19,"offset":4267},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":113,"column":1,"offset":4268},"end":{"line":113,"column":14,"offset":4281},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":4268},"end":{"line":113,"column":14,"offset":4281},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":114,"column":1,"offset":4282},"end":{"line":129,"column":4,"offset":4697},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":130,"column":1,"offset":4698},"end":{"line":130,"column":5,"offset":4702},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":132,"column":1,"offset":4704},"end":{"line":132,"column":141,"offset":4844},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":4704},"end":{"line":132,"column":141,"offset":4844},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":134,"column":8,"offset":4853},"end":{"line":134,"column":30,"offset":4875},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":4846},"end":{"line":134,"column":30,"offset":4875},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":135,"column":1,"offset":4876},"end":{"line":135,"column":199,"offset":5074},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":4876},"end":{"line":135,"column":199,"offset":5074},"indent":[]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":137,"column":8,"offset":5083},"end":{"line":137,"column":30,"offset":5105},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":5076},"end":{"line":137,"column":30,"offset":5105},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":139,"column":1,"offset":5107},"end":{"line":140,"column":1,"offset":5182},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":140,"column":1,"offset":5182},"end":{"line":140,"column":5,"offset":5186},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":140,"column":5,"offset":5186},"end":{"line":141,"column":1,"offset":5187},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":141,"column":1,"offset":5187},"end":{"line":141,"column":5,"offset":5191},"indent":[]}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":141,"column":5,"offset":5191},"end":{"line":143,"column":1,"offset":5253},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":143,"column":1,"offset":5253},"end":{"line":143,"column":5,"offset":5257},"indent":[]}},{"type":"break","position":{"start":{"line":143,"column":5,"offset":5257},"end":{"line":144,"column":1,"offset":5260},"indent":[1]}},{"type":"text","value":"Therefore ","position":{"start":{"line":144,"column":1,"offset":5260},"end":{"line":144,"column":11,"offset":5270},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":144,"column":11,"offset":5270},"end":{"line":144,"column":19,"offset":5278},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":144,"column":19,"offset":5278},"end":{"line":144,"column":24,"offset":5283},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":144,"column":24,"offset":5283},"end":{"line":144,"column":34,"offset":5293},"indent":[]}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":144,"column":34,"offset":5293},"end":{"line":145,"column":1,"offset":5342},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":145,"column":1,"offset":5342},"end":{"line":145,"column":5,"offset":5346},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":5107},"end":{"line":145,"column":5,"offset":5346},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Cond","position":{"start":{"line":147,"column":8,"offset":5355},"end":{"line":147,"column":12,"offset":5359},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":5348},"end":{"line":147,"column":12,"offset":5359},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":148,"column":1,"offset":5360},"end":{"line":153,"column":4,"offset":5471},"indent":[1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":154,"column":1,"offset":5472},"end":{"line":155,"column":5,"offset":5481},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":157,"column":1,"offset":5483},"end":{"line":157,"column":7,"offset":5489},"indent":[]}},{"type":"text","value":" allows for multiple test cases, and will return \nthe first clause that is true. \n","position":{"start":{"line":157,"column":7,"offset":5489},"end":{"line":159,"column":1,"offset":5571},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":159,"column":1,"offset":5571},"end":{"line":159,"column":5,"offset":5575},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":159,"column":5,"offset":5575},"end":{"line":160,"column":1,"offset":5576},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":160,"column":1,"offset":5576},"end":{"line":160,"column":5,"offset":5580},"indent":[]}},{"type":"text","value":"\nLets try ","position":{"start":{"line":160,"column":5,"offset":5580},"end":{"line":161,"column":10,"offset":5590},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":161,"column":10,"offset":5590},"end":{"line":161,"column":14,"offset":5594},"indent":[]}},{"type":"text","value":". Since ","position":{"start":{"line":161,"column":14,"offset":5594},"end":{"line":161,"column":22,"offset":5602},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":161,"column":22,"offset":5602},"end":{"line":161,"column":30,"offset":5610},"indent":[]}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":161,"column":30,"offset":5610},"end":{"line":161,"column":50,"offset":5630},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":161,"column":50,"offset":5630},"end":{"line":161,"column":53,"offset":5633},"indent":[]}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":161,"column":53,"offset":5633},"end":{"line":161,"column":90,"offset":5670},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":161,"column":90,"offset":5670},"end":{"line":161,"column":96,"offset":5676},"indent":[]}},{"type":"text","value":". \n","position":{"start":{"line":161,"column":96,"offset":5676},"end":{"line":162,"column":1,"offset":5679},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":162,"column":1,"offset":5679},"end":{"line":162,"column":5,"offset":5683},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":162,"column":5,"offset":5683},"end":{"line":163,"column":1,"offset":5684},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":163,"column":1,"offset":5684},"end":{"line":163,"column":5,"offset":5688},"indent":[]}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":163,"column":5,"offset":5688},"end":{"line":164,"column":14,"offset":5702},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":164,"column":14,"offset":5702},"end":{"line":164,"column":18,"offset":5706},"indent":[]}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":164,"column":18,"offset":5706},"end":{"line":164,"column":90,"offset":5778},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":164,"column":90,"offset":5778},"end":{"line":164,"column":94,"offset":5782},"indent":[]}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":164,"column":94,"offset":5782},"end":{"line":164,"column":125,"offset":5813},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":164,"column":125,"offset":5813},"end":{"line":164,"column":131,"offset":5819},"indent":[]}},{"type":"text","value":" is returned. \n","position":{"start":{"line":164,"column":131,"offset":5819},"end":{"line":165,"column":1,"offset":5834},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":165,"column":1,"offset":5834},"end":{"line":165,"column":5,"offset":5838},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":165,"column":5,"offset":5838},"end":{"line":166,"column":1,"offset":5839},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":166,"column":1,"offset":5839},"end":{"line":166,"column":5,"offset":5843},"indent":[]}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":166,"column":5,"offset":5843},"end":{"line":167,"column":14,"offset":5857},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":167,"column":14,"offset":5857},"end":{"line":167,"column":18,"offset":5861},"indent":[]}},{"type":"text","value":". The remainder is ","position":{"start":{"line":167,"column":18,"offset":5861},"end":{"line":167,"column":37,"offset":5880},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":167,"column":37,"offset":5880},"end":{"line":167,"column":40,"offset":5883},"indent":[]}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":167,"column":40,"offset":5883},"end":{"line":167,"column":77,"offset":5920},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":167,"column":77,"offset":5920},"end":{"line":167,"column":81,"offset":5924},"indent":[]}},{"type":"text","value":"  does not have a ","position":{"start":{"line":167,"column":81,"offset":5924},"end":{"line":167,"column":99,"offset":5942},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":167,"column":99,"offset":5942},"end":{"line":167,"column":102,"offset":5945},"indent":[]}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":167,"column":102,"offset":5945},"end":{"line":167,"column":133,"offset":5976},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":167,"column":133,"offset":5976},"end":{"line":167,"column":139,"offset":5982},"indent":[]}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":167,"column":139,"offset":5982},"end":{"line":167,"column":167,"offset":6010},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":167,"column":167,"offset":6010},"end":{"line":167,"column":171,"offset":6014},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":167,"column":171,"offset":6014},"end":{"line":168,"column":1,"offset":6016},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":168,"column":1,"offset":6016},"end":{"line":168,"column":5,"offset":6020},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":168,"column":5,"offset":6020},"end":{"line":169,"column":1,"offset":6021},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":169,"column":1,"offset":6021},"end":{"line":169,"column":5,"offset":6025},"indent":[]}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":169,"column":5,"offset":6025},"end":{"line":171,"column":1,"offset":6045},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":171,"column":1,"offset":6045},"end":{"line":171,"column":5,"offset":6049},"indent":[]}},{"type":"text","value":"\nIf a ","position":{"start":{"line":171,"column":5,"offset":6049},"end":{"line":172,"column":6,"offset":6055},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":172,"column":6,"offset":6055},"end":{"line":172,"column":12,"offset":6061},"indent":[]}},{"type":"text","value":" does not have an ","position":{"start":{"line":172,"column":12,"offset":6061},"end":{"line":172,"column":30,"offset":6079},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":172,"column":30,"offset":6079},"end":{"line":172,"column":36,"offset":6085},"indent":[]}},{"type":"text","value":" statement it will return ","position":{"start":{"line":172,"column":36,"offset":6085},"end":{"line":172,"column":62,"offset":6111},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":172,"column":62,"offset":6111},"end":{"line":172,"column":75,"offset":6124},"indent":[]}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":172,"column":75,"offset":6124},"end":{"line":172,"column":159,"offset":6208},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":5483},"end":{"line":172,"column":159,"offset":6208},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":6,"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":174,"column":8,"offset":6217},"end":{"line":174,"column":41,"offset":6250},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":6210},"end":{"line":174,"column":41,"offset":6250},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":175,"column":1,"offset":6251},"end":{"line":180,"column":4,"offset":6326},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":181,"column":1,"offset":6327},"end":{"line":182,"column":1,"offset":6346},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":182,"column":1,"offset":6346},"end":{"line":182,"column":5,"offset":6350},"indent":[]}},{"type":"text","value":"\n    evaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n    ","position":{"start":{"line":182,"column":5,"offset":6350},"end":{"line":184,"column":5,"offset":6488},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":184,"column":5,"offset":6488},"end":{"line":184,"column":9,"offset":6492},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":184,"column":9,"offset":6492},"end":{"line":185,"column":5,"offset":6497},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":185,"column":5,"offset":6497},"end":{"line":185,"column":27,"offset":6519},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":185,"column":27,"offset":6519},"end":{"line":186,"column":5,"offset":6524},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":186,"column":5,"offset":6524},"end":{"line":186,"column":9,"offset":6528},"indent":[]}},{"type":"text","value":"\n    ","position":{"start":{"line":186,"column":9,"offset":6528},"end":{"line":187,"column":5,"offset":6533},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":187,"column":5,"offset":6533},"end":{"line":187,"column":12,"offset":6540},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":187,"column":12,"offset":6540},"end":{"line":187,"column":17,"offset":6545},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":187,"column":17,"offset":6545},"end":{"line":187,"column":25,"offset":6553},"indent":[]}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":187,"column":25,"offset":6553},"end":{"line":187,"column":63,"offset":6591},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":187,"column":63,"offset":6591},"end":{"line":187,"column":66,"offset":6594},"indent":[]}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":187,"column":66,"offset":6594},"end":{"line":187,"column":86,"offset":6614},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":187,"column":86,"offset":6614},"end":{"line":187,"column":89,"offset":6617},"indent":[]}},{"type":"text","value":" will be called with ","position":{"start":{"line":187,"column":89,"offset":6617},"end":{"line":187,"column":110,"offset":6638},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":187,"column":110,"offset":6638},"end":{"line":187,"column":119,"offset":6647},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":187,"column":119,"offset":6647},"end":{"line":188,"column":1,"offset":6649},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":188,"column":1,"offset":6649},"end":{"line":188,"column":5,"offset":6653},"indent":[]}},{"type":"text","value":"\nNormal Order: \n","position":{"start":{"line":188,"column":5,"offset":6653},"end":{"line":190,"column":1,"offset":6669},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":190,"column":1,"offset":6669},"end":{"line":190,"column":5,"offset":6673},"indent":[]}},{"type":"text","value":"\n    evaluates the outsides first, but instead of passing primitive values it passes the expressions. \n    ","position":{"start":{"line":190,"column":5,"offset":6673},"end":{"line":192,"column":5,"offset":6780},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":192,"column":5,"offset":6780},"end":{"line":192,"column":9,"offset":6784},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":192,"column":9,"offset":6784},"end":{"line":193,"column":1,"offset":6785},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":193,"column":1,"offset":6785},"end":{"line":193,"column":23,"offset":6807},"indent":[]}},{"type":"text","value":" turns into ","position":{"start":{"line":193,"column":23,"offset":6807},"end":{"line":193,"column":35,"offset":6819},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":193,"column":35,"offset":6819},"end":{"line":193,"column":61,"offset":6845},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":193,"column":61,"offset":6845},"end":{"line":194,"column":1,"offset":6846},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":194,"column":1,"offset":6846},"end":{"line":194,"column":5,"offset":6850},"indent":[]}},{"type":"text","value":"\nNow ","position":{"start":{"line":194,"column":5,"offset":6850},"end":{"line":195,"column":5,"offset":6855},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":195,"column":5,"offset":6855},"end":{"line":195,"column":8,"offset":6858},"indent":[]}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":195,"column":8,"offset":6858},"end":{"line":195,"column":58,"offset":6908},"indent":[]}}],"position":{"start":{"line":181,"column":1,"offset":6327},"end":{"line":195,"column":58,"offset":6908},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":197,"column":1,"offset":6910},"end":{"line":198,"column":1,"offset":6928},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":198,"column":1,"offset":6928},"end":{"line":198,"column":5,"offset":6932},"indent":[]}}],"position":{"start":{"line":197,"column":1,"offset":6910},"end":{"line":198,"column":5,"offset":6932},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":199,"column":1,"offset":6933},"end":{"line":201,"column":4,"offset":6963},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"applicative ","position":{"start":{"line":202,"column":1,"offset":6964},"end":{"line":202,"column":13,"offset":6976},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":6964},"end":{"line":202,"column":13,"offset":6976},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":203,"column":1,"offset":6977},"end":{"line":209,"column":4,"offset":7056},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"normal ","position":{"start":{"line":210,"column":1,"offset":7057},"end":{"line":210,"column":8,"offset":7064},"indent":[]}}],"position":{"start":{"line":210,"column":1,"offset":7057},"end":{"line":210,"column":8,"offset":7064},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":211,"column":1,"offset":7065},"end":{"line":218,"column":4,"offset":7189},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":219,"column":1,"offset":7190},"end":{"line":220,"column":5,"offset":7199},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":222,"column":1,"offset":7201},"end":{"line":222,"column":11,"offset":7211},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":222,"column":11,"offset":7211},"end":{"line":222,"column":24,"offset":7224},"indent":[]}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":222,"column":24,"offset":7224},"end":{"line":222,"column":107,"offset":7307},"indent":[]}}],"position":{"start":{"line":222,"column":1,"offset":7201},"end":{"line":222,"column":107,"offset":7307},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L03","position":{"start":{"line":224,"column":7,"offset":7315},"end":{"line":224,"column":10,"offset":7318},"indent":[]}}],"position":{"start":{"line":224,"column":1,"offset":7309},"end":{"line":224,"column":10,"offset":7318},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"L04","position":{"start":{"line":225,"column":7,"offset":7325},"end":{"line":225,"column":10,"offset":7328},"indent":[]}}],"position":{"start":{"line":225,"column":1,"offset":7319},"end":{"line":225,"column":10,"offset":7328},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"LABS","position":{"start":{"line":227,"column":6,"offset":7335},"end":{"line":227,"column":10,"offset":7339},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":7330},"end":{"line":227,"column":10,"offset":7339},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":228,"column":7,"offset":7346},"end":{"line":228,"column":13,"offset":7352},"indent":[]}}],"position":{"start":{"line":228,"column":1,"offset":7340},"end":{"line":228,"column":13,"offset":7352},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":229,"column":1,"offset":7353},"end":{"line":229,"column":49,"offset":7401},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":229,"column":49,"offset":7401},"end":{"line":229,"column":57,"offset":7409},"indent":[]}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":229,"column":57,"offset":7409},"end":{"line":229,"column":133,"offset":7485},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":7353},"end":{"line":229,"column":133,"offset":7485},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":230,"column":1,"offset":7486},"end":{"line":240,"column":4,"offset":7681},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":241,"column":1,"offset":7682},"end":{"line":241,"column":5,"offset":7686},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":244,"column":1,"offset":7689},"end":{"line":245,"column":1,"offset":7771},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":245,"column":1,"offset":7771},"end":{"line":245,"column":5,"offset":7775},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":245,"column":5,"offset":7775},"end":{"line":246,"column":1,"offset":7776},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":246,"column":1,"offset":7776},"end":{"line":246,"column":5,"offset":7780},"indent":[]}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":246,"column":5,"offset":7780},"end":{"line":247,"column":26,"offset":7806},"indent":[1]}}],"position":{"start":{"line":244,"column":1,"offset":7689},"end":{"line":247,"column":26,"offset":7806},"indent":[1,1,1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":248,"column":1,"offset":7807},"end":{"line":253,"column":4,"offset":7935},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":254,"column":1,"offset":7936},"end":{"line":254,"column":14,"offset":7949},"indent":[]}}],"position":{"start":{"line":254,"column":1,"offset":7936},"end":{"line":254,"column":14,"offset":7949},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":256,"column":1,"offset":7951},"end":{"line":269,"column":4,"offset":8233},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<br>\n<br>","position":{"start":{"line":271,"column":1,"offset":8235},"end":{"line":272,"column":5,"offset":8244},"indent":[1]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":275,"column":7,"offset":8253},"end":{"line":275,"column":13,"offset":8259},"indent":[]}}],"position":{"start":{"line":275,"column":1,"offset":8247},"end":{"line":275,"column":13,"offset":8259},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":275,"column":13,"offset":8259}}}}