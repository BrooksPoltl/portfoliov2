{"expireTime":9007200842249789000,"key":"transformer-remark-markdown-html-ast-121bcb7801d7e98e2e01a408bd23c3df-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.\n","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":13,"column":1,"offset":623}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":623},"end":{"line":13,"column":5,"offset":627}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":5,"offset":627},"end":{"line":14,"column":1,"offset":628}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":628},"end":{"line":14,"column":5,"offset":632}}},{"type":"text","value":"\nmeans of combination: The ability to combine simple entities.\n","position":{"start":{"line":14,"column":5,"offset":632},"end":{"line":16,"column":1,"offset":696}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":16,"column":5,"offset":700}}},{"type":"text","value":"\n","position":{"start":{"line":16,"column":5,"offset":700},"end":{"line":17,"column":1,"offset":701}}},{"type":"raw","value":"<br>","position":{"start":{"line":17,"column":1,"offset":701},"end":{"line":17,"column":5,"offset":705}}},{"type":"text","value":"\nmeans of abstraction: The ability to name and manipulate combined elements.\n","position":{"start":{"line":17,"column":5,"offset":705},"end":{"line":19,"column":1,"offset":782}}},{"type":"raw","value":"<br>","position":{"start":{"line":19,"column":1,"offset":782},"end":{"line":19,"column":5,"offset":786}}},{"type":"text","value":"\n","position":{"start":{"line":19,"column":5,"offset":786},"end":{"line":20,"column":1,"offset":787}}},{"type":"raw","value":"<br>","position":{"start":{"line":20,"column":1,"offset":787},"end":{"line":20,"column":5,"offset":791}}},{"type":"text","value":"\nBreaking down a compound expression:\n","position":{"start":{"line":20,"column":5,"offset":791},"end":{"line":22,"column":1,"offset":829}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":1,"offset":829},"end":{"line":22,"column":5,"offset":833}}},{"type":"text","value":"\ncombination: ","position":{"start":{"line":22,"column":5,"offset":833},"end":{"line":23,"column":14,"offset":847}}},{"type":"raw","value":"<code class=\"language-text\">(+ 137 349)</code>","position":{"start":{"line":23,"column":14,"offset":847},"end":{"line":23,"column":27,"offset":860}}},{"type":"text","value":"\n","position":{"start":{"line":23,"column":27,"offset":860},"end":{"line":24,"column":1,"offset":861}}},{"type":"raw","value":"<br>","position":{"start":{"line":24,"column":1,"offset":861},"end":{"line":24,"column":5,"offset":865}}},{"type":"text","value":"\noperator: ","position":{"start":{"line":24,"column":5,"offset":865},"end":{"line":25,"column":11,"offset":876}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":25,"column":11,"offset":876},"end":{"line":25,"column":14,"offset":879}}},{"type":"text","value":"\n","position":{"start":{"line":25,"column":14,"offset":879},"end":{"line":26,"column":1,"offset":880}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":1,"offset":880},"end":{"line":26,"column":5,"offset":884}}},{"type":"text","value":"\noperands: ","position":{"start":{"line":26,"column":5,"offset":884},"end":{"line":27,"column":11,"offset":895}}},{"type":"raw","value":"<code class=\"language-text\">137</code>","position":{"start":{"line":27,"column":11,"offset":895},"end":{"line":27,"column":16,"offset":900}}},{"type":"text","value":" ","position":{"start":{"line":27,"column":16,"offset":900},"end":{"line":27,"column":17,"offset":901}}},{"type":"raw","value":"<code class=\"language-text\">349</code>","position":{"start":{"line":27,"column":17,"offset":901},"end":{"line":27,"column":22,"offset":906}}},{"type":"text","value":"\n","position":{"start":{"line":27,"column":22,"offset":906},"end":{"line":28,"column":1,"offset":907}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":1,"offset":907},"end":{"line":28,"column":5,"offset":911}}},{"type":"text","value":"\n","position":{"start":{"line":28,"column":5,"offset":911},"end":{"line":29,"column":1,"offset":912}}},{"type":"raw","value":"<br>","position":{"start":{"line":29,"column":1,"offset":912},"end":{"line":29,"column":5,"offset":916}}},{"type":"text","value":"\nThe interpreter runs in a “read-eval-print” loop. That is why it is not necessary to print stuff out like in other languages.\n","position":{"start":{"line":29,"column":5,"offset":916},"end":{"line":31,"column":1,"offset":1043}}},{"type":"raw","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1043},"end":{"line":31,"column":5,"offset":1047}}},{"type":"text","value":"\nEnvironment: ","position":{"start":{"line":31,"column":5,"offset":1047},"end":{"line":32,"column":14,"offset":1061}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":32,"column":14,"offset":1061}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":33,"column":7,"offset":1068},"end":{"line":33,"column":10,"offset":1071}}}],"position":{"start":{"line":33,"column":1,"offset":1062},"end":{"line":33,"column":10,"offset":1071}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":34,"column":7,"offset":1078},"end":{"line":34,"column":10,"offset":1081}}}],"position":{"start":{"line":34,"column":1,"offset":1072},"end":{"line":34,"column":10,"offset":1081}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":36,"column":6,"offset":1088},"end":{"line":36,"column":14,"offset":1096}}}],"position":{"start":{"line":36,"column":1,"offset":1083},"end":{"line":36,"column":14,"offset":1096}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":37,"column":7,"offset":1103},"end":{"line":37,"column":10,"offset":1106}}}],"position":{"start":{"line":37,"column":1,"offset":1097},"end":{"line":37,"column":10,"offset":1106}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":39,"column":8,"offset":1115},"end":{"line":39,"column":30,"offset":1137}}}],"position":{"start":{"line":39,"column":1,"offset":1108},"end":{"line":39,"column":30,"offset":1137}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":41,"column":1,"offset":1139},"end":{"line":42,"column":1,"offset":1283}}},{"type":"raw","value":"<br>","position":{"start":{"line":42,"column":1,"offset":1283},"end":{"line":42,"column":5,"offset":1287}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":42,"column":5,"offset":1287},"end":{"line":42,"column":16,"offset":1298}}},{"type":"raw","value":"<br>","position":{"start":{"line":42,"column":16,"offset":1298},"end":{"line":42,"column":20,"offset":1302}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":42,"column":20,"offset":1302},"end":{"line":44,"column":1,"offset":1446}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1446},"end":{"line":44,"column":5,"offset":1450}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":44,"column":5,"offset":1450},"end":{"line":44,"column":16,"offset":1461}}},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":16,"offset":1461},"end":{"line":44,"column":20,"offset":1465}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":44,"column":20,"offset":1465},"end":{"line":45,"column":45,"offset":1510}}},{"type":"raw","value":"<br>","position":{"start":{"line":45,"column":45,"offset":1510},"end":{"line":45,"column":49,"offset":1514}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":45,"column":49,"offset":1514},"end":{"line":45,"column":65,"offset":1530}}},{"type":"raw","value":"<br>","position":{"start":{"line":45,"column":65,"offset":1530},"end":{"line":45,"column":69,"offset":1534}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":45,"column":69,"offset":1534},"end":{"line":47,"column":1,"offset":1577}}},{"type":"raw","value":"<br>","position":{"start":{"line":47,"column":1,"offset":1577},"end":{"line":47,"column":5,"offset":1581}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":47,"column":5,"offset":1581},"end":{"line":47,"column":22,"offset":1598}}},{"type":"raw","value":"<br>","position":{"start":{"line":47,"column":22,"offset":1598},"end":{"line":47,"column":26,"offset":1602}}},{"type":"text","value":"\n","position":{"start":{"line":47,"column":26,"offset":1602},"end":{"line":48,"column":1,"offset":1603}}},{"type":"raw","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1603},"end":{"line":48,"column":5,"offset":1607}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":48,"column":5,"offset":1607},"end":{"line":50,"column":1,"offset":1725}}},{"type":"raw","value":"<br>","position":{"start":{"line":50,"column":1,"offset":1725},"end":{"line":50,"column":5,"offset":1729}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":50,"column":5,"offset":1729},"end":{"line":52,"column":1,"offset":1850}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":52,"column":1,"offset":1850},"end":{"line":52,"column":12,"offset":1861}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":52,"column":12,"offset":1861},"end":{"line":52,"column":68,"offset":1917}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":52,"column":68,"offset":1917},"end":{"line":52,"column":79,"offset":1928}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":52,"column":79,"offset":1928},"end":{"line":52,"column":106,"offset":1955}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":52,"column":106,"offset":1955},"end":{"line":52,"column":109,"offset":1958}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":52,"column":109,"offset":1958},"end":{"line":52,"column":189,"offset":2038}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":52,"column":189,"offset":2038},"end":{"line":52,"column":192,"offset":2041}}},{"type":"text","value":" to get 3.","position":{"start":{"line":52,"column":192,"offset":2041},"end":{"line":52,"column":202,"offset":2051}}}],"position":{"start":{"line":41,"column":1,"offset":1139},"end":{"line":52,"column":202,"offset":2051}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":54,"column":8,"offset":2060},"end":{"line":54,"column":14,"offset":2066}}}],"position":{"start":{"line":54,"column":1,"offset":2053},"end":{"line":54,"column":14,"offset":2066}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":55,"column":1,"offset":2067},"end":{"line":55,"column":9,"offset":2075}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":55,"column":9,"offset":2075},"end":{"line":55,"column":73,"offset":2139}}}],"position":{"start":{"line":55,"column":1,"offset":2067},"end":{"line":55,"column":73,"offset":2139}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":56,"column":1,"offset":2140},"end":{"line":59,"column":4,"offset":2179}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":60,"column":1,"offset":2180},"end":{"line":60,"column":5,"offset":2184}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":62,"column":1,"offset":2186},"end":{"line":62,"column":72,"offset":2257}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":62,"column":72,"offset":2257},"end":{"line":62,"column":80,"offset":2265}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":62,"column":80,"offset":2265},"end":{"line":63,"column":1,"offset":2289}}},{"type":"raw","value":"<br>","position":{"start":{"line":63,"column":1,"offset":2289},"end":{"line":63,"column":5,"offset":2293}}},{"type":"text","value":"\n","position":{"start":{"line":63,"column":5,"offset":2293},"end":{"line":64,"column":1,"offset":2294}}},{"type":"raw","value":"<br>","position":{"start":{"line":64,"column":1,"offset":2294},"end":{"line":64,"column":5,"offset":2298}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":64,"column":5,"offset":2298},"end":{"line":65,"column":184,"offset":2482}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":65,"column":184,"offset":2482},"end":{"line":65,"column":187,"offset":2485}}},{"type":"text","value":".\n","position":{"start":{"line":65,"column":187,"offset":2485},"end":{"line":66,"column":1,"offset":2488}}},{"type":"raw","value":"<br>","position":{"start":{"line":66,"column":1,"offset":2488},"end":{"line":66,"column":5,"offset":2492}}},{"type":"text","value":"\n","position":{"start":{"line":66,"column":5,"offset":2492},"end":{"line":67,"column":1,"offset":2493}}},{"type":"raw","value":"<br>","position":{"start":{"line":67,"column":1,"offset":2493},"end":{"line":67,"column":5,"offset":2497}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":67,"column":5,"offset":2497},"end":{"line":68,"column":27,"offset":2524}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":68,"column":27,"offset":2524},"end":{"line":68,"column":35,"offset":2532}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":68,"column":35,"offset":2532},"end":{"line":68,"column":86,"offset":2583}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":68,"column":86,"offset":2583},"end":{"line":68,"column":95,"offset":2592}}},{"type":"text","value":". ","position":{"start":{"line":68,"column":95,"offset":2592},"end":{"line":68,"column":97,"offset":2594}}}],"position":{"start":{"line":62,"column":1,"offset":2186},"end":{"line":68,"column":97,"offset":2594}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":70,"column":1,"offset":2596},"end":{"line":70,"column":6,"offset":2601}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":72,"column":1,"offset":2603},"end":{"line":73,"column":1,"offset":2647}}},{"type":"raw","value":"<br>","position":{"start":{"line":73,"column":1,"offset":2647},"end":{"line":73,"column":5,"offset":2651}}},{"type":"text","value":"\n","position":{"start":{"line":73,"column":5,"offset":2651},"end":{"line":74,"column":1,"offset":2652}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":74,"column":1,"offset":2652},"end":{"line":74,"column":22,"offset":2673}}},{"type":"text","value":"\n","position":{"start":{"line":74,"column":22,"offset":2673},"end":{"line":75,"column":1,"offset":2674}}},{"type":"raw","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2674},"end":{"line":75,"column":5,"offset":2678}}}],"position":{"start":{"line":72,"column":1,"offset":2603},"end":{"line":75,"column":5,"offset":2678}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":77,"column":1,"offset":2680},"end":{"line":77,"column":152,"offset":2831}}}],"position":{"start":{"line":77,"column":1,"offset":2680},"end":{"line":77,"column":152,"offset":2831}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":79,"column":8,"offset":2840},"end":{"line":79,"column":20,"offset":2852}}}],"position":{"start":{"line":79,"column":1,"offset":2833},"end":{"line":79,"column":20,"offset":2852}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":81,"column":1,"offset":2854},"end":{"line":81,"column":56,"offset":2909}}}],"position":{"start":{"line":81,"column":1,"offset":2854},"end":{"line":81,"column":56,"offset":2909}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":82,"column":1,"offset":2910},"end":{"line":87,"column":4,"offset":3001}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":88,"column":1,"offset":3002},"end":{"line":88,"column":5,"offset":3006}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":90,"column":1,"offset":3008},"end":{"line":90,"column":37,"offset":3044}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":90,"column":37,"offset":3044},"end":{"line":90,"column":41,"offset":3048}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":90,"column":41,"offset":3048},"end":{"line":91,"column":1,"offset":3065}}},{"type":"raw","value":"<br>","position":{"start":{"line":91,"column":1,"offset":3065},"end":{"line":91,"column":5,"offset":3069}}},{"type":"text","value":"\n","position":{"start":{"line":91,"column":5,"offset":3069},"end":{"line":92,"column":1,"offset":3070}}},{"type":"raw","value":"<br>","position":{"start":{"line":92,"column":1,"offset":3070},"end":{"line":92,"column":5,"offset":3074}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":92,"column":5,"offset":3074},"end":{"line":93,"column":66,"offset":3140}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":93,"column":66,"offset":3140},"end":{"line":93,"column":89,"offset":3163}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":93,"column":89,"offset":3163},"end":{"line":94,"column":1,"offset":3203}}},{"type":"raw","value":"<br>","position":{"start":{"line":94,"column":1,"offset":3203},"end":{"line":94,"column":5,"offset":3207}}},{"type":"text","value":"\n","position":{"start":{"line":94,"column":5,"offset":3207},"end":{"line":95,"column":1,"offset":3208}}},{"type":"raw","value":"<br>","position":{"start":{"line":95,"column":1,"offset":3208},"end":{"line":95,"column":5,"offset":3212}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":95,"column":5,"offset":3212},"end":{"line":96,"column":21,"offset":3233}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":96,"column":21,"offset":3233},"end":{"line":96,"column":25,"offset":3237}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":96,"column":25,"offset":3237},"end":{"line":97,"column":1,"offset":3291}}},{"type":"raw","value":"<br>","position":{"start":{"line":97,"column":1,"offset":3291},"end":{"line":97,"column":5,"offset":3295}}},{"type":"text","value":"\n","position":{"start":{"line":97,"column":5,"offset":3295},"end":{"line":98,"column":1,"offset":3296}}},{"type":"raw","value":"<br>","position":{"start":{"line":98,"column":1,"offset":3296},"end":{"line":98,"column":5,"offset":3300}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":98,"column":5,"offset":3300},"end":{"line":99,"column":21,"offset":3321}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":99,"column":21,"offset":3321},"end":{"line":99,"column":25,"offset":3325}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":99,"column":25,"offset":3325},"end":{"line":100,"column":1,"offset":3380}}},{"type":"raw","value":"<br>","position":{"start":{"line":100,"column":1,"offset":3380},"end":{"line":100,"column":5,"offset":3384}}},{"type":"text","value":"\n","position":{"start":{"line":100,"column":5,"offset":3384},"end":{"line":101,"column":1,"offset":3385}}},{"type":"raw","value":"<br>","position":{"start":{"line":101,"column":1,"offset":3385},"end":{"line":101,"column":5,"offset":3389}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":101,"column":5,"offset":3389},"end":{"line":102,"column":58,"offset":3447}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":102,"column":58,"offset":3447},"end":{"line":102,"column":61,"offset":3450}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":102,"column":61,"offset":3450},"end":{"line":102,"column":145,"offset":3534}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":102,"column":145,"offset":3534},"end":{"line":102,"column":153,"offset":3542}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":102,"column":153,"offset":3542},"end":{"line":102,"column":178,"offset":3567}}}],"position":{"start":{"line":90,"column":1,"offset":3008},"end":{"line":102,"column":178,"offset":3567}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":104,"column":7,"offset":3575},"end":{"line":104,"column":10,"offset":3578}}}],"position":{"start":{"line":104,"column":1,"offset":3569},"end":{"line":104,"column":10,"offset":3578}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":106,"column":8,"offset":3587},"end":{"line":106,"column":17,"offset":3596}}}],"position":{"start":{"line":106,"column":1,"offset":3580},"end":{"line":106,"column":17,"offset":3596}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":107,"column":1,"offset":3597},"end":{"line":118,"column":4,"offset":3796}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":119,"column":1,"offset":3797},"end":{"line":119,"column":5,"offset":3801}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":121,"column":1,"offset":3803},"end":{"line":122,"column":1,"offset":4019}}},{"type":"raw","value":"<br>","position":{"start":{"line":122,"column":1,"offset":4019},"end":{"line":122,"column":5,"offset":4023}}},{"type":"text","value":"\n","position":{"start":{"line":122,"column":5,"offset":4023},"end":{"line":123,"column":1,"offset":4024}}},{"type":"raw","value":"<br>","position":{"start":{"line":123,"column":1,"offset":4024},"end":{"line":123,"column":5,"offset":4028}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":123,"column":5,"offset":4028},"end":{"line":124,"column":72,"offset":4100}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":124,"column":72,"offset":4100},"end":{"line":124,"column":81,"offset":4109}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":124,"column":81,"offset":4109},"end":{"line":125,"column":1,"offset":4128}}},{"type":"raw","value":"<br>","position":{"start":{"line":125,"column":1,"offset":4128},"end":{"line":125,"column":5,"offset":4132}}},{"type":"text","value":"\n","position":{"start":{"line":125,"column":5,"offset":4132},"end":{"line":126,"column":1,"offset":4133}}},{"type":"raw","value":"<br>","position":{"start":{"line":126,"column":1,"offset":4133},"end":{"line":126,"column":5,"offset":4137}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":126,"column":5,"offset":4137},"end":{"line":127,"column":10,"offset":4147}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":127,"column":10,"offset":4147},"end":{"line":127,"column":16,"offset":4153}}},{"type":"text","value":" gets called with ","position":{"start":{"line":127,"column":16,"offset":4153},"end":{"line":127,"column":34,"offset":4171}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":127,"column":34,"offset":4171},"end":{"line":127,"column":42,"offset":4179}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":127,"column":42,"offset":4179},"end":{"line":128,"column":24,"offset":4204}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":128,"column":24,"offset":4204},"end":{"line":128,"column":33,"offset":4213}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":128,"column":33,"offset":4213},"end":{"line":128,"column":107,"offset":4287}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":128,"column":107,"offset":4287},"end":{"line":128,"column":116,"offset":4296}}},{"type":"text","value":" is false because ","position":{"start":{"line":128,"column":116,"offset":4296},"end":{"line":128,"column":134,"offset":4314}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":128,"column":134,"offset":4314},"end":{"line":128,"column":137,"offset":4317}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":128,"column":137,"offset":4317},"end":{"line":128,"column":161,"offset":4341}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":128,"column":161,"offset":4341},"end":{"line":128,"column":167,"offset":4347}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":128,"column":167,"offset":4347},"end":{"line":128,"column":192,"offset":4372}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":128,"column":192,"offset":4372},"end":{"line":128,"column":200,"offset":4380}}},{"type":"text","value":". This is because ","position":{"start":{"line":128,"column":200,"offset":4380},"end":{"line":128,"column":218,"offset":4398}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":128,"column":218,"offset":4398},"end":{"line":128,"column":224,"offset":4404}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":128,"column":224,"offset":4404},"end":{"line":128,"column":245,"offset":4425}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":128,"column":245,"offset":4425},"end":{"line":128,"column":252,"offset":4432}}},{"type":"text","value":" and ","position":{"start":{"line":128,"column":252,"offset":4432},"end":{"line":128,"column":257,"offset":4437}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":128,"column":257,"offset":4437},"end":{"line":128,"column":260,"offset":4440}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":128,"column":260,"offset":4440},"end":{"line":128,"column":285,"offset":4465}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":128,"column":285,"offset":4465},"end":{"line":128,"column":291,"offset":4471}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":128,"column":291,"offset":4471},"end":{"line":129,"column":96,"offset":4597}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":129,"column":96,"offset":4597},"end":{"line":129,"column":111,"offset":4612}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":129,"column":111,"offset":4612},"end":{"line":129,"column":182,"offset":4683}}}],"position":{"start":{"line":121,"column":1,"offset":3803},"end":{"line":129,"column":182,"offset":4683}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":131,"column":8,"offset":4692},"end":{"line":131,"column":19,"offset":4703}}}],"position":{"start":{"line":131,"column":1,"offset":4685},"end":{"line":131,"column":19,"offset":4703}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":132,"column":1,"offset":4704},"end":{"line":132,"column":14,"offset":4717}}}],"position":{"start":{"line":132,"column":1,"offset":4704},"end":{"line":132,"column":14,"offset":4717}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":133,"column":1,"offset":4718},"end":{"line":148,"column":4,"offset":5133}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":149,"column":1,"offset":5134},"end":{"line":149,"column":5,"offset":5138}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":151,"column":1,"offset":5140},"end":{"line":151,"column":141,"offset":5280}}}],"position":{"start":{"line":151,"column":1,"offset":5140},"end":{"line":151,"column":141,"offset":5280}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":153,"column":8,"offset":5289},"end":{"line":153,"column":30,"offset":5311}}}],"position":{"start":{"line":153,"column":1,"offset":5282},"end":{"line":153,"column":30,"offset":5311}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":154,"column":1,"offset":5312},"end":{"line":154,"column":199,"offset":5510}}}],"position":{"start":{"line":154,"column":1,"offset":5312},"end":{"line":154,"column":199,"offset":5510}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":156,"column":8,"offset":5519},"end":{"line":156,"column":30,"offset":5541}}}],"position":{"start":{"line":156,"column":1,"offset":5512},"end":{"line":156,"column":30,"offset":5541}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":158,"column":1,"offset":5543},"end":{"line":159,"column":1,"offset":5618}}},{"type":"raw","value":"<br>","position":{"start":{"line":159,"column":1,"offset":5618},"end":{"line":159,"column":5,"offset":5622}}},{"type":"text","value":"\n","position":{"start":{"line":159,"column":5,"offset":5622},"end":{"line":160,"column":1,"offset":5623}}},{"type":"raw","value":"<br>","position":{"start":{"line":160,"column":1,"offset":5623},"end":{"line":160,"column":5,"offset":5627}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":160,"column":5,"offset":5627},"end":{"line":162,"column":1,"offset":5689}}},{"type":"raw","value":"<br>","position":{"start":{"line":162,"column":1,"offset":5689},"end":{"line":162,"column":5,"offset":5693}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":162,"column":5,"offset":5693},"end":{"line":163,"column":1,"offset":5696}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":163,"column":1,"offset":5696},"end":{"line":163,"column":11,"offset":5706}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":163,"column":11,"offset":5706},"end":{"line":163,"column":19,"offset":5714}}},{"type":"text","value":" and ","position":{"start":{"line":163,"column":19,"offset":5714},"end":{"line":163,"column":24,"offset":5719}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":163,"column":24,"offset":5719},"end":{"line":163,"column":34,"offset":5729}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":163,"column":34,"offset":5729},"end":{"line":164,"column":1,"offset":5778}}},{"type":"raw","value":"<br>","position":{"start":{"line":164,"column":1,"offset":5778},"end":{"line":164,"column":5,"offset":5782}}}],"position":{"start":{"line":158,"column":1,"offset":5543},"end":{"line":164,"column":5,"offset":5782}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":166,"column":8,"offset":5791},"end":{"line":166,"column":12,"offset":5795}}}],"position":{"start":{"line":166,"column":1,"offset":5784},"end":{"line":166,"column":12,"offset":5795}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":167,"column":1,"offset":5796},"end":{"line":172,"column":4,"offset":5907}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":173,"column":1,"offset":5908},"end":{"line":174,"column":5,"offset":5917}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":176,"column":1,"offset":5919},"end":{"line":176,"column":7,"offset":5925}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":176,"column":7,"offset":5925},"end":{"line":178,"column":1,"offset":6007}}},{"type":"raw","value":"<br>","position":{"start":{"line":178,"column":1,"offset":6007},"end":{"line":178,"column":5,"offset":6011}}},{"type":"text","value":"\n","position":{"start":{"line":178,"column":5,"offset":6011},"end":{"line":179,"column":1,"offset":6012}}},{"type":"raw","value":"<br>","position":{"start":{"line":179,"column":1,"offset":6012},"end":{"line":179,"column":5,"offset":6016}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":179,"column":5,"offset":6016},"end":{"line":180,"column":10,"offset":6026}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":180,"column":10,"offset":6026},"end":{"line":180,"column":14,"offset":6030}}},{"type":"text","value":". Since ","position":{"start":{"line":180,"column":14,"offset":6030},"end":{"line":180,"column":22,"offset":6038}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":180,"column":22,"offset":6038},"end":{"line":180,"column":30,"offset":6046}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":180,"column":30,"offset":6046},"end":{"line":180,"column":50,"offset":6066}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":180,"column":50,"offset":6066},"end":{"line":180,"column":53,"offset":6069}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":180,"column":53,"offset":6069},"end":{"line":180,"column":90,"offset":6106}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":180,"column":90,"offset":6106},"end":{"line":180,"column":96,"offset":6112}}},{"type":"text","value":".\n","position":{"start":{"line":180,"column":96,"offset":6112},"end":{"line":181,"column":1,"offset":6115}}},{"type":"raw","value":"<br>","position":{"start":{"line":181,"column":1,"offset":6115},"end":{"line":181,"column":5,"offset":6119}}},{"type":"text","value":"\n","position":{"start":{"line":181,"column":5,"offset":6119},"end":{"line":182,"column":1,"offset":6120}}},{"type":"raw","value":"<br>","position":{"start":{"line":182,"column":1,"offset":6120},"end":{"line":182,"column":5,"offset":6124}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":182,"column":5,"offset":6124},"end":{"line":183,"column":14,"offset":6138}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":183,"column":14,"offset":6138},"end":{"line":183,"column":18,"offset":6142}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":183,"column":18,"offset":6142},"end":{"line":183,"column":90,"offset":6214}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":183,"column":90,"offset":6214},"end":{"line":183,"column":94,"offset":6218}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":183,"column":94,"offset":6218},"end":{"line":183,"column":125,"offset":6249}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":183,"column":125,"offset":6249},"end":{"line":183,"column":131,"offset":6255}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":183,"column":131,"offset":6255},"end":{"line":184,"column":1,"offset":6270}}},{"type":"raw","value":"<br>","position":{"start":{"line":184,"column":1,"offset":6270},"end":{"line":184,"column":5,"offset":6274}}},{"type":"text","value":"\n","position":{"start":{"line":184,"column":5,"offset":6274},"end":{"line":185,"column":1,"offset":6275}}},{"type":"raw","value":"<br>","position":{"start":{"line":185,"column":1,"offset":6275},"end":{"line":185,"column":5,"offset":6279}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":185,"column":5,"offset":6279},"end":{"line":186,"column":14,"offset":6293}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":186,"column":14,"offset":6293},"end":{"line":186,"column":18,"offset":6297}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":186,"column":18,"offset":6297},"end":{"line":186,"column":37,"offset":6316}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":186,"column":37,"offset":6316},"end":{"line":186,"column":40,"offset":6319}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":186,"column":40,"offset":6319},"end":{"line":186,"column":77,"offset":6356}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":186,"column":77,"offset":6356},"end":{"line":186,"column":81,"offset":6360}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":186,"column":81,"offset":6360},"end":{"line":186,"column":99,"offset":6378}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":186,"column":99,"offset":6378},"end":{"line":186,"column":102,"offset":6381}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":186,"column":102,"offset":6381},"end":{"line":186,"column":133,"offset":6412}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":186,"column":133,"offset":6412},"end":{"line":186,"column":139,"offset":6418}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":186,"column":139,"offset":6418},"end":{"line":186,"column":167,"offset":6446}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":186,"column":167,"offset":6446},"end":{"line":186,"column":171,"offset":6450}}},{"type":"text","value":".\n","position":{"start":{"line":186,"column":171,"offset":6450},"end":{"line":187,"column":1,"offset":6452}}},{"type":"raw","value":"<br>","position":{"start":{"line":187,"column":1,"offset":6452},"end":{"line":187,"column":5,"offset":6456}}},{"type":"text","value":"\n","position":{"start":{"line":187,"column":5,"offset":6456},"end":{"line":188,"column":1,"offset":6457}}},{"type":"raw","value":"<br>","position":{"start":{"line":188,"column":1,"offset":6457},"end":{"line":188,"column":5,"offset":6461}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":188,"column":5,"offset":6461},"end":{"line":190,"column":1,"offset":6481}}},{"type":"raw","value":"<br>","position":{"start":{"line":190,"column":1,"offset":6481},"end":{"line":190,"column":5,"offset":6485}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":190,"column":5,"offset":6485},"end":{"line":191,"column":6,"offset":6491}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":191,"column":6,"offset":6491},"end":{"line":191,"column":12,"offset":6497}}},{"type":"text","value":" does not have an ","position":{"start":{"line":191,"column":12,"offset":6497},"end":{"line":191,"column":30,"offset":6515}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":191,"column":30,"offset":6515},"end":{"line":191,"column":36,"offset":6521}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":191,"column":36,"offset":6521},"end":{"line":191,"column":62,"offset":6547}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":191,"column":62,"offset":6547},"end":{"line":191,"column":75,"offset":6560}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":191,"column":75,"offset":6560},"end":{"line":191,"column":159,"offset":6644}}}],"position":{"start":{"line":176,"column":1,"offset":5919},"end":{"line":191,"column":159,"offset":6644}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":193,"column":8,"offset":6653},"end":{"line":193,"column":41,"offset":6686}}}],"position":{"start":{"line":193,"column":1,"offset":6646},"end":{"line":193,"column":41,"offset":6686}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":194,"column":1,"offset":6687},"end":{"line":199,"column":4,"offset":6762}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":200,"column":1,"offset":6763},"end":{"line":201,"column":1,"offset":6782}}},{"type":"raw","value":"<br>","position":{"start":{"line":201,"column":1,"offset":6782},"end":{"line":201,"column":5,"offset":6786}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":201,"column":5,"offset":6786},"end":{"line":203,"column":5,"offset":6924}}},{"type":"raw","value":"<br>","position":{"start":{"line":203,"column":5,"offset":6924},"end":{"line":203,"column":9,"offset":6928}}},{"type":"text","value":"\n","position":{"start":{"line":203,"column":9,"offset":6928},"end":{"line":204,"column":5,"offset":6933}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":204,"column":5,"offset":6933},"end":{"line":204,"column":27,"offset":6955}}},{"type":"text","value":"\n","position":{"start":{"line":204,"column":27,"offset":6955},"end":{"line":205,"column":5,"offset":6960}}},{"type":"raw","value":"<br>","position":{"start":{"line":205,"column":5,"offset":6960},"end":{"line":205,"column":9,"offset":6964}}},{"type":"text","value":"\n","position":{"start":{"line":205,"column":9,"offset":6964},"end":{"line":206,"column":5,"offset":6969}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":206,"column":5,"offset":6969},"end":{"line":206,"column":12,"offset":6976}}},{"type":"text","value":" and ","position":{"start":{"line":206,"column":12,"offset":6976},"end":{"line":206,"column":17,"offset":6981}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":206,"column":17,"offset":6981},"end":{"line":206,"column":25,"offset":6989}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":206,"column":25,"offset":6989},"end":{"line":206,"column":63,"offset":7027}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":206,"column":63,"offset":7027},"end":{"line":206,"column":66,"offset":7030}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":206,"column":66,"offset":7030},"end":{"line":206,"column":86,"offset":7050}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":206,"column":86,"offset":7050},"end":{"line":206,"column":89,"offset":7053}}},{"type":"text","value":" will be called with ","position":{"start":{"line":206,"column":89,"offset":7053},"end":{"line":206,"column":110,"offset":7074}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":206,"column":110,"offset":7074},"end":{"line":206,"column":119,"offset":7083}}},{"type":"text","value":".\n","position":{"start":{"line":206,"column":119,"offset":7083},"end":{"line":207,"column":1,"offset":7085}}},{"type":"raw","value":"<br>","position":{"start":{"line":207,"column":1,"offset":7085},"end":{"line":207,"column":5,"offset":7089}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":207,"column":5,"offset":7089},"end":{"line":209,"column":1,"offset":7105}}},{"type":"raw","value":"<br>","position":{"start":{"line":209,"column":1,"offset":7105},"end":{"line":209,"column":5,"offset":7109}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":209,"column":5,"offset":7109},"end":{"line":211,"column":5,"offset":7216}}},{"type":"raw","value":"<br>","position":{"start":{"line":211,"column":5,"offset":7216},"end":{"line":211,"column":9,"offset":7220}}},{"type":"text","value":"\n","position":{"start":{"line":211,"column":9,"offset":7220},"end":{"line":212,"column":1,"offset":7221}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":212,"column":1,"offset":7221},"end":{"line":212,"column":23,"offset":7243}}},{"type":"text","value":" turns into ","position":{"start":{"line":212,"column":23,"offset":7243},"end":{"line":212,"column":35,"offset":7255}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":212,"column":35,"offset":7255},"end":{"line":212,"column":61,"offset":7281}}},{"type":"text","value":"\n","position":{"start":{"line":212,"column":61,"offset":7281},"end":{"line":213,"column":1,"offset":7282}}},{"type":"raw","value":"<br>","position":{"start":{"line":213,"column":1,"offset":7282},"end":{"line":213,"column":5,"offset":7286}}},{"type":"text","value":"\nNow ","position":{"start":{"line":213,"column":5,"offset":7286},"end":{"line":214,"column":5,"offset":7291}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":214,"column":5,"offset":7291},"end":{"line":214,"column":8,"offset":7294}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":214,"column":8,"offset":7294},"end":{"line":214,"column":58,"offset":7344}}}],"position":{"start":{"line":200,"column":1,"offset":6763},"end":{"line":214,"column":58,"offset":7344}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":216,"column":1,"offset":7346},"end":{"line":217,"column":1,"offset":7364}}},{"type":"raw","value":"<br>","position":{"start":{"line":217,"column":1,"offset":7364},"end":{"line":217,"column":5,"offset":7368}}}],"position":{"start":{"line":216,"column":1,"offset":7346},"end":{"line":217,"column":5,"offset":7368}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":218,"column":1,"offset":7369},"end":{"line":220,"column":4,"offset":7399}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":221,"column":1,"offset":7400},"end":{"line":221,"column":13,"offset":7412}}}],"position":{"start":{"line":221,"column":1,"offset":7400},"end":{"line":221,"column":13,"offset":7412}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":222,"column":1,"offset":7413},"end":{"line":228,"column":4,"offset":7492}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":229,"column":1,"offset":7493},"end":{"line":229,"column":8,"offset":7500}}}],"position":{"start":{"line":229,"column":1,"offset":7493},"end":{"line":229,"column":8,"offset":7500}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":230,"column":1,"offset":7501},"end":{"line":237,"column":4,"offset":7625}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":238,"column":1,"offset":7626},"end":{"line":239,"column":5,"offset":7635}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":241,"column":1,"offset":7637},"end":{"line":241,"column":11,"offset":7647}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":241,"column":11,"offset":7647},"end":{"line":241,"column":24,"offset":7660}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":241,"column":24,"offset":7660},"end":{"line":241,"column":107,"offset":7743}}}],"position":{"start":{"line":241,"column":1,"offset":7637},"end":{"line":241,"column":107,"offset":7743}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":243,"column":7,"offset":7751},"end":{"line":243,"column":10,"offset":7754}}}],"position":{"start":{"line":243,"column":1,"offset":7745},"end":{"line":243,"column":10,"offset":7754}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":244,"column":7,"offset":7761},"end":{"line":244,"column":10,"offset":7764}}}],"position":{"start":{"line":244,"column":1,"offset":7755},"end":{"line":244,"column":10,"offset":7764}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":246,"column":6,"offset":7771},"end":{"line":246,"column":10,"offset":7775}}}],"position":{"start":{"line":246,"column":1,"offset":7766},"end":{"line":246,"column":10,"offset":7775}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":247,"column":7,"offset":7782},"end":{"line":247,"column":13,"offset":7788}}}],"position":{"start":{"line":247,"column":1,"offset":7776},"end":{"line":247,"column":13,"offset":7788}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":248,"column":1,"offset":7789},"end":{"line":248,"column":49,"offset":7837}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":248,"column":49,"offset":7837},"end":{"line":248,"column":57,"offset":7845}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":248,"column":57,"offset":7845},"end":{"line":248,"column":133,"offset":7921}}}],"position":{"start":{"line":248,"column":1,"offset":7789},"end":{"line":248,"column":133,"offset":7921}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":249,"column":1,"offset":7922},"end":{"line":259,"column":4,"offset":8117}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":260,"column":1,"offset":8118},"end":{"line":260,"column":5,"offset":8122}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":263,"column":1,"offset":8125},"end":{"line":264,"column":1,"offset":8207}}},{"type":"raw","value":"<br>","position":{"start":{"line":264,"column":1,"offset":8207},"end":{"line":264,"column":5,"offset":8211}}},{"type":"text","value":"\n","position":{"start":{"line":264,"column":5,"offset":8211},"end":{"line":265,"column":1,"offset":8212}}},{"type":"raw","value":"<br>","position":{"start":{"line":265,"column":1,"offset":8212},"end":{"line":265,"column":5,"offset":8216}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":265,"column":5,"offset":8216},"end":{"line":266,"column":26,"offset":8242}}}],"position":{"start":{"line":263,"column":1,"offset":8125},"end":{"line":266,"column":26,"offset":8242}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":267,"column":1,"offset":8243},"end":{"line":272,"column":4,"offset":8371}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":273,"column":1,"offset":8372},"end":{"line":273,"column":14,"offset":8385}}}],"position":{"start":{"line":273,"column":1,"offset":8372},"end":{"line":273,"column":14,"offset":8385}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":275,"column":1,"offset":8387},"end":{"line":288,"column":4,"offset":8669}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":290,"column":1,"offset":8671},"end":{"line":291,"column":5,"offset":8680}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":294,"column":7,"offset":8689},"end":{"line":294,"column":13,"offset":8695}}}],"position":{"start":{"line":294,"column":1,"offset":8683},"end":{"line":294,"column":13,"offset":8695}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":294,"column":13,"offset":8695}}}}