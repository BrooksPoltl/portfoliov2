{"expireTime":9007200842248514000,"key":"transformer-remark-markdown-html-ast-e228a4123151c55bb780ac6272251430-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":6,"offset":238},"end":{"line":4,"column":11,"offset":243}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":11,"offset":243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will be following the Summer 2010 ","position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":5,"column":37,"offset":280}}},{"type":"element","tagName":"a","properties":{"href":"http://inst.eecs.berkeley.edu/~cs61a/su10/index.html"},"children":[{"type":"text","value":"Calendar","position":{"start":{"line":5,"column":38,"offset":281},"end":{"line":5,"column":46,"offset":289}}}],"position":{"start":{"line":5,"column":37,"offset":280},"end":{"line":5,"column":101,"offset":344}}},{"type":"text","value":"\nso each week will consist of 4 lectures and 2 labs.","position":{"start":{"line":5,"column":101,"offset":344},"end":{"line":6,"column":52,"offset":396}}}],"position":{"start":{"line":5,"column":1,"offset":244},"end":{"line":6,"column":52,"offset":396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"READINGS","position":{"start":{"line":8,"column":6,"offset":403},"end":{"line":8,"column":14,"offset":411}}}],"position":{"start":{"line":8,"column":1,"offset":398},"end":{"line":8,"column":14,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.1 The Elements of Programming","position":{"start":{"line":9,"column":7,"offset":418},"end":{"line":9,"column":38,"offset":449}}}],"position":{"start":{"line":9,"column":1,"offset":412},"end":{"line":9,"column":38,"offset":449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The section starts off saying that there are 3 mechanisms that languages utilize to simplify complex ideas:\n","position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":11,"column":1,"offset":558}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":5,"offset":562}}},{"type":"text","value":"\nprimitive expressions: simplest entities within a language.","position":{"start":{"line":11,"column":5,"offset":562},"end":{"line":12,"column":60,"offset":622}}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":12,"column":60,"offset":622}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"means of combination: The ability to combine simplest entities. ","position":{"start":{"line":14,"column":3,"offset":628},"end":{"line":14,"column":67,"offset":692}}}],"position":{"start":{"line":14,"column":1,"offset":626},"end":{"line":15,"column":3,"offset":695}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"means of abstraction","position":{"start":{"line":16,"column":3,"offset":698},"end":{"line":16,"column":23,"offset":718}}}],"position":{"start":{"line":16,"column":3,"offset":698},"end":{"line":16,"column":23,"offset":718}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":17,"column":7,"offset":725},"end":{"line":17,"column":10,"offset":728}}}],"position":{"start":{"line":17,"column":1,"offset":719},"end":{"line":17,"column":10,"offset":728}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":18,"column":7,"offset":735},"end":{"line":18,"column":10,"offset":738}}}],"position":{"start":{"line":18,"column":1,"offset":729},"end":{"line":18,"column":10,"offset":738}}},{"type":"text","value":"\n"}],"position":{"start":{"line":16,"column":1,"offset":696},"end":{"line":18,"column":10,"offset":738}}},{"type":"text","value":"\n"}],"position":{"start":{"line":14,"column":1,"offset":626},"end":{"line":18,"column":10,"offset":738}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LECTURES","position":{"start":{"line":20,"column":6,"offset":745},"end":{"line":20,"column":14,"offset":753}}}],"position":{"start":{"line":20,"column":1,"offset":740},"end":{"line":20,"column":14,"offset":753}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":21,"column":7,"offset":760},"end":{"line":21,"column":10,"offset":763}}}],"position":{"start":{"line":21,"column":1,"offset":754},"end":{"line":21,"column":10,"offset":763}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Mathmatical Operations","position":{"start":{"line":23,"column":8,"offset":772},"end":{"line":23,"column":30,"offset":794}}}],"position":{"start":{"line":23,"column":1,"offset":765},"end":{"line":23,"column":30,"offset":794}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":25,"column":1,"offset":796},"end":{"line":26,"column":1,"offset":940}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":1,"offset":940},"end":{"line":26,"column":5,"offset":944}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":26,"column":5,"offset":944},"end":{"line":26,"column":16,"offset":955}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":16,"offset":955},"end":{"line":26,"column":20,"offset":959}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":26,"column":20,"offset":959},"end":{"line":28,"column":1,"offset":1103}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":1,"offset":1103},"end":{"line":28,"column":5,"offset":1107}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":28,"column":5,"offset":1107},"end":{"line":28,"column":16,"offset":1118}}},{"type":"raw","value":"<br>","position":{"start":{"line":28,"column":16,"offset":1118},"end":{"line":28,"column":20,"offset":1122}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":28,"column":20,"offset":1122},"end":{"line":29,"column":45,"offset":1167}}},{"type":"raw","value":"<br>","position":{"start":{"line":29,"column":45,"offset":1167},"end":{"line":29,"column":49,"offset":1171}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":29,"column":49,"offset":1171},"end":{"line":29,"column":65,"offset":1187}}},{"type":"raw","value":"<br>","position":{"start":{"line":29,"column":65,"offset":1187},"end":{"line":29,"column":69,"offset":1191}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":29,"column":69,"offset":1191},"end":{"line":31,"column":1,"offset":1234}}},{"type":"raw","value":"<br>","position":{"start":{"line":31,"column":1,"offset":1234},"end":{"line":31,"column":5,"offset":1238}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":31,"column":5,"offset":1238},"end":{"line":31,"column":22,"offset":1255}}},{"type":"raw","value":"<br>","position":{"start":{"line":31,"column":22,"offset":1255},"end":{"line":31,"column":26,"offset":1259}}},{"type":"text","value":"\n","position":{"start":{"line":31,"column":26,"offset":1259},"end":{"line":32,"column":1,"offset":1260}}},{"type":"raw","value":"<br>","position":{"start":{"line":32,"column":1,"offset":1260},"end":{"line":32,"column":5,"offset":1264}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer.\n","position":{"start":{"line":32,"column":5,"offset":1264},"end":{"line":34,"column":1,"offset":1382}}},{"type":"raw","value":"<br>","position":{"start":{"line":34,"column":1,"offset":1382},"end":{"line":34,"column":5,"offset":1386}}},{"type":"text","value":"\nScheme takes the arguments and then computes the expressions of the arguments until it gets down to a primitive value.\n","position":{"start":{"line":34,"column":5,"offset":1386},"end":{"line":36,"column":1,"offset":1507}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":36,"column":1,"offset":1507},"end":{"line":36,"column":12,"offset":1518}}},{"type":"text","value":" is a expression and not a primitive value, so it calls ","position":{"start":{"line":36,"column":12,"offset":1518},"end":{"line":36,"column":68,"offset":1574}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":36,"column":68,"offset":1574},"end":{"line":36,"column":79,"offset":1585}}},{"type":"text","value":". The left argument of the ","position":{"start":{"line":36,"column":79,"offset":1585},"end":{"line":36,"column":106,"offset":1612}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":36,"column":106,"offset":1612},"end":{"line":36,"column":109,"offset":1615}}},{"type":"text","value":" is now 7 and both arguments are primitive values, meaning it can calculate the ","position":{"start":{"line":36,"column":109,"offset":1615},"end":{"line":36,"column":189,"offset":1695}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":36,"column":189,"offset":1695},"end":{"line":36,"column":192,"offset":1698}}},{"type":"text","value":" to get 3.","position":{"start":{"line":36,"column":192,"offset":1698},"end":{"line":36,"column":202,"offset":1708}}}],"position":{"start":{"line":25,"column":1,"offset":796},"end":{"line":36,"column":202,"offset":1708}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Define","position":{"start":{"line":38,"column":8,"offset":1717},"end":{"line":38,"column":14,"offset":1723}}}],"position":{"start":{"line":38,"column":1,"offset":1710},"end":{"line":38,"column":14,"offset":1723}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":39,"column":1,"offset":1724},"end":{"line":39,"column":9,"offset":1732}}},{"type":"text","value":" is an interesting keyword. It can be used to create functions: ","position":{"start":{"line":39,"column":9,"offset":1732},"end":{"line":39,"column":73,"offset":1796}}}],"position":{"start":{"line":39,"column":1,"offset":1724},"end":{"line":39,"column":73,"offset":1796}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (square x)\n    (* x x))</code></pre></div>","position":{"start":{"line":40,"column":1,"offset":1797},"end":{"line":43,"column":4,"offset":1836}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":44,"column":1,"offset":1837},"end":{"line":44,"column":5,"offset":1841}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax is very different from other languages, but try to think of ","position":{"start":{"line":46,"column":1,"offset":1843},"end":{"line":46,"column":72,"offset":1914}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":46,"column":72,"offset":1914},"end":{"line":46,"column":80,"offset":1922}}},{"type":"text","value":" as a function itself.\n","position":{"start":{"line":46,"column":80,"offset":1922},"end":{"line":47,"column":1,"offset":1946}}},{"type":"raw","value":"<br>","position":{"start":{"line":47,"column":1,"offset":1946},"end":{"line":47,"column":5,"offset":1950}}},{"type":"text","value":"\n","position":{"start":{"line":47,"column":5,"offset":1950},"end":{"line":48,"column":1,"offset":1951}}},{"type":"raw","value":"<br>","position":{"start":{"line":48,"column":1,"offset":1951},"end":{"line":48,"column":5,"offset":1955}}},{"type":"text","value":"\nDefine’s first parameter takes in a symbol (square) as it’s first argument that will be the name of the procedure. The rest of the parameters are parameters for the body in this case ","position":{"start":{"line":48,"column":5,"offset":1955},"end":{"line":49,"column":184,"offset":2139}}},{"type":"raw","value":"<code class=\"language-text\">x</code>","position":{"start":{"line":49,"column":184,"offset":2139},"end":{"line":49,"column":187,"offset":2142}}},{"type":"text","value":".\n","position":{"start":{"line":49,"column":187,"offset":2142},"end":{"line":50,"column":1,"offset":2145}}},{"type":"raw","value":"<br>","position":{"start":{"line":50,"column":1,"offset":2145},"end":{"line":50,"column":5,"offset":2149}}},{"type":"text","value":"\n","position":{"start":{"line":50,"column":5,"offset":2149},"end":{"line":51,"column":1,"offset":2150}}},{"type":"raw","value":"<br>","position":{"start":{"line":51,"column":1,"offset":2150},"end":{"line":51,"column":5,"offset":2154}}},{"type":"text","value":"\nThe second parameter that ","position":{"start":{"line":51,"column":5,"offset":2154},"end":{"line":52,"column":27,"offset":2181}}},{"type":"raw","value":"<code class=\"language-text\">define</code>","position":{"start":{"line":52,"column":27,"offset":2181},"end":{"line":52,"column":35,"offset":2189}}},{"type":"text","value":" takes in is the body that the procedure will call ","position":{"start":{"line":52,"column":35,"offset":2189},"end":{"line":52,"column":86,"offset":2240}}},{"type":"raw","value":"<code class=\"language-text\">(* x x)</code>","position":{"start":{"line":52,"column":86,"offset":2240},"end":{"line":52,"column":95,"offset":2249}}},{"type":"text","value":". ","position":{"start":{"line":52,"column":95,"offset":2249},"end":{"line":52,"column":97,"offset":2251}}}],"position":{"start":{"line":46,"column":1,"offset":1843},"end":{"line":52,"column":97,"offset":2251}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br> ","position":{"start":{"line":54,"column":1,"offset":2253},"end":{"line":54,"column":6,"offset":2258}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define can also be used to store constants:\n","position":{"start":{"line":56,"column":1,"offset":2260},"end":{"line":57,"column":1,"offset":2304}}},{"type":"raw","value":"<br>","position":{"start":{"line":57,"column":1,"offset":2304},"end":{"line":57,"column":5,"offset":2308}}},{"type":"text","value":"\n","position":{"start":{"line":57,"column":5,"offset":2308},"end":{"line":58,"column":1,"offset":2309}}},{"type":"raw","value":"<code class=\"language-text\">(define pi 3.14159)</code>","position":{"start":{"line":58,"column":1,"offset":2309},"end":{"line":58,"column":22,"offset":2330}}},{"type":"text","value":"\n","position":{"start":{"line":58,"column":22,"offset":2330},"end":{"line":59,"column":1,"offset":2331}}},{"type":"raw","value":"<br>","position":{"start":{"line":59,"column":1,"offset":2331},"end":{"line":59,"column":5,"offset":2335}}}],"position":{"start":{"line":56,"column":1,"offset":2260},"end":{"line":59,"column":5,"offset":2335}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the same thing as above but used in a different way. Since 3.14159 is a primitive no expression needs to be evaluated for the second parameter.","position":{"start":{"line":61,"column":1,"offset":2337},"end":{"line":61,"column":152,"offset":2488}}}],"position":{"start":{"line":61,"column":1,"offset":2337},"end":{"line":61,"column":152,"offset":2488}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":63,"column":8,"offset":2497},"end":{"line":63,"column":20,"offset":2509}}}],"position":{"start":{"line":63,"column":1,"offset":2490},"end":{"line":63,"column":20,"offset":2509}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the first example of a program we see in class:","position":{"start":{"line":65,"column":1,"offset":2511},"end":{"line":65,"column":56,"offset":2566}}}],"position":{"start":{"line":65,"column":1,"offset":2511},"end":{"line":65,"column":56,"offset":2566}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t(word (bl wd) &#39;ies)\n\t(word wd &#39;s)))</code></pre></div>","position":{"start":{"line":66,"column":1,"offset":2567},"end":{"line":71,"column":4,"offset":2658}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":72,"column":1,"offset":2659},"end":{"line":72,"column":5,"offset":2663}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you’ve probably already guessed, ","position":{"start":{"line":74,"column":1,"offset":2665},"end":{"line":74,"column":37,"offset":2701}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":74,"column":37,"offset":2701},"end":{"line":74,"column":41,"offset":2705}}},{"type":"text","value":" is a function.\n","position":{"start":{"line":74,"column":41,"offset":2705},"end":{"line":75,"column":1,"offset":2722}}},{"type":"raw","value":"<br>","position":{"start":{"line":75,"column":1,"offset":2722},"end":{"line":75,"column":5,"offset":2726}}},{"type":"text","value":"\n","position":{"start":{"line":75,"column":5,"offset":2726},"end":{"line":76,"column":1,"offset":2727}}},{"type":"raw","value":"<br>","position":{"start":{"line":76,"column":1,"offset":2727},"end":{"line":76,"column":5,"offset":2731}}},{"type":"text","value":"\nThe first parameter is the test case for example if we input fly ","position":{"start":{"line":76,"column":5,"offset":2731},"end":{"line":77,"column":66,"offset":2797}}},{"type":"raw","value":"<code class=\"language-text\">(equal? (last wd) &#39;y)</code>","position":{"start":{"line":77,"column":66,"offset":2797},"end":{"line":77,"column":89,"offset":2820}}},{"type":"text","value":" would be true, because fly ends in y.\n","position":{"start":{"line":77,"column":89,"offset":2820},"end":{"line":78,"column":1,"offset":2860}}},{"type":"raw","value":"<br>","position":{"start":{"line":78,"column":1,"offset":2860},"end":{"line":78,"column":5,"offset":2864}}},{"type":"text","value":"\n","position":{"start":{"line":78,"column":5,"offset":2864},"end":{"line":79,"column":1,"offset":2865}}},{"type":"raw","value":"<br>","position":{"start":{"line":79,"column":1,"offset":2865},"end":{"line":79,"column":5,"offset":2869}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":79,"column":5,"offset":2869},"end":{"line":80,"column":21,"offset":2890}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":80,"column":21,"offset":2890},"end":{"line":80,"column":25,"offset":2894}}},{"type":"text","value":" takes in is the expression if the test case is true.\n","position":{"start":{"line":80,"column":25,"offset":2894},"end":{"line":81,"column":1,"offset":2948}}},{"type":"raw","value":"<br>","position":{"start":{"line":81,"column":1,"offset":2948},"end":{"line":81,"column":5,"offset":2952}}},{"type":"text","value":"\n","position":{"start":{"line":81,"column":5,"offset":2952},"end":{"line":82,"column":1,"offset":2953}}},{"type":"raw","value":"<br>","position":{"start":{"line":82,"column":1,"offset":2953},"end":{"line":82,"column":5,"offset":2957}}},{"type":"text","value":"\nThe third parameter ","position":{"start":{"line":82,"column":5,"offset":2957},"end":{"line":83,"column":21,"offset":2978}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":83,"column":21,"offset":2978},"end":{"line":83,"column":25,"offset":2982}}},{"type":"text","value":" takes in is the expression if the test case is false.\n","position":{"start":{"line":83,"column":25,"offset":2982},"end":{"line":84,"column":1,"offset":3037}}},{"type":"raw","value":"<br>","position":{"start":{"line":84,"column":1,"offset":3037},"end":{"line":84,"column":5,"offset":3041}}},{"type":"text","value":"\n","position":{"start":{"line":84,"column":5,"offset":3041},"end":{"line":85,"column":1,"offset":3042}}},{"type":"raw","value":"<br>","position":{"start":{"line":85,"column":1,"offset":3042},"end":{"line":85,"column":5,"offset":3046}}},{"type":"text","value":"\nAlso worth noting that names that return a boolean add a ","position":{"start":{"line":85,"column":5,"offset":3046},"end":{"line":86,"column":58,"offset":3104}}},{"type":"raw","value":"<code class=\"language-text\">?</code>","position":{"start":{"line":86,"column":58,"offset":3104},"end":{"line":86,"column":61,"offset":3107}}},{"type":"text","value":" to the end to show that the primitive returned is true or false. Like how equal is ","position":{"start":{"line":86,"column":61,"offset":3107},"end":{"line":86,"column":145,"offset":3191}}},{"type":"raw","value":"<code class=\"language-text\">equal?</code>","position":{"start":{"line":86,"column":145,"offset":3191},"end":{"line":86,"column":153,"offset":3199}}},{"type":"text","value":" in the code block above.","position":{"start":{"line":86,"column":153,"offset":3199},"end":{"line":86,"column":178,"offset":3224}}}],"position":{"start":{"line":74,"column":1,"offset":2665},"end":{"line":86,"column":178,"offset":3224}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":88,"column":7,"offset":3232},"end":{"line":88,"column":10,"offset":3235}}}],"position":{"start":{"line":88,"column":1,"offset":3226},"end":{"line":88,"column":10,"offset":3235}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Recursion","position":{"start":{"line":90,"column":8,"offset":3244},"end":{"line":90,"column":17,"offset":3253}}}],"position":{"start":{"line":90,"column":1,"offset":3237},"end":{"line":90,"column":17,"offset":3253}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (pigl wd)\n\t(if (pl-done? wd)\n\t\t(word wd &#39;ay)\n\t\t(pigl (word (bf wd) (first wd)))))\n\n(define (pl-done? wd)\n\t(vowel? (first wd)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":91,"column":1,"offset":3254},"end":{"line":102,"column":4,"offset":3453}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":103,"column":1,"offset":3454},"end":{"line":103,"column":5,"offset":3458}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursion is when a procedures calls the same procedure that it is writing. Without a test case this will go on infinitely, but a recursive function continues to do the body of the procedure until it is told to end.\n","position":{"start":{"line":105,"column":1,"offset":3460},"end":{"line":106,"column":1,"offset":3676}}},{"type":"raw","value":"<br>","position":{"start":{"line":106,"column":1,"offset":3676},"end":{"line":106,"column":5,"offset":3680}}},{"type":"text","value":"\n","position":{"start":{"line":106,"column":5,"offset":3680},"end":{"line":107,"column":1,"offset":3681}}},{"type":"raw","value":"<br>","position":{"start":{"line":107,"column":1,"offset":3681},"end":{"line":107,"column":5,"offset":3685}}},{"type":"text","value":"\nNotice in the above example from lecture the function calls pigl until ","position":{"start":{"line":107,"column":5,"offset":3685},"end":{"line":108,"column":72,"offset":3757}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":108,"column":72,"offset":3757},"end":{"line":108,"column":81,"offset":3766}}},{"type":"text","value":" is equal to true.\n","position":{"start":{"line":108,"column":81,"offset":3766},"end":{"line":109,"column":1,"offset":3785}}},{"type":"raw","value":"<br>","position":{"start":{"line":109,"column":1,"offset":3785},"end":{"line":109,"column":5,"offset":3789}}},{"type":"text","value":"\n","position":{"start":{"line":109,"column":5,"offset":3789},"end":{"line":110,"column":1,"offset":3790}}},{"type":"raw","value":"<br>","position":{"start":{"line":110,"column":1,"offset":3790},"end":{"line":110,"column":5,"offset":3794}}},{"type":"text","value":"\nLets say ","position":{"start":{"line":110,"column":5,"offset":3794},"end":{"line":111,"column":10,"offset":3804}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":111,"column":10,"offset":3804},"end":{"line":111,"column":16,"offset":3810}}},{"type":"text","value":" gets called with ","position":{"start":{"line":111,"column":16,"offset":3810},"end":{"line":111,"column":34,"offset":3828}}},{"type":"raw","value":"<code class=\"language-text\">scheme</code>","position":{"start":{"line":111,"column":34,"offset":3828},"end":{"line":111,"column":42,"offset":3836}}},{"type":"text","value":".\nThe conditional checks ","position":{"start":{"line":111,"column":42,"offset":3836},"end":{"line":112,"column":24,"offset":3861}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":112,"column":24,"offset":3861},"end":{"line":112,"column":33,"offset":3870}}},{"type":"text","value":" which checks the first letter in the word to see if it is a vowel. Since ","position":{"start":{"line":112,"column":33,"offset":3870},"end":{"line":112,"column":107,"offset":3944}}},{"type":"raw","value":"<code class=\"language-text\">pl-done</code>","position":{"start":{"line":112,"column":107,"offset":3944},"end":{"line":112,"column":116,"offset":3953}}},{"type":"text","value":" is false because ","position":{"start":{"line":112,"column":116,"offset":3953},"end":{"line":112,"column":134,"offset":3971}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":112,"column":134,"offset":3971},"end":{"line":112,"column":137,"offset":3974}}},{"type":"text","value":" isn’t a vowel it calls ","position":{"start":{"line":112,"column":137,"offset":3974},"end":{"line":112,"column":161,"offset":3998}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":112,"column":161,"offset":3998},"end":{"line":112,"column":167,"offset":4004}}},{"type":"text","value":" again with the argument ","position":{"start":{"line":112,"column":167,"offset":4004},"end":{"line":112,"column":192,"offset":4029}}},{"type":"raw","value":"<code class=\"language-text\">chemes</code>","position":{"start":{"line":112,"column":192,"offset":4029},"end":{"line":112,"column":200,"offset":4037}}},{"type":"text","value":". This is because ","position":{"start":{"line":112,"column":200,"offset":4037},"end":{"line":112,"column":218,"offset":4055}}},{"type":"raw","value":"<code class=\"language-text\">word</code>","position":{"start":{"line":112,"column":218,"offset":4055},"end":{"line":112,"column":224,"offset":4061}}},{"type":"text","value":" takes the arguments ","position":{"start":{"line":112,"column":224,"offset":4061},"end":{"line":112,"column":245,"offset":4082}}},{"type":"raw","value":"<code class=\"language-text\">cheme</code>","position":{"start":{"line":112,"column":245,"offset":4082},"end":{"line":112,"column":252,"offset":4089}}},{"type":"text","value":" and ","position":{"start":{"line":112,"column":252,"offset":4089},"end":{"line":112,"column":257,"offset":4094}}},{"type":"raw","value":"<code class=\"language-text\">s</code>","position":{"start":{"line":112,"column":257,"offset":4094},"end":{"line":112,"column":260,"offset":4097}}},{"type":"text","value":" and adds them together. ","position":{"start":{"line":112,"column":260,"offset":4097},"end":{"line":112,"column":285,"offset":4122}}},{"type":"raw","value":"<code class=\"language-text\">pigl</code>","position":{"start":{"line":112,"column":285,"offset":4122},"end":{"line":112,"column":291,"offset":4128}}},{"type":"text","value":" gets called repeatedly until\nit is called with a vowel as the first letter. When the first letter is a vowel the expression ","position":{"start":{"line":112,"column":291,"offset":4128},"end":{"line":113,"column":96,"offset":4254}}},{"type":"raw","value":"<code class=\"language-text\">(word wd &#39;ay)</code>","position":{"start":{"line":113,"column":96,"offset":4254},"end":{"line":113,"column":111,"offset":4269}}},{"type":"text","value":" is ran and the result is a primitive which means the procedure stops. ","position":{"start":{"line":113,"column":111,"offset":4269},"end":{"line":113,"column":182,"offset":4340}}}],"position":{"start":{"line":105,"column":1,"offset":3460},"end":{"line":113,"column":182,"offset":4340}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Abstraction","position":{"start":{"line":115,"column":8,"offset":4349},"end":{"line":115,"column":19,"offset":4360}}}],"position":{"start":{"line":115,"column":1,"offset":4342},"end":{"line":115,"column":19,"offset":4360}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Big Picture: ","position":{"start":{"line":116,"column":1,"offset":4361},"end":{"line":116,"column":14,"offset":4374}}}],"position":{"start":{"line":116,"column":1,"offset":4361},"end":{"line":116,"column":14,"offset":4374}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Application                   (highest)\n------------------------------\nHigh level language (Scheme)\n------------------------------\nlow level language  ( C )\n------------------------------\nmachine language/ architecture\n------------------------------\nlogic gates\n------------------------------\ntransistors\n------------------------------\nquantum physics                 (lowest)\n------------------------------</code></pre></div>","position":{"start":{"line":117,"column":1,"offset":4375},"end":{"line":132,"column":4,"offset":4790}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":133,"column":1,"offset":4791},"end":{"line":133,"column":5,"offset":4795}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Abstraction is the layering of pieces on top of eachother. Little pieces are put together to form a layer that can be referenced as a whole.","position":{"start":{"line":135,"column":1,"offset":4797},"end":{"line":135,"column":141,"offset":4937}}}],"position":{"start":{"line":135,"column":1,"offset":4797},"end":{"line":135,"column":141,"offset":4937}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Functional Programming","position":{"start":{"line":137,"column":8,"offset":4946},"end":{"line":137,"column":30,"offset":4968}}}],"position":{"start":{"line":137,"column":1,"offset":4939},"end":{"line":137,"column":30,"offset":4968}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the introduction of multi-core processers, parallelism has helped functional programming make a comeback. If everything is a function you won’t run into race conditions created by dependencies.","position":{"start":{"line":138,"column":1,"offset":4969},"end":{"line":138,"column":199,"offset":5167}}}],"position":{"start":{"line":138,"column":1,"offset":4969},"end":{"line":138,"column":199,"offset":5167}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Function vs. Procedure","position":{"start":{"line":140,"column":8,"offset":5176},"end":{"line":140,"column":30,"offset":5198}}}],"position":{"start":{"line":140,"column":1,"offset":5169},"end":{"line":140,"column":30,"offset":5198}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two functions are the same if they give the same output with given inputs.\n","position":{"start":{"line":142,"column":1,"offset":5200},"end":{"line":143,"column":1,"offset":5275}}},{"type":"raw","value":"<br>","position":{"start":{"line":143,"column":1,"offset":5275},"end":{"line":143,"column":5,"offset":5279}}},{"type":"text","value":"\n","position":{"start":{"line":143,"column":5,"offset":5279},"end":{"line":144,"column":1,"offset":5280}}},{"type":"raw","value":"<br>","position":{"start":{"line":144,"column":1,"offset":5280},"end":{"line":144,"column":5,"offset":5284}}},{"type":"text","value":"\nA procedure is a sequence of steps for computing a function.\n","position":{"start":{"line":144,"column":5,"offset":5284},"end":{"line":146,"column":1,"offset":5346}}},{"type":"raw","value":"<br>","position":{"start":{"line":146,"column":1,"offset":5346},"end":{"line":146,"column":5,"offset":5350}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":146,"column":5,"offset":5350},"end":{"line":147,"column":1,"offset":5353}}},{"type":"text","value":"\n"},{"type":"text","value":"Therefore ","position":{"start":{"line":147,"column":1,"offset":5353},"end":{"line":147,"column":11,"offset":5363}}},{"type":"raw","value":"<code class=\"language-text\">2x + 6</code>","position":{"start":{"line":147,"column":11,"offset":5363},"end":{"line":147,"column":19,"offset":5371}}},{"type":"text","value":" and ","position":{"start":{"line":147,"column":19,"offset":5371},"end":{"line":147,"column":24,"offset":5376}}},{"type":"raw","value":"<code class=\"language-text\">2(x + 3)</code>","position":{"start":{"line":147,"column":24,"offset":5376},"end":{"line":147,"column":34,"offset":5386}}},{"type":"text","value":" are the same function but different procedures.\n","position":{"start":{"line":147,"column":34,"offset":5386},"end":{"line":148,"column":1,"offset":5435}}},{"type":"raw","value":"<br>","position":{"start":{"line":148,"column":1,"offset":5435},"end":{"line":148,"column":5,"offset":5439}}}],"position":{"start":{"line":142,"column":1,"offset":5200},"end":{"line":148,"column":5,"offset":5439}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Cond","position":{"start":{"line":150,"column":8,"offset":5448},"end":{"line":150,"column":12,"offset":5452}}}],"position":{"start":{"line":150,"column":1,"offset":5441},"end":{"line":150,"column":12,"offset":5452}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (buzz n) \n    (cond ((equal? (remainder n 7) 0) &#39;buzz)\n    ((member? 7 n) &#39;buzz)\n    (else n)))</code></pre></div>","position":{"start":{"line":151,"column":1,"offset":5453},"end":{"line":156,"column":4,"offset":5564}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":157,"column":1,"offset":5565},"end":{"line":158,"column":5,"offset":5574}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":160,"column":1,"offset":5576},"end":{"line":160,"column":7,"offset":5582}}},{"type":"text","value":" allows for multiple test cases, and will return\nthe first clause that is true.\n","position":{"start":{"line":160,"column":7,"offset":5582},"end":{"line":162,"column":1,"offset":5664}}},{"type":"raw","value":"<br>","position":{"start":{"line":162,"column":1,"offset":5664},"end":{"line":162,"column":5,"offset":5668}}},{"type":"text","value":"\n","position":{"start":{"line":162,"column":5,"offset":5668},"end":{"line":163,"column":1,"offset":5669}}},{"type":"raw","value":"<br>","position":{"start":{"line":163,"column":1,"offset":5669},"end":{"line":163,"column":5,"offset":5673}}},{"type":"text","value":"\nLets try ","position":{"start":{"line":163,"column":5,"offset":5673},"end":{"line":164,"column":10,"offset":5683}}},{"type":"raw","value":"<code class=\"language-text\">14</code>","position":{"start":{"line":164,"column":10,"offset":5683},"end":{"line":164,"column":14,"offset":5687}}},{"type":"text","value":". Since ","position":{"start":{"line":164,"column":14,"offset":5687},"end":{"line":164,"column":22,"offset":5695}}},{"type":"raw","value":"<code class=\"language-text\">14 / 7</code>","position":{"start":{"line":164,"column":22,"offset":5695},"end":{"line":164,"column":30,"offset":5703}}},{"type":"text","value":" has a remainder of ","position":{"start":{"line":164,"column":30,"offset":5703},"end":{"line":164,"column":50,"offset":5723}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":164,"column":50,"offset":5723},"end":{"line":164,"column":53,"offset":5726}}},{"type":"text","value":" the first clause is met and returns ","position":{"start":{"line":164,"column":53,"offset":5726},"end":{"line":164,"column":90,"offset":5763}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":164,"column":90,"offset":5763},"end":{"line":164,"column":96,"offset":5769}}},{"type":"text","value":".\n","position":{"start":{"line":164,"column":96,"offset":5769},"end":{"line":165,"column":1,"offset":5772}}},{"type":"raw","value":"<br>","position":{"start":{"line":165,"column":1,"offset":5772},"end":{"line":165,"column":5,"offset":5776}}},{"type":"text","value":"\n","position":{"start":{"line":165,"column":5,"offset":5776},"end":{"line":166,"column":1,"offset":5777}}},{"type":"raw","value":"<br>","position":{"start":{"line":166,"column":1,"offset":5777},"end":{"line":166,"column":5,"offset":5781}}},{"type":"text","value":"\nNow Lets try ","position":{"start":{"line":166,"column":5,"offset":5781},"end":{"line":167,"column":14,"offset":5795}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":167,"column":14,"offset":5795},"end":{"line":167,"column":18,"offset":5799}}},{"type":"text","value":". The first clause is not met, and therefore goes onto the next clause. ","position":{"start":{"line":167,"column":18,"offset":5799},"end":{"line":167,"column":90,"offset":5871}}},{"type":"raw","value":"<code class=\"language-text\">17</code>","position":{"start":{"line":167,"column":90,"offset":5871},"end":{"line":167,"column":94,"offset":5875}}},{"type":"text","value":" does have a 7 inside of it so ","position":{"start":{"line":167,"column":94,"offset":5875},"end":{"line":167,"column":125,"offset":5906}}},{"type":"raw","value":"<code class=\"language-text\">buzz</code>","position":{"start":{"line":167,"column":125,"offset":5906},"end":{"line":167,"column":131,"offset":5912}}},{"type":"text","value":" is returned.\n","position":{"start":{"line":167,"column":131,"offset":5912},"end":{"line":168,"column":1,"offset":5927}}},{"type":"raw","value":"<br>","position":{"start":{"line":168,"column":1,"offset":5927},"end":{"line":168,"column":5,"offset":5931}}},{"type":"text","value":"\n","position":{"start":{"line":168,"column":5,"offset":5931},"end":{"line":169,"column":1,"offset":5932}}},{"type":"raw","value":"<br>","position":{"start":{"line":169,"column":1,"offset":5932},"end":{"line":169,"column":5,"offset":5936}}},{"type":"text","value":"\nNow lets try ","position":{"start":{"line":169,"column":5,"offset":5936},"end":{"line":170,"column":14,"offset":5950}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":170,"column":14,"offset":5950},"end":{"line":170,"column":18,"offset":5954}}},{"type":"text","value":". The remainder is ","position":{"start":{"line":170,"column":18,"offset":5954},"end":{"line":170,"column":37,"offset":5973}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":170,"column":37,"offset":5973},"end":{"line":170,"column":40,"offset":5976}}},{"type":"text","value":" so the first clause is not met, and ","position":{"start":{"line":170,"column":40,"offset":5976},"end":{"line":170,"column":77,"offset":6013}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":170,"column":77,"offset":6013},"end":{"line":170,"column":81,"offset":6017}}},{"type":"text","value":"  does not have a ","position":{"start":{"line":170,"column":81,"offset":6017},"end":{"line":170,"column":99,"offset":6035}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":170,"column":99,"offset":6035},"end":{"line":170,"column":102,"offset":6038}}},{"type":"text","value":" inside of it so the catch all ","position":{"start":{"line":170,"column":102,"offset":6038},"end":{"line":170,"column":133,"offset":6069}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":170,"column":133,"offset":6069},"end":{"line":170,"column":139,"offset":6075}}},{"type":"text","value":" keyword returns the number ","position":{"start":{"line":170,"column":139,"offset":6075},"end":{"line":170,"column":167,"offset":6103}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":170,"column":167,"offset":6103},"end":{"line":170,"column":171,"offset":6107}}},{"type":"text","value":".\n","position":{"start":{"line":170,"column":171,"offset":6107},"end":{"line":171,"column":1,"offset":6109}}},{"type":"raw","value":"<br>","position":{"start":{"line":171,"column":1,"offset":6109},"end":{"line":171,"column":5,"offset":6113}}},{"type":"text","value":"\n","position":{"start":{"line":171,"column":5,"offset":6113},"end":{"line":172,"column":1,"offset":6114}}},{"type":"raw","value":"<br>","position":{"start":{"line":172,"column":1,"offset":6114},"end":{"line":172,"column":5,"offset":6118}}},{"type":"text","value":"\nImportant to note:\n","position":{"start":{"line":172,"column":5,"offset":6118},"end":{"line":174,"column":1,"offset":6138}}},{"type":"raw","value":"<br>","position":{"start":{"line":174,"column":1,"offset":6138},"end":{"line":174,"column":5,"offset":6142}}},{"type":"text","value":"\nIf a ","position":{"start":{"line":174,"column":5,"offset":6142},"end":{"line":175,"column":6,"offset":6148}}},{"type":"raw","value":"<code class=\"language-text\">cond</code>","position":{"start":{"line":175,"column":6,"offset":6148},"end":{"line":175,"column":12,"offset":6154}}},{"type":"text","value":" does not have an ","position":{"start":{"line":175,"column":12,"offset":6154},"end":{"line":175,"column":30,"offset":6172}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":175,"column":30,"offset":6172},"end":{"line":175,"column":36,"offset":6178}}},{"type":"text","value":" statement it will return ","position":{"start":{"line":175,"column":36,"offset":6178},"end":{"line":175,"column":62,"offset":6204}}},{"type":"raw","value":"<code class=\"language-text\">unspecified</code>","position":{"start":{"line":175,"column":62,"offset":6204},"end":{"line":175,"column":75,"offset":6217}}},{"type":"text","value":", which can be different depending on interpreted, so always have an else statement.","position":{"start":{"line":175,"column":75,"offset":6217},"end":{"line":175,"column":159,"offset":6301}}}],"position":{"start":{"line":160,"column":1,"offset":5576},"end":{"line":175,"column":159,"offset":6301}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Applicative Order vs Normal Order","position":{"start":{"line":177,"column":8,"offset":6310},"end":{"line":177,"column":41,"offset":6343}}}],"position":{"start":{"line":177,"column":1,"offset":6303},"end":{"line":177,"column":41,"offset":6343}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (f a b) (+ (g a) b))\n(def (g x) (* 3 x))\n\n(f (+ 2 3) (- 15 6))</code></pre></div>","position":{"start":{"line":178,"column":1,"offset":6344},"end":{"line":183,"column":4,"offset":6419}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Applicative Order:\n","position":{"start":{"line":184,"column":1,"offset":6420},"end":{"line":185,"column":1,"offset":6439}}},{"type":"raw","value":"<br>","position":{"start":{"line":185,"column":1,"offset":6439},"end":{"line":185,"column":5,"offset":6443}}},{"type":"text","value":"\nevaluates the sub expressions until they are primitive values, then passes the primitive results back up to the parent function.\n","position":{"start":{"line":185,"column":5,"offset":6443},"end":{"line":187,"column":5,"offset":6581}}},{"type":"raw","value":"<br>","position":{"start":{"line":187,"column":5,"offset":6581},"end":{"line":187,"column":9,"offset":6585}}},{"type":"text","value":"\n","position":{"start":{"line":187,"column":9,"offset":6585},"end":{"line":188,"column":5,"offset":6590}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":188,"column":5,"offset":6590},"end":{"line":188,"column":27,"offset":6612}}},{"type":"text","value":"\n","position":{"start":{"line":188,"column":27,"offset":6612},"end":{"line":189,"column":5,"offset":6617}}},{"type":"raw","value":"<br>","position":{"start":{"line":189,"column":5,"offset":6617},"end":{"line":189,"column":9,"offset":6621}}},{"type":"text","value":"\n","position":{"start":{"line":189,"column":9,"offset":6621},"end":{"line":190,"column":5,"offset":6626}}},{"type":"raw","value":"<code class=\"language-text\">2 + 3</code>","position":{"start":{"line":190,"column":5,"offset":6626},"end":{"line":190,"column":12,"offset":6633}}},{"type":"text","value":" and ","position":{"start":{"line":190,"column":12,"offset":6633},"end":{"line":190,"column":17,"offset":6638}}},{"type":"raw","value":"<code class=\"language-text\">15 - 6</code>","position":{"start":{"line":190,"column":17,"offset":6638},"end":{"line":190,"column":25,"offset":6646}}},{"type":"text","value":" will be evaluated before the outside ","position":{"start":{"line":190,"column":25,"offset":6646},"end":{"line":190,"column":63,"offset":6684}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":190,"column":63,"offset":6684},"end":{"line":190,"column":66,"offset":6687}}},{"type":"text","value":" is evaluated. Then ","position":{"start":{"line":190,"column":66,"offset":6687},"end":{"line":190,"column":86,"offset":6707}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":190,"column":86,"offset":6707},"end":{"line":190,"column":89,"offset":6710}}},{"type":"text","value":" will be called with ","position":{"start":{"line":190,"column":89,"offset":6710},"end":{"line":190,"column":110,"offset":6731}}},{"type":"raw","value":"<code class=\"language-text\">(f 5 9)</code>","position":{"start":{"line":190,"column":110,"offset":6731},"end":{"line":190,"column":119,"offset":6740}}},{"type":"text","value":".\n","position":{"start":{"line":190,"column":119,"offset":6740},"end":{"line":191,"column":1,"offset":6742}}},{"type":"raw","value":"<br>","position":{"start":{"line":191,"column":1,"offset":6742},"end":{"line":191,"column":5,"offset":6746}}},{"type":"text","value":"\nNormal Order:\n","position":{"start":{"line":191,"column":5,"offset":6746},"end":{"line":193,"column":1,"offset":6762}}},{"type":"raw","value":"<br>","position":{"start":{"line":193,"column":1,"offset":6762},"end":{"line":193,"column":5,"offset":6766}}},{"type":"text","value":"\nevaluates the outsides first, but instead of passing primitive values it passes the expressions.\n","position":{"start":{"line":193,"column":5,"offset":6766},"end":{"line":195,"column":5,"offset":6873}}},{"type":"raw","value":"<br>","position":{"start":{"line":195,"column":5,"offset":6873},"end":{"line":195,"column":9,"offset":6877}}},{"type":"text","value":"\n","position":{"start":{"line":195,"column":9,"offset":6877},"end":{"line":196,"column":1,"offset":6878}}},{"type":"raw","value":"<code class=\"language-text\">(f (+ 2 3) (- 15 6))</code>","position":{"start":{"line":196,"column":1,"offset":6878},"end":{"line":196,"column":23,"offset":6900}}},{"type":"text","value":" turns into ","position":{"start":{"line":196,"column":23,"offset":6900},"end":{"line":196,"column":35,"offset":6912}}},{"type":"raw","value":"<code class=\"language-text\">(+ (g (+ 2 3)) (- 15 6))</code>","position":{"start":{"line":196,"column":35,"offset":6912},"end":{"line":196,"column":61,"offset":6938}}},{"type":"text","value":"\n","position":{"start":{"line":196,"column":61,"offset":6938},"end":{"line":197,"column":1,"offset":6939}}},{"type":"raw","value":"<br>","position":{"start":{"line":197,"column":1,"offset":6939},"end":{"line":197,"column":5,"offset":6943}}},{"type":"text","value":"\nNow ","position":{"start":{"line":197,"column":5,"offset":6943},"end":{"line":198,"column":5,"offset":6948}}},{"type":"raw","value":"<code class=\"language-text\">f</code>","position":{"start":{"line":198,"column":5,"offset":6948},"end":{"line":198,"column":8,"offset":6951}}},{"type":"text","value":" is done and the next expression can be evaluated.","position":{"start":{"line":198,"column":8,"offset":6951},"end":{"line":198,"column":58,"offset":7001}}}],"position":{"start":{"line":184,"column":1,"offset":6420},"end":{"line":198,"column":58,"offset":7001}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Possible Problem:\n","position":{"start":{"line":200,"column":1,"offset":7003},"end":{"line":201,"column":1,"offset":7021}}},{"type":"raw","value":"<br>","position":{"start":{"line":201,"column":1,"offset":7021},"end":{"line":201,"column":5,"offset":7025}}}],"position":{"start":{"line":200,"column":1,"offset":7003},"end":{"line":201,"column":5,"offset":7025}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(def (zero z) (- x x))</code></pre></div>","position":{"start":{"line":202,"column":1,"offset":7026},"end":{"line":204,"column":4,"offset":7056}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"applicative ","position":{"start":{"line":205,"column":1,"offset":7057},"end":{"line":205,"column":13,"offset":7069}}}],"position":{"start":{"line":205,"column":1,"offset":7057},"end":{"line":205,"column":13,"offset":7069}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(random 10) ==&gt; 8\n(zero 8) ---&gt;\n(- 8 8) ==&gt; 0\n0</code></pre></div>","position":{"start":{"line":206,"column":1,"offset":7070},"end":{"line":212,"column":4,"offset":7149}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"normal ","position":{"start":{"line":213,"column":1,"offset":7150},"end":{"line":213,"column":8,"offset":7157}}}],"position":{"start":{"line":213,"column":1,"offset":7150},"end":{"line":213,"column":8,"offset":7157}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(zero (random 10)) ---&gt;\n(+ (random 10) (random 10)) ==&gt; \n    (random 10) ==&gt; 8\n    (random 10) ==&gt; 1\n(- 8 1) ==&gt; 7\n7</code></pre></div>","position":{"start":{"line":214,"column":1,"offset":7158},"end":{"line":221,"column":4,"offset":7282}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":222,"column":1,"offset":7283},"end":{"line":223,"column":5,"offset":7292}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since the ","position":{"start":{"line":225,"column":1,"offset":7294},"end":{"line":225,"column":11,"offset":7304}}},{"type":"raw","value":"<code class=\"language-text\">(random 10)</code>","position":{"start":{"line":225,"column":11,"offset":7304},"end":{"line":225,"column":24,"offset":7317}}},{"type":"text","value":" is split into 2 different function alls in normal order you get different results.","position":{"start":{"line":225,"column":24,"offset":7317},"end":{"line":225,"column":107,"offset":7400}}}],"position":{"start":{"line":225,"column":1,"offset":7294},"end":{"line":225,"column":107,"offset":7400}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L03","position":{"start":{"line":227,"column":7,"offset":7408},"end":{"line":227,"column":10,"offset":7411}}}],"position":{"start":{"line":227,"column":1,"offset":7402},"end":{"line":227,"column":10,"offset":7411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"L04","position":{"start":{"line":228,"column":7,"offset":7418},"end":{"line":228,"column":10,"offset":7421}}}],"position":{"start":{"line":228,"column":1,"offset":7412},"end":{"line":228,"column":10,"offset":7421}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":230,"column":6,"offset":7428},"end":{"line":230,"column":10,"offset":7432}}}],"position":{"start":{"line":230,"column":1,"offset":7423},"end":{"line":230,"column":10,"offset":7432}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1A","position":{"start":{"line":231,"column":7,"offset":7439},"end":{"line":231,"column":13,"offset":7445}}}],"position":{"start":{"line":231,"column":1,"offset":7433},"end":{"line":231,"column":13,"offset":7445}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first problem for the lab was to modify the ","position":{"start":{"line":232,"column":1,"offset":7446},"end":{"line":232,"column":49,"offset":7494}}},{"type":"raw","value":"<code class=\"language-text\">plural</code>","position":{"start":{"line":232,"column":49,"offset":7494},"end":{"line":232,"column":57,"offset":7502}}},{"type":"text","value":" program to handle a word ending in y, but has a vowel in front of it (boy).","position":{"start":{"line":232,"column":57,"offset":7502},"end":{"line":232,"column":133,"offset":7578}}}],"position":{"start":{"line":232,"column":1,"offset":7446},"end":{"line":232,"column":133,"offset":7578}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (plural wd)\n\t(if (equal? (last wd) &#39;y)\n\t\t(if (vowel? (last (bl wd)))\n\t\t(word wd &#39;s)\n\t\t(word (bl wd) &#39;ies))\n\t(word wd &#39;s)))\n\n(define (vowel? letter)\n\t(member? letter &#39;(a e i o u)))</code></pre></div>","position":{"start":{"line":233,"column":1,"offset":7579},"end":{"line":243,"column":4,"offset":7774}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":244,"column":1,"offset":7775},"end":{"line":244,"column":5,"offset":7779}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I handled this by adding a conditional that checks for the second to last letter.\n","position":{"start":{"line":247,"column":1,"offset":7782},"end":{"line":248,"column":1,"offset":7864}}},{"type":"raw","value":"<br>","position":{"start":{"line":248,"column":1,"offset":7864},"end":{"line":248,"column":5,"offset":7868}}},{"type":"text","value":"\n","position":{"start":{"line":248,"column":5,"offset":7868},"end":{"line":249,"column":1,"offset":7869}}},{"type":"raw","value":"<br>","position":{"start":{"line":249,"column":1,"offset":7869},"end":{"line":249,"column":5,"offset":7873}}},{"type":"text","value":"\nThe second assgnment was:","position":{"start":{"line":249,"column":5,"offset":7873},"end":{"line":250,"column":26,"offset":7899}}}],"position":{"start":{"line":247,"column":1,"offset":7782},"end":{"line":250,"column":26,"offset":7899}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Define a procedure that takes three numbers as arguments and returns the sum of\nthe squares of the two larger numbers.</code></pre></div>","position":{"start":{"line":251,"column":1,"offset":7900},"end":{"line":256,"column":4,"offset":8028}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My Solution: ","position":{"start":{"line":257,"column":1,"offset":8029},"end":{"line":257,"column":14,"offset":8042}}}],"position":{"start":{"line":257,"column":1,"offset":8029},"end":{"line":257,"column":14,"offset":8042}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(define (twoLargerSums a b c)\n    (if (&gt;= a b)\n        (if (&gt;= b c)\n            (+ (square a) (square b))\n            (+ (square a) (square c)))\n        (if (&gt;= a c)\n            (+ (square a) (square b))\n            (+ (square b) (square c))))\n)\n\n(define (square x)\n(* x x))</code></pre></div>","position":{"start":{"line":259,"column":1,"offset":8044},"end":{"line":272,"column":4,"offset":8326}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>","position":{"start":{"line":274,"column":1,"offset":8328},"end":{"line":275,"column":5,"offset":8337}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"Lab 1B","position":{"start":{"line":278,"column":7,"offset":8346},"end":{"line":278,"column":13,"offset":8352}}}],"position":{"start":{"line":278,"column":1,"offset":8340},"end":{"line":278,"column":13,"offset":8352}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":278,"column":13,"offset":8352}}}}