{"expireTime":9007200842155278000,"key":"transformer-remark-markdown-html-ast-e9bc997bbdb45eaf2962b69963982f8f-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This article is a part of a series where I go through ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":55,"offset":54}}},{"type":"element","tagName":"a","properties":{"href":"https://teachyourselfcs.com/"},"children":[{"type":"text","value":"teachyourselfcs","position":{"start":{"line":1,"column":56,"offset":55},"end":{"line":1,"column":71,"offset":70}}}],"position":{"start":{"line":1,"column":55,"offset":54},"end":{"line":1,"column":102,"offset":101}}},{"type":"text","value":".\nIf you would like to start at the beginning start ","position":{"start":{"line":1,"column":102,"offset":101},"end":{"line":2,"column":51,"offset":153}}},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8000/teachyourselfcs/programming/00:getting-started/"},"children":[{"type":"text","value":"here","position":{"start":{"line":2,"column":52,"offset":154},"end":{"line":2,"column":56,"offset":158}}}],"position":{"start":{"line":2,"column":51,"offset":153},"end":{"line":2,"column":128,"offset":230}}},{"type":"text","value":".","position":{"start":{"line":2,"column":128,"offset":230},"end":{"line":2,"column":129,"offset":231}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":129,"offset":231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"INTRO","position":{"start":{"line":4,"column":7,"offset":239},"end":{"line":4,"column":12,"offset":244}}}],"position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":12,"offset":244}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"LECTURE","position":{"start":{"line":5,"column":7,"offset":251},"end":{"line":5,"column":14,"offset":258}}}],"position":{"start":{"line":5,"column":1,"offset":245},"end":{"line":5,"column":14,"offset":258}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"L01","position":{"start":{"line":6,"column":8,"offset":266},"end":{"line":6,"column":11,"offset":269}}}],"position":{"start":{"line":6,"column":1,"offset":259},"end":{"line":6,"column":11,"offset":269}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Class starts by going over some sytax for Scheme. Most languages do simple operations the same way we learned in grade school (infix notation):\n","position":{"start":{"line":7,"column":1,"offset":270},"end":{"line":8,"column":1,"offset":414}}},{"type":"raw","value":"<br>","position":{"start":{"line":8,"column":1,"offset":414},"end":{"line":8,"column":5,"offset":418}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 + 3</code>","position":{"start":{"line":8,"column":5,"offset":418},"end":{"line":8,"column":16,"offset":429}}},{"type":"raw","value":"<br>","position":{"start":{"line":8,"column":16,"offset":429},"end":{"line":8,"column":20,"offset":433}}},{"type":"text","value":"\nScheme uses a different syntax where the operator is always on the left (prefix notation) and you can add as many numbers as you would like:\n","position":{"start":{"line":8,"column":20,"offset":433},"end":{"line":10,"column":1,"offset":577}}},{"type":"raw","value":"<br>","position":{"start":{"line":10,"column":1,"offset":577},"end":{"line":10,"column":5,"offset":581}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":10,"column":5,"offset":581},"end":{"line":10,"column":16,"offset":592}}},{"type":"raw","value":"<br>","position":{"start":{"line":10,"column":16,"offset":592},"end":{"line":10,"column":20,"offset":596}}},{"type":"text","value":"\nNow lets say we want to do something like:  ","position":{"start":{"line":10,"column":20,"offset":596},"end":{"line":11,"column":45,"offset":641}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":45,"offset":641},"end":{"line":11,"column":49,"offset":645}}},{"type":"raw","value":"<code class=\"language-text\">2 + 2 +  3 - 4</code>","position":{"start":{"line":11,"column":49,"offset":645},"end":{"line":11,"column":65,"offset":661}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":65,"offset":661},"end":{"line":11,"column":69,"offset":665}}},{"type":"text","value":"\nIn Scheme you can simply nest operators:\n","position":{"start":{"line":11,"column":69,"offset":665},"end":{"line":13,"column":1,"offset":708}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":1,"offset":708},"end":{"line":13,"column":5,"offset":712}}},{"type":"raw","value":"<code class=\"language-text\">(- (+ 2 2 3) 4)</code>","position":{"start":{"line":13,"column":5,"offset":712},"end":{"line":13,"column":22,"offset":729}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":22,"offset":729},"end":{"line":13,"column":26,"offset":733}}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":26,"offset":733},"end":{"line":14,"column":1,"offset":734}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":1,"offset":734},"end":{"line":14,"column":5,"offset":738}}},{"type":"text","value":"\nWhen you first see this it looks way more complicated, but what is happening under the hood makes it a lot clearer. Scheme takes the arguments and then computes the function until it gets down to a primitive value.\n","position":{"start":{"line":14,"column":5,"offset":738},"end":{"line":16,"column":1,"offset":955}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":16,"column":1,"offset":955},"end":{"line":16,"column":12,"offset":966}}},{"type":"text","value":" is a function and not a primitive value, so it calls ","position":{"start":{"line":16,"column":12,"offset":966},"end":{"line":16,"column":66,"offset":1020}}},{"type":"raw","value":"<code class=\"language-text\">(+ 2 2 3)</code>","position":{"start":{"line":16,"column":66,"offset":1020},"end":{"line":16,"column":77,"offset":1031}}},{"type":"text","value":". The left argument of the minus is no 7 and it has 2 primitive values, meaning it can calculate the minus to get 3.","position":{"start":{"line":16,"column":77,"offset":1031},"end":{"line":16,"column":193,"offset":1147}}}],"position":{"start":{"line":7,"column":1,"offset":270},"end":{"line":16,"column":193,"offset":1147}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"L02","position":{"start":{"line":18,"column":8,"offset":1156},"end":{"line":18,"column":11,"offset":1159}}}],"position":{"start":{"line":18,"column":1,"offset":1149},"end":{"line":18,"column":11,"offset":1159}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"BOOK","position":{"start":{"line":19,"column":7,"offset":1166},"end":{"line":19,"column":11,"offset":1170}}}],"position":{"start":{"line":19,"column":1,"offset":1160},"end":{"line":19,"column":11,"offset":1170}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"1.1","position":{"start":{"line":20,"column":8,"offset":1178},"end":{"line":20,"column":11,"offset":1181}}}],"position":{"start":{"line":20,"column":1,"offset":1171},"end":{"line":20,"column":11,"offset":1181}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"1.2","position":{"start":{"line":21,"column":8,"offset":1189},"end":{"line":21,"column":11,"offset":1192}}}],"position":{"start":{"line":21,"column":1,"offset":1182},"end":{"line":21,"column":11,"offset":1192}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"1.3","position":{"start":{"line":22,"column":8,"offset":1200},"end":{"line":22,"column":11,"offset":1203}}}],"position":{"start":{"line":22,"column":1,"offset":1193},"end":{"line":22,"column":11,"offset":1203}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"LABS","position":{"start":{"line":23,"column":7,"offset":1210},"end":{"line":23,"column":11,"offset":1214}}}],"position":{"start":{"line":23,"column":1,"offset":1204},"end":{"line":23,"column":11,"offset":1214}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Lab 1","position":{"start":{"line":24,"column":8,"offset":1222},"end":{"line":24,"column":13,"offset":1227}}}],"position":{"start":{"line":24,"column":1,"offset":1215},"end":{"line":24,"column":14,"offset":1228}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h6","properties":{},"children":[{"type":"text","value":"Lab 2","position":{"start":{"line":25,"column":8,"offset":1236},"end":{"line":25,"column":13,"offset":1241}}}],"position":{"start":{"line":25,"column":1,"offset":1229},"end":{"line":25,"column":14,"offset":1242}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":25,"column":14,"offset":1242}}}}